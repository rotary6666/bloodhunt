// Class Tiger.ChooseNextWaypoint
// Size: 0xe8 (Inherited: 0x70)
struct UChooseNextWaypoint : UBTTaskNode {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
};

// Class Tiger.TigerBuff
// Size: 0x268 (Inherited: 0x28)
struct UTigerBuff : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FTigerCharacterStatModification StatModification; // 0x30(0xa8)
	struct FTigerStatusEffect StatusEffect; // 0xd8(0x0d)
	char pad_E5[0x3]; // 0xe5(0x03)
	float Duration; // 0xe8(0x04)
	bool bDoesTick; // 0xec(0x01)
	char pad_ED[0x3]; // 0xed(0x03)
	float TimeBetweenTicks; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)
	struct FTigerNiagaraAttachment ActivatedNiagaraAttachment; // 0xf8(0x48)
	struct FTigerNiagaraAttachment NiagaraAttachment; // 0x140(0x48)
	struct TArray<struct FTigerNiagaraAttachment> AdditionalNiagaraAttachments; // 0x188(0x10)
	struct FTigerNiagaraAttachment DeactivatedNiagaraAttachment; // 0x198(0x48)
	bool bOnlySpawnBuffParticleOnLocalPlayer; // 0x1e0(0x01)
	bool bShowParticlesOnHiddenEnemies; // 0x1e1(0x01)
	bool bAttachToMesh; // 0x1e2(0x01)
	char pad_1E3[0x1]; // 0x1e3(0x01)
	struct FName AttachPoint; // 0x1e4(0x08)
	bool bBuffParticleTypeAbsoluteRotation; // 0x1ec(0x01)
	char pad_1ED[0x3]; // 0x1ed(0x03)
	struct UParticleSystem* BuffParticleType; // 0x1f0(0x08)
	bool bSpawnActivatedParticleOnRefresh; // 0x1f8(0x01)
	bool bOnlySpawnActivatedParticleOnLocalPlayer; // 0x1f9(0x01)
	bool bAttachActivatedParticle; // 0x1fa(0x01)
	bool bActivatedParticleTypeAbsoluteRotation; // 0x1fb(0x01)
	char pad_1FC[0x4]; // 0x1fc(0x04)
	struct UParticleSystem* ActivatedParticleType; // 0x200(0x08)
	bool bOnlySpawnDeactivatedParticleOnLocalPlayer; // 0x208(0x01)
	bool bAttachDeactivatedParticle; // 0x209(0x01)
	bool bDeactivatedParticleTypeAbsoluteRotation; // 0x20a(0x01)
	char pad_20B[0x5]; // 0x20b(0x05)
	struct UParticleSystem* DeactivatedParticleType; // 0x210(0x08)
	struct FName ActivationMontageName; // 0x218(0x08)
	struct UAkAudioEvent* ActivatedSFX; // 0x220(0x08)
	struct UAkAudioEvent* DeactivatedSFX; // 0x228(0x08)
	bool bStacks; // 0x230(0x01)
	bool bOnlyStackWithDifferentCasters; // 0x231(0x01)
	char pad_232[0x2]; // 0x232(0x02)
	int32_t MaxStacks; // 0x234(0x04)
	bool bKeepAfterDeath; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	int32_t RemoveBuffOnActions; // 0x23c(0x04)
	bool bShowOnUI; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct UTexture2D* StatusImage; // 0x248(0x08)
	enum class ETigerBuffStatusType StatusType; // 0x250(0x01)
	enum class ETigerBuffProgressType ProgressType; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
	struct ATigerBuffPostProcess* PostProcessEffect; // 0x258(0x08)
	uint64_t PersistentTelemetryID; // 0x260(0x08)

	void OnRefreshed(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnRefreshed // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnDeactivated(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnDeactivated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnActivated(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.OnActivated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct UTigerBuffInstance* FindBuffInstance(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuff.FindBuffInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec340
};

// Class Tiger.TigerBuffStun
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffStun : UTigerBuff {
};

// Class Tiger.TigerBuffBlockAILogic
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffBlockAILogic : UTigerBuff {
};

// Class Tiger.TigerBuffImmobilize
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffImmobilize : UTigerBuff {
};

// Class Tiger.TigerBuffGround
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffGround : UTigerBuff {
};

// Class Tiger.TigerBuffInvulnerable
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffInvulnerable : UTigerBuff {
};

// Class Tiger.TigerBuffInvisible
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffInvisible : UTigerBuff {
};

// Class Tiger.TigerBuffDisableClimbing
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffDisableClimbing : UTigerBuff {
};

// Class Tiger.TigerBuffBlockOffensiveActions
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffBlockOffensiveActions : UTigerBuff {
};

// Class Tiger.TigerKeyTextureMapping
// Size: 0x80 (Inherited: 0x30)
struct UTigerKeyTextureMapping : UDataAsset {
	struct TMap<struct FKey, struct UTexture2D*> KeyTextures; // 0x30(0x50)
};

// Class Tiger.PatrolComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UPatrolComponent : UActorComponent {
};

// Class Tiger.TigerActivatedAudioComponent
// Size: 0xe0 (Inherited: 0xb0)
struct UTigerActivatedAudioComponent : UActorComponent {
	bool bApplyOcclusion; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
	struct UAkAudioEvent* AkEventToPost; // 0xb8(0x08)
	struct UAkAudioEvent* AkStopEventToPost; // 0xc0(0x08)
	bool bDrawActivationDebug; // 0xc8(0x01)
	char pad_C9[0x17]; // 0xc9(0x17)
};

// Class Tiger.TigerRebuildableActor
// Size: 0x240 (Inherited: 0x228)
struct ATigerRebuildableActor : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct TArray<struct USceneComponent*> BuildCreatedComponents; // 0x230(0x10)

	void OnRebuild(); // Function Tiger.TigerRebuildableActor.OnRebuild // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct USceneComponent* ConvertToBuildComponent(struct USceneComponent* BlueprintCreatedComponent); // Function Tiger.TigerRebuildableActor.ConvertToBuildComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x150ce40
};

// Class Tiger.TigerActivatedObject
// Size: 0x280 (Inherited: 0x240)
struct ATigerActivatedObject : ATigerRebuildableActor {
	struct UStaticMeshComponent* BaseMesh; // 0x240(0x08)
	struct UAkAudioEvent* ActivationAudioEvent; // 0x248(0x08)
	bool bActivationAudioShouldPlay; // 0x250(0x01)
	bool bTriggerOnlyOnPlayers; // 0x251(0x01)
	bool bUseAudioActivationRadius; // 0x252(0x01)
	char pad_253[0x1]; // 0x253(0x01)
	float ActivationRadius; // 0x254(0x04)
	float AudioFadeOutDuration; // 0x258(0x04)
	bool bAllowOnHitEvents; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct TWeakObjectPtr<struct UPrimitiveComponent> WeakCharacterTrigger; // 0x260(0x08)
	char pad_268[0x18]; // 0x268(0x18)

	void SetCharacterTriggerComponent(struct UPrimitiveComponent* TriggerComponent); // Function Tiger.TigerActivatedObject.SetCharacterTriggerComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x13ca760
	void OnObjectDeactivated(); // Function Tiger.TigerActivatedObject.OnObjectDeactivated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnObjectActivated(); // Function Tiger.TigerActivatedObject.OnObjectActivated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnEndCharacterOverlap(struct ATigerCharacter* OverlappingCharacter, int32_t TotalOverlapCount); // Function Tiger.TigerActivatedObject.OnEndCharacterOverlap // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnCharacterHit(struct ATigerCharacter* InOverlappingCharacter, struct FVector InNormalImpulse, struct FHitResult& InHitResult); // Function Tiger.TigerActivatedObject.OnCharacterHit // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnBeginCharacterOverlap(struct ATigerCharacter* OverlappingCharacter, int32_t TotalOverlapCount); // Function Tiger.TigerActivatedObject.OnBeginCharacterOverlap // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void EndCharacterOverlap(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex); // Function Tiger.TigerActivatedObject.EndCharacterOverlap // (Final|Native|Private) // @ game+0x13ca160
	void CharacterHit(struct UPrimitiveComponent* InHitComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, struct FVector InNormalImpulse, struct FHitResult& InHit); // Function Tiger.TigerActivatedObject.CharacterHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x13c9f80
	void BeginCharacterOverlap(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerActivatedObject.BeginCharacterOverlap // (Final|Native|Private|HasOutParms) // @ game+0x13c9b00
};

// Class Tiger.TigerActivatedObjectSubsystem
// Size: 0xc0 (Inherited: 0x30)
struct UTigerActivatedObjectSubsystem : UGameInstanceSubsystem {
	char pad_30[0x90]; // 0x30(0x90)
};

// Class Tiger.TigerCameraBehavior
// Size: 0xe8 (Inherited: 0x28)
struct UTigerCameraBehavior : UObject {
	struct UTigerCameraPreset* CameraPreset; // 0x28(0x08)
	char pad_30[0xb8]; // 0x30(0xb8)
};

// Class Tiger.TigerActiveCameraBehavior
// Size: 0x128 (Inherited: 0xe8)
struct UTigerActiveCameraBehavior : UTigerCameraBehavior {
	char pad_E8[0x40]; // 0xe8(0x40)
};

// Class Tiger.TigerAdditiveCameraBehavior
// Size: 0x128 (Inherited: 0xe8)
struct UTigerAdditiveCameraBehavior : UTigerCameraBehavior {
	char pad_E8[0x40]; // 0xe8(0x40)
};

// Class Tiger.TigerAIAwayFromSuspiciousService
// Size: 0x140 (Inherited: 0x70)
struct UTigerAIAwayFromSuspiciousService : UBTService {
	struct FBox SearchFleeSpotBox; // 0x70(0x1c)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector FleePoint; // 0x90(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0xb8(0x28)
	struct FBlackboardKeySelector WantsToReportPlayer; // 0xe0(0x28)
	float KeepFleeingFromSpecificPlayerRadiusSquared; // 0x108(0x04)
	float BoxCenterDistanceFromNPCPosition; // 0x10c(0x04)
	uint32_t NumberOfTimesToRandomForAFleeSpot; // 0x110(0x04)
	bool bShowDebugFeatures; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
	struct TWeakObjectPtr<struct ATigerPlayer> PlayerFleeingFrom; // 0x118(0x08)
	char pad_120[0x20]; // 0x120(0x20)
};

// Class Tiger.TigerAiBarkTask
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiBarkTask : UBTTaskNode {
	struct FTigerNpcVoCategory BarkToPlay; // 0x70(0x08)
};

// Class Tiger.TigerAiBaseController
// Size: 0x3b0 (Inherited: 0x330)
struct ATigerAiBaseController : AAIController {
	struct FVector SpawnPoint; // 0x330(0x0c)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UTigerSightConfigAsset* SightConfigAsset; // 0x340(0x08)
	char pad_348[0x68]; // 0x348(0x68)

	void UnregisterMovementTicket(); // Function Tiger.TigerAiBaseController.UnregisterMovementTicket // (Final|Native|Protected|BlueprintCallable) // @ game+0x13ca7f0
	float PlayAnimationUnreliable(struct UAnimMontage* Animation); // Function Tiger.TigerAiBaseController.PlayAnimationUnreliable // (Final|Native|Public|BlueprintCallable) // @ game+0x13ca6c0
	float PlayAnimationFromNameUnreliable(struct FName Animation); // Function Tiger.TigerAiBaseController.PlayAnimationFromNameUnreliable // (Final|Native|Public|BlueprintCallable) // @ game+0x13ca620
	bool HasPathToLocation(struct FVector& Location); // Function Tiger.TigerAiBaseController.HasPathToLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ca580
	bool GetSightProperties(enum class ETigerNPCType NPCType, struct FTigerSightConfigProperties& OutSightProps); // Function Tiger.TigerAiBaseController.GetSightProperties // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ca460
	struct UAISenseConfig_Sight* GetSightConfig(); // Function Tiger.TigerAiBaseController.GetSightConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ca430
	struct ATigerBaseNPC* GetBaseNpcPawn(); // Function Tiger.TigerAiBaseController.GetBaseNpcPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ca400
	bool FindPointOnAiNavMeshWithinExtent(struct FVector& Origin, struct FVector& Extent, struct FVector& OutLocation); // Function Tiger.TigerAiBaseController.FindPointOnAiNavMeshWithinExtent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ca2c0
};

// Class Tiger.TigerAIBenchmarkDiablerizeTask
// Size: 0xa8 (Inherited: 0x98)
struct UTigerAIBenchmarkDiablerizeTask : UBTTask_BlackboardBase {
	float MaximumDiablerizeDistance; // 0x98(0x04)
	char pad_9C[0xc]; // 0x9c(0x0c)
};

// Class Tiger.TigerAiBenchmarkDisciplineTask
// Size: 0xd8 (Inherited: 0x98)
struct UTigerAiBenchmarkDisciplineTask : UBTTask_BlackboardBase {
	struct ATigerLocalAIControllerBase* AIControllerBase; // 0x98(0x08)
	struct ATigerPlayerController* TigerPlayerController; // 0xa0(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0xa8(0x08)
	struct ATigerPlayer* TigerPlayer; // 0xb0(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0xb8(0x08)
	struct UTigerDisciplineBase* CurrentDisciplineBase; // 0xc0(0x08)
	char pad_C8[0x10]; // 0xc8(0x10)
};

// Class Tiger.TigerAIBenchmarkFindPlayerTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIBenchmarkFindPlayerTask : UBTTask_BlackboardBase {
	bool bUseHeightenedSensesSearchRadius; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float CustomSearchSphereRadius; // 0x9c(0x04)
	bool bDrawSearchSphere; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	float MaxVerticalPositionOffset; // 0xa4(0x04)
	float RaycastDistance; // 0xa8(0x04)
	int32_t SearchLowLevelThreshold; // 0xac(0x04)
	float SearchLowHealthPercentageThreshold; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerAiCalculateFiringLocationsScoreService
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAiCalculateFiringLocationsScoreService : UBTService {
	struct FBlackboardKeySelector TargetKey; // 0x70(0x28)
	bool bDebugDrawLocations; // 0x98(0x01)
	bool bDebugDrawSweepChecks; // 0x99(0x01)
	bool bDebugDrawInvalidLocationReason; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
};

// Class Tiger.TigerAiCanCrouch
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCanCrouch : UBTDecorator {
	float MinCrouchDistanceBuffer; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Tiger.TigerAiCanFleeDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiCanFleeDecorator : UBTDecorator {
};

// Class Tiger.TigerAICanInvestigateDecorator
// Size: 0x90 (Inherited: 0x68)
struct UTigerAICanInvestigateDecorator : UBTDecorator {
	struct FBlackboardKeySelector CurrentSuspiciousTarget; // 0x68(0x28)
};

// Class Tiger.TigerAiCanUseWeaponPowerDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCanUseWeaponPowerDecorator : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAICAPBase
// Size: 0x258 (Inherited: 0x228)
struct ATigerAICAPBase : AActor {
	struct TArray<struct ATigerNPC*> NPCUsingCAP; // 0x228(0x10)
	struct TArray<struct UShapeComponent*> Colliders; // 0x238(0x10)
	float Cooldown; // 0x248(0x04)
	int32_t NumberOfSlots; // 0x24c(0x04)
	bool bShouldAdjustTransform; // 0x250(0x01)
	bool bAllowExternalProps; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)

	bool OnCheckNPCEligibility(struct ATigerNPC* NPC); // Function Tiger.TigerAICAPBase.OnCheckNPCEligibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	bool CapIsEmpty(); // Function Tiger.TigerAICAPBase.CapIsEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13c9f50
	void BeginOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerAICAPBase.BeginOverlappedActor // (Native|Public|HasOutParms) // @ game+0x13c9d30
};

// Class Tiger.TigerAICAP
// Size: 0x268 (Inherited: 0x258)
struct ATigerAICAP : ATigerAICAPBase {
	struct TArray<struct UTigerAICommandBase*> Commands; // 0x258(0x10)
};

// Class Tiger.TigerAiCheckCanDiablerize
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCheckCanDiablerize : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiCheckIsTargetDowned
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiCheckIsTargetDowned : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAIClearMasqueradeTargetTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIClearMasqueradeTargetTask : UBTTaskNode {
};

// Class Tiger.TigerAICommandBase
// Size: 0x40 (Inherited: 0x28)
struct UTigerAICommandBase : UObject {
	struct ATigerAIController* Owner; // 0x28(0x08)
	struct AActor* WorldReferenceActor; // 0x30(0x08)
	float FailSafeMaxTime; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)

	void DeactivateCommand(bool bHasFinished); // Function Tiger.TigerAICommandBase.DeactivateCommand // (Native|Public|BlueprintCallable) // @ game+0x13cdd10
};

// Class Tiger.TigerAICommandAbandonCAP
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandAbandonCAP : UTigerAICommandBase {
	float ChanceToAbandonCAP; // 0x40(0x04)
	bool bShouldFindSpline; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class Tiger.TigerAICommandComponent
// Size: 0x140 (Inherited: 0xb0)
struct UTigerAICommandComponent : UActorComponent {
	char pad_B0[0x40]; // 0xb0(0x40)
	struct ATigerAiPermanentCap* PermanentCap; // 0xf0(0x08)
	struct ATigerNPC* Owner; // 0xf8(0x08)
	struct UTigerAICommandBase* ActiveCommand; // 0x100(0x08)
	struct UAnimMontage* LastPlayedCapMontage; // 0x108(0x08)
	struct FTigerCommandQueue CommandQueue; // 0x110(0x10)
	struct FName ContextBaseIdle; // 0x120(0x08)
	char pad_128[0x18]; // 0x128(0x18)

	void SetContextIdle(struct FName ContextName); // Function Tiger.TigerAICommandComponent.SetContextIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x13cdf80
	void InterruptAndClearCommands(); // Function Tiger.TigerAICommandComponent.InterruptAndClearCommands // (Final|Native|Public|BlueprintCallable) // @ game+0x13cde80
	struct UTigerAICommandBase* AddCommand(struct UTigerAICommandBase* Command, struct ATigerAICAPBase* CommandGiver); // Function Tiger.TigerAICommandComponent.AddCommand // (Final|Native|Public|BlueprintCallable) // @ game+0x13cda40
};

// Class Tiger.TigerAICommandContextualAction
// Size: 0x80 (Inherited: 0x40)
struct UTigerAICommandContextualAction : UTigerAICommandBase {
	struct TArray<struct FTigerContextualAnimationWrapper> ContextualAnimations; // 0x40(0x10)
	float WaitTimeBefore; // 0x50(0x04)
	float WaitTimeBeforeRandomDeviation; // 0x54(0x04)
	float WaitTimeAfter; // 0x58(0x04)
	float WaitTimeAfterRandomDeviation; // 0x5c(0x04)
	char pad_60[0x20]; // 0x60(0x20)
};

// Class Tiger.TigerAICommandMoveTo
// Size: 0x68 (Inherited: 0x40)
struct UTigerAICommandMoveTo : UTigerAICommandBase {
	struct FTigerAIMoveToLocationData MoveToData; // 0x40(0x18)
	char pad_58[0x10]; // 0x58(0x10)
};

// Class Tiger.TigerAICommandPlayerProximityWait
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandPlayerProximityWait : UTigerAICommandBase {
	float SquaredPlayerProximityRadiusRequired; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAICommandWaitForOrder
// Size: 0x48 (Inherited: 0x40)
struct UTigerAICommandWaitForOrder : UTigerAICommandBase {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerAIController
// Size: 0x498 (Inherited: 0x3b0)
struct ATigerAIController : ATigerAiBaseController {
	struct FName LureTargetKeyName; // 0x3b0(0x08)
	struct FName CurrentMasqueradeTargetKeyName; // 0x3b8(0x08)
	struct FName TargetPositionKeyName; // 0x3c0(0x08)
	struct FName MasqueradeBreachTargetKey; // 0x3c8(0x08)
	struct FName BehaviorIsActiveKeyName; // 0x3d0(0x08)
	struct FName SpawnPointKeyName; // 0x3d8(0x08)
	struct FName ActiveCAPKeyName; // 0x3e0(0x08)
	struct UBehaviorTree* LureBehaviorTree; // 0x3e8(0x08)
	struct UBehaviorTree* BloodDrainedBehaviorTree; // 0x3f0(0x08)
	struct UBehaviorTree* EmptyBehaviorTree; // 0x3f8(0x08)
	struct UTigerFearValueAsset* FearValueAsset; // 0x400(0x08)
	float OutOfCombatHealthRegenerationDelay; // 0x408(0x04)
	float OutOfCombatHealthRegenerationTickInterval; // 0x40c(0x04)
	float OutOfCombatTickHealthPercentage; // 0x410(0x04)
	float TimeWhenEnteredBloodDrainedState; // 0x414(0x04)
	float CheckForPlayerWeaponsInterval; // 0x418(0x04)
	float CheckForPlayerWeaponsDeviation; // 0x41c(0x04)
	float BaseThreatRadiusForEquippedRanged; // 0x420(0x04)
	float BaseThreatRadiusForEquippedMelee; // 0x424(0x04)
	float FearValue; // 0x428(0x04)
	float MaxFearValue; // 0x42c(0x04)
	float MinCrouchDistanceFromPlayer; // 0x430(0x04)
	float ChanceToFleeWhenEnteringThreatenedState; // 0x434(0x04)
	char pad_438[0x30]; // 0x438(0x30)
	struct UTigerNpcMovementRestrictionBoundsData* MovementRestrictionBoundsData; // 0x468(0x08)
	struct UTigerNpcMovementRestrictionBoundsData* TargetMovementRestrictionBoundsData; // 0x470(0x08)
	char pad_478[0x20]; // 0x478(0x20)

	void SetupData(enum class ETigerNPCType InNpcType); // Function Tiger.TigerAIController.SetupData // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SetNewReactionData(struct FTigerNpcReactionEvent& ReactionEvent); // Function Tiger.TigerAIController.SetNewReactionData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13ce2a0
	struct FTigerNpcReactionEvent SetLastReactionData(); // Function Tiger.TigerAIController.SetLastReactionData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ce1f0
	void SetFearValue(float InFearValue); // Function Tiger.TigerAIController.SetFearValue // (Final|Native|Public|BlueprintCallable) // @ game+0x13ce170
	void SetCurrentMasqueradeTarget(struct UBlackboardComponent* BBComp, struct ATigerCharacter* InLookAtTarget); // Function Tiger.TigerAIController.SetCurrentMasqueradeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13ce010
	void RunDefaultBehavior(); // Function Tiger.TigerAIController.RunDefaultBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x13cdf60
	void RequestInvestigationTicket(struct ATigerPlayer* TigerPlayer); // Function Tiger.TigerAIController.RequestInvestigationTicket // (Final|Native|Public|BlueprintCallable) // @ game+0x13cded0
	bool IsReacting(); // Function Tiger.TigerAIController.IsReacting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cdea0
	struct ATigerNPC* GetTigerPawn(); // Function Tiger.TigerAIController.GetTigerPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cde60
	float GetMaxFearValue(); // Function Tiger.TigerAIController.GetMaxFearValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cde40
	float GetFearValue(); // Function Tiger.TigerAIController.GetFearValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cde20
	float GetFearPercentage(); // Function Tiger.TigerAIController.GetFearPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cddf0
	enum class ETigerAIMasqueradeState GetCurrentBehaviorState(); // Function Tiger.TigerAIController.GetCurrentBehaviorState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cddd0
	struct ATigerAICAPBase* GetActiveCAP(); // Function Tiger.TigerAIController.GetActiveCAP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cdda0
	void ClearCurrentMasqueradeTarget(struct UBlackboardComponent* BBComp); // Function Tiger.TigerAIController.ClearCurrentMasqueradeTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13cdc80
	void CancelLureBehavior(); // Function Tiger.TigerAIController.CancelLureBehavior // (Final|Native|Public|BlueprintCallable) // @ game+0x13cdc60
	void AdjustFearValue(float Adjustment); // Function Tiger.TigerAIController.AdjustFearValue // (Final|Native|Public|BlueprintCallable) // @ game+0x13cdb10
};

// Class Tiger.TigerAiMovementBudgetAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerAiMovementBudgetAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerAiMovementBudget> MovementBudgets; // 0x30(0x50)
};

// Class Tiger.TigerAICoordinator
// Size: 0x3f8 (Inherited: 0xb0)
struct UTigerAICoordinator : UActorComponent {
	int32_t AttackingNpcForPlayerLimit; // 0xb0(0x04)
	float SprintTimeUntilReport; // 0xb4(0x04)
	float ClimbTimeUntilReport; // 0xb8(0x04)
	float AirTimeUntilReport; // 0xbc(0x04)
	float SuspicionStateTime; // 0xc0(0x04)
	float ThreatStateTime; // 0xc4(0x04)
	float SuspiciousStateEscapeRadiusSquared; // 0xc8(0x04)
	float ThreatenedStateEscapeRadiusSquared; // 0xcc(0x04)
	float MakeNearbyNPCsSuspiciousRadius; // 0xd0(0x04)
	float FearValueDecreasePerSecond; // 0xd4(0x04)
	float CrimeActionCooldownDistance; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	float CrimeActionMasqueradePointThreshold; // 0xe0(0x04)
	float PatrollingHelicopterEventRadius; // 0xe4(0x04)
	float PatrollingHelicopterLowestResponseHeight; // 0xe8(0x04)
	float PatrollingHelicopterEventTimeOut; // 0xec(0x04)
	float PatrollingHelicopterTimeBetweenGunfireEventPositionUpdate; // 0xf0(0x04)
	float TimeInSmokeUntilRemoval; // 0xf4(0x04)
	bool bUseMovementTickets; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)
	struct UTigerAiMovementBudgetAsset* MovementBudgetAsset; // 0x100(0x08)
	bool bPatrollingHelicotpersAreActive; // 0x108(0x01)
	char pad_109[0x97]; // 0x109(0x97)
	struct TArray<struct ATigerEntityPatrollingHelicopter*> EntityPatrollingHelicopters; // 0x1a0(0x10)
	char pad_1B0[0x80]; // 0x1b0(0x80)
	struct TArray<struct UTigerAiEntityPlatoon*> EntityPlatoons; // 0x230(0x10)
	struct TArray<struct UTigerAiSquad*> Squads; // 0x240(0x10)
	char pad_250[0xa0]; // 0x250(0xa0)
	struct ATigerPlayerGrid* PlayerGrid; // 0x2f0(0x08)
	char pad_2F8[0xc8]; // 0x2f8(0xc8)
	struct TArray<struct FTigerPlayerActionProcessData> DelayedPlayerActionProcesses; // 0x3c0(0x10)
	char pad_3D0[0x28]; // 0x3d0(0x28)

	void SetNPCSightModifier(float Modifier); // Function Tiger.TigerAICoordinator.SetNPCSightModifier // (Final|Native|Public|BlueprintCallable) // @ game+0x13ce220
	void SetEnableAICoordinator(bool bEnabled); // Function Tiger.TigerAICoordinator.SetEnableAICoordinator // (Final|Native|Public|BlueprintCallable) // @ game+0x13ce0e0
	void CacheFearValueThresholds(struct UTigerFearValueAsset* CivFearValueAsset, struct UTigerFearValueAsset* PolFearValueAsset); // Function Tiger.TigerAICoordinator.CacheFearValueThresholds // (Final|Native|Public|BlueprintCallable) // @ game+0x13cdb90
};

// Class Tiger.TigerAiDisciplineTaskBase
// Size: 0xc8 (Inherited: 0x98)
struct UTigerAiDisciplineTaskBase : UBTTask_BlackboardBase {
	struct ATigerLocalAIController* LocalAIController; // 0x98(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0xa0(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0xa8(0x08)
	struct UTigerDisciplineBase* CurrentDisciplineBase; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerAiEntityMovementModeService
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAiEntityMovementModeService : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector bCanShootKey; // 0x98(0x28)
	float StartSprintDistanceBuffer; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
};

// Class Tiger.TigerAiEntityPlatoon
// Size: 0x58 (Inherited: 0x28)
struct UTigerAiEntityPlatoon : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerAIEntityReactPlayersService
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIEntityReactPlayersService : UBTService {
	struct FBlackboardKeySelector SuspiciousTarget; // 0x70(0x28)
	float ThresholdDistanceSquared; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAiFindFiringLocation
// Size: 0x118 (Inherited: 0x70)
struct UTigerAiFindFiringLocation : UBTTaskNode {
	struct FBlackboardKeySelector TargetKey; // 0x70(0x28)
	struct FBlackboardKeySelector FiringLocationKey; // 0x98(0x28)
	struct FBlackboardKeySelector FiringLocationIndexKey; // 0xc0(0x28)
	struct FBlackboardKeySelector bCanShootKey; // 0xe8(0x28)
	float ClaimedLocationDuration; // 0x110(0x04)
	bool bDebugDraw; // 0x114(0x01)
	char pad_115[0x3]; // 0x115(0x03)
};

// Class Tiger.TigerAIFireAtActorTask
// Size: 0xe8 (Inherited: 0x98)
struct UTigerAIFireAtActorTask : UBTTask_BlackboardBase {
	struct FBlackboardKeySelector TargetToShootActorKey; // 0x98(0x28)
	struct FBlackboardKeySelector CanShootKey; // 0xc0(0x28)
};

// Class Tiger.TigerAIFleeFromThreatService
// Size: 0x140 (Inherited: 0x70)
struct UTigerAIFleeFromThreatService : UBTService {
	struct FBox SearchFleeSpotBox; // 0x70(0x1c)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct FBlackboardKeySelector FleePoint; // 0x90(0x28)
	struct FBlackboardKeySelector ClosestThreatPosition; // 0xb8(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0xe0(0x28)
	float KeepFleeingFromSpecificPlayerRadiusSquared; // 0x108(0x04)
	float BoxCenterDistanceFromNPCPosition; // 0x10c(0x04)
	bool bShowDebugFeatures; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	struct TWeakObjectPtr<struct ATigerPlayer> PlayerFleeingFrom; // 0x114(0x08)
	char pad_11C[0x24]; // 0x11c(0x24)
};

// Class Tiger.TigerAIGetSuspectTargetService
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAIGetSuspectTargetService : UBTService {
	struct FBlackboardKeySelector SuspectPosition; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentSuspectTarget; // 0x98(0x28)
	bool bShowDebugFeatures; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
};

// Class Tiger.TigerAiGiveOrderToSquad
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiGiveOrderToSquad : UBTTaskNode {
	enum class ETigerNpcSquadOrder OrderToGive; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiSpawningCap
// Size: 0x290 (Inherited: 0x258)
struct ATigerAiSpawningCap : ATigerAICAPBase {
	struct USceneComponent* SceneComp; // 0x258(0x08)
	struct UChildActorComponent* NPCSpawner; // 0x260(0x08)
	struct FName SpawningGroup; // 0x268(0x08)
	struct FName SpawnedNpcMovementGroup; // 0x270(0x08)
	struct FGuid SpawningSubGroupId; // 0x278(0x10)
	char pad_288[0x8]; // 0x288(0x08)
};

// Class Tiger.TigerAIGroupCAP
// Size: 0x2a0 (Inherited: 0x290)
struct ATigerAIGroupCAP : ATigerAiSpawningCap {
	struct TArray<struct FTigerAiGroupCapSlot> CapSlots; // 0x290(0x10)

	bool TriggerNextCommandForSlot(struct ATigerNPC* NPC, int32_t CapSlotIndex); // Function Tiger.TigerAIGroupCAP.TriggerNextCommandForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x13d2730
	bool OnRequestNewCommands(struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.OnRequestNewCommands // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool OnIsAvailableCheck(); // Function Tiger.TigerAIGroupCAP.OnIsAvailableCheck // (Native|Event|Public|BlueprintEvent) // @ game+0x13d25c0
	bool IsSlotAvailable(int32_t Index); // Function Tiger.TigerAIGroupCAP.IsSlotAvailable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d2520
	int32_t GetSlotAssignedToNPC(struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.GetSlotAssignedToNPC // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d2460
	struct UTigerAICommandBase* GetNextCommand(struct FTigerAiGroupCapSlot& CapSlot, int32_t CapSlotIndex); // Function Tiger.TigerAIGroupCAP.GetNextCommand // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13d2310
	void CapCommandStarted(int32_t CapSlotIndex, int32_t CommandIndex); // Function Tiger.TigerAIGroupCAP.CapCommandStarted // (Final|Native|Public|BlueprintCallable) // @ game+0x13d2180
	bool AssignNpcToSlot(int32_t SlotIndex, struct ATigerNPC* NPC); // Function Tiger.TigerAIGroupCAP.AssignNpcToSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x13d20b0
};

// Class Tiger.TigerAiHasCurrentSquadOrder
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiHasCurrentSquadOrder : UBTDecorator {
	enum class ETigerNpcSquadOrder SquadOrderToCompare; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiHasPlayerInSightDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiHasPlayerInSightDecorator : UBTDecorator {
};

// Class Tiger.TigerAiIsHeightElevationBlockingVision
// Size: 0xc0 (Inherited: 0x68)
struct UTigerAiIsHeightElevationBlockingVision : UBTDecorator {
	struct FBlackboardKeySelector TargetLocationKey; // 0x68(0x28)
	struct FBlackboardKeySelector bCanSeeTargetKey; // 0x90(0x28)
	float MaxVerticalAngleToTarget; // 0xb8(0x04)
	float LargeEnoughHeightDifference; // 0xbc(0x04)
};

// Class Tiger.TigerAiIsInMovementRestrictionBoundsArea
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiIsInMovementRestrictionBoundsArea : UBTDecorator {
	enum class ETigerNpcMovementRestrictionBoundsArea AreaToCompare; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAiIsMovingOutOfBounds
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiIsMovingOutOfBounds : UBTDecorator {
	struct FBlackboardKeySelector TargetPositionKey; // 0x68(0x28)
	float OutOfBoundsDistance; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Tiger.TigerAIIsReactingDecorator
// Size: 0x68 (Inherited: 0x68)
struct UTigerAIIsReactingDecorator : UBTDecorator {
};

// Class Tiger.TigerAiIsSquadCaptain
// Size: 0x68 (Inherited: 0x68)
struct UTigerAiIsSquadCaptain : UBTDecorator {
};

// Class Tiger.TigerAiJudgeController
// Size: 0x3f0 (Inherited: 0x3b0)
struct ATigerAiJudgeController : ATigerAiBaseController {
	struct UTigerAiJudgeSmComponent* JudgeStateMachineComp; // 0x3b0(0x08)
	struct FTigerSightConfigProperties StandardSightProperties; // 0x3b8(0x1c)
	struct FTigerSightConfigProperties CombatSightProperties; // 0x3d4(0x1c)

	void PlayTimedAnimationTriggers(struct TArray<struct FTigerTimedAnimationTrigger>& AnimationTriggers); // Function Tiger.TigerAiJudgeController.PlayTimedAnimationTriggers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13d25f0
	struct ATigerJudge* GetJudgePawn(); // Function Tiger.TigerAiJudgeController.GetJudgePawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cde60
};

// Class Tiger.TigerAiJudgeSmComponent
// Size: 0x178 (Inherited: 0xb0)
struct UTigerAiJudgeSmComponent : UActorComponent {
	struct TArray<struct ATigerPlayer*> CurrentlyPerceivedPlayersBySight; // 0xb0(0x10)
	struct TArray<struct ATigerPlayer*> BloodhuntedPlayersWithinCombatRadius; // 0xc0(0x10)
	struct UTigerJudgeBaseState* StartingState; // 0xd0(0x08)
	struct UTigerJudgeBaseState* DownedState; // 0xd8(0x08)
	struct UTigerJudgeBaseState* FeedingState; // 0xe0(0x08)
	struct UTigerJudgeBaseState* ActiveState; // 0xe8(0x08)
	struct TMap<struct UTigerJudgeBaseState*, struct UTigerJudgeBaseState*> InstancedStates; // 0xf0(0x50)
	float CombatRadiusSq; // 0x140(0x04)
	bool bIsSeeingAnyBloodhuntedPlayer; // 0x144(0x01)
	char pad_145[0x33]; // 0x145(0x33)

	void SwitchToState(struct UTigerJudgeBaseState* NewStateType); // Function Tiger.TigerAiJudgeSmComponent.SwitchToState // (Native|Public|BlueprintCallable) // @ game+0x13d26a0
	void AddMasqueradePointsToSeenPlayers(float AdjustAmount, float TimeBetweenAddingPoints); // Function Tiger.TigerAiJudgeSmComponent.AddMasqueradePointsToSeenPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x13d1fe0
};

// Class Tiger.TigerAimAssist
// Size: 0xa0 (Inherited: 0x28)
struct UTigerAimAssist : UObject {
	struct ATigerPlayerController* PlayerController; // 0x28(0x08)
	struct FTigerAimAssistState State; // 0x30(0x68)
	char pad_98[0x8]; // 0x98(0x08)
};

// Class Tiger.TigerAimAssistSettings
// Size: 0x200 (Inherited: 0x28)
struct UTigerAimAssistSettings : UObject {
	struct FTigerAimAssistModeConfig Modes[0x4]; // 0x28(0x1a0)
	struct FVector2D BaseSlowdownAssistRadiusCm; // 0x1c8(0x08)
	struct FVector2D BaseSlowdownAssistStrength; // 0x1d0(0x08)
	struct FVector2D BaseRotationAssistRadiusCm; // 0x1d8(0x08)
	struct FVector2D BaseRotationAssistStrength; // 0x1e0(0x08)
	float MinRangeCm; // 0x1e8(0x04)
	float MaxRangeCm; // 0x1ec(0x04)
	struct FVector2D MaxRotationAssistDegreesPerSecond; // 0x1f0(0x08)
	float NoEffectScoreMultiplier; // 0x1f8(0x04)
	float RotationAssistMinimumMoveSpeed; // 0x1fc(0x04)
};

// Class Tiger.TigerAimingCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerAimingCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.TigerAiMoveAsyncTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAiMoveAsyncTask : UBTTask_BlackboardBase {
	float AcceptableRadiusSq; // 0x98(0x04)
	float ObservedBlackboardValueToleranceSq; // 0x9c(0x04)
};

// Class Tiger.TigerAiMoveToTask
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerAiMoveToTask : UBTTask_MoveTo {
	bool bResetMoveTargetOnEnd; // 0xb0(0x01)
	char pad_B1[0x7]; // 0xb1(0x07)
};

// Class Tiger.TigerAiPathToTargetService
// Size: 0x158 (Inherited: 0x70)
struct UTigerAiPathToTargetService : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector SuitableEdgeLocationKey; // 0x98(0x28)
	struct FBlackboardKeySelector IsTargetOutOfBoundsKey; // 0xc0(0x28)
	struct FBlackboardKeySelector HasPathToTargetKey; // 0xe8(0x28)
	struct FBlackboardKeySelector IsPathOutOfBoundsKey; // 0x110(0x28)
	float OutOfBoundsDistance; // 0x138(0x04)
	float HeightDifferenceOutOfBounds; // 0x13c(0x04)
	bool bDebugDraw; // 0x140(0x01)
	char pad_141[0x17]; // 0x141(0x17)
};

// Class Tiger.TigerAIPerceptionSystem
// Size: 0x130 (Inherited: 0x130)
struct UTigerAIPerceptionSystem : UAIPerceptionSystem {
};

// Class Tiger.TigerAiPerfBenchUseWeapon
// Size: 0x90 (Inherited: 0x70)
struct UTigerAiPerfBenchUseWeapon : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPermanentCap
// Size: 0x2c8 (Inherited: 0x290)
struct ATigerAiPermanentCap : ATigerAiSpawningCap {
	struct TArray<struct UTigerAICommandBase*> Commands; // 0x290(0x10)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	struct FName CapContextBase; // 0x2a4(0x08)
	int32_t CapContextStartingIndex; // 0x2ac(0x04)
	struct UTigerNPCAsset* NpcAssetToSpawn; // 0x2b0(0x08)
	int32_t LoopingStartIndex; // 0x2b8(0x04)
	struct TWeakObjectPtr<struct ATigerNPC> PermanentNpc; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
};

// Class Tiger.TigerAIPetClearPathToMaster
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIPetClearPathToMaster : UBTTaskNode {
};

// Class Tiger.TigerAIPetComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerAIPetComponent : UActorComponent {
	char pad_B0[0x40]; // 0xb0(0x40)

	bool HasGotEndPoint(); // Function Tiger.TigerAIPetComponent.HasGotEndPoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d2500
	struct TArray<struct FVector> GetMasterPlayersStoredPath(); // Function Tiger.TigerAIPetComponent.GetMasterPlayersStoredPath // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d2280
	struct FVector GetEndPoint(); // Function Tiger.TigerAIPetComponent.GetEndPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13d2250
};

// Class Tiger.TigerAIPetFindEndOfMastersPath
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetFindEndOfMastersPath : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPetPreparePathContinuing
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetPreparePathContinuing : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPetStoreValidMasterPos
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIPetStoreValidMasterPos : UBTTaskNode {
	struct FBlackboardKeySelector MasterPlayer; // 0x70(0x28)
};

// Class Tiger.TigerAIPlayAnimationTask
// Size: 0xc8 (Inherited: 0x70)
struct UTigerAIPlayAnimationTask : UBTTaskNode {
	struct UAnimMontage* AnimationToPlay; // 0x70(0x08)
	struct FBlackboardKeySelector ContextualActionPointKey; // 0x78(0x28)
	struct UBehaviorTreeComponent* MyOwnerComp; // 0xa0(0x08)
	char pad_A8[0x20]; // 0xa8(0x20)
};

// Class Tiger.TigerAiPlayerAtWpRangeDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiPlayerAtWpRangeDecorator : UBTDecorator {
	bool bConditionInvertedOnTick; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
};

// Class Tiger.TigerAIPlayerClearPrioritiesTask
// Size: 0x98 (Inherited: 0x98)
struct UTigerAIPlayerClearPrioritiesTask : UBTTask_BlackboardBase {
};

// Class Tiger.TigerAIPlayerClimbIfPossibleTask
// Size: 0xd0 (Inherited: 0x70)
struct UTigerAIPlayerClimbIfPossibleTask : UBTTaskNode {
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x70(0x08)
	struct ATigerPlayerController* PlayerController; // 0x78(0x08)
	struct ATigerPlayerCameraManager* PlayerCamera; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalClimbState* ClimbState; // 0x98(0x08)
	struct UTigerTraversalStateClimbingConfig* ClimbConfig; // 0xa0(0x08)
	float AngleFromForward; // 0xa8(0x04)
	char pad_AC[0x24]; // 0xac(0x24)
};

// Class Tiger.TigerAiPlayerCombatService
// Size: 0xd8 (Inherited: 0x70)
struct UTigerAiPlayerCombatService : UBTService {
	struct TMap<enum class ETigerWeaponType, struct FWeaponDistanceDesc> WeaponRanges; // 0x70(0x50)
	struct ATigerLocalAIController* LocalAIController; // 0xc0(0x08)
	struct AActor* CurrentLureTarget; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)
};

// Class Tiger.TigerAiPlayerDiablerizeTask
// Size: 0xc0 (Inherited: 0x98)
struct UTigerAiPlayerDiablerizeTask : UBTTask_BlackboardBase {
	float MaximumDiablerizeDistance; // 0x98(0x04)
	char pad_9C[0x24]; // 0x9c(0x24)
};

// Class Tiger.TigerAiPlayerEquipRangedWeapon
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiPlayerEquipRangedWeapon : UBTTaskNode {
	char pad_70[0x8]; // 0x70(0x08)
};

// Class Tiger.TigerAIPlayerFeeding
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerFeeding : UBTTask_BlackboardBase {
	float MaximumFeedingDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerFindBloodHuntedTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAIPlayerFindBloodHuntedTask : UBTTaskNode {
};

// Class Tiger.TigerAIPlayerFindCivilianTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindCivilianTask : UBTTask_BlackboardBase {
	bool bUseHeightenedSensesSearchRadius; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float CustomSearchSphereRadius; // 0x9c(0x04)
	bool bDrawSearchSphere; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	float MaxVerticalPositionOffset; // 0xa4(0x04)
	float RaycastDistance; // 0xa8(0x04)
	int32_t SearchLowResonanceThreshold; // 0xac(0x04)
	float SearchLowHealthPercentageThreshold; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerAIPlayerFindClosestItemTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindClosestItemTask : UBTTask_BlackboardBase {
	float MaxVerticalPositionOffset; // 0x98(0x04)
	float RaycastDistance; // 0x9c(0x04)
	float SearchSphereRadius; // 0xa0(0x04)
	char pad_A4[0x14]; // 0xa4(0x14)
};

// Class Tiger.TigerAIPlayerFindNewPointTask
// Size: 0xb8 (Inherited: 0x98)
struct UTigerAIPlayerFindNewPointTask : UBTTask_BlackboardBase {
	float NavigablePointRadius; // 0x98(0x04)
	float MaxCenterDistance; // 0x9c(0x04)
	char pad_A0[0x18]; // 0xa0(0x18)
};

// Class Tiger.TigerAiPlayerMainStateService
// Size: 0xe8 (Inherited: 0x70)
struct UTigerAiPlayerMainStateService : UBTService {
	char pad_70[0x8]; // 0x70(0x08)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayer* AiPlayer; // 0x80(0x08)
	struct ATigerCharacter* TargetCharacter; // 0x88(0x08)
	struct UTigerInventoryComponent* LocalAiInventory; // 0x90(0x08)
	struct ATigerCharacter* ClosestHostileCharacterFleeingFrom; // 0x98(0x08)
	char pad_A0[0x30]; // 0xa0(0x30)
	float FleeAttackDistance; // 0xd0(0x04)
	char pad_D4[0x14]; // 0xd4(0x14)

	void OnReactionDelayPassed(struct AActor* InActor); // Function Tiger.TigerAiPlayerMainStateService.OnReactionDelayPassed // (Final|Native|Private) // @ game+0x13d6ec0
	void OnPerceptionUpdated(struct AActor* InActor, struct FAIStimulus InStimulus); // Function Tiger.TigerAiPlayerMainStateService.OnPerceptionUpdated // (Final|Native|Private) // @ game+0x13d6d30
	void OnDiablerizeStateChanged(bool InIsDiablerizeActive, bool InIsTarget); // Function Tiger.TigerAiPlayerMainStateService.OnDiablerizeStateChanged // (Final|Native|Private) // @ game+0x13d6be0
};

// Class Tiger.TigerAIPlayerMoveToTask
// Size: 0x150 (Inherited: 0xb0)
struct UTigerAIPlayerMoveToTask : UBTTask_MoveTo {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct UTigerAIPlayerClimbIfPossibleTask* ClimbTask; // 0xb8(0x08)
	struct UTigerAIPlayerSlideIfPossibleTask* SlideTask; // 0xc0(0x08)
	struct UTigerAIPlayerWallGrindTask* WallGrindTask; // 0xc8(0x08)
	float CheckStuckDelay; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	float CheckClimbTaskTransitionsDelay; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	float CheckSlideTaskTransitionsDelay; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	float JumpGapTransitionsDelay; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0xf0(0x08)
	struct ATigerPlayer* CurrentTigerPlayer; // 0xf8(0x08)
	char pad_100[0x50]; // 0x100(0x50)

	void OnLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerAIPlayerMoveToTask.OnLifeStatusChanged // (Final|Native|Public) // @ game+0x13d6cb0
};

// Class Tiger.TigerAIPlayerOpenInteractiveTask
// Size: 0xc8 (Inherited: 0x98)
struct UTigerAIPlayerOpenInteractiveTask : UBTTask_BlackboardBase {
	char pad_98[0x30]; // 0x98(0x30)
};

// Class Tiger.TigerAIPlayerPickPriorityTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerPickPriorityTask : UBTTask_BlackboardBase {
	float MaxVerticalPositionOffset; // 0x98(0x04)
	float RaycastDistance; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerPickUpItemTask
// Size: 0xa0 (Inherited: 0x98)
struct UTigerAIPlayerPickUpItemTask : UBTTask_BlackboardBase {
	float MaximumLootingDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAIPlayerSlideIfPossibleTask
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIPlayerSlideIfPossibleTask : UBTTaskNode {
	float MinimumSlideDistanceSqrd; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayerController* PlayerController; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalSlideState* SlideState; // 0x98(0x08)
};

// Class Tiger.TigerAIPlayerTravelBloodVeinTask
// Size: 0xa8 (Inherited: 0x98)
struct UTigerAIPlayerTravelBloodVeinTask : UBTTask_BlackboardBase {
	struct UCurveFloat* JumpProbabilityDistribution; // 0x98(0x08)
	enum class ETigerJumpDistribution JumpDistributionType; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class Tiger.TigerAIPlayerUseHealingItem
// Size: 0x90 (Inherited: 0x70)
struct UTigerAIPlayerUseHealingItem : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPlayerUseWeapon
// Size: 0x90 (Inherited: 0x70)
struct UTigerAiPlayerUseWeapon : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
};

// Class Tiger.TigerAiPlayerUseWeaponPower
// Size: 0x98 (Inherited: 0x70)
struct UTigerAiPlayerUseWeaponPower : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)
	struct ATigerLocalAIControllerBase* LocalAIController; // 0x80(0x08)
	struct ATigerPlayerController* PlayerController; // 0x88(0x08)
	struct UTigerDisciplineBase* WeaponAbility; // 0x90(0x08)
};

// Class Tiger.TigerAIPlayerWallGrindTask
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAIPlayerWallGrindTask : UBTTaskNode {
	char pad_70[0x8]; // 0x70(0x08)
	struct ATigerLocalAIController* LocalAIController; // 0x78(0x08)
	struct ATigerPlayerController* PlayerController; // 0x80(0x08)
	struct ATigerPlayer* CurrentPawn; // 0x88(0x08)
	struct UTigerCharacterMovementComponent* PlayerMovementComponent; // 0x90(0x08)
	struct UTigerTraversalWallGrindState* GrindState; // 0x98(0x08)
};

// Class Tiger.TigerAiReloadWeaponTask
// Size: 0x80 (Inherited: 0x70)
struct UTigerAiReloadWeaponTask : UBTTaskNode {
	char pad_70[0x10]; // 0x70(0x10)

	void OnReloadAborted(bool bInWeaponDropped); // Function Tiger.TigerAiReloadWeaponTask.OnReloadAborted // (Final|Native|Private) // @ game+0x13d6f50
};

// Class Tiger.TigerAiReportNewThreatTask
// Size: 0x98 (Inherited: 0x70)
struct UTigerAiReportNewThreatTask : UBTTaskNode {
	struct FBlackboardKeySelector PlayerToReportKey; // 0x70(0x28)
};

// Class Tiger.TigerAIReportSuspciousPlayer
// Size: 0xe8 (Inherited: 0x70)
struct UTigerAIReportSuspciousPlayer : UBTTaskNode {
	struct FBlackboardKeySelector PoliceTarget; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentMasqueradeTarget; // 0x98(0x28)
	struct FBlackboardKeySelector PlayerNeedsToBeReported; // 0xc0(0x28)
};

// Class Tiger.TigerAiRequestOutOfBoundsPursuitSquad
// Size: 0xa0 (Inherited: 0x70)
struct UTigerAiRequestOutOfBoundsPursuitSquad : UBTTaskNode {
	struct FBlackboardKeySelector TargetPlayer; // 0x70(0x28)
	float NearbySquadDistance; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerAISense_Masquerade
// Size: 0x90 (Inherited: 0x80)
struct UTigerAISense_Masquerade : UAISense {
	struct TArray<struct FTigerAIMasqueradeEvent> MasqueradeEvents; // 0x80(0x10)

	void ReportPlayerAction(struct ATigerPlayer* Instigator, struct FTigerAIPlayerAction& PlayerAction); // Function Tiger.TigerAISense_Masquerade.ReportPlayerAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x13d6fe0
};

// Class Tiger.TigerAISenseConfig_Masquerade
// Size: 0x50 (Inherited: 0x48)
struct UTigerAISenseConfig_Masquerade : UAISenseConfig {
	struct UTigerAISense_Masquerade* Implementation; // 0x48(0x08)
};

// Class Tiger.TigerAISense_Sight
// Size: 0x170 (Inherited: 0x170)
struct UTigerAISense_Sight : UAISense_Sight {
};

// Class Tiger.TigerAISenseConfig_Sight
// Size: 0x78 (Inherited: 0x48)
struct UTigerAISenseConfig_Sight : UAISenseConfig {
	struct UTigerAISense_Sight* Implementation; // 0x48(0x08)
	float SightRadius; // 0x50(0x04)
	float LoseSightRadius; // 0x54(0x04)
	float PeripheralVisionAngleDegrees; // 0x58(0x04)
	float CloseSightRadius; // 0x5c(0x04)
	float CloseLoseSightRadius; // 0x60(0x04)
	float ClosePeripheralVisionAngleDegrees; // 0x64(0x04)
	float HeightDifference; // 0x68(0x04)
	struct FAISenseAffiliationFilter DetectionByAffiliation; // 0x6c(0x04)
	float AutoSuccessRangeFromLastSeenLocation; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Tiger.TigerSightConfigAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerSightConfigAsset : UDataAsset {
	struct TMap<enum class ETigerNPCType, struct FTigerSightConfigData> SightData; // 0x30(0x50)
};

// Class Tiger.TigerAiSetCrouchedTask
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiSetCrouchedTask : UBTTaskNode {
	bool bShouldCrouch; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiSetMovementMode
// Size: 0x78 (Inherited: 0x70)
struct UTigerAiSetMovementMode : UBTTaskNode {
	enum class ETigerAIAnimationMode MovementMode; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerAiShouldFireFleeDecorator
// Size: 0x98 (Inherited: 0x90)
struct UTigerAiShouldFireFleeDecorator : UBTDecorator_BlackboardBase {
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerAiShouldReloadDecorator
// Size: 0x70 (Inherited: 0x68)
struct UTigerAiShouldReloadDecorator : UBTDecorator {
	bool bBaseUponFullAmmoPercentage; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float ReloadAmmoPercentage; // 0x6c(0x04)
};

// Class Tiger.TigerAiShouldReportNewThreatDecorator
// Size: 0x90 (Inherited: 0x68)
struct UTigerAiShouldReportNewThreatDecorator : UBTDecorator {
	struct FBlackboardKeySelector PlayerToReportKey; // 0x68(0x28)
};

// Class Tiger.TigerAiShouldRequestOutOfBoundsPursuitSquad
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiShouldRequestOutOfBoundsPursuitSquad : UBTDecorator {
	struct FBlackboardKeySelector CurrentTargetKey; // 0x68(0x28)
	float MaxDistanceFromCurrentSquad; // 0x90(0x04)
	char pad_94[0x4]; // 0x94(0x04)
};

// Class Tiger.TigerAiShouldUseDisciplineBase
// Size: 0x98 (Inherited: 0x68)
struct UTigerAiShouldUseDisciplineBase : UBTDecorator {
	float LowHealthPercentage; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct ATigerLocalAIController* LocalAIController; // 0x70(0x08)
	struct ATigerPlayerController* LocalAiPlayerController; // 0x78(0x08)
	struct ATigerPlayer* AiTigerPlayer; // 0x80(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x88(0x08)
	struct ATigerCharacter* AiTigerCharacter; // 0x90(0x08)
};

// Class Tiger.TigerAiShouldUseArchDiscipline
// Size: 0xb0 (Inherited: 0x98)
struct UTigerAiShouldUseArchDiscipline : UTigerAiShouldUseDisciplineBase {
	float ShockwavePunchMinimumTargetDistance; // 0x98(0x04)
	float EarthshockUseWithoutJumpChance; // 0x9c(0x04)
	float TrapsAndScoutsUseNearLootDistance; // 0xa0(0x04)
	float ScoutsRedeployChance; // 0xa4(0x04)
	float RejuvenatingVoiceLowHealthPercentage; // 0xa8(0x04)
	float TankyChargeUseDistance; // 0xac(0x04)
};

// Class Tiger.TigerAiShouldUseClanDiscipline
// Size: 0xa8 (Inherited: 0x98)
struct UTigerAiShouldUseClanDiscipline : UTigerAiShouldUseDisciplineBase {
	float DisableNearTargetDistance; // 0x98(0x04)
	float SoaringLeapRayClearance; // 0x9c(0x04)
	float VanishCombatUseChance; // 0xa0(0x04)
	float ProjectionDashUseDistance; // 0xa4(0x04)
};

// Class Tiger.TigerNPCSpawningBase
// Size: 0x270 (Inherited: 0x228)
struct ATigerNPCSpawningBase : AActor {
	struct ATigerAISplinePath* AISplinePath; // 0x228(0x08)
	struct FName SpawningGroup; // 0x230(0x08)
	int32_t SpawnAmount; // 0x238(0x04)
	struct FGuid SpawningSubGroupId; // 0x23c(0x10)
	float Prio; // 0x24c(0x04)
	bool bShouldBeManuallyActivated; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	struct FName MovementGroup; // 0x254(0x08)
	char pad_25C[0x14]; // 0x25c(0x14)

	struct TArray<struct ATigerBaseNPC*> ManuallySpawnNPCs(int32_t Budget, int32_t OverrideSpawnAmount); // Function Tiger.TigerNPCSpawningBase.ManuallySpawnNPCs // (Final|Native|Public|BlueprintCallable) // @ game+0x14abb50
};

// Class Tiger.TigerAISpawner
// Size: 0x278 (Inherited: 0x270)
struct ATigerAISpawner : ATigerNPCSpawningBase {
	struct UTigerNPCAsset* NPCAsset; // 0x270(0x08)
};

// Class Tiger.TigerAISplinePath
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerAISplinePath : AActor {
	struct FTigerAISplinePathData PathData; // 0x228(0xa0)
	char pad_2C8[0x8]; // 0x2c8(0x08)
};

// Class Tiger.TigerAiSplinePathHub
// Size: 0x240 (Inherited: 0x228)
struct ATigerAiSplinePathHub : AActor {
	struct TArray<struct FTigerAISplinePathConnection> SplineConnections; // 0x228(0x10)
	float ConnectionRadius; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
};

// Class Tiger.TigerAiSquad
// Size: 0x68 (Inherited: 0x28)
struct UTigerAiSquad : UObject {
	char pad_28[0x40]; // 0x28(0x40)
};

// Class Tiger.TigerAiSquadFormationService
// Size: 0xb0 (Inherited: 0x70)
struct UTigerAiSquadFormationService : UBTService {
	struct FBlackboardKeySelector FormationLocationKey; // 0x70(0x28)
	bool bDebugDraw; // 0x98(0x01)
	char pad_99[0x17]; // 0x99(0x17)
};

// Class Tiger.TigerAIsRespondingToRoar
// Size: 0x68 (Inherited: 0x68)
struct UTigerAIsRespondingToRoar : UBTDecorator {
};

// Class Tiger.TigerAiStopActiveCapTask
// Size: 0x70 (Inherited: 0x70)
struct UTigerAiStopActiveCapTask : UBTTaskNode {
};

// Class Tiger.TigerAiTargetOutOfBounds
// Size: 0xe0 (Inherited: 0x68)
struct UTigerAiTargetOutOfBounds : UBTDecorator {
	struct FBlackboardKeySelector IsTargetOutOfBoundsKey; // 0x68(0x28)
	struct FBlackboardKeySelector HasPathToTargetKey; // 0x90(0x28)
	struct FBlackboardKeySelector IsPathOutOfBoundsKey; // 0xb8(0x28)
};

// Class Tiger.TigerAIThreateningTargetService
// Size: 0x148 (Inherited: 0x70)
struct UTigerAIThreateningTargetService : UBTService {
	struct FBlackboardKeySelector ThreatPosition; // 0x70(0x28)
	struct FBlackboardKeySelector CurrentThreatTarget; // 0x98(0x28)
	struct FBlackboardKeySelector SuggestedNonObstructedPosition; // 0xc0(0x28)
	struct FBlackboardKeySelector bIsAllowedToChaseKey; // 0xe8(0x28)
	struct FBlackboardKeySelector bCanShoot; // 0x110(0x28)
	bool bUseAttackPermissions; // 0x138(0x01)
	bool bShowDebugFeatures; // 0x139(0x01)
	char pad_13A[0xe]; // 0x13a(0x0e)
};

// Class Tiger.TigerAIThreateningTargetEntityService
// Size: 0x170 (Inherited: 0x148)
struct UTigerAIThreateningTargetEntityService : UTigerAIThreateningTargetService {
	struct FBlackboardKeySelector MasqueradeBreachTargetKey; // 0x148(0x28)
};

// Class Tiger.TigerAiTryFindLocationAgainstElevatedTarget
// Size: 0xd0 (Inherited: 0x70)
struct UTigerAiTryFindLocationAgainstElevatedTarget : UBTTaskNode {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
	struct FBlackboardKeySelector SuggestedLocationKey; // 0x98(0x28)
	float MaxStepbackDistance; // 0xc0(0x04)
	float MinStepbackDistance; // 0xc4(0x04)
	float DesiredMaxVerticalAngle; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
};

// Class Tiger.TigerAIUpdateBloodDrainedService
// Size: 0x78 (Inherited: 0x70)
struct UTigerAIUpdateBloodDrainedService : UBTService {
	float MaxTimeInBloodDrainedState; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
};

// Class Tiger.TigerAIUpdateWaypoint
// Size: 0xf0 (Inherited: 0x70)
struct UTigerAIUpdateWaypoint : UBTService {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
	float Distance; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
};

// Class Tiger.TigerAiUseArchetypeDisciplineTask
// Size: 0xc8 (Inherited: 0xc8)
struct UTigerAiUseArchetypeDisciplineTask : UTigerAiDisciplineTaskBase {
};

// Class Tiger.TigerAiUseClanDisciplineTask
// Size: 0xc8 (Inherited: 0xc8)
struct UTigerAiUseClanDisciplineTask : UTigerAiDisciplineTaskBase {
};

// Class Tiger.TigerFearValueAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerFearValueAsset : UDataAsset {
	struct TMap<enum class ETigerAIMasqueradeState, float> FearValueThresholds; // 0x30(0x50)
};

// Class Tiger.TigerNpcPropAsset
// Size: 0x58 (Inherited: 0x30)
struct UTigerNpcPropAsset : UDataAsset {
	struct TArray<struct FName> TagsToAddToNpc; // 0x30(0x10)
	struct UTigerAnimationSetAsset* PropAnimationSet; // 0x40(0x08)
	struct TArray<struct FName> HeldPropAttachments; // 0x48(0x10)
};

// Class Tiger.TigerNPCVisualAsset
// Size: 0x150 (Inherited: 0x30)
struct UTigerNPCVisualAsset : UDataAsset {
	struct FName MainTag; // 0x30(0x08)
	struct TArray<struct FName> AdditionalTags; // 0x38(0x10)
	struct USkeletalMesh* SkeletalMesh; // 0x48(0x08)
	struct TArray<struct USkeletalMesh*> HeadSkeletalMeshes; // 0x50(0x10)
	struct TArray<struct USkeletalMesh*> HairSkeletalMeshes; // 0x60(0x10)
	struct TArray<struct UTigerColorSetAsset*> ColorSetAssets; // 0x70(0x10)
	struct TArray<struct UTigerLinearColorSetAsset*> HairColorSetAssets; // 0x80(0x10)
	struct UMaterialInstance* DefaultMaterial; // 0x90(0x08)
	bool bShowHeart; // 0x98(0x01)
	enum class ETigerGender Gender; // 0x99(0x01)
	char pad_9A[0x6]; // 0x9a(0x06)
	struct UAnimInstance* HairAnimationBlueprint; // 0xa0(0x08)
	bool bUseCharacterPreset; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
	struct TSoftObjectPtr<UTigerCharacterPreset> CharacterPreset; // 0xb0(0x28)
	struct UAnimInstance* AnimationInstanceClass; // 0xd8(0x08)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	float ChanceForProp; // 0xe4(0x04)
	struct TMap<struct UTigerNpcPropAsset*, float> PossibleNpcProps; // 0xe8(0x50)
	float WalkSpeed; // 0x138(0x04)
	float WalkTurnSpeed; // 0x13c(0x04)
	float SprintSpeed; // 0x140(0x04)
	float SprintTurnSpeed; // 0x144(0x04)
	float StrafeSpeed; // 0x148(0x04)
	float StrafeTurnSpeed; // 0x14c(0x04)
};

// Class Tiger.TigerNPCBehaviorAsset
// Size: 0x210 (Inherited: 0x30)
struct UTigerNPCBehaviorAsset : UDataAsset {
	struct ATigerBaseNPC* NPCBlueprint; // 0x30(0x08)
	struct UTigerMasqueradeActionResponse* MasqueradeActionResponseClass; // 0x38(0x08)
	struct UBehaviorTree* DefaultBehaviorTree; // 0x40(0x08)
	struct TMap<enum class ETigerAIMasqueradeState, struct UBehaviorTree*> BehaviorTrees; // 0x48(0x50)
	struct TArray<struct UActorComponent*> AdditionalComponentClasses; // 0x98(0x10)
	struct UTigerWeapon* WeaponClass; // 0xa8(0x08)
	enum class ETigerNPCType NPCType; // 0xb0(0x01)
	enum class ETigerAIAnimationMode AnimationMode; // 0xb1(0x01)
	char pad_B2[0x2]; // 0xb2(0x02)
	struct FTigerCharacterStatModification BaseStatModifications; // 0xb4(0xa8)
	struct FTigerCharacterStatModification BaseGroupStatModifications; // 0x15c(0xa8)
	bool bUseGroupStats; // 0x204(0x01)
	char pad_205[0x3]; // 0x205(0x03)
	float OverrideBaseMaxHealth; // 0x208(0x04)
	char pad_20C[0x4]; // 0x20c(0x04)
};

// Class Tiger.TigerNPCAsset
// Size: 0x50 (Inherited: 0x30)
struct UTigerNPCAsset : UDataAsset {
	struct TArray<struct FTigerRandomVisualAsset> NormalizedVisualAssets; // 0x30(0x10)
	struct UTigerNPCBehaviorAsset* BehaviorAsset; // 0x40(0x08)
	struct UTigerGrimoireEntry* GrimoireEntry; // 0x48(0x08)
};

// Class Tiger.TigerColorSetAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerColorSetAsset : UDataAsset {
	struct TMap<struct FName, struct FColor> ColorSets; // 0x30(0x50)
	struct TMap<struct FName, float> ScalarParameters; // 0x80(0x50)
};

// Class Tiger.TigerNPCCheatCommandsAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerNPCCheatCommandsAsset : UDataAsset {
	struct TMap<struct FName, struct UTigerNPCAsset*> Commands; // 0x30(0x50)
};

// Class Tiger.TigerLinearColorSetAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerLinearColorSetAsset : UDataAsset {
	struct TMap<struct FName, struct FLinearColor> ColorSets; // 0x30(0x50)
	struct TMap<struct FName, float> ScalarParameters; // 0x80(0x50)
};

// Class Tiger.TigerAIWithinMovementBoundsServices
// Size: 0x98 (Inherited: 0x70)
struct UTigerAIWithinMovementBoundsServices : UBTService {
	struct FBlackboardKeySelector TargetLocationKey; // 0x70(0x28)
};

// Class Tiger.TigerDisciplineMetaData
// Size: 0x30 (Inherited: 0x28)
struct UTigerDisciplineMetaData : UAnimMetaData {
	enum class ETigerDisciplinesEnum DisicplineType; // 0x28(0x01)
	bool bAllowRotationLerp; // 0x29(0x01)
	char pad_2A[0x6]; // 0x2a(0x06)
};

// Class Tiger.TigerAnimationSet
// Size: 0x360 (Inherited: 0x28)
struct UTigerAnimationSet : UObject {
	struct TArray<struct UTigerAnimationSetAsset*> ParentSets; // 0x28(0x10)
	struct TMap<struct FName, struct UAnimSequence*> Sequences; // 0x38(0x50)
	struct TMap<struct FName, struct UAnimMontage*> Montages; // 0x88(0x50)
	struct TMap<struct FName, struct UTigerMontageList*> MontageLists; // 0xd8(0x50)
	struct TMap<struct FName, struct UBlendSpace*> BlendSpaces; // 0x128(0x50)
	struct TMap<struct FName, struct UBlendSpace1D*> BlendSpaces1D; // 0x178(0x50)
	struct TMap<struct FName, struct UTigerRandomSequenceList*> RandomSequenceLists; // 0x1c8(0x50)
	struct TMap<struct FName, struct UTigerCustomSequenceList*> CustomSequences; // 0x218(0x50)
	struct TMap<struct FName, struct UTigerCustomMontageList*> CustomMontages; // 0x268(0x50)
	struct TMap<struct FName, struct UTigerCustomBlendSpaceList*> CustomBlendSpaces; // 0x2b8(0x50)
	struct TMap<struct FName, struct UTigerCustomBlendSpace1DList*> CustomBlendSpaces1D; // 0x308(0x50)
	int32_t Priority; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
};

// Class Tiger.TigerAnimationSetAsset
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimationSetAsset : UDataAsset {
	struct UTigerAnimationSet* Set; // 0x30(0x08)
};

// Class Tiger.TigerAnimationSetCollection
// Size: 0x40 (Inherited: 0x28)
struct UTigerAnimationSetCollection : UObject {
	struct UTigerAnimationSet* ResultSet; // 0x28(0x08)
	struct TArray<struct UTigerAnimationSet*> AnimationSets; // 0x30(0x10)

	void AddSet(struct UTigerAnimationSetAsset* Asset); // Function Tiger.TigerAnimationSetCollection.AddSet // (Final|Native|Public|BlueprintCallable) // @ game+0x13db430
};

// Class Tiger.TigerMontageList
// Size: 0x38 (Inherited: 0x28)
struct UTigerMontageList : UObject {
	struct TArray<struct UAnimMontage*> MontageList; // 0x28(0x10)

	struct UAnimMontage* GetRandomMontage(); // Function Tiger.TigerMontageList.GetRandomMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13db4c0
};

// Class Tiger.TigerCustomSequenceList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomSequenceList : UObject {
};

// Class Tiger.TigerCustomSequenceListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomSequenceListClan : UTigerCustomSequenceList {
	struct UAnimSequence* Sequences[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomSequenceListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomSequenceListGender : UTigerCustomSequenceList {
	struct UAnimSequence* Sequences[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomSequenceListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomSequenceListClanAndGender : UTigerCustomSequenceList {
	struct FTigerPlayerSequenceByClan SequencesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerCustomMontageList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomMontageList : UObject {
};

// Class Tiger.TigerCustomMontageListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomMontageListClan : UTigerCustomMontageList {
	struct UAnimMontage* Montages[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomMontageListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomMontageListGender : UTigerCustomMontageList {
	struct UAnimMontage* Montages[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomMontageListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomMontageListClanAndGender : UTigerCustomMontageList {
	struct FTigerPlayerMontageByClan MontagesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerCustomMontageListMeleeWeapon
// Size: 0x78 (Inherited: 0x28)
struct UTigerCustomMontageListMeleeWeapon : UTigerCustomMontageList {
	struct TMap<struct UTigerMeleeWeapon*, struct UAnimMontage*> Montages; // 0x28(0x50)
};

// Class Tiger.TigerCustomBlendSpaceList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomBlendSpaceList : UObject {
};

// Class Tiger.TigerCustomBlendSpaceListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListClan : UTigerCustomBlendSpaceList {
	struct UBlendSpace* BlendSpaces[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomBlendSpaceListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListGender : UTigerCustomBlendSpaceList {
	struct UBlendSpace* BlendSpaces[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomBlendSpaceListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomBlendSpaceListClanAndGender : UTigerCustomBlendSpaceList {
	struct FTigerPlayerBlendSpaceByClan BlendSpacesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerCustomBlendSpace1DList
// Size: 0x28 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DList : UObject {
};

// Class Tiger.TigerCustomBlendSpace1DListClan
// Size: 0x48 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListClan : UTigerCustomBlendSpace1DList {
	struct UBlendSpace1D* BlendSpaces[0x4]; // 0x28(0x20)
};

// Class Tiger.TigerCustomBlendSpace1DListGender
// Size: 0x38 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListGender : UTigerCustomBlendSpace1DList {
	struct UBlendSpace1D* BlendSpaces[0x2]; // 0x28(0x10)
};

// Class Tiger.TigerCustomBlendSpace1DListClanAndGender
// Size: 0x68 (Inherited: 0x28)
struct UTigerCustomBlendSpace1DListClanAndGender : UTigerCustomBlendSpace1DList {
	struct FTigerPlayerBlendSpace1DByClan BlendSpacesByClan[0x2]; // 0x28(0x40)
};

// Class Tiger.TigerAnimIKWindow
// Size: 0x78 (Inherited: 0x30)
struct UTigerAnimIKWindow : UAnimNotifyState {
	struct FName SocketName; // 0x30(0x08)
	struct FName SocketToLineTraceFrom; // 0x38(0x08)
	enum class ETigerIKDirection IKSearchDirection; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName TargetJoint; // 0x44(0x08)
	float TargetJointVerticalOffsetAmount; // 0x4c(0x04)
	float TargetJointHorizontalOffsetAmount; // 0x50(0x04)
	float TargetJointDepthOffsetAmount; // 0x54(0x04)
	float IKResultVerticalAdjustment; // 0x58(0x04)
	float IKResultHorizontalAdjustment; // 0x5c(0x04)
	float IKResultDepthAdjustment; // 0x60(0x04)
	float IKResultAlpha; // 0x64(0x04)
	bool bIKShouldRemainActiveWhenAnimationLoops; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float InOutBlendSpeed; // 0x6c(0x04)
	bool bShouldBlendInAndOut; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerFaceCurvesAnimationMap
// Size: 0xc8 (Inherited: 0x28)
struct UTigerFaceCurvesAnimationMap : UObject {
	struct TMap<struct FName, struct UAnimSequence*> CurveAnimations; // 0x28(0x50)
	struct TMap<struct FName, struct UAnimMontage*> FaceMontages; // 0x78(0x50)
};

// Class Tiger.TigerAnimInstance
// Size: 0x3c0 (Inherited: 0x2c0)
struct UTigerAnimInstance : UAnimInstance {
	enum class ETigerEquippedWeaponType EquippedWeaponType; // 0x2b8(0x01)
	bool bOwnerIsLocked; // 0x2b9(0x01)
	struct UPoseAsset* FacePoseAsset; // 0x2c0(0x08)
	struct UAnimSequence* FacePoseAnimation; // 0x2c8(0x08)
	struct UBlendSpace* BlockStanceBlendSpace; // 0x2d0(0x08)
	struct UAnimSequence* BodyModifierJointScalings; // 0x2d8(0x08)
	char pad_2E2[0x4e]; // 0x2e2(0x4e)
	struct UTigerAnimationSetAsset* DefaultAnimationSet; // 0x330(0x08)
	struct UTigerFaceCurvesAnimationMap* FaceCurvesAnimationMap; // 0x338(0x08)
	struct TArray<struct FName> AvailableFaceCurves; // 0x340(0x10)
	struct UTigerAnimationFilter* FacialAnimationFilter; // 0x350(0x08)
	struct UTigerAnimationSetCollection* AnimationSetCollection; // 0x358(0x08)
	struct UTigerAnimationSetCollection* PreviousAnimationSetCollection; // 0x360(0x08)
	struct UAnimMontage* LatestFacialAnim; // 0x368(0x08)
	struct FVector Velocity; // 0x370(0x0c)
	struct FVector PreviousVelocity; // 0x37c(0x0c)
	float Speed; // 0x388(0x04)
	float Direction; // 0x38c(0x04)
	float AimAnglePitch; // 0x390(0x04)
	float AimAngleYaw; // 0x394(0x04)
	char pad_398[0x4]; // 0x398(0x04)
	bool bIsDead; // 0x39c(0x01)
	bool bShooting; // 0x39d(0x01)
	bool bIsBlocking; // 0x39e(0x01)
	bool bIsMontagePlaying; // 0x39f(0x01)
	char pad_3A0[0x4]; // 0x3a0(0x04)
	float MaxRootYawOffset; // 0x3a4(0x04)
	float MaxAimingRootYawOffset; // 0x3a8(0x04)
	float RootYawOffset; // 0x3ac(0x04)
	float SmoothCharacterYaw; // 0x3b0(0x04)
	float CharacterYawLastTick; // 0x3b4(0x04)
	float CharacterYawChangeOverFrame; // 0x3b8(0x04)
	float CharacterDeltaYawSmooth; // 0x3bc(0x04)

	void WeaponTypeBranch(enum class ETigerEquippedWeaponType& WeaponType); // Function Tiger.TigerAnimInstance.WeaponTypeBranch // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x13df850
	void UpdateAnimNotifyIKAlphaBlendOnBones(float DeltaTime); // Function Tiger.TigerAnimInstance.UpdateAnimNotifyIKAlphaBlendOnBones // (Final|Native|Public|BlueprintCallable) // @ game+0x13df7d0
	void TurnInPlace(bool bInIsStandingOnGround); // Function Tiger.TigerAnimInstance.TurnInPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x13df740
	void OnSuccessfulMeleeHit(); // Function Tiger.TigerAnimInstance.OnSuccessfulMeleeHit // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnSettle(struct FTigerSettleEvent& SettleEvent); // Function Tiger.TigerAnimInstance.OnSettle // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnMeleeAttack(int32_t InAttackIndex); // Function Tiger.TigerAnimInstance.OnMeleeAttack // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnInitiateAnimationBlueprint(); // Function Tiger.TigerAnimInstance.OnInitiateAnimationBlueprint // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFootstep(bool bIsLeftFoot, float FootstepDuration); // Function Tiger.TigerAnimInstance.OnFootstep // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFiredWeapon(bool bInSecondaryWeaponFired); // Function Tiger.TigerAnimInstance.OnFiredWeapon // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnChangeAnimationSet(); // Function Tiger.TigerAnimInstance.OnChangeAnimationSet // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsActiveMontageRootMotion(); // Function Tiger.TigerAnimInstance.IsActiveMontageRootMotion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df640
	struct UAnimSequence* GetSequence(struct FName SequenceName); // Function Tiger.TigerAnimInstance.GetSequence // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df5a0
	struct UAnimMontage* GetRandomMontage(struct FName MontageListName); // Function Tiger.TigerAnimInstance.GetRandomMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df500
	struct UTigerRandomSequenceList* GetRandomAnimationSequenceList(struct FName SequenceListName); // Function Tiger.TigerAnimInstance.GetRandomAnimationSequenceList // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df460
	struct UTigerRandomSequenceList* GetPreviousRandomAnimationSequenceList(struct FName SequenceListName); // Function Tiger.TigerAnimInstance.GetPreviousRandomAnimationSequenceList // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df3c0
	struct UBlendSpace* GetPreviousBlendSpace(struct FName BlendSpaceName); // Function Tiger.TigerAnimInstance.GetPreviousBlendSpace // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df320
	struct UAnimMontage* GetMontage(struct FName InMontageName); // Function Tiger.TigerAnimInstance.GetMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df280
	void GetFaceAnimSlotsWithActiveCurves(struct FName& OutSlot0, struct FName& OutSlot1, struct FName& OutSlot2, struct FName& OutSlot3); // Function Tiger.TigerAnimInstance.GetFaceAnimSlotsWithActiveCurves // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13df040
	struct UAnimSequence* GetFaceAnimationForCurve(struct FName& CurveName); // Function Tiger.TigerAnimInstance.GetFaceAnimationForCurve // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13df1e0
	struct UBlendSpace1D* GetBlendSpace1D(struct FName BlendSpace1DName); // Function Tiger.TigerAnimInstance.GetBlendSpace1D // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13dee60
	struct UBlendSpace* GetBlendSpace(struct FName BlendSpaceName); // Function Tiger.TigerAnimInstance.GetBlendSpace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13def00
	struct UTigerAnimationSetAsset* GetAnimSetAssetFromWeaponClass(struct UTigerWeapon* InWeaponClass); // Function Tiger.TigerAnimInstance.GetAnimSetAssetFromWeaponClass // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool GetAnimNotifyIKDataForBone(struct FName BoneName, struct FTigerAnimNotifyIKData& IKData); // Function Tiger.TigerAnimInstance.GetAnimNotifyIKDataForBone // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ded30
	void ApplyBlendShapeScalarValues(struct TArray<struct FTigerCharacterBlendShapeScalarValue>& InBlendShapeScalarValues); // Function Tiger.TigerAnimInstance.ApplyBlendShapeScalarValues // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13dec80
	void AddSets(struct UTigerAnimationSetCollection* SetCollection); // Function Tiger.TigerAnimInstance.AddSets // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void AbortFacialAnimCallback(); // Function Tiger.TigerAnimInstance.AbortFacialAnimCallback // (Final|Native|Public) // @ game+0x13dec60
	void AbortAnimation(float BlendOutTime, struct UAnimMontage* AnimationMontage, bool bStopAllIfNullMontage); // Function Tiger.TigerAnimInstance.AbortAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x13deb40
};

// Class Tiger.TigerAnimNotiftyStateFlying
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotiftyStateFlying : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotify_AddProps
// Size: 0x50 (Inherited: 0x38)
struct UTigerAnimNotify_AddProps : UAnimNotify {
	struct ATigerPropDummy* PropDummyClass; // 0x38(0x08)
	struct TArray<struct FName> PropsToSpawn; // 0x40(0x10)
};

// Class Tiger.TigerAnimNotify_CameraAnimation
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_CameraAnimation : UAnimNotify {
	struct UCameraAnim* CameraAnimation; // 0x38(0x08)
	float AnimationRate; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_CameraShake
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_CameraShake : UAnimNotify {
	struct UMatineeCameraShake* ShakeType; // 0x38(0x08)
	float ShakeScale; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_Discipline
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Discipline : UAnimNotify {
	enum class ETigerDisciplinesEnum Discipline; // 0x38(0x01)
	enum class ETigerDisciplineEvent DisciplineEvent; // 0x39(0x01)
	char pad_3A[0x6]; // 0x3a(0x06)
};

// Class Tiger.TigerAnimNotify_DropProps
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_DropProps : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_Footstep
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Footstep : UAnimNotify {
	bool bIsLeftFoot; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float FootstepDuration; // 0x3c(0x04)

	void SetData(bool bIsLeftFootIn, float FootstepDurationIn); // Function Tiger.TigerAnimNotify_Footstep.SetData // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x13df670
};

// Class Tiger.TigerAnimNotify_Melee
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Melee : UAnimNotify {
	struct FName EventName; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_NiagaraEffect
// Size: 0x80 (Inherited: 0x38)
struct UTigerAnimNotify_NiagaraEffect : UAnimNotify {
	struct FSoftObjectPath NiagaraPath; // 0x38(0x18)
	struct UNiagaraSystem* CachedNiagaraEffect; // 0x50(0x08)
	struct FName AttachPointName; // 0x58(0x08)
	struct FVector EffectLocation; // 0x60(0x0c)
	struct FRotator EffectRotation; // 0x6c(0x0c)
	enum class EAttachLocation AttachLocationRule; // 0x78(0x01)
	bool bOnlySpawnOnLocalPlayer; // 0x79(0x01)
	char pad_7A[0x6]; // 0x7a(0x06)
};

// Class Tiger.TigerAnimNotify_ParticleEffect
// Size: 0xd0 (Inherited: 0x90)
struct UTigerAnimNotify_ParticleEffect : UAnimNotify_PlayParticleEffect {
	struct UParticleSystem* IndoorPSTemplate; // 0x90(0x08)
	struct UParticleSystem* OutdoorPSTemplate; // 0x98(0x08)
	enum class ETigerPlayOnClients PlayOnClients; // 0xa0(0x01)
	char pad_A1[0x1f]; // 0xa1(0x1f)
	struct UTigerParticleStrategyChooseSystem* ChooseParticleSystemOverride; // 0xc0(0x08)
	struct UTigerParticleStrategyPostSpawn* ParticlePostSpawnModification; // 0xc8(0x08)
};

// Class Tiger.TigerAnimNotify_PlayCharEffect
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_PlayCharEffect : UAnimNotify {
	struct UTigerCharacterEffect* Effect; // 0x38(0x08)
	struct FName SocketToUse; // 0x40(0x08)
};

// Class Tiger.TigerAnimNotify_PlayVoEvent
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_PlayVoEvent : UAnimNotify {
	struct FTigerNpcVoCategory VoCategory; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_PrimeWeapon
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_PrimeWeapon : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_Ragdoll
// Size: 0x48 (Inherited: 0x38)
struct UTigerAnimNotify_Ragdoll : UAnimNotify {
	struct FName RagdollOnlyBelowBone; // 0x38(0x08)
	bool bIncludeNamedBone; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float VelocityScale; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotify_Recklessness
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_Recklessness : UAnimNotify {
	bool bActivate; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerAnimNotify_ReloadSlot
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadSlot : UAnimNotify {
};

// Class Tiger.TigerAnimNotify_ReloadComplete
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadComplete : UTigerAnimNotify_ReloadSlot {
};

// Class Tiger.TigerAnimNotify_ReloadFull
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadFull : UTigerAnimNotify_ReloadSlot {
};

// Class Tiger.TigerAnimNotify_ReloadSingle
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_ReloadSingle : UTigerAnimNotify_ReloadSlot {
};

// Class Tiger.TigerAnimNotify_SetCapContext
// Size: 0x40 (Inherited: 0x38)
struct UTigerAnimNotify_SetCapContext : UAnimNotify {
	struct FName ContextName; // 0x38(0x08)
};

// Class Tiger.TigerAnimNotify_SpawnMesh
// Size: 0x70 (Inherited: 0x38)
struct UTigerAnimNotify_SpawnMesh : UAnimNotify {
	struct UStaticMesh* MeshToSpawn; // 0x38(0x08)
	struct FName SocketToSpawnFrom; // 0x40(0x08)
	struct FVector Direction[0x2]; // 0x48(0x18)
	float Speed[0x2]; // 0x60(0x08)
	float RandomAngularImpulseStrength; // 0x68(0x04)
	bool bShowInEditor; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
};

// Class Tiger.TigerAnimNotify_TriggerUpdateWpnAppearance
// Size: 0x38 (Inherited: 0x38)
struct UTigerAnimNotify_TriggerUpdateWpnAppearance : UAnimNotify {
};

// Class Tiger.TigerAnimNotifyState_AbortAnimationOnInput
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_AbortAnimationOnInput : UAnimNotifyState {
	float BlendOutTime; // 0x30(0x04)
	bool bShouldAbortOnMovement; // 0x34(0x01)
	bool bShouldAbortOnHeldBlock; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
};

// Class Tiger.TigerAnimNotifyState_CameraPresetOverride
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_CameraPresetOverride : UAnimNotifyState {
	struct UTigerCameraPreset* CameraPreset; // 0x30(0x08)
};

// Class Tiger.TigerAnimNotifyState_CancelReactionIfThreatened
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_CancelReactionIfThreatened : UAnimNotifyState {
	enum class ETigerAIAnimationMode StateToCancelFor; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)

	void OnReactionCanceled(struct ATigerNPC* NPC); // Function Tiger.TigerAnimNotifyState_CancelReactionIfThreatened.OnReactionCanceled // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerAnimNotifyState_DamageImmunity
// Size: 0x40 (Inherited: 0x30)
struct UTigerAnimNotifyState_DamageImmunity : UAnimNotifyState {
	struct TArray<struct UDamageType*> ImmunityTo; // 0x30(0x10)
};

// Class Tiger.TigerAnimNotifyState_EnableTurnStart
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_EnableTurnStart : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_EnableWeaponHitbox
// Size: 0x50 (Inherited: 0x30)
struct UTigerAnimNotifyState_EnableWeaponHitbox : UAnimNotifyState {
	char pad_30[0x10]; // 0x30(0x10)
	struct UCurveFloat* pitchOffsetCurve; // 0x40(0x08)
	int32_t WeaponIndex; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class Tiger.TigerAnimNotifyState_FaceCameraDirection
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_FaceCameraDirection : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_HeavyAttackRange
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_HeavyAttackRange : UAnimNotifyState {

	void OnChargeUpEnded(struct ATigerPlayer* Player, struct UTigerMeleeWeapon* EquippedWeapon, float ChargeUpRatio); // Function Tiger.TigerAnimNotifyState_HeavyAttackRange.OnChargeUpEnded // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
	struct UTigerMeleeWeapon* GetEquippedWeapon(struct USkeletalMeshComponent* MeshComp); // Function Tiger.TigerAnimNotifyState_HeavyAttackRange.GetEquippedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13defa0
};

// Class Tiger.TigerAnimNotifyState_HideWeapon
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_HideWeapon : UAnimNotifyState {
	enum class ETigerTriggerUpdateWpnAppearance WeaponAppearanceUpdate; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerAnimNotifyState_Invulnerability
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_Invulnerability : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_LockOwner
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_LockOwner : UAnimNotifyState {
	bool bStopActiveMovement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerAnimNotifyState_MeleeRecoveryEnableMove
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_MeleeRecoveryEnableMove : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_OverrideCanInteractInDodge
// Size: 0x38 (Inherited: 0x30)
struct UTigerAnimNotifyState_OverrideCanInteractInDodge : UAnimNotifyState {
	struct UTigerMeleeWeapon* RequiredWeapon; // 0x30(0x08)
};

// Class Tiger.TigerAnimNotifyState_RangedHitAnimInterruptRange
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_RangedHitAnimInterruptRange : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_ResetCloth
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_ResetCloth : UAnimNotifyState {
};

// Class Tiger.TigerAnimNotifyState_TimedIndoorOutDoorParticleEffect
// Size: 0x78 (Inherited: 0x30)
struct UTigerAnimNotifyState_TimedIndoorOutDoorParticleEffect : UAnimNotifyState {
	struct UParticleSystem* IndoorPSTemplate; // 0x30(0x08)
	struct UParticleSystem* OutdoorPSTemplate; // 0x38(0x08)
	enum class ETigerPlayOnClients PlayOnClients; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName SocketName; // 0x44(0x08)
	struct FVector LocationOffset; // 0x4c(0x0c)
	struct FRotator RotationOffset; // 0x58(0x0c)
	bool bDestroyAtEnd; // 0x64(0x01)
	char pad_65[0x3]; // 0x65(0x03)
	struct UTigerParticleStrategyChooseSystem* ChooseParticleSystemOverride; // 0x68(0x08)
	struct UTigerParticleStrategyPostSpawn* ParticlePostSpawnModification; // 0x70(0x08)
};

// Class Tiger.TigerAnimNotifyState_WallGrindFX
// Size: 0x40 (Inherited: 0x30)
struct UTigerAnimNotifyState_WallGrindFX : UAnimNotifyState {
	struct TArray<struct FName> SocketsToUse; // 0x30(0x10)
};

// Class Tiger.TigerAnimNotifyState_WeaponGlow
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyState_WeaponGlow : UAnimNotifyState {

	void OnWeaponGlowEnd(struct USkeletalMeshComponent* WeaponMeshComponent, struct UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig); // Function Tiger.TigerAnimNotifyState_WeaponGlow.OnWeaponGlowEnd // (Event|Protected|BlueprintEvent|Const) // @ game+0x18b4070
	void OnWeaponGlowBegin(struct USkeletalMeshComponent* WeaponMeshComponent, struct UTigerMeleeWeaponTrailConfig* WeaponEffectsConfig); // Function Tiger.TigerAnimNotifyState_WeaponGlow.OnWeaponGlowBegin // (Event|Protected|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerAnimNotifyStateAttachMesh
// Size: 0x48 (Inherited: 0x30)
struct UTigerAnimNotifyStateAttachMesh : UAnimNotifyState {
	struct UStaticMesh* MeshToSpawn; // 0x30(0x08)
	struct FName SocketName; // 0x38(0x08)
	bool bShowInEditor; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float PropTimeout; // 0x44(0x04)
};

// Class Tiger.TigerAnimNotifyStateJdgSword
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnimNotifyStateJdgSword : UAnimNotifyState {
};

// Class Tiger.TigerANS_DeltaCorrectionWindow
// Size: 0x30 (Inherited: 0x30)
struct UTigerANS_DeltaCorrectionWindow : UAnimNotifyState {
};

// Class Tiger.TigerAnsSidewaysClimbBlocker
// Size: 0x30 (Inherited: 0x30)
struct UTigerAnsSidewaysClimbBlocker : UAnimNotifyState {
};

// Class Tiger.TigerApartmentArchetype
// Size: 0x250 (Inherited: 0x228)
struct ATigerApartmentArchetype : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USceneComponent* Min; // 0x230(0x08)
	struct USceneComponent* Max; // 0x238(0x08)
	struct TArray<struct UMaterialInterface*> PossibleWallpapers; // 0x240(0x10)
};

// Class Tiger.TigerApartmentLight
// Size: 0x228 (Inherited: 0x228)
struct ATigerApartmentLight : AActor {
};

// Class Tiger.TigerWidget
// Size: 0x280 (Inherited: 0x260)
struct UTigerWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)
	struct UTigerTooltipWidget* TigerTooltipWidget; // 0x268(0x08)
	struct TArray<struct FTigerTooltipAction> TooltipActions; // 0x270(0x10)

	void UpdateScrollOffsetFromGamepadInput(struct UScrollBox* ScrollBox); // Function Tiger.TigerWidget.UpdateScrollOffsetFromGamepadInput // (Final|Native|Public|BlueprintCallable) // @ game+0x15664f0
	bool ShouldIgnoreVisibilityChanges(); // Function Tiger.TigerWidget.ShouldIgnoreVisibilityChanges // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x15664c0
	struct UTigerTooltipWidget* ReuseOrCreateNewTooltipWidget(struct UTigerTooltipWidget* InTooltipClass); // Function Tiger.TigerWidget.ReuseOrCreateNewTooltipWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1566420
	void RemoveTooltipInputListeners(); // Function Tiger.TigerWidget.RemoveTooltipInputListeners // (Final|Native|Public|BlueprintCallable) // @ game+0x1566400
	void PostAkEvent(struct UAkAudioEvent* AudioEvent); // Function Tiger.TigerWidget.PostAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x15662e0
	void OnPlayerStateReceived(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerWidget.OnPlayerStateReceived // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsSharkmobAccountLoginsEnabled(); // Function Tiger.TigerWidget.IsSharkmobAccountLoginsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1566260
	void IncrementCollapseVisibility(); // Function Tiger.TigerWidget.IncrementCollapseVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x1566240
	struct ATigerPlayer* GetViewTargetTigerPlayer(); // Function Tiger.TigerWidget.GetViewTargetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565e90
	struct ATigerSpectatorPawn* GetTigerSpectator(); // Function Tiger.TigerWidget.GetTigerSpectator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565e60
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerWidget.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565e30
	struct ATigerPlayerController* GetTigerPlayerController(); // Function Tiger.TigerWidget.GetTigerPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565e00
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerWidget.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565dd0
	struct UTigerPersistentPlayerState* GetTigerPersistentPlayerState(); // Function Tiger.TigerWidget.GetTigerPersistentPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565da0
	struct ATigerMatchHUD* GetTigerMatchHUD(); // Function Tiger.TigerWidget.GetTigerMatchHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565d70
	struct ATigerMatchGameState* GetTigerMatchGameState(); // Function Tiger.TigerWidget.GetTigerMatchGameState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565d40
	struct ATigerElysiumHUD* GetTigerElysiumHUD(); // Function Tiger.TigerWidget.GetTigerElysiumHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565d10
	struct ATigerHUD* GetTigerBaseHUD(); // Function Tiger.TigerWidget.GetTigerBaseHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565ce0
	struct ATigerPlayer* GetSpectatedTigerPlayer(); // Function Tiger.TigerWidget.GetSpectatedTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565cb0
	float GetScrollOffsetFromGamepadInput(); // Function Tiger.TigerWidget.GetScrollOffsetFromGamepadInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565c80
	struct UWidget* GetRootWidget(); // Function Tiger.TigerWidget.GetRootWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565c50
	struct UTigerPartyManager* GetPartyManager(); // Function Tiger.TigerWidget.GetPartyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1565b40
	void DecrementCollapseVisibility(); // Function Tiger.TigerWidget.DecrementCollapseVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x1565a80
	struct UTigerTooltipWidget* ConstructTooltipWidget(); // Function Tiger.TigerWidget.ConstructTooltipWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void CallReleasedForAction(struct FName& InputAction); // Function Tiger.TigerWidget.CallReleasedForAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1565950
	void CallPressedForAction(struct FName& InputAction); // Function Tiger.TigerWidget.CallPressedForAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15658c0
	void AddTooltipInputListeners(); // Function Tiger.TigerWidget.AddTooltipInputListeners // (Final|Native|Public|BlueprintCallable) // @ game+0x1565810
	void AddTooltipAction(struct FTigerTooltipAction& NewTooltipAction, struct FDelegate& OnPressed, struct FDelegate& OnReleased); // Function Tiger.TigerWidget.AddTooltipAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1565630
};

// Class Tiger.TigerArchetypeLevelWidget
// Size: 0x290 (Inherited: 0x280)
struct UTigerArchetypeLevelWidget : UTigerWidget {
	int32_t ArchetypeLevel; // 0x280(0x04)
	struct TWeakObjectPtr<struct ATigerPlayer> RepresentedPlayer; // 0x284(0x08)
	char pad_28C[0x4]; // 0x28c(0x04)

	void UpdateArchetypeLevel(); // Function Tiger.TigerArchetypeLevelWidget.UpdateArchetypeLevel // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnSelectedPerksUpdated(); // Function Tiger.TigerArchetypeLevelWidget.OnSelectedPerksUpdated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeLevelWidget.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x13e3fa0
	void OnArchetypeChanged(struct UTigerPlayerClanData* InClanData, struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeLevelWidget.OnArchetypeChanged // (Final|Native|Protected) // @ game+0x13e3a30
	void Init(struct ATigerPlayer* InRepresentedPlayer); // Function Tiger.TigerArchetypeLevelWidget.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x13e39a0
};

// Class Tiger.TigerArchetypeRewardData
// Size: 0xc0 (Inherited: 0x30)
struct UTigerArchetypeRewardData : UDataAsset {
	struct FTigerArchetype Archetypes[0x9]; // 0x30(0x90)

	struct TArray<struct FTigerItemId> GetRewardsInLevelRange(enum class ETigerPowerKitType InType, int32_t InLowerLevel, int32_t InUpperLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardsInLevelRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3790
	struct TArray<struct FTigerItemId> GetRewardsBeforeLevel(enum class ETigerPowerKitType InType, int32_t InLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardsBeforeLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3680
	struct TArray<struct FTigerItemId> GetRewardsAfterLevel(enum class ETigerPowerKitType InType, int32_t InLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardsAfterLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3570
	struct TArray<struct FTigerItemId> GetRewards(enum class ETigerPowerKitType InType); // Function Tiger.TigerArchetypeRewardData.GetRewards // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3490
	struct FTigerItemId GetRewardForLevel(enum class ETigerPowerKitType InType, int32_t InLevel); // Function Tiger.TigerArchetypeRewardData.GetRewardForLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e33b0
	bool GetNextLevelReward(enum class ETigerPowerKitType InType, int32_t InLevel, struct FTigerArchetypeReward& OutArchetypeReward); // Function Tiger.TigerArchetypeRewardData.GetNextLevelReward // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3280
	struct TArray<struct FTigerArchetypeReward> GetLevelRewards(enum class ETigerPowerKitType InType); // Function Tiger.TigerArchetypeRewardData.GetLevelRewards // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e31a0
	void GetFirstAndLastRewardLevels(enum class ETigerPowerKitType InType, int32_t& OutFirstRewardLevel, int32_t& OutLastRewardLevel); // Function Tiger.TigerArchetypeRewardData.GetFirstAndLastRewardLevels // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3080
	int32_t FindRewardUnlockLevel(enum class ETigerPowerKitType InType, struct UTigerInventoryItemBase* InRewardItem); // Function Tiger.TigerArchetypeRewardData.FindRewardUnlockLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e2f70
};

// Class Tiger.TigerMenuWidget
// Size: 0x298 (Inherited: 0x280)
struct UTigerMenuWidget : UTigerWidget {
	struct UTigerSharedMouseCursor* SharedMouseCursor; // 0x280(0x08)
	bool bStopPlayerInteractionsOnOpen; // 0x288(0x01)
	bool bShouldShowMouseCursorOnOpenWithGamepad; // 0x289(0x01)
	char pad_28A[0x1]; // 0x28a(0x01)
	bool bShouldCloseOtherMenusOnOpen; // 0x28b(0x01)
	char pad_28C[0x2]; // 0x28c(0x02)
	bool bShouldThrottleFrameRate; // 0x28e(0x01)
	char pad_28F[0x9]; // 0x28f(0x09)

	bool TryMakeDateTime(int32_t InYear, int32_t InMonth, int32_t InDay, struct FDateTime& OutDateTime); // Function Tiger.TigerMenuWidget.TryMakeDateTime // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14a38d0
	void Open(); // Function Tiger.TigerMenuWidget.Open // (Native|Public|BlueprintCallable) // @ game+0x14a37b0
	void OnPersistentPlayerStateInitialized(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerMenuWidget.OnPersistentPlayerStateInitialized // (Native|Event|Protected|BlueprintEvent) // @ game+0x1436060
	void OnPersistentPlayerInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerMenuWidget.OnPersistentPlayerInitialized // (Final|Native|Protected) // @ game+0x14a3690
	void OnOpen(); // Function Tiger.TigerMenuWidget.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnClose(); // Function Tiger.TigerMenuWidget.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsOpen(); // Function Tiger.TigerMenuWidget.IsOpen // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a3600
	void Close(); // Function Tiger.TigerMenuWidget.Close // (Native|Public|BlueprintCallable) // @ game+0x1435fb0
};

// Class Tiger.TigerIngameSubmenuWidget
// Size: 0x2c0 (Inherited: 0x298)
struct UTigerIngameSubmenuWidget : UTigerMenuWidget {
	struct FText MenuName; // 0x298(0x18)
	struct UTigerIngameMenuWidget* MenuContainer; // 0x2b0(0x08)
	bool InGameMenuEnabled; // 0x2b8(0x01)
	enum class ETigerNewNotificationMenuOptions NewNotificationMenuOption; // 0x2b9(0x01)
	char pad_2BA[0x6]; // 0x2ba(0x06)

	void UnregisterSharedInputs(); // Function Tiger.TigerIngameSubmenuWidget.UnregisterSharedInputs // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void RegisterSharedInputs(); // Function Tiger.TigerIngameSubmenuWidget.RegisterSharedInputs // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	bool GetIsTransitioning(); // Function Tiger.TigerIngameSubmenuWidget.GetIsTransitioning // (Final|Native|Public) // @ game+0x146ee70
};

// Class Tiger.TigerSceneBackgroundUI
// Size: 0x3c0 (Inherited: 0x2c0)
struct UTigerSceneBackgroundUI : UTigerIngameSubmenuWidget {
	struct TSoftObjectPtr<UWorld> DefaultSubLevel; // 0x2c0(0x28)
	char pad_2E8[0x8]; // 0x2e8(0x08)
	struct UTigerSubLevelList* SubLevelList; // 0x2f0(0x08)
	struct FName DefaultCameraTag; // 0x2f8(0x08)
	struct FName SpawnLocationTag; // 0x300(0x08)
	struct FViewTargetTransitionParams CameraTransitionParams; // 0x308(0x10)
	struct TSoftObjectPtr<UTigerItemPreviewAsset> ItemPreviews; // 0x318(0x28)
	struct FName ItemParentTag; // 0x340(0x08)
	struct ATigerSingleChildActor* ItemParentActor; // 0x348(0x08)
	struct TSoftClassPtr<UObject> CurrentPreviewItem; // 0x350(0x28)
	struct TArray<struct ACineCameraActor*> CinematicCameras; // 0x378(0x10)
	char pad_388[0x20]; // 0x388(0x20)
	struct FMulticastInlineDelegate OnBackgroundShown; // 0x3a8(0x10)
	char pad_3B8[0x8]; // 0x3b8(0x08)

	bool TransitionToCameraWithTag(struct FName& CameraTag, bool bUseCameraTransition); // Function Tiger.TigerSceneBackgroundUI.TransitionToCameraWithTag // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1517770
	void ShowDefaultBackgroundScene(); // Function Tiger.TigerSceneBackgroundUI.ShowDefaultBackgroundScene // (Final|Native|Protected|BlueprintCallable) // @ game+0x15176a0
	void ShowBackgroundScene(int32_t InSubLevelIndex); // Function Tiger.TigerSceneBackgroundUI.ShowBackgroundScene // (Final|Native|Protected|BlueprintCallable) // @ game+0x1517610
	void RetryPreviewItem(); // Function Tiger.TigerSceneBackgroundUI.RetryPreviewItem // (Final|Native|Protected) // @ game+0x15175f0
	void PreviewReward(struct FTigerItemId ItemId); // Function Tiger.TigerSceneBackgroundUI.PreviewReward // (Final|Native|Protected|BlueprintCallable) // @ game+0x1517560
	void PreviewItem(struct TSoftClassPtr<UObject>& InItemClassPath); // Function Tiger.TigerSceneBackgroundUI.PreviewItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x15174a0
	void OnPreviewItemUpdated(struct UTigerInventoryItemBase* InPreviewItem, struct ATigerBattlepassRewardPreview* InPreviewActor, struct UTigerInventoryItemBase* InCombinedItemParent); // Function Tiger.TigerSceneBackgroundUI.OnPreviewItemUpdated // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnPreviewItemOpened(); // Function Tiger.TigerSceneBackgroundUI.OnPreviewItemOpened // (Final|Native|Protected|BlueprintCallable) // @ game+0x15173f0
	void OnBackgroundSceneShownNative(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneShownNative // (Native|Protected) // @ game+0x1435f90
	void OnBackgroundSceneShown(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneShown // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnBackgroundSceneLoadedNative(); // Function Tiger.TigerSceneBackgroundUI.OnBackgroundSceneLoadedNative // (Final|Native|Protected) // @ game+0x15173d0
	void HidePreviewItem(); // Function Tiger.TigerSceneBackgroundUI.HidePreviewItem // (Final|Native|Protected|BlueprintCallable) // @ game+0x15173b0
	struct TArray<struct AActor*> GetCurrentPaperDollArray(struct FName InBattlePassSubLevelName); // Function Tiger.TigerSceneBackgroundUI.GetCurrentPaperDollArray // (Final|Native|Protected|BlueprintCallable) // @ game+0x1517280
};

// Class Tiger.TigerArchetypeSelectElysiumUI
// Size: 0x3e0 (Inherited: 0x3c0)
struct UTigerArchetypeSelectElysiumUI : UTigerSceneBackgroundUI {
	struct TArray<struct FTigerPersistentPlayerCharacter> PlayerCharacters; // 0x3c0(0x10)
	struct FTigerItemId AdditionalCharacterSlotItem; // 0x3d0(0x08)
	char NumCharacterSlots; // 0x3d8(0x01)
	char pad_3D9[0x7]; // 0x3d9(0x07)

	void SelectCharacter(struct FTigerPersistentCharacterID InCharacterId); // Function Tiger.TigerArchetypeSelectElysiumUI.SelectCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e40e0
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeSelectElysiumUI.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x13e4030
	void OnPlayerInventoryChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerArchetypeSelectElysiumUI.OnPlayerInventoryChanged // (Final|Native|Protected) // @ game+0x13e3f10
	void OnGotPlayerCharacters(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectElysiumUI.OnGotPlayerCharacters // (Final|Native|Protected|HasOutParms) // @ game+0x13e3c50
	void OnBuyCharacterSlotServerResponse(bool bInSuccess, struct FTigerItemId& InItemId, struct FString InErrorMessage); // Function Tiger.TigerArchetypeSelectElysiumUI.OnBuyCharacterSlotServerResponse // (Final|Native|Protected|HasOutParms) // @ game+0x13e3b00
	void OnBuyCharacterSlotResults(bool bInSuccess, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectElysiumUI.OnBuyCharacterSlotResults // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnArchetypeChanged(struct UTigerPowerKit* InArchetypeData, struct TArray<int32_t>& InPlayerArchetypeCharacterIndices); // Function Tiger.TigerArchetypeSelectElysiumUI.OnArchetypeChanged // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	struct FTigerItemIdWithPrice GetAdditionalSlotPrice(); // Function Tiger.TigerArchetypeSelectElysiumUI.GetAdditionalSlotPrice // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e3040
	void CreateNewCharacter(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectElysiumUI.CreateNewCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e2e10
	void ChangeArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectElysiumUI.ChangeArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e2d80
	void BuyAdditionalCharacterSlot(); // Function Tiger.TigerArchetypeSelectElysiumUI.BuyAdditionalCharacterSlot // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e2d60
};

// Class Tiger.TigerArchetypeSelectPragueUI
// Size: 0x310 (Inherited: 0x298)
struct UTigerArchetypeSelectPragueUI : UTigerMenuWidget {
	int32_t GroupSize; // 0x298(0x04)
	int32_t PreGameStateEndTime; // 0x29c(0x04)
	struct FString PreHighlightTag; // 0x2a0(0x10)
	struct FName CameraLevelName; // 0x2b0(0x08)
	float TimeLeftUntilStateChange; // 0x2b8(0x04)
	enum class ETigerArchetypeSelectUiState UiState; // 0x2bc(0x01)
	char pad_2BD[0x3]; // 0x2bd(0x03)
	struct TArray<struct FTigerPersistentPlayerCharacter> PlayerCharacters; // 0x2c0(0x10)
	enum class ETigerPowerKitType SelectedArchetypeType; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComp; // 0x2d8(0x08)
	char pad_2E0[0x30]; // 0x2e0(0x30)

	void SelectCharacterForArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerArchetypeSelectPragueUI.SelectCharacterForArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e4160
	void RevertLODBias(); // Function Tiger.TigerArchetypeSelectPragueUI.RevertLODBias // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e40c0
	void OnUiStateChanged(enum class ETigerArchetypeSelectUiState InPreviousUiState); // Function Tiger.TigerArchetypeSelectPragueUI.OnUiStateChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPlayerCharactersReceived(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // Function Tiger.TigerArchetypeSelectPragueUI.OnPlayerCharactersReceived // (Final|Native|Protected|HasOutParms) // @ game+0x13e3db0
	void OnPlayerChangedSelection(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerArchetypeSelectPragueUI.OnPlayerChangedSelection // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnGroupMembersChanged(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*>& InPreviousGroupMembers); // Function Tiger.TigerArchetypeSelectPragueUI.OnGroupMembersChanged // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnBackgroundLevelLoaded(); // Function Tiger.TigerArchetypeSelectPragueUI.OnBackgroundLevelLoaded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnArchetypeSelectionLocked(struct ATigerPlayerState* InPlayerState, enum class ETigerPowerKitType InArchetype); // Function Tiger.TigerArchetypeSelectPragueUI.OnArchetypeSelectionLocked // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void HandleLevelVisibilityChanged(); // Function Tiger.TigerArchetypeSelectPragueUI.HandleLevelVisibilityChanged // (Final|Native|Protected) // @ game+0x13e3980
	float GetSecondsLeftUntilPlayerSelection(enum class ETigerArchetypeSelectUiState InPlayerUiState); // Function Tiger.TigerArchetypeSelectPragueUI.GetSecondsLeftUntilPlayerSelection // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e38f0
	void EnablePaperDollHighlight(struct ATigerPaperDoll* InPaperDoll, bool bInEnable); // Function Tiger.TigerArchetypeSelectPragueUI.EnablePaperDollHighlight // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e2ea0
};

// Class Tiger.TigerBuffInstance
// Size: 0x88 (Inherited: 0x28)
struct UTigerBuffInstance : UObject {
	struct FTigerBuffReplicatedInstanceData BuffReplicatedInstanceData; // 0x28(0x20)
	struct TWeakObjectPtr<struct ATigerCharacter> OwnerCharacter; // 0x48(0x08)
	struct UTigerBuff* Buff; // 0x50(0x08)
	char pad_58[0x10]; // 0x58(0x10)
	struct UParticleSystemComponent* ActiveBuffParticles; // 0x68(0x08)
	struct UNiagaraComponent* ActiveNiagaraParticles; // 0x70(0x08)
	struct TArray<struct UNiagaraComponent*> AdditionalActiveNiagaraParticles; // 0x78(0x10)

	struct ATigerCharacter* GetOwningCharacter(); // Function Tiger.TigerBuffInstance.GetOwningCharacter // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec5e0
	struct UNiagaraComponent* GetActiveNiagaraParticles(); // Function Tiger.TigerBuffInstance.GetActiveNiagaraParticles // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec500
	struct UParticleSystemComponent* GetActiveBuffParticles(); // Function Tiger.TigerBuffInstance.GetActiveBuffParticles // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec4e0
};

// Class Tiger.TigerAreaBuffInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerAreaBuffInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerAreaBuff
// Size: 0x268 (Inherited: 0x268)
struct UTigerAreaBuff : UTigerBuff {
};

// Class Tiger.TigerAreaEffect
// Size: 0x4f0 (Inherited: 0x228)
struct ATigerAreaEffect : AActor {
	struct UParticleSystem* StartParticleType; // 0x228(0x08)
	struct UParticleSystem* LoopedParticleType; // 0x230(0x08)
	struct UParticleSystem* EndParticleType; // 0x238(0x08)
	struct UDamageType* DamageType; // 0x240(0x08)
	enum class ETigerDamageCauser DamageCauserType; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct FRuntimeFloatCurve TimeDamageModifierCurve; // 0x250(0x88)
	struct FRuntimeFloatCurve RangeDamageModifierCurve; // 0x2d8(0x88)
	struct FRuntimeFloatCurve TimeHealingModifierCurve; // 0x360(0x88)
	struct FRuntimeFloatCurve RangeHealingModifierCurve; // 0x3e8(0x88)
	struct USphereComponent* CollisionSphere; // 0x470(0x08)
	float Range; // 0x478(0x04)
	char pad_47C[0x4]; // 0x47c(0x04)
	struct UTigerBuff* DamageBuff; // 0x480(0x08)
	float InitialDamageAmount; // 0x488(0x04)
	float DamageAmount; // 0x48c(0x04)
	struct UTigerBuff* HealBuff; // 0x490(0x08)
	float InitialHealAmount; // 0x498(0x04)
	float HealAmount; // 0x49c(0x04)
	float TickRate; // 0x4a0(0x04)
	float Duration; // 0x4a4(0x04)
	float Delay; // 0x4a8(0x04)
	bool bShouldAffectCivilians; // 0x4ac(0x01)
	bool bSkipLineTrace; // 0x4ad(0x01)
	char pad_4AE[0x2]; // 0x4ae(0x02)
	struct UParticleSystemComponent* LoopedParticleComponent; // 0x4b0(0x08)
	char pad_4B8[0x20]; // 0x4b8(0x20)
	struct FTigerDamageContext DamageContext; // 0x4d8(0x18)

	void Trigger(); // Function Tiger.TigerAreaEffect.Trigger // (Final|Native|Public) // @ game+0x13e41f0
	void OnVehicleHit(struct AActor* InActor); // Function Tiger.TigerAreaEffect.OnVehicleHit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnTriggerClient(); // Function Tiger.TigerAreaEffect.OnTriggerClient // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerArena
// Size: 0x28 (Inherited: 0x28)
struct UTigerArena : UObject {
};

// Class Tiger.TigerSimpleTextPrompt
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerSimpleTextPrompt : UTigerWidget {
	struct FText DisplayText; // 0x280(0x18)
	float PromptLifetimeFailsafe; // 0x298(0x04)
	bool bIsVisible; // 0x29c(0x01)
	char pad_29D[0xb]; // 0x29d(0x0b)

	void SetText(struct FText Text); // Function Tiger.TigerSimpleTextPrompt.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x15207d0
	void OnShowPrompt(); // Function Tiger.TigerSimpleTextPrompt.OnShowPrompt // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnHidePrompt(); // Function Tiger.TigerSimpleTextPrompt.OnHidePrompt // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Hide(); // Function Tiger.TigerSimpleTextPrompt.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x1520150
	void FailsafeHide(); // Function Tiger.TigerSimpleTextPrompt.FailsafeHide // (Final|Native|Private) // @ game+0x1520050
	bool CanBeShown(); // Function Tiger.TigerSimpleTextPrompt.CanBeShown // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x151ff40
};

// Class Tiger.TigerArtifactPickedupPrompt
// Size: 0x2b0 (Inherited: 0x2a8)
struct UTigerArtifactPickedupPrompt : UTigerSimpleTextPrompt {
	struct UTigerArtifactAsset* ArtifactAsset; // 0x2a8(0x08)

	void OnArtifactAssetSet(struct UTigerArtifactAsset* InArtifactAsset); // Function Tiger.TigerArtifactPickedupPrompt.OnArtifactAssetSet // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerAssistPromptUi
// Size: 0x380 (Inherited: 0x2a8)
struct UTigerAssistPromptUi : UTigerSimpleTextPrompt {
	struct FTigerPlayerStateGameData PlayerStateData; // 0x2a8(0xd0)
	int32_t ExperienceGained; // 0x378(0x04)
	char pad_37C[0x4]; // 0x37c(0x04)
};

// Class Tiger.TigerAsyncChooseNextWaypoint
// Size: 0xf8 (Inherited: 0x70)
struct UTigerAsyncChooseNextWaypoint : UBTTaskNode {
	struct FBlackboardKeySelector Index; // 0x70(0x28)
	struct FBlackboardKeySelector Waypoint; // 0x98(0x28)
	struct FBlackboardKeySelector bWaypointDirectionIsForward; // 0xc0(0x28)
	char pad_E8[0x10]; // 0xe8(0x10)
};

// Class Tiger.TigerAudioVisualizationSpawnerComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerAudioVisualizationSpawnerComponent : UActorComponent {
	struct UParticleSystem* ParticleSystemToSpawn; // 0xb0(0x08)
	int32_t MaxSimultaneousVisualizations; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct TArray<struct FTigerHeightenedSensesAudioVisualization> ActiveVisualizations; // 0xc0(0x10)
	char pad_D0[0x8]; // 0xd0(0x08)

	void VisualizeAudioEvent(struct FVector InLocation, bool InShowOnlyInHeightenedSenses); // Function Tiger.TigerAudioVisualizationSpawnerComponent.VisualizeAudioEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x13e80e0
};

// Class Tiger.TigerAuthenticationManager
// Size: 0x198 (Inherited: 0x38)
struct UTigerAuthenticationManager : UTigerAuthenticationManagerBase {
	char pad_38[0x38]; // 0x38(0x38)
	bool bEnableSharkmobAccountLogin; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct UTigerGameInstance* GameInstance; // 0x78(0x08)
	char pad_80[0x118]; // 0x80(0x118)

	bool IsSharkmobAccountLoginsEnabled(); // Function Tiger.TigerAuthenticationManager.IsSharkmobAccountLoginsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7b70
	struct FString GetUserLocation(); // Function Tiger.TigerAuthenticationManager.GetUserLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7af0
	enum class EShAccountChannel GetAuthenticatedChannel(); // Function Tiger.TigerAuthenticationManager.GetAuthenticatedChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e77b0
};

// Class Tiger.TigerAutoScrollBox
// Size: 0x8a0 (Inherited: 0x880)
struct UTigerAutoScrollBox : UScrollBox {
	char pad_880[0x8]; // 0x880(0x08)
	bool ResetScrollOnEnd; // 0x888(0x01)
	char pad_889[0x3]; // 0x889(0x03)
	float ScrollSpeed; // 0x88c(0x04)
	float WaitDurationBeforeScroll; // 0x890(0x04)
	float WaitDurationAfterScroll; // 0x894(0x04)
	char pad_898[0x8]; // 0x898(0x08)
};

// Class Tiger.TigerBalconyVolumeDefaultValues
// Size: 0x40 (Inherited: 0x30)
struct UTigerBalconyVolumeDefaultValues : UDataAsset {
	struct TArray<struct FTigerBuildingSystemBalconyVolumeDefaults> DefaultBalconyVolumeSets; // 0x30(0x10)
};

// Class Tiger.TigerNPCFacePoseMap
// Size: 0x38 (Inherited: 0x28)
struct UTigerNPCFacePoseMap : UObject {
	struct TArray<struct FTigerFacePoseData> HeadMeshsPoseAssets; // 0x28(0x10)
};

// Class Tiger.TigerCharacter
// Size: 0x860 (Inherited: 0x4c0)
struct ATigerCharacter : ACharacter {
	struct UTigerCharacterMeshManager* MeshManager; // 0x4c0(0x08)
	struct UTigerRangedWeaponComponent* RangedWeaponComponent; // 0x4c8(0x08)
	struct UTigerMeleeWeaponComponent* MeleeWeaponComponent; // 0x4d0(0x08)
	struct UTigerCombatComponent* CombatComponent; // 0x4d8(0x08)
	struct UTigerFeedingComponent* FeedingComponent; // 0x4e0(0x08)
	struct UTigerBuffComponent* BuffComponent; // 0x4e8(0x08)
	struct UTigerOutlineComponent* OutlineComponent; // 0x4f0(0x08)
	struct UAkComponent* AudioComponent; // 0x4f8(0x08)
	struct UAkComponent* NonOccludedAudioComponent; // 0x500(0x08)
	struct USceneComponent* AdditionalMeshes; // 0x508(0x08)
	struct USkeletalMeshComponentBudgeted* HeadMesh; // 0x510(0x08)
	struct USkeletalMeshComponentBudgeted* HoodieMesh; // 0x518(0x08)
	struct USkeletalMeshComponentBudgeted* HairMesh; // 0x520(0x08)
	struct USkeletalMeshComponentBudgeted* HeadgearMesh; // 0x528(0x08)
	struct USkeletalMeshComponentBudgeted* EyewearMesh; // 0x530(0x08)
	struct USkeletalMeshComponentBudgeted* BodyAdditionalMesh; // 0x538(0x08)
	char pad_540[0x20]; // 0x540(0x20)
	struct FMulticastInlineDelegate OnCharacterAction; // 0x560(0x10)
	struct FMulticastInlineDelegate OnDamageMitigated; // 0x570(0x10)
	char pad_580[0x10]; // 0x580(0x10)
	bool bIsRootMotionDisabled; // 0x590(0x01)
	char pad_591[0x3]; // 0x591(0x03)
	float BaseMaxHealth; // 0x594(0x04)
	struct USkeletalMeshComponent* ThirdPersonWeaponMeshRef; // 0x598(0x08)
	struct USkeletalMeshComponent* SecondaryWeaponMeshRef; // 0x5a0(0x08)
	struct USceneComponent* ProjectileSpawnRef; // 0x5a8(0x08)
	struct USceneComponent* SecondaryProjectileSpawnRef; // 0x5b0(0x08)
	struct FTigerCharacterStatModification BaseCharacterStats; // 0x5b8(0xa8)
	struct FTigerReplicatedCharacterStats ReplicatedCharacterStats; // 0x660(0x18)
	char pad_678[0x90]; // 0x678(0x90)
	bool bBlueprintReferencesSetup; // 0x708(0x01)
	char pad_709[0x7]; // 0x709(0x07)
	struct FMulticastInlineDelegate OnCharacterDeath; // 0x710(0x10)
	char pad_720[0x30]; // 0x720(0x30)
	float CurrentHealth; // 0x750(0x04)
	char pad_754[0x4]; // 0x754(0x04)
	struct FMulticastInlineDelegate OnMaxShieldReplicated; // 0x758(0x10)
	uint16_t MaxShield; // 0x768(0x02)
	int16_t MaxAttainableShield; // 0x76a(0x02)
	uint16_t CurrentShield; // 0x76c(0x02)
	char pad_76E[0x2]; // 0x76e(0x02)
	float LowHealthThreshold; // 0x770(0x04)
	char pad_774[0x4]; // 0x774(0x04)
	float HitAnimationInterval; // 0x778(0x04)
	char pad_77C[0xc]; // 0x77c(0x0c)
	struct FVector HealthBarOffset; // 0x788(0x0c)
	enum class ETigerGender BodyType; // 0x794(0x01)
	bool bIsKindred; // 0x795(0x01)
	enum class ETigerCharacterType CharacterType; // 0x796(0x01)
	char pad_797[0x1]; // 0x797(0x01)
	struct FName RangedHitAnimationListName; // 0x798(0x08)
	struct FName MeleeHitAnimationListName; // 0x7a0(0x08)
	struct UPhysicsAsset* HitboxPhysicsAsset; // 0x7a8(0x08)
	struct UPhysicsAsset* RagdollPhysicsAsset; // 0x7b0(0x08)
	char pad_7B8[0x10]; // 0x7b8(0x10)
	struct FTimerHandle RagdollTimer; // 0x7c8(0x08)
	struct UAnimMontage* TimedMontageLoop; // 0x7d0(0x08)
	struct FTimerHandle TimedMontageLoopTimer; // 0x7d8(0x08)
	char pad_7E0[0x10]; // 0x7e0(0x10)
	struct TArray<struct TWeakObjectPtr<struct ATigerCharacter>> CharmedByCharacters; // 0x7f0(0x10)
	bool bIsDodging; // 0x800(0x01)
	char pad_801[0x7]; // 0x801(0x07)
	float SmoothYawInterpSpeed; // 0x808(0x04)
	char pad_80C[0xc]; // 0x80c(0x0c)
	struct UWidgetComponent* HealthBarComponent; // 0x818(0x08)
	struct USkeletalMeshSocket* WidgetSocket; // 0x820(0x08)
	char pad_828[0x38]; // 0x828(0x38)

	void TriggerLimitedHitAnimation(bool bIsRangedHit); // Function Tiger.TigerCharacter.TriggerLimitedHitAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1404510
	float TriggerHitAnimation(bool bInIsRangedHit); // Function Tiger.TigerCharacter.TriggerHitAnimation // (Native|Public|BlueprintCallable) // @ game+0x1404470
	float TriggerAnimationByName(struct FName AnimationMontageName, float PlayRate); // Function Tiger.TigerCharacter.TriggerAnimationByName // (Final|Native|Public|BlueprintCallable) // @ game+0x14043a0
	void TigerOnMaxShieldReplicated__DelegateSignature(); // DelegateFunction Tiger.TigerCharacter.TigerOnMaxShieldReplicated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnDamageMitigated__DelegateSignature(float InTotalDamage, float InDamageMitigated); // DelegateFunction Tiger.TigerCharacter.TigerOnDamageMitigated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnCrouchStateUpdated__DelegateSignature(bool bInIsCrouched); // DelegateFunction Tiger.TigerCharacter.TigerOnCrouchStateUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnCharacterDeath__DelegateSignature(); // DelegateFunction Tiger.TigerCharacter.TigerOnCharacterDeath__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnCharacterAction__DelegateSignature(enum class ETigerCharacterAction InCharacterAction); // DelegateFunction Tiger.TigerCharacter.TigerOnCharacterAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void SpawnBloodDecal(); // Function Tiger.TigerCharacter.SpawnBloodDecal // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool ShouldHealthbarBeVisible(); // Function Tiger.TigerCharacter.ShouldHealthbarBeVisible // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1404370
	void SetClanSwitch(enum class ETigerClan InTigerClan); // Function Tiger.TigerCharacter.SetClanSwitch // (Final|Native|Public|BlueprintCallable) // @ game+0x14042f0
	void SetBaseMaxHealth(float NewMaxHealth); // Function Tiger.TigerCharacter.SetBaseMaxHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1404270
	void ReportCharacterAction(enum class ETigerCharacterAction Action); // Function Tiger.TigerCharacter.ReportCharacterAction // (Final|Native|Public|BlueprintCallable) // @ game+0x14041f0
	void RefreshCharacterStats(); // Function Tiger.TigerCharacter.RefreshCharacterStats // (Final|Native|Public|BlueprintCallable) // @ game+0x14041d0
	int32_t PostAkEvent(struct UAkAudioEvent* AudioEvent, bool bEnableOcclusion); // Function Tiger.TigerCharacter.PostAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1404100
	void OnWeaponVisualChangedEvent(); // Function Tiger.TigerCharacter.OnWeaponVisualChangedEvent // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnWeaponFired(bool bSecondaryWeaponFired); // Function Tiger.TigerCharacter.OnWeaponFired // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnShowDamageAmount(struct FVector& InHitLocation, struct FLinearColor& InDamageColor, int32_t InTotalDamageAmount, int32_t InHealthDamageAmount, bool bInHasExtraHealth, bool bInHasShield, float InRangedDamageFalloffPercent); // Function Tiger.TigerCharacter.OnShowDamageAmount // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnRep_MaxShieldChanged(uint16_t InOldMaxShield); // Function Tiger.TigerCharacter.OnRep_MaxShieldChanged // (Final|Native|Protected) // @ game+0x1403df0
	void OnRep_CurrentShieldChanged(); // Function Tiger.TigerCharacter.OnRep_CurrentShieldChanged // (Final|Native|Protected) // @ game+0x1403dd0
	void OnRep_CurrentHealth(float InOldHealth); // Function Tiger.TigerCharacter.OnRep_CurrentHealth // (Native|Protected) // @ game+0x1403d40
	void OnPlayMeleeHitEffects(struct UTigerMeleeWeapon* WeaponHitBy, struct FVector& ImpactLocation, struct FVector& HitDirection); // Function Tiger.TigerCharacter.OnPlayMeleeHitEffects // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnLocalDisciplineUseFailed(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnLocalDisciplineUseFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnLocalDisciplineUse(struct FDisciplineUse& DisciplineUse, float ExpectedDuration); // Function Tiger.TigerCharacter.OnLocalDisciplineUse // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnLocalDisciplineReleaseFailed(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnLocalDisciplineReleaseFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnLocalDisciplineRelease(struct FDisciplineUse& DisciplineUse, float ExpectedDuration); // Function Tiger.TigerCharacter.OnLocalDisciplineRelease // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnDodged(bool IsControllingPlayer, bool bLaunchedInAir, struct FVector LaunchDirection, char DodgeStage); // Function Tiger.TigerCharacter.OnDodged // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnDisciplineUseSucceeded(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnDisciplineUseSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnDisciplineReleaseSucceeded(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerCharacter.OnDisciplineReleaseSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void Multicast_SetRagdollDeath(bool bEnableRagdoll); // Function Tiger.TigerCharacter.Multicast_SetRagdollDeath // (Net|Native|Event|NetMulticast|Public) // @ game+0x1403700
	void Multicast_PostAkEvent(struct UAkAudioEvent* AudioEvent, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PostAkEvent // (Net|Native|Event|NetMulticast|Public) // @ game+0x1403630
	void Multicast_PlaySoundAtActorLocation(struct USoundBase* SoundBase); // Function Tiger.TigerCharacter.Multicast_PlaySoundAtActorLocation // (Net|Native|Event|NetMulticast|Public) // @ game+0x14035a0
	void Multicast_PlayAnimationBroadcastUnreliable(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PlayAnimationBroadcastUnreliable // (Net|Native|Event|NetMulticast|Public) // @ game+0x14034d0
	void Multicast_PlayAnimationBroadcast(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_PlayAnimationBroadcast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1403400
	void Multicast_OnJumped(int32_t InJumpCount); // Function Tiger.TigerCharacter.Multicast_OnJumped // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1403370
	void Multicast_ApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.Multicast_ApplyEffectWithTarget // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14032a0
	void Multicast_ApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.Multicast_ApplyEffectWithSocket // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14031d0
	void Multicast_ApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.Multicast_ApplyEffect // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1403140
	void Multicast_AbortAnimationBroadcastUnreliable(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_AbortAnimationBroadcastUnreliable // (Net|Native|Event|NetMulticast|Public) // @ game+0x1403070
	void Multicast_AbortAnimationBroadcast(struct UAnimMontage* Animation, bool bSkipLocallyControlled); // Function Tiger.TigerCharacter.Multicast_AbortAnimationBroadcast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1402fa0
	void LocalApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.LocalApplyEffectWithTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1402ed0
	void LocalApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.LocalApplyEffectWithSocket // (Final|Native|Public|BlueprintCallable) // @ game+0x1402e00
	void LocalApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.LocalApplyEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1402d70
	bool IsSprinting(); // Function Tiger.TigerCharacter.IsSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x1402d40
	bool IsSimulatedProxy(); // Function Tiger.TigerCharacter.IsSimulatedProxy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402d10
	bool IsPlayingAnimationMontage(); // Function Tiger.TigerCharacter.IsPlayingAnimationMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402ce0
	bool IsInvulnerable(); // Function Tiger.TigerCharacter.IsInvulnerable // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402cb0
	bool IsInJump(); // Function Tiger.TigerCharacter.IsInJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402c80
	bool IsInAir(); // Function Tiger.TigerCharacter.IsInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402c50
	bool IsFriendlyWith(struct ATigerCharacter* OtherCharacter); // Function Tiger.TigerCharacter.IsFriendlyWith // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402bb0
	bool IsDowned(); // Function Tiger.TigerCharacter.IsDowned // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402b80
	bool IsDead(); // Function Tiger.TigerCharacter.IsDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402b60
	bool IsClimbing(); // Function Tiger.TigerCharacter.IsClimbing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402b30
	bool IsCharacterVisible(); // Function Tiger.TigerCharacter.IsCharacterVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402b10
	bool IsBelowLowHealthThreshold(float InHealthOffset); // Function Tiger.TigerCharacter.IsBelowLowHealthThreshold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1402a80
	struct UTigerCharacterMovementComponent* GetTigerCharacterMovement(); // Function Tiger.TigerCharacter.GetTigerCharacterMovement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401d90
	struct UTigerAnimInstance* GetTigerAnimInstance(); // Function Tiger.TigerCharacter.GetTigerAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401d60
	float GetSmoothYaw(); // Function Tiger.TigerCharacter.GetSmoothYaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401d30
	bool GetShieldFull(); // Function Tiger.TigerCharacter.GetShieldFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401d00
	struct FTigerReplicatedCharacterStats GetReplicatedStats(); // Function Tiger.TigerCharacter.GetReplicatedStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401cc0
	enum class ETigerHostilityStatus GetPlayerHostilityStatus(struct ATigerCharacter* InOtherCharacter); // Function Tiger.TigerCharacter.GetPlayerHostilityStatus // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401c20
	struct FTigerNonReplicatedCharacterStats GetNonReplicatedStats(); // Function Tiger.TigerCharacter.GetNonReplicatedStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401ba0
	float GetMaxShield(); // Function Tiger.TigerCharacter.GetMaxShield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401b70
	float GetMaxHealth(); // Function Tiger.TigerCharacter.GetMaxHealth // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401b30
	float GetHeartVisibility(); // Function Tiger.TigerCharacter.GetHeartVisibility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401b10
	float GetCurrentShield(); // Function Tiger.TigerCharacter.GetCurrentShield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401ae0
	float GetCurrentHealthPercentage(); // Function Tiger.TigerCharacter.GetCurrentHealthPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401ab0
	float GetCurrentHealth(); // Function Tiger.TigerCharacter.GetCurrentHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401a80
	float GetBaseMaxHealth(); // Function Tiger.TigerCharacter.GetBaseMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401a50
	enum class ETigerCharacterAkAlignmentType GetAkCharacterAlignment(); // Function Tiger.TigerCharacter.GetAkCharacterAlignment // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401a20
	struct FRotator GetAimRotation(); // Function Tiger.TigerCharacter.GetAimRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14019e0
	float GetAimAnglePitch(); // Function Tiger.TigerCharacter.GetAimAnglePitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14019b0
	float ChangeHealth(float InHealAmount, struct ATigerCharacter* InInstigator, bool bInOnlyHealRecentDamage); // Function Tiger.TigerCharacter.ChangeHealth // (Native|Public|BlueprintCallable) // @ game+0x1401890
	void CalculateCharacterStats(struct FTigerCharacterStatModification& AccumulatedStats); // Function Tiger.TigerCharacter.CalculateCharacterStats // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14017f0
	void AuthorityApplyEffectWithTarget(struct UTigerCharacterEffect* Effect, struct ATigerCharacter* Target); // Function Tiger.TigerCharacter.AuthorityApplyEffectWithTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1401720
	void AuthorityApplyEffectWithSocket(struct UTigerCharacterEffect* Effect, struct FName SocketName); // Function Tiger.TigerCharacter.AuthorityApplyEffectWithSocket // (Final|Native|Public|BlueprintCallable) // @ game+0x1401650
	void AuthorityApplyEffect(struct UTigerCharacterEffect* Effect); // Function Tiger.TigerCharacter.AuthorityApplyEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x14015c0
	void AbortAnimationByName(struct FName InAnimationMontageName, float InBlendOutTime, bool bInStopAllIfNullMontage); // Function Tiger.TigerCharacter.AbortAnimationByName // (Final|Native|Public|BlueprintCallable) // @ game+0x14014a0
	void AbortAnimation(struct UAnimMontage* InAnimationMontage, float InBlendOutTime, bool bInStopAllIfNullMontage); // Function Tiger.TigerCharacter.AbortAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1401380
};

// Class Tiger.TigerBaseNPC
// Size: 0x9c0 (Inherited: 0x860)
struct ATigerBaseNPC : ATigerCharacter {
	char pad_860[0x10]; // 0x860(0x10)
	struct UTigerHSensesTargetComponent* HeightenedSensesTargetComponent; // 0x870(0x08)
	struct UTigerNPCAsset* NPCAsset; // 0x878(0x08)
	struct UTigerBloodPotencyComponent* BloodPotencyComponent; // 0x880(0x08)
	struct UTigerNPCVisualAsset* VisualAsset; // 0x888(0x08)
	struct UTigerNpcPropAsset* PropAsset; // 0x890(0x08)
	struct UTigerMasqueradeActionResponse* MasqueradeActionResponse; // 0x898(0x08)
	struct UTigerNPCFacePoseMap* HeadMeshsPoseAssetsClass; // 0x8a0(0x08)
	enum class ETigerNPCType NPCType; // 0x8a8(0x01)
	char pad_8A9[0x7]; // 0x8a9(0x07)
	struct UTigerInteractiveNpcComponent* InteractiveNpcComponent; // 0x8b0(0x08)
	struct FTigerMeshCollection ReplicatedMeshCollection; // 0x8b8(0x30)
	struct UObject* ReplicatedAnimationInstanceClass; // 0x8e8(0x08)
	struct ATigerAISplinePath* ActiveSplinePath; // 0x8f0(0x08)
	struct ATigerNPCSpawningBase* Spawner; // 0x8f8(0x08)
	struct USkeletalMeshComponentBudgeted* HeightenedSensesHeartMesh; // 0x900(0x08)
	struct USkeletalMeshComponentBudgeted* InWorldHeartMesh; // 0x908(0x08)
	float LastTimeReactingToLocalPlayerAction; // 0x910(0x04)
	int32_t LastPlayedVoEventId; // 0x914(0x04)
	bool bHasSightOfLocalPlayer; // 0x918(0x01)
	char pad_919[0x7]; // 0x919(0x07)
	enum class ETigerBloodType BloodType; // 0x920(0x01)
	enum class ETigerBloodPotency BloodPotency; // 0x921(0x01)
	char pad_922[0x6]; // 0x922(0x06)
	struct TArray<struct ATigerAISplinePath*> StoredSplines; // 0x928(0x10)
	struct ATigerWorldCompositionGrid* StreamingGrid; // 0x938(0x08)
	char pad_940[0x80]; // 0x940(0x80)

	void QueueVoEvent(struct FName& InVoCategory, bool bInShouldMulticast); // Function Tiger.TigerBaseNPC.QueueVoEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13e7f70
	void PickHeartMeshes(); // Function Tiger.TigerBaseNPC.PickHeartMeshes // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OverrideBloodPotency(enum class ETigerBloodPotency InNewBloodPotency); // Function Tiger.TigerBaseNPC.OverrideBloodPotency // (Final|Native|Public|BlueprintCallable) // @ game+0x13e7590
	void OnStoppedBeingClosestNpcWithPotencyInHeightenedSenses(); // Function Tiger.TigerBaseNPC.OnStoppedBeingClosestNpcWithPotencyInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnSawLocalPlayerBreachMasquerade(); // Function Tiger.TigerBaseNPC.OnSawLocalPlayerBreachMasquerade // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnRep_ReplicatedAnimationInstanceClassChanged(); // Function Tiger.TigerBaseNPC.OnRep_ReplicatedAnimationInstanceClassChanged // (Final|Native|Protected) // @ game+0x13e7f50
	void OnRep_BloodType(); // Function Tiger.TigerBaseNPC.OnRep_BloodType // (Final|Native|Protected) // @ game+0x13e7f10
	void OnRep_BloodPotency(); // Function Tiger.TigerBaseNPC.OnRep_BloodPotency // (Final|Native|Protected) // @ game+0x13e7ed0
	void OnRep_AdditionalMeshCollectionChanged(); // Function Tiger.TigerBaseNPC.OnRep_AdditionalMeshCollectionChanged // (Final|Native|Protected) // @ game+0x13e7eb0
	void OnLostSightOfLocalPlayer(struct ATigerPlayer* InPlayer); // Function Tiger.TigerBaseNPC.OnLostSightOfLocalPlayer // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGainedSightOfLocalPlayer(struct ATigerPlayer* InPlayer); // Function Tiger.TigerBaseNPC.OnGainedSightOfLocalPlayer // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnBloodTypeChanged(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBaseNPC.OnBloodTypeChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnBloodPotencyChanged(enum class ETigerBloodPotency InBloodPotency); // Function Tiger.TigerBaseNPC.OnBloodPotencyChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnBecameClosestNpcWithPotencyInHeightenedSenses(); // Function Tiger.TigerBaseNPC.OnBecameClosestNpcWithPotencyInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Multicast_VerifySimulationLocation(struct FVector InAuthorityLocation); // Function Tiger.TigerBaseNPC.Multicast_VerifySimulationLocation // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x13e7ce0
	void Multicast_QueueVoEvent(int8_t InVoCategoryIndex); // Function Tiger.TigerBaseNPC.Multicast_QueueVoEvent // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13e7c60
	void Multicast_ChangeBlood(enum class ETigerBloodPotency InNewBloodPotency, enum class ETigerBloodType InNewBloodType); // Function Tiger.TigerBaseNPC.Multicast_ChangeBlood // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13e7b90
	struct ATigerAiBaseController* GetTigerAiBaseController(); // Function Tiger.TigerBaseNPC.GetTigerAiBaseController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7a90
	enum class ETigerBloodType GetBloodType(); // Function Tiger.TigerBaseNPC.GetBloodType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e77f0
	enum class ETigerBloodPotency GetBloodPotency(); // Function Tiger.TigerBaseNPC.GetBloodPotency // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e77d0
	void DeactivateHeightenedSensesVisualization(); // Function Tiger.TigerBaseNPC.DeactivateHeightenedSensesVisualization // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e7790
	void AuthoritySetBloodType(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBaseNPC.AuthoritySetBloodType // (Final|Native|Public|BlueprintCallable) // @ game+0x13e7610
	void AuthoritySetBloodPotency(enum class ETigerBloodPotency InNewBloodPotency); // Function Tiger.TigerBaseNPC.AuthoritySetBloodPotency // (Final|Native|Public|BlueprintCallable) // @ game+0x13e7590
	void AuthoritySetBlood(enum class ETigerBloodPotency InNewBloodPotency, enum class ETigerBloodType InNewBloodType); // Function Tiger.TigerBaseNPC.AuthoritySetBlood // (Final|Native|Public|BlueprintCallable) // @ game+0x13e74c0
	void ActivateHeightenedSensesVisualization(); // Function Tiger.TigerBaseNPC.ActivateHeightenedSensesVisualization // (Final|Native|Protected|BlueprintCallable) // @ game+0x13e7480
};

// Class Tiger.TigerBaseThrallData
// Size: 0xc8 (Inherited: 0x30)
struct UTigerBaseThrallData : UDataAsset {
	enum class ETigerThrallId ThrallId; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText ThrallName; // 0x38(0x18)
	struct FText ThrallDescription; // 0x50(0x18)
	struct FText ThrallHintText; // 0x68(0x18)
	struct TArray<struct UTexture2D*> ThrallPortraits; // 0x80(0x10)
	struct FText ThrallKeepsakeName; // 0x90(0x18)
	struct UTexture2D* ThrallKeepsakePortrait; // 0xa8(0x08)
	struct FTigerThrallStats StartingStats; // 0xb0(0x10)
	struct UTigerGrimoireEntry* GrimoireEntry; // 0xc0(0x08)
};

// Class Tiger.TigerBattlepassUI
// Size: 0x3f0 (Inherited: 0x3c0)
struct UTigerBattlepassUI : UTigerSceneBackgroundUI {
	int32_t MaxPageItems; // 0x3c0(0x04)
	char pad_3C4[0x4]; // 0x3c4(0x04)
	struct TArray<int32_t> PageSizes; // 0x3c8(0x10)
	int32_t CurrentPageIndex; // 0x3d8(0x04)
	char pad_3DC[0x4]; // 0x3dc(0x04)
	struct TArray<struct UTigerClientSeasonalRewardTier*> RewardTiers; // 0x3e0(0x10)

	void GetPageItemIndices(int32_t PageIndex, int32_t& FirstItemIndex, int32_t& LastItemIndex); // Function Tiger.TigerBattlepassUI.GetPageItemIndices // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7970
};

// Class Tiger.TigerBelowBalconyEntryTrigger
// Size: 0x268 (Inherited: 0x260)
struct ATigerBelowBalconyEntryTrigger : ATriggerVolume {
	struct FName EnterBalconyFromBelowAnimName; // 0x260(0x08)
};

// Class Tiger.TigerBlindingBeautyEffectActor
// Size: 0x238 (Inherited: 0x228)
struct ATigerBlindingBeautyEffectActor : AActor {
	struct ATigerPlayer* Player; // 0x228(0x08)
	float TriggerTime; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)

	void OnDashExit(bool bInShouldTrigger); // Function Tiger.TigerBlindingBeautyEffectActor.OnDashExit // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnDashEnter(); // Function Tiger.TigerBlindingBeautyEffectActor.OnDashEnter // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerBloodDecalTrail
// Size: 0x230 (Inherited: 0x228)
struct ATigerBloodDecalTrail : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerBloodPotencyVisualizationConfig
// Size: 0x80 (Inherited: 0x30)
struct UTigerBloodPotencyVisualizationConfig : UDataAsset {
	struct TArray<struct UMaterialInstance*> HeartMeshMaterialTarget; // 0x30(0x10)
	struct TSoftObjectPtr<UNiagaraSystem> NiagaraPath; // 0x40(0x28)
	struct UParticleSystem* ParticleSystem; // 0x68(0x08)
	struct FName ParticleSystemAttachmentSocket; // 0x70(0x08)
	bool bParticleSystemAbsoluteRotation; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
};

// Class Tiger.TigerBloodPotencyComponent
// Size: 0x230 (Inherited: 0xb0)
struct UTigerBloodPotencyComponent : UActorComponent {
	float BloodTypeWeights[0x5]; // 0xb0(0x14)
	bool bEnableBloodTypeEffects; // 0xc4(0x01)
	bool bVisualizeBloodTypeNone; // 0xc5(0x01)
	char pad_C6[0x2]; // 0xc6(0x02)
	struct UTigerBloodPotencyVisualizationConfig* CurrentHeightenedSensesConfig; // 0xc8(0x08)
	struct UTigerBloodPotencyVisualizationConfig* CurrentInWorldConfig; // 0xd0(0x08)
	struct UTigerBloodPotencyVisualizationConfig* HeightenedSensesVisualConfiguration[0x4]; // 0xd8(0x20)
	struct UTigerBloodPotencyVisualizationConfig* HeightenedSensesVisualConfigurationByBloodType[0x5]; // 0xf8(0x28)
	struct UTigerBloodPotencyVisualizationConfig* InWorldVisualConfiguration[0x4]; // 0x120(0x20)
	struct UTigerBloodPotencyVisualizationConfig* InWorldVisualConfigurationByBloodType[0x5]; // 0x140(0x28)
	struct FName HeartMeshMaximumVisibilityDistanceName; // 0x168(0x08)
	struct TArray<struct UMaterialInstance*> HsMeshPreviousMaterials; // 0x170(0x10)
	struct TArray<struct UMaterialInstance*> HsMeshTargetMaterials; // 0x180(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> HsMeshCurrentMaterials; // 0x190(0x10)
	struct USkeletalMeshComponent* HsSkeletalMeshComponent; // 0x1a0(0x08)
	struct UParticleSystemComponent* HsParticleSystemComponent; // 0x1a8(0x08)
	struct UNiagaraComponent* HsNiagaraComponent; // 0x1b0(0x08)
	struct TArray<struct UMaterialInstance*> InWorldMeshPreviousMaterials; // 0x1b8(0x10)
	struct TArray<struct UMaterialInstance*> InWorldMeshTargetMaterials; // 0x1c8(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> InWorldMeshCurrentMaterials; // 0x1d8(0x10)
	struct USkeletalMeshComponent* InWorldSkeletalMeshComponent; // 0x1e8(0x08)
	struct UParticleSystemComponent* InWorldParticleSystemComponent; // 0x1f0(0x08)
	struct UNiagaraComponent* InWorldNiagaraComponent; // 0x1f8(0x08)
	struct ATigerBaseNPC* NpcOwner; // 0x200(0x08)
	char pad_208[0x10]; // 0x208(0x10)
	float MaterialInterpolationDuration; // 0x218(0x04)
	char pad_21C[0x14]; // 0x21c(0x14)

	void RefreshBloodPotencyVisualization(bool bInForceRefresh); // Function Tiger.TigerBloodPotencyComponent.RefreshBloodPotencyVisualization // (Final|Native|Public|BlueprintCallable) // @ game+0x13e8050
};

// Class Tiger.TigerBloodResonanceAsset
// Size: 0x1f8 (Inherited: 0x30)
struct UTigerBloodResonanceAsset : UDataAsset {
	struct FText ResonanceName; // 0x30(0x18)
	struct FText InventoryLevel1Description; // 0x48(0x18)
	struct FText InventoryLevel2Description; // 0x60(0x18)
	struct FText InventoryLevel3Description; // 0x78(0x18)
	struct FText FeedRewardLevel1Description; // 0x90(0x18)
	struct FText FeedRewardLevel2Description; // 0xa8(0x18)
	struct FText FeedRewardLevel3Description; // 0xc0(0x18)
	struct FColor ResonanceColor; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TSoftObjectPtr<UTexture2D> ResonanceLevel1; // 0xe0(0x28)
	struct TSoftObjectPtr<UTexture2D> ResonanceLevel2; // 0x108(0x28)
	struct TSoftObjectPtr<UTexture2D> ResonanceLevel3; // 0x130(0x28)
	struct TSoftObjectPtr<UTexture2D> SlotLevel1; // 0x158(0x28)
	struct TSoftObjectPtr<UTexture2D> SlotLevel2; // 0x180(0x28)
	struct TSoftObjectPtr<UTexture2D> SlotLevel3; // 0x1a8(0x28)
	struct TSoftObjectPtr<UMaterial> ResonanceVfx; // 0x1d0(0x28)
};

// Class Tiger.TigerBloodResonanceComponent
// Size: 0x200 (Inherited: 0xb0)
struct UTigerBloodResonanceComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBloodResonanceBlockedByCap; // 0xb0(0x10)
	float BloodCapIncreasePerEvent[0x20]; // 0xc0(0x80)
	struct FTigerBloodResonanceBuffs BloodResonanceBuffs[0x4]; // 0x140(0x40)
	int32_t StartingBloodCap; // 0x180(0x04)
	int32_t StartingBloodCapIncreaseGameMode; // 0x184(0x04)
	int32_t BloodTypeCap; // 0x188(0x04)
	int32_t MaxBloodCap; // 0x18c(0x04)
	int32_t CurrentBloodCap; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct FMulticastInlineDelegate OnBloodCapChanged; // 0x198(0x10)
	struct FMulticastInlineDelegate OnBloodResonanceAdded; // 0x1a8(0x10)
	struct TArray<enum class ETigerBloodType> CurrentBloodResonance; // 0x1b8(0x10)
	int32_t BloodResonanceLevels[0x4]; // 0x1c8(0x10)
	int32_t OldBloodResonanceLevels[0x4]; // 0x1d8(0x10)
	char pad_1E8[0x10]; // 0x1e8(0x10)
	float CurrentBloodSlotsIncrease; // 0x1f8(0x04)
	char pad_1FC[0x4]; // 0x1fc(0x04)

	void OnRep_CurrentBloodCap(); // Function Tiger.TigerBloodResonanceComponent.OnRep_CurrentBloodCap // (Final|Native|Private) // @ game+0x13e7f30
	void OnRep_BloodResonanceLevels(); // Function Tiger.TigerBloodResonanceComponent.OnRep_BloodResonanceLevels // (Final|Native|Private) // @ game+0x13e7ef0
	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerBloodResonanceComponent.OnPlayerEvent // (Final|Native|Private) // @ game+0x13e7de0
	void OnLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerBloodResonanceComponent.OnLifeStatusChanged // (Final|Native|Private) // @ game+0x13e7d60
	int32_t GetTotalBloodResonanceNum(); // Function Tiger.TigerBloodResonanceComponent.GetTotalBloodResonanceNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7ac0
	int32_t GetMaxBloodCap(); // Function Tiger.TigerBloodResonanceComponent.GetMaxBloodCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7950
	int32_t GetCurrentBloodResonanceOfType(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodResonanceOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e78c0
	struct TArray<enum class ETigerBloodType> GetCurrentBloodResonance(); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodResonance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7830
	int32_t GetCurrentBloodCap(); // Function Tiger.TigerBloodResonanceComponent.GetCurrentBloodCap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7810
	void Client_AddBloodResonance(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.Client_AddBloodResonance // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13e7710
	void BlueprintServerAddBloodResonance(enum class ETigerBloodType InBloodType); // Function Tiger.TigerBloodResonanceComponent.BlueprintServerAddBloodResonance // (Final|Native|Public|BlueprintCallable) // @ game+0x13e7690
	void AddGameModeStartingBloodResonances(); // Function Tiger.TigerBloodResonanceComponent.AddGameModeStartingBloodResonances // (Final|Native|Private) // @ game+0x13e74a0
};

// Class Tiger.TigerBloodVein
// Size: 0x278 (Inherited: 0x228)
struct ATigerBloodVein : AActor {
	struct FMulticastInlineDelegate OnEndOfVeinReached; // 0x228(0x10)
	struct USplineComponent* Spline; // 0x238(0x08)
	struct USceneComponent* CurrentPlayerSpot; // 0x240(0x08)
	float EarliestDisconnectPoint; // 0x248(0x04)
	float LatestDisconnectPoint; // 0x24c(0x04)
	float VeinMovementSpeed; // 0x250(0x04)
	bool bIsVeinActive; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	struct ATigerHolyIncense* HolyIncense; // 0x258(0x08)
	char pad_260[0xc]; // 0x260(0x0c)
	float StartSynchronizedTime; // 0x26c(0x04)
	char pad_270[0x8]; // 0x270(0x08)

	void TigerOnEndOfVeinReached__DelegateSignature(); // DelegateFunction Tiger.TigerBloodVein.TigerOnEndOfVeinReached__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnVeinActivated(); // Function Tiger.TigerBloodVein.OnVeinActivated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnRep_IsVeinActive(); // Function Tiger.TigerBloodVein.OnRep_IsVeinActive // (Final|Native|Private) // @ game+0x13ecc00
	void Multicast_StartMovement(float ServerTime); // Function Tiger.TigerBloodVein.Multicast_StartMovement // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13ecb50
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerBloodVein.MatchStateChanged // (Final|Native|Private) // @ game+0x13ec830
	struct FVector GetCurrentPlayerLocation(); // Function Tiger.TigerBloodVein.GetCurrentPlayerLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec560
	struct FVector GetCurrentPlayerDirection(); // Function Tiger.TigerBloodVein.GetCurrentPlayerDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec520
};

// Class Tiger.TigerBloodVeinTrackWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerBloodVeinTrackWidget : UTigerWidget {
};

// Class Tiger.TigerBlueprintLootComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerBlueprintLootComponent : UActorComponent {
	struct UTigerItemLootTable* LootTable; // 0xb0(0x08)
	struct TArray<struct AActor*> SpawnedItemActors; // 0xb8(0x10)

	struct TArray<struct AActor*> GetSpawnedItemActors(); // Function Tiger.TigerBlueprintLootComponent.GetSpawnedItemActors // (Final|Native|Public|Const) // @ game+0x13ec610
	struct UTigerItemLootTable* GetLootTable(); // Function Tiger.TigerBlueprintLootComponent.GetLootTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec5c0
};

// Class Tiger.TigerBlueprintLootLocationComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerBlueprintLootLocationComponent : UActorComponent {
	struct UTigerLootLocationConfiguration* Configuration; // 0xb0(0x08)
	char GameTypeFilter; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
};

// Class Tiger.TigerBootGameMode
// Size: 0x2e8 (Inherited: 0x2c8)
struct ATigerBootGameMode : AGameModeBase {
	enum class ESessionType SessionTraveledFrom; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct UTigerGameFlowStateMap* GameFlowStateMap; // 0x2d0(0x08)
	struct UTigerGameFlowStateMap* BotGameFlowStateMap; // 0x2d8(0x08)
	struct UTigerLegalDocuments* LegalDocumentsObj; // 0x2e0(0x08)

	struct UTigerLegalDocuments* GetLegalDocuments(); // Function Tiger.TigerBootGameMode.GetLegalDocuments // (Final|Native|Public|BlueprintCallable) // @ game+0x13ec5a0
};

// Class Tiger.TigerGameState
// Size: 0x390 (Inherited: 0x278)
struct ATigerGameState : AGameStateBase {
	struct FMulticastInlineDelegate OnWeatherScenarioChangedEvent; // 0x278(0x10)
	struct TArray<int32_t> FakeMatchmakingDelayGameModeIndices; // 0x288(0x10)
	char pad_298[0x20]; // 0x298(0x20)
	struct FMulticastInlineDelegate OnPrePlayerStateRemoved; // 0x2b8(0x10)
	struct FGuid MatchID; // 0x2c8(0x10)
	struct TWeakObjectPtr<struct ATigerHolyIncense> HolyIncense; // 0x2d8(0x08)
	char pad_2E0[0x4]; // 0x2e0(0x04)
	float SynchronizedTime; // 0x2e4(0x04)
	char pad_2E8[0x10]; // 0x2e8(0x10)
	struct UTigerWeatherScenarioData* WeatherScenarioClass; // 0x2f8(0x08)
	struct UTigerWeatherScenarioData* WeatherScenario; // 0x300(0x08)
	char pad_308[0x50]; // 0x308(0x50)
	struct FString ServerId; // 0x358(0x10)
	enum class ETigerServerScalabilityTarget CurrentScalabilityTarget; // 0x368(0x01)
	char pad_369[0x27]; // 0x369(0x27)

	bool UnsubscribeOnPlayerStateGameDataChanged(int32_t InPlayerId, struct FDelegate& InDelegate); // Function Tiger.TigerGameState.UnsubscribeOnPlayerStateGameDataChanged // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1457a30
	struct ATigerPlayerState* TryGetPlayerStateFromID(struct FTigerPersistentPlayerID& InID); // Function Tiger.TigerGameState.TryGetPlayerStateFromID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14578d0
	void TigerPrintServerScalabilityTarget(); // Function Tiger.TigerGameState.TigerPrintServerScalabilityTarget // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerDisplayServerId(); // Function Tiger.TigerGameState.TigerDisplayServerId // (Final|Exec|Native|Private) // @ game+0xb64580
	bool SubscribeOnPlayerStateGameDataChanged(int32_t InPlayerId, struct FDelegate& InDelegate); // Function Tiger.TigerGameState.SubscribeOnPlayerStateGameDataChanged // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14577d0
	void PlayerStateRemoved__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerGameState.PlayerStateRemoved__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnWeatherScenarioChanged__DelegateSignature(struct UTigerWeatherScenarioData* WeatherScenarioData); // DelegateFunction Tiger.TigerGameState.OnWeatherScenarioChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRep_WeatherScenarioClass(); // Function Tiger.TigerGameState.OnRep_WeatherScenarioClass // (Final|Native|Private) // @ game+0x14572c0
	void OnRep_SynchronizedTime(); // Function Tiger.TigerGameState.OnRep_SynchronizedTime // (Final|Native|Private) // @ game+0x14572a0
	void OnRep_FakeMatchmakingDelayRemovedForGameModeIndex(); // Function Tiger.TigerGameState.OnRep_FakeMatchmakingDelayRemovedForGameModeIndex // (Final|Native|Private) // @ game+0x1457280
	void OnPlayerStateGameDataChangeDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerGameState.OnPlayerStateGameDataChangeDelegate__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void OnPlayerStateGameDataChanged__DelegateSignature(); // DelegateFunction Tiger.TigerGameState.OnPlayerStateGameDataChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Multicast_SynchronizeTime(float InNewSynchronizedTime); // Function Tiger.TigerGameState.Multicast_SynchronizeTime // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x14571f0
	float GetSynchronizedTimeNonInterpolated(); // Function Tiger.TigerGameState.GetSynchronizedTimeNonInterpolated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1456c70
	float GetSynchronizedTime(); // Function Tiger.TigerGameState.GetSynchronizedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1456c40
	struct FTigerPlayerStateGameData GetPlayerStateDataCopy(int32_t InPlayerId); // Function Tiger.TigerGameState.GetPlayerStateDataCopy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1456b20
	struct FGuid GetMatchId(); // Function Tiger.TigerGameState.GetMatchId // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1456aa0
};

// Class Tiger.TigerBootGameState
// Size: 0x398 (Inherited: 0x390)
struct ATigerBootGameState : ATigerGameState {
	char pad_390[0x8]; // 0x390(0x08)

	void SetBootStateToArchetypeSelect(); // Function Tiger.TigerBootGameState.SetBootStateToArchetypeSelect // (Final|Native|Public|BlueprintCallable) // @ game+0x13ece90
};

// Class Tiger.TigerPassiveConfig
// Size: 0x140 (Inherited: 0x30)
struct UTigerPassiveConfig : UDataAsset {
	struct FText Name; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
	struct FText Summary; // 0x60(0x18)
	struct UTexture2D* Icon; // 0x78(0x08)
	struct UMediaSource* PreviewVideo; // 0x80(0x08)
	struct UTigerWidget* CustomWidget; // 0x88(0x08)
	struct UTigerPassiveComponent* LogicComponent; // 0x90(0x08)
	struct FTigerCharacterStatModification PassiveStatChanges; // 0x98(0xa8)
};

// Class Tiger.TigerBrujahBaneRecklessness
// Size: 0x148 (Inherited: 0x140)
struct UTigerBrujahBaneRecklessness : UTigerPassiveConfig {
	float DamageTakenMultiplier; // 0x140(0x04)
	float AutoDeactivateTimer; // 0x144(0x04)
};

// Class Tiger.TigerPassiveComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerPassiveComponent : UActorComponent {
	struct ATigerPlayer* PlayerOwner; // 0xb0(0x08)
	struct UTigerWidget* PassiveWidget; // 0xb8(0x08)
	char pad_C0[0x8]; // 0xc0(0x08)

	void SetPassiveWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerPassiveComponent.SetPassiveWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x14b4760
	void OnFirstPossessed(struct ATigerPlayer* InPlayer, bool InHasAuthority); // Function Tiger.TigerPassiveComponent.OnFirstPossessed // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCreated(struct ATigerPlayer* InPlayer, bool InHasAuthority); // Function Tiger.TigerPassiveComponent.OnCreated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsPassiveActive(); // Function Tiger.TigerPassiveComponent.IsPassiveActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14b4460
	struct UTigerWidget* GetPassiveWidget(); // Function Tiger.TigerPassiveComponent.GetPassiveWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b3f00
};

// Class Tiger.TigerBrujahBaneRecklessnessLogic
// Size: 0x188 (Inherited: 0xc8)
struct UTigerBrujahBaneRecklessnessLogic : UTigerPassiveComponent {
	struct UTigerBrujahBaneRecklessness* Config; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	char pad_D8[0xb0]; // 0xd8(0xb0)
};

// Class Tiger.TigerBrujahTraitMomentum
// Size: 0x160 (Inherited: 0x140)
struct UTigerBrujahTraitMomentum : UTigerPassiveConfig {
	float MomentumActiveTimer; // 0x140(0x04)
	float GroundSlamRadiusMultiplier; // 0x144(0x04)
	float MightyLeapVelocityMultiplier; // 0x148(0x04)
	float FOTTKnockbackDistanceMultiplier; // 0x14c(0x04)
	float FOTTWallImpactDamageMultiplier; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct UAkAudioEvent* MomentumStartedAudioEvent; // 0x158(0x08)
};

// Class Tiger.TigerBrujahTraitMomentumLogic
// Size: 0xe8 (Inherited: 0xc8)
struct UTigerBrujahTraitMomentumLogic : UTigerPassiveComponent {
	struct UTigerBrujahTraitMomentum* Config; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	char pad_D8[0x10]; // 0xd8(0x10)

	bool IsMomentumActive(); // Function Tiger.TigerBrujahTraitMomentumLogic.IsMomentumActive // (Final|Native|Public|BlueprintCallable) // @ game+0x13ec800
};

// Class Tiger.TigerBuffAdrenalineRushInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffAdrenalineRushInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffAdrenalineRush
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffAdrenalineRush : UTigerBuff {
};

// Class Tiger.TigerBuffAnarchHuntingKnife
// Size: 0x288 (Inherited: 0x268)
struct UTigerBuffAnarchHuntingKnife : UTigerBuff {
	struct UCurveFloat* EffectStrengthBasedOnDistance; // 0x268(0x08)
	struct UCurveFloat* EffectStrengthBasedOnKills; // 0x270(0x08)
	struct UCurveFloat* DamageBasedOnEnemiesKilled; // 0x278(0x08)
	float MaxDistanceToCheckForEnemies; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
};

// Class Tiger.TigerBuffAnarchHuntingKnifeInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffAnarchHuntingKnifeInstance : UTigerBuffInstance {
	struct UTigerBuffAnarchHuntingKnife* HuntingKnifeBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffAnarchHuntingKnifeStack
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffAnarchHuntingKnifeStack : UTigerBuff {
};

// Class Tiger.TigerBuffAnarchHuntingKnifeStackInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffAnarchHuntingKnifeStackInstance : UTigerBuffInstance {
	struct ATigerPlayer* Player; // 0x88(0x08)
};

// Class Tiger.TigerBuffArtifactFeedingBonus
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffArtifactFeedingBonus : UTigerBuff {
	float FeedBonusHealthMultiplier; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
};

// Class Tiger.TigerBuffArtifactFeedingBonusInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffArtifactFeedingBonusInstance : UTigerBuffInstance {
	struct UTigerBuffArtifactFeedingBonus* ArtifactFeedingBonusBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffHealthRegenBase
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffHealthRegenBase : UTigerBuff {
	float HealthToHeal; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
};

// Class Tiger.TigerBuffArtifactHealthRegen
// Size: 0x270 (Inherited: 0x270)
struct UTigerBuffArtifactHealthRegen : UTigerBuffHealthRegenBase {
};

// Class Tiger.TigerBuffHealthRegenBaseInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffHealthRegenBaseInstance : UTigerBuffInstance {
	struct UTigerBuffHealthRegenBase* HealthRegenBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffArtifactHealthRegenInstance
// Size: 0x98 (Inherited: 0x98)
struct UTigerBuffArtifactHealthRegenInstance : UTigerBuffHealthRegenBaseInstance {
};

// Class Tiger.TigerBuffBlindingBeautyInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffBlindingBeautyInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)
};

// Class Tiger.TigerBuffBlindingBeauty
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffBlindingBeauty : UTigerBuff {
	float BlockJumpDuration; // 0x268(0x04)
	float TurnRateCap; // 0x26c(0x04)
};

// Class Tiger.TigerBuffClanReducesCooldown
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffClanReducesCooldown : UTigerBuff {
	float AbilityCooldownReduction; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
};

// Class Tiger.TigerBuffClanReducesCooldownInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffClanReducesCooldownInstance : UTigerBuffInstance {
	struct UTigerBuffClanReducesCooldown* ClanReduceCooldownBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffClimbInterrupt
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffClimbInterrupt : UTigerBuffDisableClimbing {
};

// Class Tiger.TigerBuffClimbInterruptInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffClimbInterruptInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffComponent
// Size: 0x148 (Inherited: 0xb0)
struct UTigerBuffComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBuffAdded; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnBuffRemoved; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnBuffRefreshed; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnClientBuffIdUpdated; // 0xe0(0x10)
	bool bDrawDebugString; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct TArray<struct UTigerBuffInstance*> BuffInstances; // 0xf8(0x10)
	struct TArray<struct UTigerBuffInstance*> NonVerifiedBuffInstances; // 0x108(0x10)
	struct TArray<struct FTigerDeferredBuffInstantiation> DeferredBuffs; // 0x118(0x10)
	char pad_128[0x20]; // 0x128(0x20)

	void Server_RequestRemoveBuffIfNonExistentFor(struct ATigerCharacter* Target, struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float BuffEndTime); // Function Tiger.TigerBuffComponent.Server_RequestRemoveBuffIfNonExistentFor // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x13eccb0
	void RemoveBuffByID(int32_t BuffID); // Function Tiger.TigerBuffComponent.RemoveBuffByID // (Final|Native|Public|BlueprintCallable) // @ game+0x13ecc20
	void OnRep_BuffInstances(); // Function Tiger.TigerBuffComponent.OnRep_BuffInstances // (Final|Native|Private) // @ game+0x13ecbe0
	void Multicast_ClearBuff(int32_t BuffID); // Function Tiger.TigerBuffComponent.Multicast_ClearBuff // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13ecac0
	void Multicast_ClearAllBuffs(); // Function Tiger.TigerBuffComponent.Multicast_ClearAllBuffs // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x13ecaa0
	void Multicast_AddBuff(struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float Length, float BuffStrength); // Function Tiger.TigerBuffComponent.Multicast_AddBuff // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13ec900
	bool IsDisablingDisciplines(); // Function Tiger.TigerBuffComponent.IsDisablingDisciplines // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec7e0
	bool HasBuff(struct UTigerBuff* BuffType); // Function Tiger.TigerBuffComponent.HasBuff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec740
	float GetTimeLeft(struct UTigerBuff* BuffType); // Function Tiger.TigerBuffComponent.GetTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec6a0
	struct UTigerBuffInstance* FindExistingBuffOfType(struct UTigerBuff* BuffType, struct ATigerCharacter* Caster); // Function Tiger.TigerBuffComponent.FindExistingBuffOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13ec410
	void Client_ClearBuffFor(struct ATigerCharacter* Target, int32_t BuffID); // Function Tiger.TigerBuffComponent.Client_ClearBuffFor // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13ec270
	void Client_ClearAllBuffs(); // Function Tiger.TigerBuffComponent.Client_ClearAllBuffs // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0xd01030
	void Client_AddBuff(struct UTigerBuff* BuffType, int32_t BuffID, struct ATigerCharacter* BuffCaster, float Length, float BuffStrength); // Function Tiger.TigerBuffComponent.Client_AddBuff // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13ec0d0
	int32_t ApplyStun(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyStun // (Final|Native|Public|BlueprintCallable) // @ game+0x13ec000
	int32_t ApplyInvulnerable(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyInvulnerable // (Final|Native|Public|BlueprintCallable) // @ game+0x13ebf30
	int32_t ApplyImmobilized(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyImmobilized // (Final|Native|Public|BlueprintCallable) // @ game+0x13ebe60
	int32_t ApplyGrounded(float Length, struct ATigerCharacter* BuffCaster); // Function Tiger.TigerBuffComponent.ApplyGrounded // (Final|Native|Public|BlueprintCallable) // @ game+0x13ebd90
	int32_t ApplyBuff(struct UTigerBuff* BuffType, struct ATigerCharacter* BuffCaster, float OverrideLength, float OverrideBuffStrength, bool bDoLagCompensation); // Function Tiger.TigerBuffComponent.ApplyBuff // (Final|Native|Public|BlueprintCallable) // @ game+0x13ebbf0
};

// Class Tiger.TigerBuffDisciplineVentrueClanInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffDisciplineVentrueClanInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffDisciplineVentrueClan
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffDisciplineVentrueClan : UTigerBuff {
};

// Class Tiger.TigerBuffDOT
// Size: 0x278 (Inherited: 0x268)
struct UTigerBuffDOT : UTigerBuff {
	struct UDamageType* DamageType; // 0x268(0x08)
	float DamagePerTick; // 0x270(0x04)
	bool bPlayHitAnimation; // 0x274(0x01)
	bool bSpawnBloodDecals; // 0x275(0x01)
	bool bUseCasterAsInstigator; // 0x276(0x01)
	char pad_277[0x1]; // 0x277(0x01)
};

// Class Tiger.TigerBuffDOTInstance
// Size: 0xa0 (Inherited: 0x88)
struct UTigerBuffDOTInstance : UTigerBuffInstance {
	struct UTigerBuffDOT* BuffDOT; // 0x88(0x08)
	char pad_90[0x10]; // 0x90(0x10)
};

// Class Tiger.TigerBufferedAction
// Size: 0x48 (Inherited: 0x28)
struct UTigerBufferedAction : UObject {
	struct ATigerPlayerController* OwnerPlayerController; // 0x28(0x08)
	struct UTigerActionBuffer* OwnerActionBuffer; // 0x30(0x08)
	char pad_38[0x10]; // 0x38(0x10)
};

// Class Tiger.TigerBufferedActionQuickAttack
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionQuickAttack : UTigerBufferedAction {
};

// Class Tiger.TigerBuffExtraArtifacts
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffExtraArtifacts : UTigerBuff {
};

// Class Tiger.TigerBuffExtraArtifactsInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffExtraArtifactsInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffFOTTChargeup
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffFOTTChargeup : UTigerBuff {
};

// Class Tiger.TigerBuffFOTTChargeupInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffFOTTChargeupInstance : UTigerBuffInstance {
	struct UTigerBuffFOTTChargeup* FOTTChargeupBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffFOTTKnockbackWallStun
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffFOTTKnockbackWallStun : UTigerBuff {
	float WallStunnedTimer; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
};

// Class Tiger.TigerBuffFOTTKnockbackWallStunInstance
// Size: 0xa0 (Inherited: 0x88)
struct UTigerBuffFOTTKnockbackWallStunInstance : UTigerBuffInstance {
	struct UTigerBuffFOTTKnockbackWallStun* FOTTKnockbackWallStun; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
	struct ATigerCharacter* Target; // 0x98(0x08)
};

// Class Tiger.TigerBuffFrenzy
// Size: 0x278 (Inherited: 0x268)
struct UTigerBuffFrenzy : UTigerBuff {
	float HPRegenPercentPerSecond; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UTigerWeapon* WeaponClassToEquip; // 0x270(0x08)
};

// Class Tiger.TigerBuffFrenzyInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffFrenzyInstance : UTigerBuffInstance {
	struct UTigerBuffFrenzy* FrenzyBuff; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffInAirMomentumLossInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffInAirMomentumLossInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)

	void OnLandedDelegate(struct FHitResult& InHit); // Function Tiger.TigerBuffInAirMomentumLossInstance.OnLandedDelegate // (Final|Native|Public|HasOutParms) // @ game+0x13f2f50
};

// Class Tiger.TigerBuffInAirMomentumLoss
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffInAirMomentumLoss : UTigerBuff {
	float MinimumHorizontalSpeed; // 0x268(0x04)
	float TimeToDecelerate; // 0x26c(0x04)
};

// Class Tiger.TigerBuffKindredCharmInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffKindredCharmInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffKindredCharm
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffKindredCharm : UTigerBuff {
};

// Class Tiger.TigerBuffMasqueradeKeepingMovement
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffMasqueradeKeepingMovement : UTigerBuff {
};

// Class Tiger.TigerBuffMasqueradeKeepingMovementInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffMasqueradeKeepingMovementInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerBuffMeleeCharge
// Size: 0x278 (Inherited: 0x268)
struct UTigerBuffMeleeCharge : UTigerBuff {
	float TimeRunningBeforeBuffIsActive; // 0x268(0x04)
	float MaxDeviationAllowedInDegrees; // 0x26c(0x04)
	struct UTigerBuff* AttackBuff; // 0x270(0x08)
};

// Class Tiger.TigerBuffMeleeChargeInstance
// Size: 0xb0 (Inherited: 0x88)
struct UTigerBuffMeleeChargeInstance : UTigerBuffInstance {
	struct UTigerBuffMeleeCharge* MeleeChargeBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerBuffMeleeChargeAttack
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffMeleeChargeAttack : UTigerBuff {
	struct UParticleSystem* AttackParticleEffect; // 0x268(0x08)
};

// Class Tiger.TigerBuffMeleeChargeAttackInstance
// Size: 0xa8 (Inherited: 0x88)
struct UTigerBuffMeleeChargeAttackInstance : UTigerBuffInstance {
	struct UTigerBuffMeleeChargeAttack* MeleeChargeAttackBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	struct UParticleSystemComponent* ActiveAttackParticles; // 0x98(0x08)
	char pad_A0[0x8]; // 0xa0(0x08)

	void SwingFinished(); // Function Tiger.TigerBuffMeleeChargeAttackInstance.SwingFinished // (Final|Native|Private) // @ game+0x13f30c0
};

// Class Tiger.TigerBuffApathy
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffApathy : UTigerBuff {
};

// Class Tiger.TigerBuffApathyInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffApathyInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffWrath
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffWrath : UTigerBuff {
};

// Class Tiger.TigerBuffWrathInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffWrathInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuffPostProcess
// Size: 0x238 (Inherited: 0x228)
struct ATigerBuffPostProcess : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct UPostProcessComponent* PostProcess; // 0x230(0x08)
};

// Class Tiger.TigerBuffPreventMasqueradeBreak
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffPreventMasqueradeBreak : UTigerBuff {
	struct UAkAudioEvent* ArtifactBreakAudioEvent; // 0x268(0x08)
};

// Class Tiger.TigerBuffPreventMasqueradeBreakInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffPreventMasqueradeBreakInstance : UTigerBuffInstance {
	struct UTigerBuffPreventMasqueradeBreak* PreventMasqueradeBreakBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffRejuvenatingVoiceInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffRejuvenatingVoiceInstance : UTigerBuffInstance {
	char pad_88[0x8]; // 0x88(0x08)
};

// Class Tiger.TigerBuffRejuvenatingVoice
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffRejuvenatingVoice : UTigerBuff {

	void OnHealStop(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuffRejuvenatingVoice.OnHealStop // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnHealStart(struct ATigerCharacter* InBuffOwner, struct ATigerCharacter* InBuffCaster); // Function Tiger.TigerBuffRejuvenatingVoice.OnHealStart // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerBuffRespawnGhost
// Size: 0x278 (Inherited: 0x268)
struct UTigerBuffRespawnGhost : UTigerBuff {
	struct UMaterialInterface* GhostMaterial; // 0x268(0x08)
	struct UTigerBuffRespawnGhostInstance* BuffInstanceClass; // 0x270(0x08)
};

// Class Tiger.TigerBuffRespawnGhostInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffRespawnGhostInstance : UTigerBuffInstance {

	void OnDeactivatedBP(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerBuffRespawnGhostInstance.OnDeactivatedBP // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnActivatedBP(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerBuffRespawnGhostInstance.OnActivatedBP // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerBuffShackles
// Size: 0x280 (Inherited: 0x268)
struct UTigerBuffShackles : UTigerBuff {
	struct UTigerCharacterEffect* ActiveEffect; // 0x268(0x08)
	struct FName ShacklesStaggerAnimationName; // 0x270(0x08)
	float DamageToDeal; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
};

// Class Tiger.TigerBuffShacklesInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerBuffShacklesInstance : UTigerBuffInstance {
	struct UTigerBuffShackles* ShacklesBuff; // 0x88(0x08)
};

// Class Tiger.TigerBuffShark
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffShark : UTigerBuff {
};

// Class Tiger.TigerBuffSharkInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffSharkInstance : UTigerBuffInstance {
	struct UTigerBuffShark* SharkBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
};

// Class Tiger.TigerBuffShieldBase
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffShieldBase : UTigerBuff {
	float MaxShield; // 0x268(0x04)
	float InitialShield; // 0x26c(0x04)
};

// Class Tiger.TigerBuffShieldAdrenalineRush
// Size: 0x280 (Inherited: 0x270)
struct UTigerBuffShieldAdrenalineRush : UTigerBuffShieldBase {
	float TimeBeforeDecay; // 0x270(0x04)
	float DecayPerSecond; // 0x274(0x04)
	float DamageToShieldScale; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
};

// Class Tiger.TigerBuffShieldBaseInstance
// Size: 0xa0 (Inherited: 0x88)
struct UTigerBuffShieldBaseInstance : UTigerBuffInstance {
	char pad_88[0x18]; // 0x88(0x18)
};

// Class Tiger.TigerBuffShieldAdrenalineRushInstance
// Size: 0xa8 (Inherited: 0xa0)
struct UTigerBuffShieldAdrenalineRushInstance : UTigerBuffShieldBaseInstance {
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class Tiger.TigerBuffSingleSwing
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffSingleSwing : UTigerBuff {
};

// Class Tiger.TigerBuffSingleSwingInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffSingleSwingInstance : UTigerBuffInstance {
	struct ATigerPlayer* Player; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)

	void SwingFinished(); // Function Tiger.TigerBuffSingleSwingInstance.SwingFinished // (Final|Native|Private) // @ game+0x13f30e0
};

// Class Tiger.TigerBuffStunBaton
// Size: 0x288 (Inherited: 0x268)
struct UTigerBuffStunBaton : UTigerBuff {
	float StunBonusDamage; // 0x268(0x04)
	float ChargeGainedOnHit; // 0x26c(0x04)
	float ChargeGainedPerUpdate; // 0x270(0x04)
	float PassiveChargeRate; // 0x274(0x04)
	bool bRegisterMultipleHitsOnChargeUp; // 0x278(0x01)
	bool bRegisterMultipleHitsOnStun; // 0x279(0x01)
	char pad_27A[0x6]; // 0x27a(0x06)
	struct UTigerBuffInstance* TBPInstanceBuff; // 0x280(0x08)
};

// Class Tiger.TigerBuffStunBatonInstance
// Size: 0xa8 (Inherited: 0x88)
struct UTigerBuffStunBatonInstance : UTigerBuffInstance {
	struct UTigerBuffStunBaton* StunBatonBuff; // 0x88(0x08)
	char pad_90[0x10]; // 0x90(0x10)
	struct ATigerPlayer* Player; // 0xa0(0x08)

	void TargetHitShockConsumed(struct ATigerCharacter* Target); // Function Tiger.TigerBuffStunBatonInstance.TargetHitShockConsumed // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SwingStarted(bool bWasHeavyAttack); // Function Tiger.TigerBuffStunBatonInstance.SwingStarted // (Final|Native|Public) // @ game+0x13f3120
	void SwingFinished(); // Function Tiger.TigerBuffStunBatonInstance.SwingFinished // (Final|Native|Public) // @ game+0x13f3100
	void MaxChargeReachedEvent(); // Function Tiger.TigerBuffStunBatonInstance.MaxChargeReachedEvent // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsStunReady(); // Function Tiger.TigerBuffStunBatonInstance.IsStunReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f2ea0
	void HitTarget(struct ATigerCharacter* InTarget); // Function Tiger.TigerBuffStunBatonInstance.HitTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13f2e10
	void ChargeGainedEvent(float CurrentChargeValue); // Function Tiger.TigerBuffStunBatonInstance.ChargeGainedEvent // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void AddCharge(float ValueToAdd); // Function Tiger.TigerBuffStunBatonInstance.AddCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x13f2d90
};

// Class Tiger.TigerBuffThorns
// Size: 0x290 (Inherited: 0x278)
struct UTigerBuffThorns : UTigerBuffDOT {
	float HealInterval; // 0x278(0x04)
	float HealPercentage; // 0x27c(0x04)
	struct UTigerCharacterEffect* HealEffect; // 0x280(0x08)
	struct UAkAudioEvent* DOTTriggerEvent; // 0x288(0x08)
};

// Class Tiger.TigerBuffThornsInstance
// Size: 0xb0 (Inherited: 0xa0)
struct UTigerBuffThornsInstance : UTigerBuffDOTInstance {
	char pad_A0[0x8]; // 0xa0(0x08)
	struct UTigerBuffThorns* ThornsBuff; // 0xa8(0x08)
};

// Class Tiger.TigerBuffUnholyStimulant
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffUnholyStimulant : UTigerBuff {
};

// Class Tiger.TigerBuffUnholyStimulantInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffUnholyStimulantInstance : UTigerBuffInstance {

	void OnInsideHolyIncenseChanged(bool bInIsInsideHolyIncense); // Function Tiger.TigerBuffUnholyStimulantInstance.OnInsideHolyIncenseChanged // (Final|Native|Private) // @ game+0x13f2ec0
};

// Class Tiger.TigerBuffVanish
// Size: 0x288 (Inherited: 0x268)
struct UTigerBuffVanish : UTigerBuffInvisible {
	float TimeReductionPerMeterMoved; // 0x268(0x04)
	float NoiseNotifyEventRange; // 0x26c(0x04)
	struct UCurveFloat* MaterialTransitionIntoCurve; // 0x270(0x08)
	struct UCurveFloat* MaterialTransitionOutFromCurve; // 0x278(0x08)
	struct UParticleSystem* BlendOutParticles; // 0x280(0x08)
};

// Class Tiger.TigerBuffVanishInstance
// Size: 0xb0 (Inherited: 0x88)
struct UTigerBuffVanishInstance : UTigerBuffInstance {
	struct UTigerBuffVanish* VanishBuff; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerBuffVoiceOfInspiration
// Size: 0x268 (Inherited: 0x268)
struct UTigerBuffVoiceOfInspiration : UTigerBuff {
};

// Class Tiger.TigerBuffVoiceOfInspirationInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBuffVoiceOfInspirationInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBuildingWallPreset
// Size: 0x38 (Inherited: 0x28)
struct UTigerBuildingWallPreset : UObject {
	struct TArray<struct TSoftObjectPtr<UStaticMesh>> Meshes; // 0x28(0x10)
};

// Class Tiger.TigerBuildingSystem
// Size: 0x290 (Inherited: 0x228)
struct ATigerBuildingSystem : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USplineComponent* SplineLeft; // 0x230(0x08)
	struct USplineComponent* SplineRight; // 0x238(0x08)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerFrontComponents; // 0x240(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerLeftComponents; // 0x250(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerBackComponents; // 0x260(0x10)
	struct TArray<struct FTigerBuildingSystemTransformableCorner> PoseableCornerRightComponents; // 0x270(0x10)
	struct FTigerBuildingSystemWallPieceInstancingData WallPieceInstancingDatas; // 0x280(0x10)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerBuildingSystem.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x13f3030
};

// Class Tiger.TigerBuildingSystemDepricated
// Size: 0x4b0 (Inherited: 0x290)
struct ATigerBuildingSystemDepricated : ATigerBuildingSystem {
	struct UHierarchicalInstancedStaticMeshComponent* Front_00; // 0x290(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_01; // 0x298(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_02; // 0x2a0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_03; // 0x2a8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_04; // 0x2b0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_05; // 0x2b8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_06; // 0x2c0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Front_07; // 0x2c8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_00; // 0x2d0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_01; // 0x2d8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_02; // 0x2e0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_03; // 0x2e8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_04; // 0x2f0(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_05; // 0x2f8(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_06; // 0x300(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Left_07; // 0x308(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_00; // 0x310(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_01; // 0x318(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_02; // 0x320(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_03; // 0x328(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_04; // 0x330(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_05; // 0x338(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_06; // 0x340(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Back_07; // 0x348(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_00; // 0x350(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_01; // 0x358(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_02; // 0x360(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_03; // 0x368(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_04; // 0x370(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_05; // 0x378(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_06; // 0x380(0x08)
	struct UHierarchicalInstancedStaticMeshComponent* Right_07; // 0x388(0x08)
	struct UStaticMeshComponent* CornerFL_00; // 0x390(0x08)
	struct UStaticMeshComponent* CornerFL_01; // 0x398(0x08)
	struct UStaticMeshComponent* CornerFL_02; // 0x3a0(0x08)
	struct UStaticMeshComponent* CornerFL_03; // 0x3a8(0x08)
	struct UStaticMeshComponent* CornerFL_04; // 0x3b0(0x08)
	struct UStaticMeshComponent* CornerFL_05; // 0x3b8(0x08)
	struct UStaticMeshComponent* CornerFL_06; // 0x3c0(0x08)
	struct UStaticMeshComponent* CornerFL_07; // 0x3c8(0x08)
	struct UStaticMeshComponent* CornerLB_00; // 0x3d0(0x08)
	struct UStaticMeshComponent* CornerLB_01; // 0x3d8(0x08)
	struct UStaticMeshComponent* CornerLB_02; // 0x3e0(0x08)
	struct UStaticMeshComponent* CornerLB_03; // 0x3e8(0x08)
	struct UStaticMeshComponent* CornerLB_04; // 0x3f0(0x08)
	struct UStaticMeshComponent* CornerLB_05; // 0x3f8(0x08)
	struct UStaticMeshComponent* CornerLB_06; // 0x400(0x08)
	struct UStaticMeshComponent* CornerLB_07; // 0x408(0x08)
	struct UStaticMeshComponent* CornerBR_00; // 0x410(0x08)
	struct UStaticMeshComponent* CornerBR_01; // 0x418(0x08)
	struct UStaticMeshComponent* CornerBR_02; // 0x420(0x08)
	struct UStaticMeshComponent* CornerBR_03; // 0x428(0x08)
	struct UStaticMeshComponent* CornerBR_04; // 0x430(0x08)
	struct UStaticMeshComponent* CornerBR_05; // 0x438(0x08)
	struct UStaticMeshComponent* CornerBR_06; // 0x440(0x08)
	struct UStaticMeshComponent* CornerBR_07; // 0x448(0x08)
	struct UStaticMeshComponent* CornerRF_00; // 0x450(0x08)
	struct UStaticMeshComponent* CornerRF_01; // 0x458(0x08)
	struct UStaticMeshComponent* CornerRF_02; // 0x460(0x08)
	struct UStaticMeshComponent* CornerRF_03; // 0x468(0x08)
	struct UStaticMeshComponent* CornerRF_04; // 0x470(0x08)
	struct UStaticMeshComponent* CornerRF_05; // 0x478(0x08)
	struct UStaticMeshComponent* CornerRF_06; // 0x480(0x08)
	struct UStaticMeshComponent* CornerRF_07; // 0x488(0x08)
	char pad_490[0x20]; // 0x490(0x20)

	void RemoveUnusedParts(); // Function Tiger.TigerBuildingSystemDepricated.RemoveUnusedParts // (Final|Native|Public|BlueprintCallable) // @ game+0x13f8510
	struct UHierarchicalInstancedStaticMeshComponent* GetFloorMeshComponent(enum class UTigerBuildingSide Side, int32_t FloorNumber); // Function Tiger.TigerBuildingSystemDepricated.GetFloorMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7360
	struct UStaticMeshComponent* GetCornerMeshComponent(enum class UTigerBuildingSide Side, int32_t FloorNumber); // Function Tiger.TigerBuildingSystemDepricated.GetCornerMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7110
	struct TArray<struct UHierarchicalInstancedStaticMeshComponent*> GetAllFloorMeshComponents(); // Function Tiger.TigerBuildingSystemDepricated.GetAllFloorMeshComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6bd0
	struct TArray<struct UStaticMeshComponent*> GetAllCornerMeshComponents(); // Function Tiger.TigerBuildingSystemDepricated.GetAllCornerMeshComponents // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6ba0
};

// Class Tiger.TigerBuildingWallStreamingSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerBuildingWallStreamingSettings : USharkLocalDeveloperSettings {
	int32_t WallsToStreamPerFrame; // 0x38(0x04)
	bool bLoggingEnabled; // 0x3c(0x01)
	char pad_3D[0x3]; // 0x3d(0x03)
};

// Class Tiger.TigerBuildingSystemWallStreamer
// Size: 0x250 (Inherited: 0x228)
struct ATigerBuildingSystemWallStreamer : AActor {
	struct TArray<struct FTigerStreamableBuildingSides> StreamableBuildingParts; // 0x228(0x10)
	struct TArray<struct UStaticMeshComponent*> ComponentsToCreateRenderstateOn; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)
};

// Class Tiger.TigerBuildingWallPreviewer
// Size: 0x230 (Inherited: 0x228)
struct ATigerBuildingWallPreviewer : AActor {
	struct UTigerBuildingWallPreset* Preset; // 0x228(0x08)
};

// Class Tiger.TigerCamarillaDecal
// Size: 0x238 (Inherited: 0x230)
struct ATigerCamarillaDecal : ADecalActor {
	char pad_230[0x8]; // 0x230(0x08)
};

// Class Tiger.TigerCameraPreset
// Size: 0xa8 (Inherited: 0x28)
struct UTigerCameraPreset : UObject {
	float FOV; // 0x28(0x04)
	float SpringArmLength; // 0x2c(0x04)
	struct FVector CameraOffset; // 0x30(0x0c)
	struct FVector TargetOffset; // 0x3c(0x0c)
	struct UCurveFloat* TransitionCurveIn; // 0x48(0x08)
	struct UCurveFloat* TransitionCurveOutOverride; // 0x50(0x08)
	struct UCurveFloat* RotatePawnTransition; // 0x58(0x08)
	float SidewaysCameraMirrorTime; // 0x60(0x04)
	struct FVector CameraLagSpeed; // 0x64(0x0c)
	struct FVector CameraLagMaxDistance; // 0x70(0x0c)
	float CameraRotationLagSpeed; // 0x7c(0x04)
	float CameraSensitivityModifier; // 0x80(0x04)
	bool bUseCameraSensitivtyModifierDuringFade; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	struct UTigerCameraBehavior* CameraBehavior; // 0x88(0x08)
	struct UMatineeCameraShake* CameraShakeBehaviour; // 0x90(0x08)
	bool bShortenSpringArmWhenLookingUp; // 0x98(0x01)
	char pad_99[0x3]; // 0x99(0x03)
	float ViewPitchMax; // 0x9c(0x04)
	float ArmLengthInterpSpeed; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class Tiger.TigerCapturePointProgressUI
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerCapturePointProgressUI : UTigerWidget {
	struct FText YouCapturingStatusText; // 0x280(0x18)
	struct FText EnemyCapturingStatusText; // 0x298(0x18)
	struct FText ContestedStatusText; // 0x2b0(0x18)
	enum class ETigerCapturePointStatus CaptureStatus; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	float PercentageLeft; // 0x2cc(0x04)

	void StatusChanged(); // Function Tiger.TigerCapturePointProgressUI.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCapturePointEnabled(); // Function Tiger.TigerCapturePointProgressUI.OnCapturePointEnabled // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerChallenge
// Size: 0xf8 (Inherited: 0x28)
struct UTigerChallenge : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FMulticastInlineDelegate OnValueChangedEvent; // 0x30(0x10)
	struct FMulticastInlineDelegate OnChallengeCompletedEvent; // 0x40(0x10)
	struct FMulticastInlineDelegate OnChallengeTierCompletedEvent; // 0x50(0x10)
	struct UWorld* World; // 0x60(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0x68(0x08)
	int32_t PreSessionValue; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)
	struct FText ChallengeDisplayName; // 0x78(0x18)
	struct FText ChallengeGameDisplayName; // 0x90(0x18)
	int32_t DefaultTargetValue; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct TArray<int32_t> DefaultTieredTargetValues; // 0xb0(0x10)
	bool bInOneGame; // 0xc0(0x01)
	bool bWithoutDamage; // 0xc1(0x01)
	char pad_C2[0x2]; // 0xc2(0x02)
	int32_t TargetValue; // 0xc4(0x04)
	struct FText Description; // 0xc8(0x18)
	uint64_t ChallengeTypeTelemetryID; // 0xe0(0x08)
	bool bChallengeCompleteEventRaised; // 0xe8(0x01)
	bool bTierCompleteEventRaised; // 0xe9(0x01)
	bool bUseTiers; // 0xea(0x01)
	char pad_EB[0x1]; // 0xeb(0x01)
	uint32_t CurrentTier; // 0xec(0x04)
	uint32_t NumberOfTiers; // 0xf0(0x04)
	char pad_F4[0x4]; // 0xf4(0x04)

	bool WithoutTakingDamage(); // Function Tiger.TigerChallenge.WithoutTakingDamage // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f85e0
	void SetCurrentValue(int32_t NewValue); // Function Tiger.TigerChallenge.SetCurrentValue // (Native|Public|BlueprintCallable) // @ game+0x13f8550
	void ResetFromTakingDamage(); // Function Tiger.TigerChallenge.ResetFromTakingDamage // (Final|Native|Private) // @ game+0x13f8530
	void OnValueChangedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnValueChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnChallengeTierCompletedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnChallengeTierCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnChallengeCompletedEvent__DelegateSignature(struct UTigerChallenge* Challenge); // DelegateFunction Tiger.TigerChallenge.OnChallengeCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool IsTierComplete(); // Function Tiger.TigerChallenge.IsTierComplete // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8400
	bool IsSingleMatch(); // Function Tiger.TigerChallenge.IsSingleMatch // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f83d0
	bool IsComplete(); // Function Tiger.TigerChallenge.IsComplete // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8340
	bool HasTiers(); // Function Tiger.TigerChallenge.HasTiers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8320
	bool HasCompletedAllTiers(); // Function Tiger.TigerChallenge.HasCompletedAllTiers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8290
	struct FText GetVariableName(); // Function Tiger.TigerChallenge.GetVariableName // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f80b0
	int32_t GetTargetValueOfLastTier(); // Function Tiger.TigerChallenge.GetTargetValueOfLastTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8030
	int32_t GetTargetValueOfCurrentTier(); // Function Tiger.TigerChallenge.GetTargetValueOfCurrentTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7fc0
	int32_t GetTargetValueByTier(int32_t InTier); // Function Tiger.TigerChallenge.GetTargetValueByTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7ef0
	int32_t GetTargetValue(); // Function Tiger.TigerChallenge.GetTargetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7ed0
	struct FTigerQuestIdentifier GetQuestIds(); // Function Tiger.TigerChallenge.GetQuestIds // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f77e0
	float GetProgressAcrossAllTiers(); // Function Tiger.TigerChallenge.GetProgressAcrossAllTiers // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f77a0
	float GetProgress(); // Function Tiger.TigerChallenge.GetProgress // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7760
	int32_t GetPreSessionValue(); // Function Tiger.TigerChallenge.GetPreSessionValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7740
	int32_t GetNumberOfTiers(); // Function Tiger.TigerChallenge.GetNumberOfTiers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7680
	struct FText GetDescription(); // Function Tiger.TigerChallenge.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f72b0
	int32_t GetCurrentValueClamped(); // Function Tiger.TigerChallenge.GetCurrentValueClamped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7250
	int32_t GetCurrentValue(); // Function Tiger.TigerChallenge.GetCurrentValue // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7220
	int32_t GetCurrentTier(); // Function Tiger.TigerChallenge.GetCurrentTier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f71e0
	struct FText GetClanRequirementsText(); // Function Tiger.TigerChallenge.GetClanRequirementsText // (Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x18b4070
	struct FString GetChallengeName(); // Function Tiger.TigerChallenge.GetChallengeName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6fd0
	struct FText GetChallengeGameDisplayName(); // Function Tiger.TigerChallenge.GetChallengeGameDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6fa0
	struct FText GetChallengeDisplayName(); // Function Tiger.TigerChallenge.GetChallengeDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6ea0
	struct TArray<int32_t> GetAllTargetValues(); // Function Tiger.TigerChallenge.GetAllTargetValues // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6c60
	struct FText BuildDescriptionText(); // Function Tiger.TigerChallenge.BuildDescriptionText // (Event|Protected|BlueprintEvent|Const) // @ game+0x18b4070
	void AdvanceTier(); // Function Tiger.TigerChallenge.AdvanceTier // (Final|Native|Public) // @ game+0x13f6b80
	void AdvanceChallenge(); // Function Tiger.TigerChallenge.AdvanceChallenge // (Final|Native|Public) // @ game+0x13f6b60
};

// Class Tiger.TigerChallengeBreakMasquerade
// Size: 0x100 (Inherited: 0xf8)
struct UTigerChallengeBreakMasquerade : UTigerChallenge {
	char pad_F8[0x8]; // 0xf8(0x08)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeBreakMasquerade.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13f8480
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengeBreakMasquerade.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x13f81c0
};

// Class Tiger.TigerChallengeCollectibles
// Size: 0x100 (Inherited: 0xf8)
struct UTigerChallengeCollectibles : UTigerChallenge {
	char pad_F8[0x8]; // 0xf8(0x08)

	void HandleCollectibleCollected(uint32_t InCollectibleId); // Function Tiger.TigerChallengeCollectibles.HandleCollectibleCollected // (Final|Native|Private) // @ game+0x13f8130
};

// Class Tiger.TigerChallengeCollectibleSet
// Size: 0x110 (Inherited: 0xf8)
struct UTigerChallengeCollectibleSet : UTigerChallenge {
	struct UTigerGrimoireCategory* CategoryToComplete; // 0xf8(0x08)
	struct UTigerGrimoireEntry* EntryToComplete; // 0x100(0x08)
	char pad_108[0x8]; // 0x108(0x08)

	void OnPersistentPlayerInitialised(); // Function Tiger.TigerChallengeCollectibleSet.OnPersistentPlayerInitialised // (Final|Native|Private) // @ game+0x13f8460
};

// Class Tiger.TigerChallengeCollection
// Size: 0x48 (Inherited: 0x30)
struct UTigerChallengeCollection : UDataAsset {
	struct TArray<struct FTigerChallengeCollectionEntry> Challenges; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerClientRewardTrackChallenges
// Size: 0x38 (Inherited: 0x28)
struct UTigerClientRewardTrackChallenges : UObject {
	int32_t RewardHighlightIndex; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct UTigerPersistentPlayerState* PersistentPlayerState; // 0x30(0x08)

	bool IsComplete(); // Function Tiger.TigerClientRewardTrackChallenges.IsComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8370
	struct UTigerInventoryItemBase* GetRewardTiedToSpecificChallengeByIndex(int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetRewardTiedToSpecificChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7e30
	struct FTigerItemId GetRewardIdTiedToSpecificChallengeByIndex(int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetRewardIdTiedToSpecificChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7ad0
	int32_t GetNumCompletedChallenges(); // Function Tiger.TigerClientRewardTrackChallenges.GetNumCompletedChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f75c0
	int32_t GetNumChallenges(); // Function Tiger.TigerClientRewardTrackChallenges.GetNumChallenges // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7430
	float GetCompletionPercentage(); // Function Tiger.TigerClientRewardTrackChallenges.GetCompletionPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7050
	enum class ETigerChallengeCategory GetChallengeCategory(); // Function Tiger.TigerClientRewardTrackChallenges.GetChallengeCategory // (Native|Public|Const) // @ game+0xe0c130
	struct UTigerChallenge* GetChallengeByIndex(int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackChallenges.GetChallengeByIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6e00
};

// Class Tiger.TigerClientRewardTrackTransientChallenges
// Size: 0x58 (Inherited: 0x38)
struct UTigerClientRewardTrackTransientChallenges : UTigerClientRewardTrackChallenges {
	struct TArray<struct FTigerChallengeTypeID> ChallengeStorageIDs; // 0x38(0x10)
	struct TArray<struct FTigerItemId> RewardIdForSpecificChallenge; // 0x48(0x10)
};

// Class Tiger.TigerClientRewardTrackDailyChallenges
// Size: 0x70 (Inherited: 0x38)
struct UTigerClientRewardTrackDailyChallenges : UTigerClientRewardTrackChallenges {
	struct TArray<struct FTigerItemId> RewardIds; // 0x38(0x10)
	struct TArray<struct FTigerChallengeTypeID> DailyChallengeIDs; // 0x48(0x10)
	struct FTigerItemId DailyChallengeExpReward; // 0x58(0x08)
	struct FTigerItemId PersistentDailyChallengeTokenReward; // 0x60(0x08)
	bool bIsFirstChallengePersistent; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)

	struct UTigerInventoryItemBase* GetRewardByIndex(int32_t InRewardIndex); // Function Tiger.TigerClientRewardTrackDailyChallenges.GetRewardByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7960
};

// Class Tiger.TigerClientRewardTrackWeeklyChallenges
// Size: 0x68 (Inherited: 0x58)
struct UTigerClientRewardTrackWeeklyChallenges : UTigerClientRewardTrackTransientChallenges {
	struct FDateTime UnlockDate; // 0x58(0x08)
	struct FDateTime LockDate; // 0x60(0x08)

	bool IsUnlocked(); // Function Tiger.TigerClientRewardTrackWeeklyChallenges.IsUnlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8430
	bool HasExpired(); // Function Tiger.TigerClientRewardTrackWeeklyChallenges.HasExpired // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f82f0
	struct FTimespan GetTimeRemainingToUnlock(); // Function Tiger.TigerClientRewardTrackWeeklyChallenges.GetTimeRemainingToUnlock // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8070
};

// Class Tiger.TigerClientRewardTrackMasteryChallenges
// Size: 0x88 (Inherited: 0x38)
struct UTigerClientRewardTrackMasteryChallenges : UTigerClientRewardTrackChallenges {
	struct TMap<enum class ETigerChallengeSubCategory, struct FTigerNestedSubCategoryContainer> Challenges; // 0x38(0x50)

	struct FTigerItemId GetRewardIdTiedToSpecificChallengeByIndexOfSubcategory(enum class ETigerChallengeSubCategory InSubCategory, int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetRewardIdTiedToSpecificChallengeByIndexOfSubcategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7b70
	int32_t GetNumCompletedChallengesOfSubCategory(enum class ETigerChallengeSubCategory InSubCategory); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetNumCompletedChallengesOfSubCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f75f0
	int32_t GetNumChallengesOfSubCategory(enum class ETigerChallengeSubCategory InSubCategory); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetNumChallengesOfSubCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7530
	struct TMap<enum class ETigerChallengeSubCategory, int32_t> GetNumChallengesBySubCategory(); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetNumChallengesBySubCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7460
	int32_t GetCompletionPercentageOfSubcategory(enum class ETigerChallengeSubCategory InSubCategory); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetCompletionPercentageOfSubcategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7080
	struct UTigerChallenge* GetChallengeFromSubCategoryByIndex(enum class ETigerChallengeSubCategory InSubCategory, int32_t InChallengeIndex); // Function Tiger.TigerClientRewardTrackMasteryChallenges.GetChallengeFromSubCategoryByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f6ed0
};

// Class Tiger.TigerClientRewardTrackTestChallenges
// Size: 0x58 (Inherited: 0x58)
struct UTigerClientRewardTrackTestChallenges : UTigerClientRewardTrackTransientChallenges {
};

// Class Tiger.TigerClientChallengesCollection
// Size: 0x58 (Inherited: 0x28)
struct UTigerClientChallengesCollection : UObject {
	struct TArray<struct UTigerClientRewardTrackWeeklyChallenges*> WeeklyChallenges; // 0x28(0x10)
	struct UTigerClientRewardTrackDailyChallenges* DailyChallenges; // 0x38(0x08)
	struct TArray<struct UTigerClientRewardTrackMasteryChallenges*> MasteryChallenges; // 0x40(0x10)
	struct UTigerClientRewardTrackTestChallenges* TestChallenges; // 0x50(0x08)

	struct UTigerInventoryItemBase* GetRewardTiedToChallengeOfCategory(enum class ETigerChallengeCategory InCategory, struct UTigerChallenge* InChallenge, int32_t InTier); // Function Tiger.TigerClientChallengesCollection.GetRewardTiedToChallengeOfCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7d20
	struct UTigerInventoryItemBase* GetRewardTiedToChallenge(struct UTigerChallenge* InChallenge, int32_t InTier); // Function Tiger.TigerClientChallengesCollection.GetRewardTiedToChallenge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7c50
	struct FTigerItemId GetRewardIdTiedToChallenge(struct UTigerChallenge* InChallenge, int32_t InTier); // Function Tiger.TigerClientChallengesCollection.GetRewardIdTiedToChallenge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f7a00
	int32_t GetPercentageCompletionOfCategory(enum class ETigerChallengeCategory InCategory); // Function Tiger.TigerClientChallengesCollection.GetPercentageCompletionOfCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f76b0
	bool AllowTestChallenges(); // Function Tiger.TigerClientChallengesCollection.AllowTestChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb53540
};

// Class Tiger.TigerChallengeDealDamage
// Size: 0x168 (Inherited: 0xf8)
struct UTigerChallengeDealDamage : UTigerChallenge {
	bool bNeedsToDamagePlayer; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0x100(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x118(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x128(0x10)
	struct FTigerChallengeRequirementDistance DistanceToEnemyRequirement; // 0x138(0x10)
	struct FTigerChallengeRequirementPowerKit PlayerArchetypeRequirement; // 0x148(0x10)
	char pad_158[0x10]; // 0x158(0x10)
};

// Class Tiger.TigerChallengeDiablerize
// Size: 0x130 (Inherited: 0xf8)
struct UTigerChallengeDiablerize : UTigerChallenge {
	struct FTigerChallengeRequirementClan TargetRequiredClan; // 0xf8(0x10)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x108(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x118(0x10)
	char pad_128[0x8]; // 0x128(0x08)

	void OnDiablerizedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeDiablerize.OnDiablerizedPlayerEvent // (Final|Native|Private) // @ game+0x13fd0b0
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeDiablerize.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13fcdb0
};

// Class Tiger.TigerChallengeDownPlayer
// Size: 0x158 (Inherited: 0xf8)
struct UTigerChallengeDownPlayer : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xf8(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x110(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x120(0x10)
	struct FTigerChallengeRequirementDisciplineSlot DisciplineFailRequirement; // 0x130(0x10)
	struct FTigerChallengeRequirementAirborne AirborneRequirement; // 0x140(0x10)
	bool bIsAirborneRequirementForPlayer; // 0x150(0x01)
	bool bDownWithHeadShot; // 0x151(0x01)
	char pad_152[0x6]; // 0x152(0x06)

	void OnDownedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeDownPlayer.OnDownedPlayerEvent // (Final|Native|Private) // @ game+0x13fd250
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeDownPlayer.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13fce40
};

// Class Tiger.TigerChallengeDrainNpc
// Size: 0x118 (Inherited: 0xf8)
struct UTigerChallengeDrainNpc : UTigerChallenge {
	bool bSpecificNPCType; // 0xf8(0x01)
	enum class ETigerNPCType TargetNPCType; // 0xf9(0x01)
	enum class ETigerBloodPotency MinimumPotency; // 0xfa(0x01)
	char pad_FB[0x5]; // 0xfb(0x05)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x100(0x10)
	char pad_110[0x8]; // 0x110(0x08)

	bool IsBloodPotencyRelevant(); // Function Tiger.TigerChallengeDrainNpc.IsBloodPotencyRelevant // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13fd080
	void InitOnPlayerEvent(struct AController* NewPlayer); // Function Tiger.TigerChallengeDrainNpc.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13fced0
	void HandleOnFeedingDoneEvent(bool bTargetIsDrained, struct ATigerCharacter* InTargetFedOn); // Function Tiger.TigerChallengeDrainNpc.HandleOnFeedingDoneEvent // (Final|Native|Private) // @ game+0x13fc910
};

// Class Tiger.TigerChallengeDropOffItem
// Size: 0x128 (Inherited: 0xf8)
struct UTigerChallengeDropOffItem : UTigerChallenge {
	struct TSoftObjectPtr<ATigerInteractiveItemDropOff> DropOffPoint; // 0xf8(0x28)
	char pad_120[0x8]; // 0x120(0x08)

	void HandleDropoffCompleted(struct TSoftObjectPtr<ATigerInteractiveItemDropOff> InDropoffPoint); // Function Tiger.TigerChallengeDropOffItem.HandleDropoffCompleted // (Final|Native|Private) // @ game+0x13fc800
};

// Class Tiger.TigerChallengeEliminateGroup
// Size: 0x158 (Inherited: 0xf8)
struct UTigerChallengeEliminateGroup : UTigerChallenge {
	bool bDownedPlayersOnly; // 0xf8(0x01)
	char pad_F9[0x5f]; // 0xf9(0x5f)

	void OnKilledOrDownedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeEliminateGroup.OnKilledOrDownedPlayerEvent // (Final|Native|Private) // @ game+0x13fd3f0
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeEliminateGroup.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x13fcf60
};

// Class Tiger.TigerChallengeGetEatenByShark
// Size: 0x110 (Inherited: 0xf8)
struct UTigerChallengeGetEatenByShark : UTigerChallenge {
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf8(0x10)
	char pad_108[0x8]; // 0x108(0x08)

	void OnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeGetEatenByShark.OnRestartPlayer // (Final|Native|Public) // @ game+0x13fd720
	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeGetEatenByShark.OnPlayerEvent // (Final|Native|Private) // @ game+0x13fd650
};

// Class Tiger.TigerChallengeHeadshots
// Size: 0x140 (Inherited: 0xf8)
struct UTigerChallengeHeadshots : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xf8(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x110(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x120(0x10)
	bool bOnlyOnPlayers; // 0x130(0x01)
	char pad_131[0xf]; // 0x131(0x0f)
};

// Class Tiger.TigerChallengeHitBullets
// Size: 0x140 (Inherited: 0xf8)
struct UTigerChallengeHitBullets : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xf8(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x110(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x120(0x10)
	char pad_130[0x10]; // 0x130(0x10)
};

// Class Tiger.TigerChallengeKillEntity
// Size: 0x120 (Inherited: 0xf8)
struct UTigerChallengeKillEntity : UTigerChallenge {
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf8(0x10)
	struct FTigerChallengeRequirementClan EnemyClanRequirement; // 0x108(0x10)
	char pad_118[0x8]; // 0x118(0x08)

	void HandleOnNpcDeathEvent(struct ATigerNPC* NPC, struct AController* Instigator); // Function Tiger.TigerChallengeKillEntity.HandleOnNpcDeathEvent // (Final|Native|Private) // @ game+0x13fc9e0
};

// Class Tiger.TigerChallengeKillMultipleTimed
// Size: 0x148 (Inherited: 0xf8)
struct UTigerChallengeKillMultipleTimed : UTigerChallenge {
	float TimeToKillGroup; // 0xf8(0x04)
	enum class ETigerEnemyType TypeOfEnemy; // 0xfc(0x01)
	char pad_FD[0x3]; // 0xfd(0x03)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x100(0x10)
	int32_t NumOfEnemiesToKill; // 0x110(0x04)
	char pad_114[0x34]; // 0x114(0x34)

	void OnKilledPlayer(struct ATigerPlayer* InDeadPlayer, struct FDamageEvent& InDamageEvent); // Function Tiger.TigerChallengeKillMultipleTimed.OnKilledPlayer // (Final|Native|Private|HasOutParms) // @ game+0x13fd4c0
	void OnKilledNpc(struct ATigerNPC* InNpc, struct AController* InInstigator); // Function Tiger.TigerChallengeKillMultipleTimed.OnKilledNpc // (Final|Native|Private) // @ game+0x13fd320
	void HandlePlayerLeft(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeKillMultipleTimed.HandlePlayerLeft // (Final|Native|Private) // @ game+0x13fcab0
};

// Class Tiger.TigerChallengeKillPlayers
// Size: 0x168 (Inherited: 0xf8)
struct UTigerChallengeKillPlayers : UTigerChallenge {
	struct FTigerChallengeRequirementWeaponType RequiredWeaponConstraint; // 0xf8(0x18)
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0x110(0x10)
	struct FTigerChallengeRequirementBloodhunted EnemyBloodhuntedRequirement; // 0x120(0x10)
	struct FTigerChallengeRequirementClan EnemyClanRequirement; // 0x130(0x10)
	bool bKillOnlyDownedStateInstigators; // 0x140(0x01)
	char pad_141[0x27]; // 0x141(0x27)

	void OnDownedByPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeKillPlayers.OnDownedByPlayerEvent // (Final|Native|Protected) // @ game+0x13fd180
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeKillPlayers.InitOnPlayerEvent // (Final|Native|Protected) // @ game+0x13fcff0
};

// Class Tiger.TigerChallengePlayGames
// Size: 0x168 (Inherited: 0xf8)
struct UTigerChallengePlayGames : UTigerChallenge {
	struct FTigerChallengeRequirementClan RequiredClanCondition; // 0xf8(0x10)
	struct FTigerChallengeRequirementBalanceMode RequiredBalanceModeCondition; // 0x108(0x10)
	struct FTigerChallengeRequirementGameMode RequiredGameModeCondition; // 0x118(0x20)
	struct FTigerChallengeRequirementExcludeGameMode RequiredExcludeGameModeCondition; // 0x138(0x20)
	bool bWithoutBecomingBloodhunted; // 0x158(0x01)
	bool bResetOnBloodhunted; // 0x159(0x01)
	char pad_15A[0xe]; // 0x15a(0x0e)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengePlayGames.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13fd7b0
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengePlayGames.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x13fcbd0
	void HandlePlayerLeft(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengePlayGames.HandlePlayerLeft // (Final|Native|Private) // @ game+0x13fcb40
};

// Class Tiger.TigerChallengeQuestItemPickup
// Size: 0x128 (Inherited: 0xf8)
struct UTigerChallengeQuestItemPickup : UTigerChallenge {
	struct TSoftObjectPtr<ATigerInteractiveQuestItem> QuestItem; // 0xf8(0x28)
	char pad_120[0x8]; // 0x120(0x08)

	void HandleQuestItemCollected(struct TSoftObjectPtr<ATigerInteractiveQuestItem> InQuestItem); // Function Tiger.TigerChallengeQuestItemPickup.HandleQuestItemCollected // (Final|Native|Private) // @ game+0x13fcca0
};

// Class Tiger.TigerChallengeReachLevel
// Size: 0x100 (Inherited: 0xf8)
struct UTigerChallengeReachLevel : UTigerChallenge {
	char pad_F8[0x4]; // 0xf8(0x04)
	enum class ETigerPlayerLevelType LevelType; // 0xfc(0x01)
	bool bIsAnyArchetypeAtTargetLevel; // 0xfd(0x01)
	enum class ETigerPowerKitType ArchetypeLevelType; // 0xfe(0x01)
	char pad_FF[0x1]; // 0xff(0x01)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeReachLevel.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x13fd840
	void OnPersistentPlayerInitialised(); // Function Tiger.TigerChallengeReachLevel.OnPersistentPlayerInitialised // (Final|Native|Private) // @ game+0x13fd630
	void OnLevelChanged(int32_t InLevel); // Function Tiger.TigerChallengeReachLevel.OnLevelChanged // (Final|Native|Private) // @ game+0x13fd5a0
};

// Class Tiger.TigerChallengeRevive
// Size: 0x110 (Inherited: 0xf8)
struct UTigerChallengeRevive : UTigerChallenge {
	struct FTigerChallengeRequirementBloodhunted PlayerBloodhuntedRequirement; // 0xf8(0x10)
	char pad_108[0x8]; // 0x108(0x08)

	void OnRevivedPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeRevive.OnRevivedPlayerEvent // (Final|Native|Private) // @ game+0x1403f10
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeRevive.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x1402720
};

// Class Tiger.TigerChallengeSharkAssist
// Size: 0x100 (Inherited: 0xf8)
struct UTigerChallengeSharkAssist : UTigerChallenge {
	char pad_F8[0x8]; // 0xf8(0x08)

	void OnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerChallengeSharkAssist.OnRestartPlayer // (Final|Native|Public) // @ game+0x1403e80
	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeSharkAssist.OnPlayerEvent // (Final|Native|Private) // @ game+0x1403ba0
};

// Class Tiger.TigerChallengeSpeakToNpc
// Size: 0x158 (Inherited: 0xf8)
struct UTigerChallengeSpeakToNpc : UTigerChallenge {
	struct FText RequiredNpcToSpeakToName; // 0xf8(0x18)
	struct FTigerChallengeRequirementClan PlayerClanRequirment; // 0x110(0x10)
	bool bTestAgainstSpecificDialogue; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
	struct FString RequiredDialogueBaseKey; // 0x128(0x10)
	struct FString RequiredDialogueKey; // 0x138(0x10)
	char pad_148[0x10]; // 0x148(0x10)

	void HandleNpcSpokenTo(struct FText InNPCName); // Function Tiger.TigerChallengeSpeakToNpc.HandleNpcSpokenTo // (Final|Native|Private|BlueprintCallable) // @ game+0x1401f60
};

// Class Tiger.TigerChallengeSurviveBeingDowned
// Size: 0x100 (Inherited: 0xf8)
struct UTigerChallengeSurviveBeingDowned : UTigerChallenge {
	char pad_F8[0x8]; // 0xf8(0x08)

	void OnPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerChallengeSurviveBeingDowned.OnPlayerEvent // (Final|Native|Private) // @ game+0x1403c70
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeSurviveBeingDowned.InitOnPlayerEvent // (Final|Native|Public) // @ game+0x14027b0
};

// Class Tiger.TigerChallengeSurviveBloodhunt
// Size: 0x100 (Inherited: 0xf8)
struct UTigerChallengeSurviveBloodhunt : UTigerChallenge {
	char pad_F8[0x8]; // 0xf8(0x08)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeSurviveBloodhunt.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x1403fe0
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengeSurviveBloodhunt.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x14020d0
};

// Class Tiger.TigerChallengeSurviveTime
// Size: 0x118 (Inherited: 0xf8)
struct UTigerChallengeSurviveTime : UTigerChallenge {
	char pad_F8[0x20]; // 0xf8(0x20)

	void OnPlayerDeath(struct ATigerPlayer* InDeadPlayer, struct AActor* InInstigator, bool bInWillRespawn); // Function Tiger.TigerChallengeSurviveTime.OnPlayerDeath // (Final|Native|Public) // @ game+0x1403a90
	void InitOnPlayerStart(struct AController* InNewPlayer); // Function Tiger.TigerChallengeSurviveTime.InitOnPlayerStart // (Final|Native|Public) // @ game+0x14029f0
};

// Class Tiger.TigerChallengeTopPlayer
// Size: 0x140 (Inherited: 0xf8)
struct UTigerChallengeTopPlayer : UTigerChallenge {
	int32_t TopPlacementRequirement; // 0xf8(0x04)
	bool bWithoutBecomingBloodhunted; // 0xfc(0x01)
	bool bWithoutUsingDiscipline; // 0xfd(0x01)
	char pad_FE[0x2]; // 0xfe(0x02)
	struct FTigerChallengeRequirementPowerKit PlayerRequiredArchetype; // 0x100(0x10)
	struct FTigerChallengeRequirementWeaponType OnlyUseWeaponTypeConstraint; // 0x110(0x18)
	char pad_128[0x18]; // 0x128(0x18)

	void OnTigerPlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeTopPlayer.OnTigerPlayerStateCreated // (Final|Native|Private) // @ game+0x1404070
	void OnPlayerDealtDamage(struct ATigerCharacter* InTargetCharacter, struct FDamageEvent& InDamageEvent, float InActualDamage); // Function Tiger.TigerChallengeTopPlayer.OnPlayerDealtDamage // (Final|Native|Private|HasOutParms) // @ game+0x1403960
	void OnDisciplineActivated(enum class ETigerDisciplinesEnum InDisciplineActivated); // Function Tiger.TigerChallengeTopPlayer.OnDisciplineActivated // (Final|Native|Private) // @ game+0x1403790
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeTopPlayer.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x1402840
	void HandlePlayerMasqueradeChange(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerChallengeTopPlayer.HandlePlayerMasqueradeChange // (Final|Native|Private) // @ game+0x14021a0
	void HandlePlayerLeft(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerChallengeTopPlayer.HandlePlayerLeft // (Final|Native|Private) // @ game+0x1402040
};

// Class Tiger.TigerChallengeTravelDistance
// Size: 0x100 (Inherited: 0xf8)
struct UTigerChallengeTravelDistance : UTigerChallenge {
	char pad_F8[0x8]; // 0xf8(0x08)

	void OnMovementUpdated(float InDelta, struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerChallengeTravelDistance.OnMovementUpdated // (Final|Native|Private) // @ game+0x1403890
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeTravelDistance.InitOnPlayerEvent // (Final|Native|Public) // @ game+0x14028d0
};

// Class Tiger.TigerChallengeTypeDatabase
// Size: 0x80 (Inherited: 0x28)
struct UTigerChallengeTypeDatabase : UObject {
	bool bFirstDailyChallengeIsPersistent; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TMap<enum class ETigerChallengeCategory, struct FTigerChallengeCollectionArray> ChallengeCategoryCollections; // 0x30(0x50)
};

// Class Tiger.TigerChallengeUseDiscipline
// Size: 0x110 (Inherited: 0xf8)
struct UTigerChallengeUseDiscipline : UTigerChallenge {
	struct FTigerChallengeRequirementDisciplineSlot DisciplineSlotRequirement; // 0xf8(0x10)
	char pad_108[0x8]; // 0x108(0x08)

	void OnDisciplineActivated(enum class ETigerDisciplinesEnum InDisciplineActivated); // Function Tiger.TigerChallengeUseDiscipline.OnDisciplineActivated // (Final|Native|Private) // @ game+0x1403810
	void InitOnPlayerEvent(struct AController* InNewPlayer); // Function Tiger.TigerChallengeUseDiscipline.InitOnPlayerEvent // (Final|Native|Private) // @ game+0x1402960
};

// Class Tiger.TigerChallengeUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerChallengeUtilityBFL : UBlueprintFunctionLibrary {

	bool HasRequirement_WeaponType(struct FTigerChallengeRequirementWeaponType& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_WeaponType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402670
	bool HasRequirement_TraversalState(struct FTigerChallengeRequirementTraversalState& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_TraversalState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402270
	bool HasRequirement_PowerKit(struct FTigerChallengeRequirementPowerKit& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_PowerKit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402270
	bool HasRequirement_GameMode(struct FTigerChallengeRequirementGameMode& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_GameMode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14025b0
	bool HasRequirement_ExcludeGameMode(struct FTigerChallengeRequirementExcludeGameMode& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_ExcludeGameMode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14025b0
	bool HasRequirement_Distance(struct FTigerChallengeRequirementDistance& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Distance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402500
	bool HasRequirement_DisciplineSlot(struct FTigerChallengeRequirementDisciplineSlot& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_DisciplineSlot // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402450
	bool HasRequirement_Clan(struct FTigerChallengeRequirementClan& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Clan // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14023b0
	bool HasRequirement_Bloodhunted(struct FTigerChallengeRequirementBloodhunted& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Bloodhunted // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402270
	bool HasRequirement_BalanceMode(struct FTigerChallengeRequirementBalanceMode& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_BalanceMode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402310
	bool HasRequirement_Airborne(struct FTigerChallengeRequirementAirborne& InRequirement); // Function Tiger.TigerChallengeUtilityBFL.HasRequirement_Airborne // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1402270
};

// Class Tiger.TigerChallengeVisitLocation
// Size: 0x158 (Inherited: 0xf8)
struct UTigerChallengeVisitLocation : UTigerChallenge {
	struct TSoftObjectPtr<ATigerVisitLocationTriggerVolume> TriggerVolume; // 0xf8(0x28)
	bool bHasInteraction; // 0x120(0x01)
	bool bHideInteractorUntillVolumeEntered; // 0x121(0x01)
	char pad_122[0x6]; // 0x122(0x06)
	struct TSoftObjectPtr<ATigerInteractivePoint> InteractionPoint; // 0x128(0x28)
	char pad_150[0x8]; // 0x150(0x08)

	void HandleLocationEntered(struct ATigerPlayerController* InIntersectingPlayerController); // Function Tiger.TigerChallengeVisitLocation.HandleLocationEntered // (Final|Native|Private) // @ game+0x1401ed0
	void HandleInteractionComplete(struct TSoftObjectPtr<ATigerInteractivePoint> InInteractedItem); // Function Tiger.TigerChallengeVisitLocation.HandleInteractionComplete // (Final|Native|Private) // @ game+0x1401dc0
};

// Class Tiger.TigerCharacterCardBase
// Size: 0x288 (Inherited: 0x280)
struct UTigerCharacterCardBase : UTigerWidget {
	struct TWeakObjectPtr<struct ATigerPlayerState> RepresentedPlayer; // 0x280(0x08)

	void OnInit(struct ATigerPlayerState* InRepresentedPlayer); // Function Tiger.TigerCharacterCardBase.OnInit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Init(struct ATigerPlayerState* InRepresentedPlayer); // Function Tiger.TigerCharacterCardBase.Init // (Final|Native|Private|BlueprintCallable) // @ game+0x140b040
	struct ATigerPlayerState* GetRepresentedPlayer(); // Function Tiger.TigerCharacterCardBase.GetRepresentedPlayer // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x140b010
	void BuildCharacterCard(); // Function Tiger.TigerCharacterCardBase.BuildCharacterCard // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerCharacterCustomizablePreviewThumbnailUI
// Size: 0x2f0 (Inherited: 0x280)
struct UTigerCharacterCustomizablePreviewThumbnailUI : UTigerWidget {
	struct ATigerThumbnailActor* ThumbnailActorType; // 0x280(0x08)
	bool bIsRealtime; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)
	struct UMaterialInterface* PostRenderMaterial; // 0x290(0x08)
	char pad_298[0x40]; // 0x298(0x40)
	struct ATigerThumbnailActor* ThumbnailActor; // 0x2d8(0x08)
	float FOV; // 0x2e0(0x04)
	char pad_2E4[0xc]; // 0x2e4(0x0c)

	void TickViewport(float InDeltaTime); // Function Tiger.TigerCharacterCustomizablePreviewThumbnailUI.TickViewport // (Final|Native|Public|BlueprintCallable) // @ game+0x140b0d0
};

// Class Tiger.TigerInventoryItemBase
// Size: 0x130 (Inherited: 0x28)
struct UTigerInventoryItemBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct FText UiName; // 0x30(0x18)
	struct FText UIDescription; // 0x48(0x18)
	struct FText TemporaryVs2CategoryName; // 0x60(0x18)
	struct TSoftObjectPtr<UTexture2D> UITexture; // 0x78(0x28)
	struct TSoftObjectPtr<UTexture2D> UiBackgroundTexture; // 0xa0(0x28)
	struct FLinearColor TintColor; // 0xc8(0x10)
	bool bForceToFrontWhenSorted; // 0xd8(0x01)
	enum class ETigerItemRarity Rarity; // 0xd9(0x01)
	bool bIsAvailableForEveryone; // 0xda(0x01)
	bool bUseCustomOwner; // 0xdb(0x01)
	enum class ETigerOutfitGender OutfitGender; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	struct TArray<struct FTigerInventoryItemOwnerType> PossibleOwners; // 0xe0(0x10)
	struct FString CameraTag; // 0xf0(0x10)
	struct TSoftClassPtr<UObject> ReplacementAsset; // 0x100(0x28)
	uint64_t TelemetryID; // 0x128(0x08)

	void TakeTelemetryIDFromCombinedItem(struct UTigerCharacterCombinedItemConfiguration* InCombinedItem); // Function Tiger.TigerInventoryItemBase.TakeTelemetryIDFromCombinedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x14bb190
	void SetUIMaterialParameters(struct UMaterialInstanceDynamic* InMaterial); // Function Tiger.TigerInventoryItemBase.SetUIMaterialParameters // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	struct UMaterialInterface* GetUiMaterialOverride(); // Function Tiger.TigerInventoryItemBase.GetUiMaterialOverride // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	enum class ETigerPersistentStoreCategory GetStoreCategory(); // Function Tiger.TigerInventoryItemBase.GetStoreCategory // (Native|Public|BlueprintCallable|Const) // @ game+0x144dbb0
	bool GetPrimaryOwnerNoArchetype(enum class ETigerClan& OutClan, enum class ETigerGender& OutBodyType); // Function Tiger.TigerInventoryItemBase.GetPrimaryOwnerNoArchetype // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14bac80
	bool GetPrimaryOwner(enum class ETigerClan& OutClan, enum class ETigerPowerKitType& OutArchetype, enum class ETigerGender& OutBodyType); // Function Tiger.TigerInventoryItemBase.GetPrimaryOwner // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14bab40
	struct TArray<enum class ETigerClan> GetPossibleOwningClans(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningClans // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x14baa90
	struct TArray<enum class ETigerGender> GetPossibleOwningBodyTypes(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningBodyTypes // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x14baa10
	struct TArray<enum class ETigerPowerKitType> GetPossibleOwningArchetypes(); // Function Tiger.TigerInventoryItemBase.GetPossibleOwningArchetypes // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x14ba990
	enum class ETigerGender GetGender(); // Function Tiger.TigerInventoryItemBase.GetGender // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ba960
	bool CanBeOwnedByBodyWithArchetypeRestriction(enum class ETigerGender InBodyType, enum class ETigerPowerKitType InPowerKit); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByBodyWithArchetypeRestriction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ba700
	bool CanBeOwnedByBodyType(enum class ETigerGender InBodyType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByBodyType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ba670
	bool CanBeOwnedByArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ba5e0
	bool CanBeOwnedByAnyArchetypeOfClan(struct UTigerPlayerClanData* InClan, enum class ETigerGender BodyType); // Function Tiger.TigerInventoryItemBase.CanBeOwnedByAnyArchetypeOfClan // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ba510
};

// Class Tiger.TigerCharacterOutfitConfiguration
// Size: 0x2c0 (Inherited: 0x130)
struct UTigerCharacterOutfitConfiguration : UTigerInventoryItemBase {
	struct FTigerLodSplitMesh SplitMesh; // 0x130(0x78)
	struct TSoftObjectPtr<USkeletalMesh> AdditionalMesh; // 0x1a8(0x28)
	struct TArray<struct FTigerCharacterOutfitHoodieVariation> HoodieVariations; // 0x1d0(0x10)
	struct TMap<int32_t, struct TSoftObjectPtr<UMaterialInterface>> Materials; // 0x1e0(0x50)
	struct FTigerCharacterHolsteredWeaponTransforms HolsteredWeaponsTransforms; // 0x230(0x60)
	bool bUseBodyTypeJointScaling; // 0x290(0x01)
	bool bUseBodyTypeBlendShapes; // 0x291(0x01)
	bool bHoodieUpOnThumbnail; // 0x292(0x01)
	char pad_293[0x5]; // 0x293(0x05)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x298(0x28)
};

// Class Tiger.TigerCharacterCombinedItemConfiguration
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterCombinedItemConfiguration : UTigerInventoryItemBase {
	struct TSoftClassPtr<UObject> CombinedItemClassType; // 0x130(0x28)
	struct TArray<struct FTigerInventoryCombinedItemValue> Items; // 0x158(0x10)

	struct UTigerInventoryItemBase* GetItemFromCombinedContainer(enum class ETigerGender InBodyType, enum class ETigerPowerKitType InPowerKit, enum class ETigerClan InClan); // Function Tiger.TigerCharacterCombinedItemConfiguration.GetItemFromCombinedContainer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140aef0
};

// Class Tiger.TigerCharacterSkinToneCustomization
// Size: 0x180 (Inherited: 0x130)
struct UTigerCharacterSkinToneCustomization : UTigerInventoryItemBase {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
	struct FLinearColor LightColor; // 0x168(0x10)
	float LightIntensity; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
};

// Class Tiger.TigerCharacterBodyTypeCustomization
// Size: 0x1c8 (Inherited: 0x130)
struct UTigerCharacterBodyTypeCustomization : UTigerInventoryItemBase {
	struct TSoftObjectPtr<UTigerCharacterPreset> CharacterPreset; // 0x130(0x28)
	struct TSoftObjectPtr<UAnimSequence> JointScalings; // 0x158(0x28)
	struct TArray<struct FTigerCharacterBlendShapeScalarValue> BlendShapeScalarValues; // 0x180(0x10)
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x190(0x38)
};

// Class Tiger.TigerCharacterPartOfHeadCustomization
// Size: 0x130 (Inherited: 0x130)
struct UTigerCharacterPartOfHeadCustomization : UTigerInventoryItemBase {
};

// Class Tiger.TigerPlayerCardCustomization
// Size: 0x130 (Inherited: 0x130)
struct UTigerPlayerCardCustomization : UTigerInventoryItemBase {
};

// Class Tiger.TigerCharacterHeadConfiguration
// Size: 0x330 (Inherited: 0x130)
struct UTigerCharacterHeadConfiguration : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
	struct FTigerLodSplitMesh SplitMesh; // 0x168(0x78)
	struct FTigerLodSplitMesh SplitNeckMesh; // 0x1e0(0x78)
	struct TSoftObjectPtr<UPoseAsset> FacePostAsset; // 0x258(0x28)
	struct TSoftObjectPtr<UAnimSequence> FacePoseSourceAnimation; // 0x280(0x28)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> BodySkinMaterials; // 0x2a8(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> SkinTones; // 0x2b8(0x10)
	struct FName HeadgearMaleSocket; // 0x2c8(0x08)
	struct FName HeadgearFemaleSocket; // 0x2d0(0x08)
	struct FName HeadgearOffsetSocketName; // 0x2d8(0x08)
	struct FName HeadgearOffsetLocator; // 0x2e0(0x08)
	struct FTigerCharacterHeadHeadgearOffset HeadgearOffset; // 0x2e8(0x18)
	struct FName EyewearSocket; // 0x300(0x08)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x308(0x28)

	void SetPoseableHair(struct UTigerCharacterHairStyleCustomization* InHair, struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter); // Function Tiger.TigerCharacterHeadConfiguration.SetPoseableHair // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
	void SetPoseableBeard(struct UTigerCharacterBeardCustomization* InBeard, struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter); // Function Tiger.TigerCharacterHeadConfiguration.SetPoseableBeard // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
	void SetPiercingSlotLocationAndRotation(struct UTigerCharacterMeshManager* InMeshManager, struct FName InName, struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerCharacterHeadConfiguration.SetPiercingSlotLocationAndRotation // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void SetPiercings(struct UTigerCharacterPiercingSetCustomization* InPiercingSet, struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter); // Function Tiger.TigerCharacterHeadConfiguration.SetPiercings // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
	void SetEyewearOffset(struct UTigerCharacterMeshManager* MeshManager); // Function Tiger.TigerCharacterHeadConfiguration.SetEyewearOffset // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
	void GetPiercingSlots(struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter, struct TMap<struct FName, struct FTigerCharacterHeadPiercingSocket>& OutSlots); // Function Tiger.TigerCharacterHeadConfiguration.GetPiercingSlots // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
	void DrawDebugPiercingSlots(struct UTigerCharacterMeshManager* InMeshManager, struct TSet<struct FString>& InFilter); // Function Tiger.TigerCharacterHeadConfiguration.DrawDebugPiercingSlots // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerCharacterFacePaintCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterFacePaintCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterHeadgearCustomization
// Size: 0x1f0 (Inherited: 0x130)
struct UTigerCharacterHeadgearCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x168(0x28)
	struct TMap<int32_t, struct TSoftObjectPtr<UMaterialInterface>> Materials; // 0x190(0x50)
	struct UTigerAnimationFilter* AnimationFilter; // 0x1e0(0x08)
	bool bUseNeckMeshOnly; // 0x1e8(0x01)
	bool bHideBeard; // 0x1e9(0x01)
	bool bHideEyewear; // 0x1ea(0x01)
	char pad_1EB[0x5]; // 0x1eb(0x05)

	void GatherPiercingFilter(struct TSet<struct FString>& InOutPiercingFilter); // Function Tiger.TigerCharacterHeadgearCustomization.GatherPiercingFilter // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerCharacterEyewearCustomization
// Size: 0x1e0 (Inherited: 0x130)
struct UTigerCharacterEyewearCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x168(0x28)
	struct TMap<int32_t, struct TSoftObjectPtr<UMaterialInterface>> Materials; // 0x190(0x50)

	void GatherPiercingFilter(struct TSet<struct FString>& InOutPiercingFilter); // Function Tiger.TigerCharacterEyewearCustomization.GatherPiercingFilter // (Event|Public|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerCharacterHairStyleCustomization
// Size: 0x228 (Inherited: 0x130)
struct UTigerCharacterHairStyleCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
	bool bUseLegacyHair; // 0x168(0x01)
	char pad_169[0x7]; // 0x169(0x07)
	struct UAnimInstance* Animation; // 0x170(0x08)
	struct FTigerLodSplitMesh SplitMesh; // 0x178(0x78)
	struct FName SocketAttachments[0x2]; // 0x1f0(0x10)
	struct TSoftObjectPtr<USkeletalMesh> Mesh; // 0x200(0x28)
};

// Class Tiger.TigerCharacterHairColorCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterHairColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterEyeColorCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterEyeColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterEyebrowCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterEyebrowCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterEyebrowColorCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterEyebrowColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterBeardCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterBeardCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterBeardColorCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterBeardColorCustomization : UTigerCharacterPartOfHeadCustomization {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterTattooCustomization
// Size: 0x168 (Inherited: 0x130)
struct UTigerCharacterTattooCustomization : UTigerInventoryItemBase {
	struct FTigerCharacterCustomizationParameters AdditionalParameters; // 0x130(0x38)
};

// Class Tiger.TigerCharacterPiercingSetCustomization
// Size: 0x130 (Inherited: 0x130)
struct UTigerCharacterPiercingSetCustomization : UTigerCharacterPartOfHeadCustomization {
};

// Class Tiger.TigerCharacterIconCustomization
// Size: 0x158 (Inherited: 0x130)
struct UTigerCharacterIconCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<UTexture2D> CharacterIcon; // 0x130(0x28)
};

// Class Tiger.TigerCharacterCardShapeCustomization
// Size: 0x158 (Inherited: 0x130)
struct UTigerCharacterCardShapeCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<UTexture2D> CardShapeMask; // 0x130(0x28)
};

// Class Tiger.TigerCharacterCardBackgroundCustomization
// Size: 0x158 (Inherited: 0x130)
struct UTigerCharacterCardBackgroundCustomization : UTigerPlayerCardCustomization {
	struct TSoftObjectPtr<UTexture2D> CardBackground; // 0x130(0x28)
};

// Class Tiger.TigerCharacterEmoteCustomization
// Size: 0x140 (Inherited: 0x130)
struct UTigerCharacterEmoteCustomization : UTigerInventoryItemBase {
	struct UAnimMontage* EmoteMontage; // 0x130(0x08)
	bool bStopsMovement; // 0x138(0x01)
	char pad_139[0x3]; // 0x139(0x03)
	float ThumbnailPoseTime; // 0x13c(0x04)
};

// Class Tiger.TigerClanCustomizationOptions
// Size: 0x3b0 (Inherited: 0x28)
struct UTigerClanCustomizationOptions : UObject {
	struct TArray<struct FTigerCharacterCustomizationOutfitData> Outfits; // 0x28(0x10)
	struct TArray<struct FTigerCharacterCustomizationHeadData> Heads; // 0x38(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Hairs; // 0x48(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> HairColors; // 0x58(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> EyeColors; // 0x68(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Tattoos; // 0x78(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> FacePaints; // 0x88(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> PiercingSets; // 0x98(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Headgears; // 0xa8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Eyewears; // 0xb8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Eyebrows; // 0xc8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> EyebrowColors; // 0xd8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Beards; // 0xe8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> BeardColors; // 0xf8(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterIcons; // 0x108(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterCardShapes; // 0x118(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> CharacterCardTextures; // 0x128(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> Emotes; // 0x138(0x10)
	struct TArray<struct FTigerCharacterCustomizationItem> BodyTypeModifiers; // 0x148(0x10)
	struct TMap<enum class ETigerCustomizationType, struct FTigerCombinedItemCustomizations> CombinedItems; // 0x158(0x50)
	struct FTigerCharacterCardData DefaultPlayerCard; // 0x1a8(0x78)
	struct TMap<uint64_t, struct TSoftClassPtr<UObject>> TelemetryIdToItemLut; // 0x220(0x50)
	struct TMap<struct TSoftClassPtr<UObject>, uint64_t> ItemToTelemetryIdLut; // 0x270(0x50)
	struct TMap<uint64_t, int32_t> TelemetryIdToIndexLut; // 0x2c0(0x50)
	struct TMap<uint64_t, uint64_t> TelemetryIdToCombinedTelemetryIdMap; // 0x310(0x50)
	struct TSet<uint64_t> StandardSetItemTelemetryIds; // 0x360(0x50)
};

// Class Tiger.TigerCharacterEffect
// Size: 0x28 (Inherited: 0x28)
struct UTigerCharacterEffect : UObject {

	void ApplyWithTarget(struct ATigerCharacter* Character, struct ATigerCharacter* Target); // Function Tiger.TigerCharacterEffect.ApplyWithTarget // (BlueprintCosmetic|Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
	void ApplyWithSocket(struct ATigerCharacter* Character, struct FName SocketName); // Function Tiger.TigerCharacterEffect.ApplyWithSocket // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Apply(struct ATigerCharacter* Character); // Function Tiger.TigerCharacterEffect.Apply // (BlueprintCosmetic|Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerCharacterMenuUI
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerCharacterMenuUI : UTigerIngameSubmenuWidget {

	void OnDisciplinesUpdated(); // Function Tiger.TigerCharacterMenuUI.OnDisciplinesUpdated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerCharacterMeshManager
// Size: 0x1f0 (Inherited: 0xb0)
struct UTigerCharacterMeshManager : UActorComponent {
	struct TArray<struct FTigerStaticMeshData> StaticMeshes; // 0xb0(0x10)
	struct TArray<struct FTigerPoseableMeshData> PoseableMeshes; // 0xc0(0x10)
	struct FTigerCharacterMeshData Mesh[0xb]; // 0xd0(0x108)
	struct UStaticPiercingPhysics* StaticPiercingPhysics; // 0x1d8(0x08)
	char pad_1E0[0x10]; // 0x1e0(0x10)

	void SetVisibilityOnMeshes(bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x140f2e0
	void SetVisibilityOnMesh(enum class ETigerCharacterMeshPart InMeshType, bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnMesh // (Native|Public|BlueprintCallable) // @ game+0x140f200
	void SetVisibilityOnDynamicMesh(enum class ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibility); // Function Tiger.TigerCharacterMeshManager.SetVisibilityOnDynamicMesh // (Native|Public|BlueprintCallable) // @ game+0x140f120
	void SetVisibilityAllowanceOnMeshes(bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x140f090
	void SetVisibilityAllowanceOnMesh(enum class ETigerCharacterMeshPart InMeshType, bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnMesh // (Native|Public|BlueprintCallable) // @ game+0x140efb0
	void SetVisibilityAllowanceOnDynamicMesh(enum class ETigerCharacterDynamicMeshType InMeshType, bool bInNewVisibilityIsAllowed); // Function Tiger.TigerCharacterMeshManager.SetVisibilityAllowanceOnDynamicMesh // (Native|Public|BlueprintCallable) // @ game+0x140eed0
	void SetSkeletalMesh(enum class ETigerCharacterMeshPart Part, struct USkeletalMesh* Mesh, bool bForceClothNextUpdateTeleport); // Function Tiger.TigerCharacterMeshManager.SetSkeletalMesh // (Native|Public|BlueprintCallable) // @ game+0x140edc0
	void SetScalarParameterValueOnMeshes(struct FName InParameterName, float InParameterValue); // Function Tiger.TigerCharacterMeshManager.SetScalarParameterValueOnMeshes // (Native|Public|BlueprintCallable) // @ game+0x140ece0
	void SetMaterial(enum class ETigerCharacterMeshPart Part, int32_t MaterialIndex, struct UMaterialInterface* Material); // Function Tiger.TigerCharacterMeshManager.SetMaterial // (Native|Public|BlueprintCallable) // @ game+0x140ebd0
	void RemoveMeshComponent(struct UStaticMeshComponent* InMesh); // Function Tiger.TigerCharacterMeshManager.RemoveMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x140e720
	void RegisterMeshComponent(enum class ETigerCharacterMeshPart Part, struct USkeletalMeshComponent* MeshComponent); // Function Tiger.TigerCharacterMeshManager.RegisterMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x140e650
	struct USkeletalMeshComponent* GetSkeletalMeshComponent(enum class ETigerCharacterMeshPart Part); // Function Tiger.TigerCharacterMeshManager.GetSkeletalMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140ddc0
	struct TArray<struct UMeshComponent*> GetRegisteredMeshes(); // Function Tiger.TigerCharacterMeshManager.GetRegisteredMeshes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140dd40
	void AddPoseableMesh(struct USkeletalMesh* InMesh, struct UTigerCharacterPoseableMeshAnimInstance* InAnimClass, enum class ETigerCharacterDynamicMeshType InType, struct TArray<struct FTigerCharacterPoseableMeshBoneSetupData> InPoseableMeshSetupData, struct FVector InOffsetLocation, struct FRotator InOffsetRotation); // Function Tiger.TigerCharacterMeshManager.AddPoseableMesh // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x140d750
	void AddPiercing(struct UStaticMesh* InPiercingMesh, struct FName InFaceSlotName, struct FName InPiercingSlotName, struct FVector InLocalLocation, struct FRotator InLocalRotation); // Function Tiger.TigerCharacterMeshManager.AddPiercing // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x140d5a0
	void AddMeshComponent(struct UStaticMeshComponent* InMesh); // Function Tiger.TigerCharacterMeshManager.AddMeshComponent // (Native|Public|BlueprintCallable) // @ game+0x140d510
};

// Class Tiger.TigerCharacterMovementComponent
// Size: 0xde0 (Inherited: 0xb00)
struct UTigerCharacterMovementComponent : UCharacterMovementComponent {
	struct UTigerTraversalFiniteStateMachine* FiniteStateMachine; // 0xb00(0x08)
	char pad_B08[0x30]; // 0xb08(0x30)
	float MaxSprintSpeed; // 0xb38(0x04)
	float SprintSpeedMultiplier; // 0xb3c(0x04)
	char pad_B40[0x4]; // 0xb40(0x04)
	float ForwardAngleThreshold; // 0xb44(0x04)
	char pad_B48[0x8]; // 0xb48(0x08)
	struct UTigerSprintConfig* SprintConfig; // 0xb50(0x08)
	float MaxJumpHeight; // 0xb58(0x04)
	bool bPreventFallingSlide; // 0xb5c(0x01)
	char pad_B5D[0x3]; // 0xb5d(0x03)
	float DownedMaxSpeed; // 0xb60(0x04)
	char pad_B64[0x4]; // 0xb64(0x04)
	struct FMulticastInlineDelegate OnDodge; // 0xb68(0x10)
	float WallClimbCombineThresholdSquared; // 0xb78(0x04)
	char pad_B7C[0x4]; // 0xb7c(0x04)
	struct UTigerImpendingCollisionCalculator* ImpendingCollisionCalculator; // 0xb80(0x08)
	float TimeUntilCollision; // 0xb88(0x04)
	float AngleToImpendingCollisionWithClimbableSurface; // 0xb8c(0x04)
	float CharacterAngleToImpendingCollisionWithClimbableSurface; // 0xb90(0x04)
	bool bAboutToCollideWithClimbableSurface; // 0xb94(0x01)
	char pad_B95[0x17]; // 0xb95(0x17)
	uint32_t ElysiumBlockedTraversalStates; // 0xbac(0x04)
	bool bEnableRestrictedElysiumMobility; // 0xbb0(0x01)
	bool bIsInLedgeGrab; // 0xbb1(0x01)
	bool bContinueToUseClimbCameraDuringLedgeGrab; // 0xbb2(0x01)
	bool bWasLastLandingHard; // 0xbb3(0x01)
	char pad_BB4[0x8]; // 0xbb4(0x08)
	struct FName RightHandBoneName; // 0xbbc(0x08)
	struct FName LeftHandBoneName; // 0xbc4(0x08)
	struct FName RightFootBoneName; // 0xbcc(0x08)
	struct FName LeftFootBoneName; // 0xbd4(0x08)
	float JumpCapsuleHeightReduction; // 0xbdc(0x04)
	char pad_BE0[0x48]; // 0xbe0(0x48)
	struct FTigerDeltaCorrectionData CurrentDeltaCorrectedAnimationData; // 0xc28(0x40)
	bool bUseCustomCurvesExclusivelyForInclineSpeedModification; // 0xc68(0x01)
	char pad_C69[0x7]; // 0xc69(0x07)
	struct UCurveFloat* InclineMovementMultiplierCurve; // 0xc70(0x08)
	struct UCurveFloat* DeclineMovementMultiplierCurve; // 0xc78(0x08)
	struct UCurveFloat* BackwardsMovementMultiplierCurve; // 0xc80(0x08)
	float BackwardsAngleThreshold; // 0xc88(0x04)
	char pad_C8C[0x14]; // 0xc8c(0x14)
	struct UTigerSprintConfig* SprintConfigClass; // 0xca0(0x08)
	struct UCurveFloat* AimGlideProgressCurve; // 0xca8(0x08)
	struct UCurveFloat* AimGlideDragOverVelocityCurve; // 0xcb0(0x08)
	struct UCurveFloat* AimGlideLateralDragCurve; // 0xcb8(0x08)
	struct UCurveFloat* AimGlideAirControlCurve; // 0xcc0(0x08)
	bool bResetAimGlideOnDoubleJump; // 0xcc8(0x01)
	char pad_CC9[0x7]; // 0xcc9(0x07)
	struct UAnimMontage* PendingPreMovementMontage; // 0xcd0(0x08)
	char pad_CD8[0x54]; // 0xcd8(0x54)
	struct FVector LastWallJumpedNormal; // 0xd2c(0x0c)
	char pad_D38[0xa8]; // 0xd38(0xa8)

	void TigerDelegateOnDodged__DelegateSignature(struct FVector RelativeLaunchDirection); // DelegateFunction Tiger.TigerCharacterMovementComponent.TigerDelegateOnDodged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x18b4070
	bool ShouldUseClimbingCamera(); // Function Tiger.TigerCharacterMovementComponent.ShouldUseClimbingCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140f400
	bool ShouldRestrictMobility(enum class ETigerTraversalState InPotentialActionToRestrict); // Function Tiger.TigerCharacterMovementComponent.ShouldRestrictMobility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140f370
	void Server_SetDeltaCorrectionEndPoint(struct FVector EndPosition); // Function Tiger.TigerCharacterMovementComponent.Server_SetDeltaCorrectionEndPoint // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x140e9a0
	void Server_NetworkDesyncDetected(float InDistanceFromPlayer, float InTeleportingDistance, float InVelocitySize, float InTimeSinceLastServerUpdate, float InClientDeltaTime); // Function Tiger.TigerCharacterMovementComponent.Server_NetworkDesyncDetected // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x140e7b0
	void PlayDeltaCorrectedAnimation(struct UAnimMontage* AnimMontageToCorrect, struct FVector PositionToCorrectTo, bool bShouldAdjustAnimationPlayRate); // Function Tiger.TigerCharacterMovementComponent.PlayDeltaCorrectedAnimation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x140e530
	void Multicast_WallJump(); // Function Tiger.TigerCharacterMovementComponent.Multicast_WallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x140e510
	void Multicast_UpdateWallJump(enum class ESharkFourWayDirection InDesiredWallJumpDirection, char InDesiredWallJumpAnimState, struct FVector InWallNormal, struct FVector InWallJumpVelocity); // Function Tiger.TigerCharacterMovementComponent.Multicast_UpdateWallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x140e380
	void Multicast_StopClimb(); // Function Tiger.TigerCharacterMovementComponent.Multicast_StopClimb // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x140e360
	void Multicast_ReplicateState(enum class ETigerTraversalState InTraversalStateType, enum class ETigerTraversalTransitionAction InAction); // Function Tiger.TigerCharacterMovementComponent.Multicast_ReplicateState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x140e290
	void Multicast_FinishWallJump(); // Function Tiger.TigerCharacterMovementComponent.Multicast_FinishWallJump // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x140e270
	void Multicast_BeginClimb(struct AActor* InTargetClimbObject, struct FVector InClimbStartLocation); // Function Tiger.TigerCharacterMovementComponent.Multicast_BeginClimb // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x140e190
	void Multicast_AirDash(enum class ESharkFourWayDirection InDashDirection, float InAirDashAngleInDegrees); // Function Tiger.TigerCharacterMovementComponent.Multicast_AirDash // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x140e0c0
	bool IsSprintingAtFullSpeed(); // Function Tiger.TigerCharacterMovementComponent.IsSprintingAtFullSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140e090
	bool IsSprinting(); // Function Tiger.TigerCharacterMovementComponent.IsSprinting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140e060
	bool IsSliding(); // Function Tiger.TigerCharacterMovementComponent.IsSliding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140e030
	bool IsSlideJumping(); // Function Tiger.TigerCharacterMovementComponent.IsSlideJumping // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140e000
	bool IsInWallJump(); // Function Tiger.TigerCharacterMovementComponent.IsInWallJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140dfd0
	bool IsInWallHang(); // Function Tiger.TigerCharacterMovementComponent.IsInWallHang // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140dfa0
	bool IsInWallGrind(); // Function Tiger.TigerCharacterMovementComponent.IsInWallGrind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140df70
	bool IsInLowVault(); // Function Tiger.TigerCharacterMovementComponent.IsInLowVault // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140df40
	bool IsInLedgeGrab(); // Function Tiger.TigerCharacterMovementComponent.IsInLedgeGrab // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140df10
	bool IsInAirDash(); // Function Tiger.TigerCharacterMovementComponent.IsInAirDash // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140dee0
	bool IsAimGliding(); // Function Tiger.TigerCharacterMovementComponent.IsAimGliding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140deb0
	float GetTimeSinceStartedMovingFreely(); // Function Tiger.TigerCharacterMovementComponent.GetTimeSinceStartedMovingFreely // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140de80
	float GetSlideSurfacePitch(); // Function Tiger.TigerCharacterMovementComponent.GetSlideSurfacePitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140de50
	float GetLastDodgeTime(); // Function Tiger.TigerCharacterMovementComponent.GetLastDodgeTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb53520
	float GetFloorPitch(); // Function Tiger.TigerCharacterMovementComponent.GetFloorPitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140dce0
	float GetAimGlideStrength(); // Function Tiger.TigerCharacterMovementComponent.GetAimGlideStrength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x140dcb0
	void FreezeMovement(); // Function Tiger.TigerCharacterMovementComponent.FreezeMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x140dc90
	void DoForcedMove(struct FVector& TargetLocation, float TravelTime, bool bInAir, float ExitVelocityScale, bool bAllowPlayerBreak, bool bAllowCancelOnArrival); // Function Tiger.TigerCharacterMovementComponent.DoForcedMove // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x140da70
	void ApplyKnockback(struct FVector& InVelocity, struct ATigerPlayer* InInstigator); // Function Tiger.TigerCharacterMovementComponent.ApplyKnockback // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x140d990
};

// Class Tiger.TigerSceneRenderItemWidget
// Size: 0x2f0 (Inherited: 0x280)
struct UTigerSceneRenderItemWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnItemSpawned; // 0x280(0x10)
	struct FVector ItemSpawnLocation; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct TSoftClassPtr<UObject> DefaultItemClass; // 0x2a0(0x28)
	struct UMaterialInterface* RenderTargetMaterial; // 0x2c8(0x08)
	bool bOverrideItemRenderTarget; // 0x2d0(0x01)
	char pad_2D1[0x7]; // 0x2d1(0x07)
	struct AActor* SpawnedItem; // 0x2d8(0x08)
	char pad_2E0[0x10]; // 0x2e0(0x10)

	void SpawnItem(struct AActor* InActorClass); // Function Tiger.TigerSceneRenderItemWidget.SpawnItem // (Final|Native|Protected|BlueprintCallable) // @ game+0x15176c0
	void OverrideRenderTextureTarget(struct AActor* InActor); // Function Tiger.TigerSceneRenderItemWidget.OverrideRenderTextureTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1517410
	void OnItemSpawned__DelegateSignature(struct AActor* InSpawnedItem); // DelegateFunction Tiger.TigerSceneRenderItemWidget.OnItemSpawned__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	struct UTextureRenderTarget2D* GetRenderTextureFromMaterial(); // Function Tiger.TigerSceneRenderItemWidget.GetRenderTextureFromMaterial // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1517360
};

// Class Tiger.TigerCharacterPaperDollWidget
// Size: 0x3c8 (Inherited: 0x2f0)
struct UTigerCharacterPaperDollWidget : UTigerSceneRenderItemWidget {
	struct FTigerCharacterAppearance Appearance; // 0x2f0(0xc8)
	struct UTigerPlayerClanData* ClanData; // 0x3b8(0x08)
	bool bUseSharedPaperDoll; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)

	void SetFromApperance(struct FTigerPreviewerData& InAppearance, struct UTigerPlayerClanData* InClanData, struct FDelegate InDelegate); // Function Tiger.TigerCharacterPaperDollWidget.SetFromApperance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x140ea70
	void OnCharacterAppearanceUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerCharacterPaperDollWidget.OnCharacterAppearanceUpdated__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	struct ATigerPaperDoll* GetPaperDoll(); // Function Tiger.TigerCharacterPaperDollWidget.GetPaperDoll // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x140dd10
};

// Class Tiger.TigerPhysicalInteractionAnimationAsset
// Size: 0xf0 (Inherited: 0x30)
struct UTigerPhysicalInteractionAnimationAsset : UDataAsset {
	struct FTigerPhysicalInteractionMontages FeedingDataByVampireGender[0x2]; // 0x30(0xc0)
};

// Class Tiger.TigerPhysicalInteraction
// Size: 0x40 (Inherited: 0x28)
struct UTigerPhysicalInteraction : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TWeakObjectPtr<struct ATigerPlayer> OtherPlayer; // 0x38(0x08)
};

// Class Tiger.TigerPhysicalInteractionDiablerize
// Size: 0xa0 (Inherited: 0x40)
struct UTigerPhysicalInteractionDiablerize : UTigerPhysicalInteraction {
	float DiablerizeTime; // 0x40(0x04)
	bool bInstantInterrupt; // 0x44(0x01)
	bool bResetPowerCooldownsOnSuccess; // 0x45(0x01)
	char pad_46[0x2]; // 0x46(0x02)
	struct UTigerPhysicalInteractionAnimationAsset* DiablerizeAnimationAsset; // 0x48(0x08)
	char pad_50[0x50]; // 0x50(0x50)
};

// Class Tiger.TigerPhysicalInteractionRevive
// Size: 0x48 (Inherited: 0x40)
struct UTigerPhysicalInteractionRevive : UTigerPhysicalInteraction {
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerCharacterPoseableMeshAnimInstance
// Size: 0x330 (Inherited: 0x2c0)
struct UTigerCharacterPoseableMeshAnimInstance : UAnimInstance {
	struct UTigerCharacterMeshManager* MeshManager; // 0x2b8(0x08)
	struct TMap<struct FName, struct FTigerCharacterPoseableMeshBoneData> NameToDataLut; // 0x2c0(0x50)
	char pad_318[0x18]; // 0x318(0x18)

	void SetOffsetLocationAndRotation(struct FVector InOffsetLocation, struct FRotator InOffsetRotation); // Function Tiger.TigerCharacterPoseableMeshAnimInstance.SetOffsetLocationAndRotation // (Final|Native|Public|HasDefaults) // @ game+0x1413440
	void GetBoneOffsetTransform(struct FName InName, struct FVector& OutLocation, struct FRotator& OutRotation); // Function Tiger.TigerCharacterPoseableMeshAnimInstance.GetBoneOffsetTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1412a00
};

// Class Tiger.TigerCharacterPoseableMesh
// Size: 0x38 (Inherited: 0x28)
struct UTigerCharacterPoseableMesh : UObject {
	struct USkeletalMesh* Mesh; // 0x28(0x08)
	struct UTigerCharacterPoseableMeshAnimInstance* AnimClass; // 0x30(0x08)
};

// Class Tiger.TigerCharCustomizationComponent
// Size: 0x108 (Inherited: 0xb0)
struct UTigerCharCustomizationComponent : UActorComponent {
	struct FMulticastInlineDelegate OnAppearanceChanged; // 0xb0(0x10)
	char pad_C0[0x10]; // 0xc0(0x10)
	struct UTigerCharacterMeshManager* MeshManager; // 0xd0(0x08)
	struct UTigerClanCustomizationOptions* CustomizationOptions; // 0xd8(0x08)
	struct TArray<struct FTigerCharacterCustomizationParameters> AdditionalParametersToApply; // 0xe0(0x10)
	char pad_F0[0x11]; // 0xf0(0x11)
	enum class ETigerLodSplitMeshQuality MeshQuality; // 0x101(0x01)
	char pad_102[0x6]; // 0x102(0x06)

	void SetMeshManager(struct UTigerCharacterMeshManager* MeshManager); // Function Tiger.TigerCharCustomizationComponent.SetMeshManager // (Final|Native|Public|BlueprintCallable) // @ game+0x14133b0
	void SetAppearanceByPreviewDataAsync(struct FTigerPreviewerData& NewAppearance); // Function Tiger.TigerCharCustomizationComponent.SetAppearanceByPreviewDataAsync // (Final|Native|Public|HasOutParms) // @ game+0x1413300
	void SetAppearanceByPreviewData(struct FTigerPreviewerData& NewAppearance); // Function Tiger.TigerCharCustomizationComponent.SetAppearanceByPreviewData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1413250
	void OnAppearanceChangedMulticast__DelegateSignature(); // DelegateFunction Tiger.TigerCharCustomizationComponent.OnAppearanceChangedMulticast__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool HasAppearanceBeenSet(); // Function Tiger.TigerCharCustomizationComponent.HasAppearanceBeenSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1412d30
	struct UTigerCharacterTattooCustomization* GetTattoo(int32_t TattooIndex, bool& bIsValid); // Function Tiger.TigerCharCustomizationComponent.GetTattoo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1412c50
	struct UTigerCharacterOutfitConfiguration* GetOutfitConfigurationByPath(struct TSoftClassPtr<UObject>& OutfitClassPath); // Function Tiger.TigerCharCustomizationComponent.GetOutfitConfigurationByPath // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1412b80
	struct FTigerPreviewerData GetAppearanceData(); // Function Tiger.TigerCharCustomizationComponent.GetAppearanceData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14129d0
};

// Class Tiger.TigerChatComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerChatComponent : UActorComponent {
	struct FSharkTokenBucket ClientMessageTokenBucket; // 0xb0(0x0c)
	struct FSharkTokenBucket ServerMessageTokenBucket; // 0xbc(0x0c)
	bool bIsChatBanned; // 0xc8(0x01)
	bool bIsChatAllowed; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)

	bool TryGetMessageToken(float& OutTimeUntilTokenAvailable); // Function Tiger.TigerChatComponent.TryGetMessageToken // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1414720
	void Server_SetChatMessageCategoryMuteStatus(enum class ETigerChatMessageCategory InCategory, bool bInShouldMute); // Function Tiger.TigerChatComponent.Server_SetChatMessageCategoryMuteStatus // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1413170
	void Server_MuteChatForRestrictedPlayer(bool bInShouldMute); // Function Tiger.TigerChatComponent.Server_MuteChatForRestrictedPlayer // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14130e0
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerChatComponent.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x1413050
	void OnMuteStatusChanged(struct FTigerMuteInfo& InMuteInfo); // Function Tiger.TigerChatComponent.OnMuteStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1412fa0
	void OnLeftPartyDueToBlockedPlayerJoinBlueprint(bool bInWasKicked); // Function Tiger.TigerChatComponent.OnLeftPartyDueToBlockedPlayerJoinBlueprint // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnLeftPartyDueToBlockedPlayerJoin(struct UTigerPartyManager* InPartyManager); // Function Tiger.TigerChatComponent.OnLeftPartyDueToBlockedPlayerJoin // (Final|Native|Protected) // @ game+0x1412f10
	void OnFailedToJoinParty(enum class ETigerJoinedPartyFailedReason InJoinedPartyFailedReason); // Function Tiger.TigerChatComponent.OnFailedToJoinParty // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnChatMessageReceived(struct FTigerChatMessage& InMessage); // Function Tiger.TigerChatComponent.OnChatMessageReceived // (Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnBlockedPlayerWasRemovedFromParty(bool bInWasBlockedByMe); // Function Tiger.TigerChatComponent.OnBlockedPlayerWasRemovedFromParty // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnBanStatusUpdated(struct FTigerMuteInfo& InMuteInfo); // Function Tiger.TigerChatComponent.OnBanStatusUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	bool IsSoloMatch(); // Function Tiger.TigerChatComponent.IsSoloMatch // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1412d80
	bool IsGeneralChatMuted(); // Function Tiger.TigerChatComponent.IsGeneralChatMuted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1412d50
	struct FTigerMuteInfo GetMutedInfo(); // Function Tiger.TigerChatComponent.GetMutedInfo // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1412b30
	void CreateChatWindow(); // Function Tiger.TigerChatComponent.CreateChatWindow // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Client_ReceiveServerMessage(struct FString InServerMessage); // Function Tiger.TigerChatComponent.Client_ReceiveServerMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1412930
	void Client_ReceiveChatMessage(struct FTigerChatMessage InMessage); // Function Tiger.TigerChatComponent.Client_ReceiveChatMessage // (Net|Native|Event|Public|NetClient) // @ game+0x14127f0
};

// Class Tiger.TigerCheatManager
// Size: 0x88 (Inherited: 0x78)
struct UTigerCheatManager : UCheatManager {
	struct ATigerVideoCameraController* TigerVideoCameraControllerClass; // 0x78(0x08)
	struct ATigerVideoCameraController* TigerVideoCameraController; // 0x80(0x08)

	void TigerUpdateSeasonProgress(int32_t ExpToAdd, int32_t LevelsToAdd); // Function Tiger.TigerCheatManager.TigerUpdateSeasonProgress // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1414650
	void TigerUnlockVanityItem(struct FString InItemName); // Function Tiger.TigerCheatManager.TigerUnlockVanityItem // (Final|Exec|Native|Public) // @ game+0x1414560
	void TigerUnlockThrall(enum class ETigerThrallId InThrallId); // Function Tiger.TigerCheatManager.TigerUnlockThrall // (Final|Exec|Native|Public) // @ game+0x1413ff0
	void TigerUnlockAllThralls(); // Function Tiger.TigerCheatManager.TigerUnlockAllThralls // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerUnlockAllPerks(); // Function Tiger.TigerCheatManager.TigerUnlockAllPerks // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerUnlockAllItemsInDatabase(); // Function Tiger.TigerCheatManager.TigerUnlockAllItemsInDatabase // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleVisualLogger(); // Function Tiger.TigerCheatManager.TigerToggleVisualLogger // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleNoAggro(); // Function Tiger.TigerCheatManager.TigerToggleNoAggro // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerToggleClientSideHitDetectionRanged(); // Function Tiger.TigerCheatManager.TigerToggleClientSideHitDetectionRanged // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleClientSideHitDetectionMelee(); // Function Tiger.TigerCheatManager.TigerToggleClientSideHitDetectionMelee // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerThrallTickAllStatModifiers(); // Function Tiger.TigerCheatManager.TigerThrallTickAllStatModifiers // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerThrallMissionUpdateAll(); // Function Tiger.TigerCheatManager.TigerThrallMissionUpdateAll // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerThrallMissionStatusChange(int32_t InThrallMissionId, bool bIsActive); // Function Tiger.TigerCheatManager.TigerThrallMissionStatusChange // (Final|Exec|Native|Public) // @ game+0x1414070
	void TigerThrallMissionAdvanceTurns(int32_t InThrallMissionId, uint32_t InTurns); // Function Tiger.TigerCheatManager.TigerThrallMissionAdvanceTurns // (Final|Exec|Native|Public) // @ game+0x1414490
	void TigerThrallAddStatModifier(char InSlotIndex, struct FName InModifierName); // Function Tiger.TigerCheatManager.TigerThrallAddStatModifier // (Final|Exec|Native|Public) // @ game+0x14143c0
	void TigerTeleportToCameraLink(struct FString InUrl); // Function Tiger.TigerCheatManager.TigerTeleportToCameraLink // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerSubmitChallengeProgress(); // Function Tiger.TigerCheatManager.TigerSubmitChallengeProgress // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerStartQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerStartQuest // (Final|Exec|Native|Public) // @ game+0x1413a20
	void TigerSpawnNpcsAroundPlayer(struct FName& InNpcType, int32_t InCount); // Function Tiger.TigerCheatManager.TigerSpawnNpcsAroundPlayer // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14142f0
	void TigerSpawnNpcAtCursorWithPotency(struct FName& NPCType, enum class ETigerBloodPotency InPotency, enum class ETigerBloodType InBloodType); // Function Tiger.TigerCheatManager.TigerSpawnNpcAtCursorWithPotency // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14141d0
	void TigerSpawnNpcAtCursor(struct FName& NPCType); // Function Tiger.TigerCheatManager.TigerSpawnNpcAtCursor // (Final|Exec|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1414140
	void TigerSleep(float SleepMs); // Function Tiger.TigerCheatManager.TigerSleep // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413c00
	void TigerSkipPsoCaching(); // Function Tiger.TigerCheatManager.TigerSkipPsoCaching // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerShowPlayerLevel(); // Function Tiger.TigerCheatManager.TigerShowPlayerLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerShowMatchTimer(); // Function Tiger.TigerCheatManager.TigerShowMatchTimer // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerShowDoNotUseMeshes(); // Function Tiger.TigerCheatManager.TigerShowDoNotUseMeshes // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerShowArchetypeLevel(); // Function Tiger.TigerCheatManager.TigerShowArchetypeLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerShowActiveAnimationsOnActors(bool bShouldShow); // Function Tiger.TigerCheatManager.TigerShowActiveAnimationsOnActors // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13f3120
	void TigerSetWeatherScenario(struct FString InScenarioName); // Function Tiger.TigerCheatManager.TigerSetWeatherScenario // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerSetSessionProgressToBattlepassLevel(int32_t InLevel, bool bInShouldOwnBattlepass); // Function Tiger.TigerCheatManager.TigerSetSessionProgressToBattlepassLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1414070
	void TigerSetPlayerLevel(int32_t InPlayerLevel); // Function Tiger.TigerCheatManager.TigerSetPlayerLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413700
	void TigerSetMatchesPlayed(int32_t InNumberMatches); // Function Tiger.TigerCheatManager.TigerSetMatchesPlayed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413700
	void TigerSetFov(float InFov); // Function Tiger.TigerCheatManager.TigerSetFov // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerSetDutchAngle(struct FString InAngle); // Function Tiger.TigerCheatManager.TigerSetDutchAngle // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerSetCinematicQuality(enum class ETigerCinematicQuality InQualityLevel); // Function Tiger.TigerCheatManager.TigerSetCinematicQuality // (Final|Exec|Native|Public) // @ game+0x1413ff0
	void TigerSetCinematicOutfit(struct FString InCharacterName); // Function Tiger.TigerCheatManager.TigerSetCinematicOutfit // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerSetCharacterData(struct FString ClanText, int32_t PowerKitIndex, struct FString GenderText); // Function Tiger.TigerCheatManager.TigerSetCharacterData // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413eb0
	void TigerSetArchetypeLevel(int32_t InArchetypeLevel); // Function Tiger.TigerCheatManager.TigerSetArchetypeLevel // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413700
	void TigerSetAppearanceItemById(struct FString InDatabaseId); // Function Tiger.TigerCheatManager.TigerSetAppearanceItemById // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413530
	void TigerSetAppearance(struct FString AppearanceText); // Function Tiger.TigerCheatManager.TigerSetAppearance // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413530
	void TigerServerCrash(); // Function Tiger.TigerCheatManager.TigerServerCrash // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerSerializeStatistics(); // Function Tiger.TigerCheatManager.TigerSerializeStatistics // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerResetQuests(); // Function Tiger.TigerCheatManager.TigerResetQuests // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerReportSelf(int32_t InReportReason); // Function Tiger.TigerCheatManager.TigerReportSelf // (Final|Exec|Native|Public) // @ game+0x1413700
	void TigerRemoveThrall(char InSlot); // Function Tiger.TigerCheatManager.TigerRemoveThrall // (Final|Exec|Native|Public) // @ game+0x1413e30
	void TigerRemoveHolyIncense(); // Function Tiger.TigerCheatManager.TigerRemoveHolyIncense // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerRemoveAllThralls(); // Function Tiger.TigerCheatManager.TigerRemoveAllThralls // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerRegisterGrimoireEntryAsUnread(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsUnread // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerRegisterGrimoireEntryAsUnlocked(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsUnlocked // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerRegisterGrimoireEntryAsRead(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsRead // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerRegisterGrimoireEntryAsLocked(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAsLocked // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerRegisterGrimoireEntryAndSiblingsAsUnlocked(struct FString InGrimoireEntryId); // Function Tiger.TigerCheatManager.TigerRegisterGrimoireEntryAndSiblingsAsUnlocked // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerRegisterAllGrimoireEntriesAsUnread(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsUnread // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerRegisterAllGrimoireEntriesAsUnlocked(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsUnlocked // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerRegisterAllGrimoireEntriesAsRead(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsRead // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerRegisterAllGrimoireEntriesAsLocked(); // Function Tiger.TigerCheatManager.TigerRegisterAllGrimoireEntriesAsLocked // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerRainAmount(float RainAmount); // Function Tiger.TigerCheatManager.TigerRainAmount // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413c00
	void TigerQuitTutorial(); // Function Tiger.TigerCheatManager.TigerQuitTutorial // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerPrintCompleteQuestInfo(); // Function Tiger.TigerCheatManager.TigerPrintCompleteQuestInfo // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerPrintActiveQuestInfo(); // Function Tiger.TigerCheatManager.TigerPrintActiveQuestInfo // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerMatchAddPlayerExp(int32_t InPlayerExp); // Function Tiger.TigerCheatManager.TigerMatchAddPlayerExp // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413700
	void TigerMatchAddArchetypeExp(int32_t InArchetypeExp); // Function Tiger.TigerCheatManager.TigerMatchAddArchetypeExp // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413700
	void TigerListThrallTrueStats(); // Function Tiger.TigerCheatManager.TigerListThrallTrueStats // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerListThralls(); // Function Tiger.TigerCheatManager.TigerListThralls // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerListSoftCurrencies(); // Function Tiger.TigerCheatManager.TigerListSoftCurrencies // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerListPlayerCharacters(); // Function Tiger.TigerCheatManager.TigerListPlayerCharacters // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerKickByMod(); // Function Tiger.TigerCheatManager.TigerKickByMod // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerJumpToLink(struct FString InUrl); // Function Tiger.TigerCheatManager.TigerJumpToLink // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerIncrementPremiumCurrency(uint64_t InAmountToAdd); // Function Tiger.TigerCheatManager.TigerIncrementPremiumCurrency // (Final|Exec|Native|Public) // @ game+0x1413da0
	void TigerFreeReload(); // Function Tiger.TigerCheatManager.TigerFreeReload // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerExportMetadata(); // Function Tiger.TigerCheatManager.TigerExportMetadata // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerEnableVideoFreeCamPlayerController(); // Function Tiger.TigerCheatManager.TigerEnableVideoFreeCamPlayerController // (Exec|Native|Public) // @ game+0x1413d80
	void TigerEnableStatisticsGathering(bool bShouldBeEnabled); // Function Tiger.TigerCheatManager.TigerEnableStatisticsGathering // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x13f3120
	void TigerDisableDisciplineCost(); // Function Tiger.TigerCheatManager.TigerDisableDisciplineCost // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerDestroyNpcWithinRadiusIgnoreDebugTarget(float InRadius); // Function Tiger.TigerCheatManager.TigerDestroyNpcWithinRadiusIgnoreDebugTarget // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413d00
	void TigerDestroyNpcWithinRadius(float Radius); // Function Tiger.TigerCheatManager.TigerDestroyNpcWithinRadius // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413c80
	void TigerDemoStop(); // Function Tiger.TigerCheatManager.TigerDemoStop // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerDemoRec(struct FString InRecordingName); // Function Tiger.TigerCheatManager.TigerDemoRec // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerDebugHolyIncenseProgressBetweenServerAndClient(bool bInEnable); // Function Tiger.TigerCheatManager.TigerDebugHolyIncenseProgressBetweenServerAndClient // (Final|Exec|Native|Public) // @ game+0x13f3120
	void TigerDebugHolyIncenseDrawServerAndClientVertices(float InDuration); // Function Tiger.TigerCheatManager.TigerDebugHolyIncenseDrawServerAndClientVertices // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerDebugDrawPlayerGrid(float DebugDrawLifetime); // Function Tiger.TigerCheatManager.TigerDebugDrawPlayerGrid // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerDeactivateEvent(struct FString InEventName); // Function Tiger.TigerCheatManager.TigerDeactivateEvent // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerCreateDefaultCharacterAtSlot(struct FString InArchetypeName, char InCharacterSlot); // Function Tiger.TigerCheatManager.TigerCreateDefaultCharacterAtSlot // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413b20
	void TigerCrash(); // Function Tiger.TigerCheatManager.TigerCrash // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerCopyPlayerId(); // Function Tiger.TigerCheatManager.TigerCopyPlayerId // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerCompleteQuestActiveObjectiveSet(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerCompleteQuestActiveObjectiveSet // (Final|Exec|Native|Public) // @ game+0x1413a20
	void TigerCompleteQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerCompleteQuest // (Final|Exec|Native|Public) // @ game+0x1413a20
	void TigerCompleteNextTierMastery(); // Function Tiger.TigerCheatManager.TigerCompleteNextTierMastery // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerCompleteNextChallengeWeekly(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeWeekly // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerCompleteNextChallengeMastery(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeMastery // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerCompleteNextChallengeDaily(); // Function Tiger.TigerCheatManager.TigerCompleteNextChallengeDaily // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerClearQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerCheatManager.TigerClearQuest // (Final|Exec|Native|Public) // @ game+0x1413a20
	void TigerChangeThrallStats(char InSlotIndex, int32_t InPerception, int32_t InCommitment, int32_t InDominance, int32_t InSociability, int32_t InProficiency, int32_t InStealth, int32_t InStamina, int32_t InCombat); // Function Tiger.TigerCheatManager.TigerChangeThrallStats // (Final|Exec|Native|Public) // @ game+0x1413790
	void TigerChangeRespawnTokenCount(int32_t InChange); // Function Tiger.TigerCheatManager.TigerChangeRespawnTokenCount // (Final|Exec|Native|Public) // @ game+0x1413700
	void TigerBringMeHome(); // Function Tiger.TigerCheatManager.TigerBringMeHome // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerBreakMasquerade(); // Function Tiger.TigerCheatManager.TigerBreakMasquerade // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerBanMeForProfanity(); // Function Tiger.TigerCheatManager.TigerBanMeForProfanity // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerBanMeForLoadData(); // Function Tiger.TigerCheatManager.TigerBanMeForLoadData // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerBanMeForAntiCheat(); // Function Tiger.TigerCheatManager.TigerBanMeForAntiCheat // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerAddSoftCurrency(int32_t InAmount, struct FString InCurrencyIdAsString); // Function Tiger.TigerCheatManager.TigerAddSoftCurrency // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x14135d0
	void TigerActivateEventForQuest(struct FString InQuestlineId); // Function Tiger.TigerCheatManager.TigerActivateEventForQuest // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerActivateEvent(struct FString InEventName); // Function Tiger.TigerCheatManager.TigerActivateEvent // (Final|Exec|Native|Public) // @ game+0x1413530
	void OnGetPlayerCharactersRsp(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // Function Tiger.TigerCheatManager.OnGetPlayerCharactersRsp // (Final|Native|Public|HasOutParms) // @ game+0x1412db0
};

// Class Tiger.TigerCinematicGameMode
// Size: 0x2d8 (Inherited: 0x2c8)
struct ATigerCinematicGameMode : AGameModeBase {
	enum class ETigerCinematicQuality Quality; // 0x2c8(0x01)
	bool bHideMouse; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	int32_t NumShadowCastingLights; // 0x2cc(0x04)
	char pad_2D0[0x8]; // 0x2d0(0x08)
};

// Class Tiger.TigerCinematicQualitySettings
// Size: 0x78 (Inherited: 0x38)
struct UTigerCinematicQualitySettings : UDeveloperSettings {
	struct TArray<struct FString> GlobalCommands; // 0x38(0x10)
	struct TArray<struct FString> CinematicQualityCommands; // 0x48(0x10)
	struct TArray<struct FString> LowQualityCommands; // 0x58(0x10)
	struct TArray<struct FTigerCharacterCinematicTemplate> CharacterTemplates; // 0x68(0x10)
};

// Class Tiger.TigerClanLevelWidget
// Size: 0x268 (Inherited: 0x260)
struct UTigerClanLevelWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)

	void UpdateClanLevel(enum class ETigerClan Clan); // Function Tiger.TigerClanLevelWidget.UpdateClanLevel // (Final|Native|Private|BlueprintCallable) // @ game+0x141a0f0
	void OnClanLevelUpdated(int32_t NewClanLevel); // Function Tiger.TigerClanLevelWidget.OnClanLevelUpdated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	int32_t GetCurrentClanLevel(); // Function Tiger.TigerClanLevelWidget.GetCurrentClanLevel // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419210
};

// Class Tiger.TigerInteractiveObject
// Size: 0x2a0 (Inherited: 0x228)
struct ATigerInteractiveObject : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	bool bHasInteractionTrigger; // 0x230(0x01)
	bool bHasEnterVolumeTrigger; // 0x231(0x01)
	bool bHasShootingTrigger; // 0x232(0x01)
	char pad_233[0x5]; // 0x233(0x05)
	struct FText InteractionText; // 0x238(0x18)
	struct UBoxComponent* InteractionVolume; // 0x250(0x08)
	struct UBoxComponent* EnterVolume; // 0x258(0x08)
	struct UBoxComponent* ShootingVolume; // 0x260(0x08)
	float InteractionTime; // 0x268(0x04)
	bool bIsInteractibleFromBehind; // 0x26c(0x01)
	bool bIsAutoInteracted; // 0x26d(0x01)
	char pad_26E[0x2]; // 0x26e(0x02)
	struct USceneComponent* SceneRoot; // 0x270(0x08)
	char pad_278[0x9]; // 0x278(0x09)
	bool bIsLocked; // 0x281(0x01)
	char pad_282[0x6]; // 0x282(0x06)
	struct UTigerItemAsset* IsUnlockedBy; // 0x288(0x08)
	bool bConsumeItemOnUnlock; // 0x290(0x01)
	enum class EInteractiveObjectState InteractionState; // 0x291(0x01)
	char pad_292[0x2]; // 0x292(0x02)
	float CurrentInteractionTimeLeft; // 0x294(0x04)
	uint64_t PersistentTelemetryID; // 0x298(0x08)

	void UpdateDuration(float DeltaSeconds); // Function Tiger.TigerInteractiveObject.UpdateDuration // (Final|Native|Public|BlueprintCallable) // @ game+0x1475f90
	void Unlock(bool bInConsumeUnlockItem); // Function Tiger.TigerInteractiveObject.Unlock // (Final|Native|Public|BlueprintCallable) // @ game+0x1475f00
	void SleepInteraction(); // Function Tiger.TigerInteractiveObject.SleepInteraction // (Native|Public|BlueprintCallable) // @ game+0xbab170
	void OnUnlocked(); // Function Tiger.TigerInteractiveObject.OnUnlocked // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnRep_Interaction(enum class EInteractiveObjectState OldState); // Function Tiger.TigerInteractiveObject.OnRep_Interaction // (Final|Native|Public) // @ game+0x1475440
	void OnJumpToFinalState(); // Function Tiger.TigerInteractiveObject.OnJumpToFinalState // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnInteractionBlocked(); // Function Tiger.TigerInteractiveObject.OnInteractionBlocked // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnInteract(enum class EInteractiveObjectState ActivatedTrigger); // Function Tiger.TigerInteractiveObject.OnInteract // (Native|Event|Public|BlueprintEvent) // @ game+0x14753c0
	void Multicast_SetInteractionState(enum class EInteractiveObjectState NewState); // Function Tiger.TigerInteractiveObject.Multicast_SetInteractionState // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1475340
	bool IsLocked(); // Function Tiger.TigerInteractiveObject.IsLocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1475250
	void Interact(enum class EInteractiveObjectState InActivatedTrigger, struct UTigerInteractionControllerComponent* InInteracter); // Function Tiger.TigerInteractiveObject.Interact // (Native|Public|BlueprintCallable) // @ game+0x14750d0
	bool HasDuration(); // Function Tiger.TigerInteractiveObject.HasDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474ea0
	enum class EInteractiveObjectState GetInteractionState(); // Function Tiger.TigerInteractiveObject.GetInteractionState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14743a0
	void Client_Unlock(); // Function Tiger.TigerInteractiveObject.Client_Unlock // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1418f00
	bool CanPlayerUnlock(struct ATigerPlayer* InPlayer); // Function Tiger.TigerInteractiveObject.CanPlayerUnlock // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1473600
	void CancelInteraction(struct UTigerInteractionControllerComponent* Interacter); // Function Tiger.TigerInteractiveObject.CancelInteraction // (Native|Public|BlueprintCallable) // @ game+0x14736a0
	void BeginOverlappedProjectile(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerInteractiveObject.BeginOverlappedProjectile // (Final|Native|Private|HasOutParms) // @ game+0x1473340
	void BeginOverlappedCharacter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerInteractiveObject.BeginOverlappedCharacter // (Final|Native|Private|HasOutParms) // @ game+0x1473110
};

// Class Tiger.TigerClientInteractiveObject
// Size: 0x2b0 (Inherited: 0x2a0)
struct ATigerClientInteractiveObject : ATigerInteractiveObject {
	char pad_2A0[0x10]; // 0x2a0(0x10)
};

// Class Tiger.TigerClientInteractiveSpawner
// Size: 0x328 (Inherited: 0x228)
struct ATigerClientInteractiveSpawner : AActor {
	char pad_228[0xb0]; // 0x228(0xb0)
	struct TMap<uint32_t, struct FClientSpawnData> PendingCreationQueue; // 0x2d8(0x50)

	void Server_ValidateInteraction(struct UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Server_ValidateInteraction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x141a000
	void Server_OnIntercationComplete(uint32_t InClientObjectId); // Function Tiger.TigerClientInteractiveSpawner.Server_OnIntercationComplete // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1419f70
	void Server_DropOffItemLocationStartInteraction(uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Server_DropOffItemLocationStartInteraction // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1419ee0
	void OnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerClientInteractiveSpawner.OnRestartPlayer // (Final|Native|Private) // @ game+0x14198c0
	void OnClientObjectDestroyed(struct AActor* InDestroyedActor); // Function Tiger.TigerClientInteractiveSpawner.OnClientObjectDestroyed // (Final|Native|Private) // @ game+0x14197f0
	void Client_SpawnInteractiveObjects(struct TArray<struct FClientSpawnData> InSpawnList); // Function Tiger.TigerClientInteractiveSpawner.Client_SpawnInteractiveObjects // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1418f20
	void Client_RestartLevel(); // Function Tiger.TigerClientInteractiveSpawner.Client_RestartLevel // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1418f00
	void Client_ResetInteraction(uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Client_ResetInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1418e70
	void Client_OnInteractionValidated(struct UTigerInteractionControllerComponent* InInteractor, uint32_t InClientObjectUID, bool InSuccess); // Function Tiger.TigerClientInteractiveSpawner.Client_OnInteractionValidated // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1418cd0
	void Client_DropOffItemLocationDropOffComplete(uint32_t InClientObjectUID); // Function Tiger.TigerClientInteractiveSpawner.Client_DropOffItemLocationDropOffComplete // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1418c40
	void Client_DestroyInteractiveObjects(struct TArray<uint32_t> InDestroyList); // Function Tiger.TigerClientInteractiveSpawner.Client_DestroyInteractiveObjects // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1418ba0
};

// Class Tiger.TigerPushConnectionManager
// Size: 0xa8 (Inherited: 0x28)
struct UTigerPushConnectionManager : UObject {
	struct UTigerGameInstance* GameInstance; // 0x28(0x08)
	char pad_30[0x78]; // 0x30(0x78)
};

// Class Tiger.TigerClientPushConnectionManager
// Size: 0xf8 (Inherited: 0xa8)
struct UTigerClientPushConnectionManager : UTigerPushConnectionManager {
	char pad_A8[0x50]; // 0xa8(0x50)
};

// Class Tiger.TigerClimbablePipe
// Size: 0x230 (Inherited: 0x228)
struct ATigerClimbablePipe : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerCollectibleProgressCache
// Size: 0x78 (Inherited: 0x28)
struct UTigerCollectibleProgressCache : UObject {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Tiger.TigerCollectibleData
// Size: 0x90 (Inherited: 0x30)
struct UTigerCollectibleData : UDataAsset {
	uint32_t CollectibleId; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FText CollectibleName; // 0x38(0x18)
	struct FText CollectibleDescription; // 0x50(0x18)
	int32_t TotalRequired; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
	struct UTigerGrimoireEntry* GrimoireEntryToUnlock; // 0x70(0x08)
	struct UTigerCollectibleGrimoireEntrySet* GrimoireEntrySet; // 0x78(0x08)
	struct TArray<struct FTigerItemId> RewardIds; // 0x80(0x10)
};

// Class Tiger.TigerCollectibleGrimoireEntrySet
// Size: 0x40 (Inherited: 0x30)
struct UTigerCollectibleGrimoireEntrySet : UDataAsset {
	struct TArray<struct UTigerGrimoireEntry*> Set; // 0x30(0x10)
};

// Class Tiger.TigerCollectibleSystem
// Size: 0x150 (Inherited: 0xb0)
struct UTigerCollectibleSystem : UActorComponent {
	struct UTigerExperienceEvent* CollectiblePickupExpEvent; // 0xb0(0x08)
	struct UTigerItemAsset* GenericCollectibleItemAsset; // 0xb8(0x08)
	char pad_C0[0x90]; // 0xc0(0x90)

	void Server_AwardCollectible(struct UTigerCollectibleData* InCollectible); // Function Tiger.TigerCollectibleSystem.Server_AwardCollectible // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x13d26a0
	void ProcessCollectible(struct FText& InCollectibleId); // Function Tiger.TigerCollectibleSystem.ProcessCollectible // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1419a70
	struct UTigerCollectibleData* GetCollectibleWithName(struct FText& InCollectibleName); // Function Tiger.TigerCollectibleSystem.GetCollectibleWithName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1419100
	void Client_ProcessCollectible(uint32_t InCollectibleId); // Function Tiger.TigerCollectibleSystem.Client_ProcessCollectible // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1418de0
};

// Class Tiger.TigerCollectibleSystemSettings
// Size: 0x60 (Inherited: 0x38)
struct UTigerCollectibleSystemSettings : UDeveloperSettings {
	struct TSoftObjectPtr<UDataTable> CollectiblesTable; // 0x38(0x28)

	bool IsTableReady(); // Function Tiger.TigerCollectibleSystemSettings.IsTableReady // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14195f0
	struct UDataTable* GetCollectiblesTable(); // Function Tiger.TigerCollectibleSystemSettings.GetCollectiblesTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14191e0
};

// Class Tiger.TigerMaxIntAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerMaxIntAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(int32_t Value); // Function Tiger.TigerMaxIntAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1419e00
	void AddValue(int32_t Value); // Function Tiger.TigerMaxIntAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1418840
};

// Class Tiger.TigerFloatMinAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatMinAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatMinAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1419c20
	void AddValue(float Value); // Function Tiger.TigerFloatMinAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x14186e0
};

// Class Tiger.TigerFloatAverageAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatAverageAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatAverageAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1419c20
	void AddValue(float Value); // Function Tiger.TigerFloatAverageAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x14186e0
};

// Class Tiger.TigerFloatMultiplierAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatMultiplierAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(float Value); // Function Tiger.TigerFloatMultiplierAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1419c20
	void AddValue(float Value); // Function Tiger.TigerFloatMultiplierAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x14186e0
};

// Class Tiger.TigerBoolAnyAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerBoolAnyAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(bool Value); // Function Tiger.TigerBoolAnyAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1419b40
	void AddValue(bool Value); // Function Tiger.TigerBoolAnyAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1418630
};

// Class Tiger.TigerFloatCurveMultiplierAggregator
// Size: 0x40 (Inherited: 0x28)
struct UTigerFloatCurveMultiplierAggregator : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void RemoveValue(struct UCurveFloat* Value); // Function Tiger.TigerFloatCurveMultiplierAggregator.RemoveValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1419d00
	void AddValue(struct UCurveFloat* Value); // Function Tiger.TigerFloatCurveMultiplierAggregator.AddValue // (Final|Native|Private|BlueprintCallable) // @ game+0x1418790
};

// Class Tiger.TigerCombatComponent
// Size: 0x158 (Inherited: 0xb0)
struct UTigerCombatComponent : UActorComponent {
	struct FMulticastInlineDelegate OnEnterCombat; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnLeaveCombat; // 0xc0(0x10)
	struct UTigerWeapon* DefaultUnarmedWeaponClass; // 0xd0(0x08)
	struct UTigerItemAsset* DefaultMeleeItemAsset; // 0xd8(0x08)
	struct UTigerItemAsset* DefaultRangedItemAsset; // 0xe0(0x08)
	uint32_t DefaultRangedStartingAmmo; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct TArray<struct UTigerItemAsset*> DefaultMeleeItemAssetOverride; // 0xf0(0x10)
	struct TArray<struct UTigerItemAsset*> DefaultRangedItemAssetOverride; // 0x100(0x10)
	struct UTigerWeapon* CurrentWeaponClass; // 0x110(0x08)
	struct UTigerMeleeWeapon* CurrentMeleeWeaponClass; // 0x118(0x08)
	struct UTigerWeapon* CurrentVisibleWeaponClass; // 0x120(0x08)
	float OutOfCombatTime; // 0x128(0x04)
	char pad_12C[0xc]; // 0x12c(0x0c)
	float EntityDetectionSphere; // 0x138(0x04)
	char pad_13C[0x8]; // 0x13c(0x08)
	char CombatState; // 0x144(0x01)
	char pad_145[0x13]; // 0x145(0x13)

	void OverrideDefaultRangedItem(struct UTigerItemAsset* InRangedItemAsset); // Function Tiger.TigerCombatComponent.OverrideDefaultRangedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x14199e0
	void OverrideDefaultMeleeItem(struct UTigerItemAsset* InMeleeItemAsset); // Function Tiger.TigerCombatComponent.OverrideDefaultMeleeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1419950
	void OnRep_CombatStateChanged(); // Function Tiger.TigerCombatComponent.OnRep_CombatStateChanged // (Final|Native|Private) // @ game+0x14198a0
	void OnCombatAction(); // Function Tiger.TigerCombatComponent.OnCombatAction // (Final|Native|Private|BlueprintCallable) // @ game+0x1419880
	void Multicast_SetCurrentMeleeWeaponClass(struct UTigerMeleeWeapon* MeleeWeaponClass); // Function Tiger.TigerCombatComponent.Multicast_SetCurrentMeleeWeaponClass // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1419760
	void Multicast_OnDesiredWeaponChanged(struct UTigerWeapon* WeaponClass, struct UTigerWeapon* MeleeWeaponClass, bool bInstantSwitch); // Function Tiger.TigerCombatComponent.Multicast_OnDesiredWeaponChanged // (Net|NetReliableNative|Event|NetMulticast|Public|NetValidate) // @ game+0x1419620
	bool IsInCombat(); // Function Tiger.TigerCombatComponent.IsInCombat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14195c0
	bool HasEquippedWeapon(); // Function Tiger.TigerCombatComponent.HasEquippedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419570
	enum class ETigerEquippedWeaponType GetEquippedWeaponType(); // Function Tiger.TigerCombatComponent.GetEquippedWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14193b0
	struct UTigerWeapon* GetDefaultUnarmedWeaponClass(); // Function Tiger.TigerCombatComponent.GetDefaultUnarmedWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419370
	int32_t GetDefaultRangedStartingAmmo(); // Function Tiger.TigerCombatComponent.GetDefaultRangedStartingAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419340
	struct UTigerItemAsset* GetDefaultRangedItem(); // Function Tiger.TigerCombatComponent.GetDefaultRangedItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419310
	struct UTigerItemAsset* GetDefaultMeleeItem(); // Function Tiger.TigerCombatComponent.GetDefaultMeleeItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14192e0
	struct UTigerWeapon* GetCurrentWeaponClassDefaultObject(); // Function Tiger.TigerCombatComponent.GetCurrentWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14192b0
	struct UTigerWeapon* GetCurrentWeaponClass(); // Function Tiger.TigerCombatComponent.GetCurrentWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419290
	struct UTigerMeleeWeapon* GetCurrentMeleeWeaponClassDefaultObject(); // Function Tiger.TigerCombatComponent.GetCurrentMeleeWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419260
	struct UTigerMeleeWeapon* GetCurrentMeleeWeaponClass(); // Function Tiger.TigerCombatComponent.GetCurrentMeleeWeaponClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419240
	bool EquipWeapon(enum class ETigerWeaponSlot Slot, struct UTigerWeapon* WeaponClass, bool bInstantSwitch); // Function Tiger.TigerCombatComponent.EquipWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1418ff0
	void ClearDefaultItemOverrides(); // Function Tiger.TigerCombatComponent.ClearDefaultItemOverrides // (Final|Native|Public|BlueprintCallable) // @ game+0x1418b80
	void CheckForCombat(); // Function Tiger.TigerCombatComponent.CheckForCombat // (Final|Native|Public|BlueprintCallable) // @ game+0x1418b60
};

// Class Tiger.TigerCompassMarkerComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerCompassMarkerComponent : UActorComponent {
	struct UTigerCompassMarkerWidget* CompassMarkerWidget; // 0xb0(0x08)
	struct UTexture2D* MarkerTexture; // 0xb8(0x08)
	bool bShouldShowByDefault; // 0xc0(0x01)
	char pad_C1[0x17]; // 0xc1(0x17)

	void Show(); // Function Tiger.TigerCompassMarkerComponent.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x141a0d0
	void Hide(); // Function Tiger.TigerCompassMarkerComponent.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x14195a0
};

// Class Tiger.TigerCompassMarkerWidget
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerCompassMarkerWidget : UTigerWidget {
	struct FVector MarkerWorldLocation; // 0x280(0x0c)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UTexture2D* MarkerTexture; // 0x290(0x08)
	enum class ETigerCompassMarkerType MarkerType; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)

	void SetColorBasedOnPlayerIndex(char InIndex); // Function Tiger.TigerCompassMarkerWidget.SetColorBasedOnPlayerIndex // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	float GetRelativeAngleOnCompass(); // Function Tiger.TigerCompassMarkerWidget.GetRelativeAngleOnCompass // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419540
};

// Class Tiger.TigerCompassUI
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerCompassUI : UTigerWidget {
	struct TArray<struct FText> HeadingText; // 0x280(0x10)
	char pad_290[0x10]; // 0x290(0x10)

	void ShowCompassObject(struct UTigerCompassMarkerWidget* CompassObject); // Function Tiger.TigerCompassUI.ShowCompassObject // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void HideCompassObject(struct UTigerCompassMarkerWidget* CompassObject); // Function Tiger.TigerCompassUI.HideCompassObject // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void GetHeadingText(float InDegreeRangeCardinalAndOrdinalVisible, struct FText& OutHeadingText, float& OutZYaw); // Function Tiger.TigerCompassUI.GetHeadingText // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14193e0
	void CalculateTextWidgetPositions(struct TMap<struct UTigerStyledRichTextBlock*, float>& InDegreeOffsetsByTextWidget, struct UPanelWidget* InTextWidgetCanvasParent, struct TMap<struct UTigerStyledRichTextBlock*, struct FVector2D>& OutNewPositionsByTextWidget); // Function Tiger.TigerCompassUI.CalculateTextWidgetPositions // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14188f0
};

// Class Tiger.TigerConfigService
// Size: 0x48 (Inherited: 0x28)
struct UTigerConfigService : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UTigerRequestUtility* TigerRequestUtility; // 0x38(0x08)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class Tiger.TigerConsequenceBroadcastCoordinator
// Size: 0x40 (Inherited: 0x28)
struct UTigerConsequenceBroadcastCoordinator : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerConsoleService
// Size: 0x40 (Inherited: 0x28)
struct UTigerConsoleService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerItemAsset
// Size: 0x130 (Inherited: 0x30)
struct UTigerItemAsset : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct UStaticMesh* StaticMesh; // 0x38(0x08)
	enum class ETigerInventoryItemType ItemType; // 0x40(0x01)
	enum class ETigerItemRarity ItemRarity; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
	struct FText Name; // 0x48(0x18)
	struct FText ShortName; // 0x60(0x18)
	int32_t MaxStackSize; // 0x78(0x04)
	int32_t DropFromStackCount; // 0x7c(0x04)
	bool DropExistingItemsOfTypeOnPickup; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct FText Description; // 0x88(0x18)
	struct UTigerItemAsset* LowerRarity; // 0xa0(0x08)
	int32_t SortWithinCategoryAscending; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct FText TooltipItemType; // 0xb0(0x18)
	struct UTexture2D* UIIcon; // 0xc8(0x08)
	struct UTexture2D* HUDIcon; // 0xd0(0x08)
	struct UTigerWeapon* WeaponClass; // 0xd8(0x08)
	struct UTigerBuff* ItemBuff; // 0xe0(0x08)
	bool bShouldAutoPickUpItem; // 0xe8(0x01)
	bool bTriggerBuffOnItemPickup; // 0xe9(0x01)
	bool bRemoveBuffOnItemDropped; // 0xea(0x01)
	bool bShouldClearItemOnDeath; // 0xeb(0x01)
	char pad_EC[0x4]; // 0xec(0x04)
	struct UAkAudioEvent* PingWantVoiceAudioEvent; // 0xf0(0x08)
	struct UAkAudioEvent* PingHaveVoiceAudioEvent; // 0xf8(0x08)
	struct UAkAudioEvent* PingHereVoiceAudioEvent; // 0x100(0x08)
	struct UAkAudioEvent* PickUpAudioEvent; // 0x108(0x08)
	uint64_t PersistentTelemetryID; // 0x110(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x118(0x08)
	struct FString EntryId; // 0x120(0x10)

	enum class ETigerWeaponType GetWeaponType(); // Function Tiger.TigerItemAsset.GetWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480dd0
	struct UTigerWeapon* GetWeaponClassDefaultObject(); // Function Tiger.TigerItemAsset.GetWeaponClassDefaultObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480ca0
	struct UTexture2D* GetHUDIcon(); // Function Tiger.TigerItemAsset.GetHUDIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480980
	struct FText GetDescription(); // Function Tiger.TigerItemAsset.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14808f0
	bool CanBeDropped(); // Function Tiger.TigerItemAsset.CanBeDropped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480670
};

// Class Tiger.TigerConsumableAsset
// Size: 0x178 (Inherited: 0x130)
struct UTigerConsumableAsset : UTigerItemAsset {
	struct UAnimMontage* Montage; // 0x130(0x08)
	bool bCanBeUsedWhileMoving; // 0x138(0x01)
	char pad_139[0x3]; // 0x139(0x03)
	float UseTime; // 0x13c(0x04)
	int32_t MaxStack; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct UAkAudioEvent* BeginUseAudioEvent; // 0x148(0x08)
	struct UAkAudioEvent* UseSuccessfulAudioEvent; // 0x150(0x08)
	struct UAkAudioEvent* UseFailedAudioEvent; // 0x158(0x08)
	struct UTigerCharacterEffect* SuccessfulUseCharacterEffect; // 0x160(0x08)
	struct ATigerBuffPostProcess* BeginUsePostProcess; // 0x168(0x08)
	struct ATigerBuffPostProcess* SuccessfulBuffPostProcess; // 0x170(0x08)
};

// Class Tiger.TigerHealingConsumableAsset
// Size: 0x180 (Inherited: 0x178)
struct UTigerHealingConsumableAsset : UTigerConsumableAsset {
	float HealAmount; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
};

// Class Tiger.TigerBuffingConsumableAsset
// Size: 0x180 (Inherited: 0x178)
struct UTigerBuffingConsumableAsset : UTigerConsumableAsset {
	struct UTigerBuff* BuffToApply; // 0x178(0x08)
};

// Class Tiger.TigerRevealItemConsumableAsset
// Size: 0x180 (Inherited: 0x178)
struct UTigerRevealItemConsumableAsset : UTigerConsumableAsset {
	float MaxDistanceToItem; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
};

// Class Tiger.TigerSupplyDropConsumableAsset
// Size: 0x190 (Inherited: 0x178)
struct UTigerSupplyDropConsumableAsset : UTigerConsumableAsset {
	struct AActor* SupplyDropFlare; // 0x178(0x08)
	struct AActor* SupplyDropHelicopterActor; // 0x180(0x08)
	float DistanceFromPlayer; // 0x188(0x04)
	float Height; // 0x18c(0x04)
};

// Class Tiger.TigerConsumablesComponent
// Size: 0x188 (Inherited: 0xb0)
struct UTigerConsumablesComponent : UActorComponent {
	struct FMulticastInlineDelegate OnUseConsumableFinished; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnUseConsumableStarted; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnUseConsumableCancelled; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnUseConsumablePrevented; // 0xe0(0x10)
	struct UAnimMontage* FallbackUseMontage; // 0xf0(0x08)
	struct UTigerConsumableAsset* QuickUseConsumable; // 0xf8(0x08)
	struct UTigerBuff* MovableBuffClass; // 0x100(0x08)
	int32_t CancelConsumableUseOnTraversalAction; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct ATigerPlayer* Player; // 0x110(0x08)
	struct UAnimMontage* CurrentMontage; // 0x118(0x08)
	struct UTigerConsumableAsset* CurrentConsumable; // 0x120(0x08)
	struct UTigerConsumableAsset* QuickConsumables[0x6]; // 0x128(0x30)
	char pad_158[0x30]; // 0x158(0x30)

	void UseCallback(); // Function Tiger.TigerConsumablesComponent.UseCallback // (Final|Native|Private) // @ game+0x141f400
	bool TriggerUseQuickUseConsumable(); // Function Tiger.TigerConsumablesComponent.TriggerUseQuickUseConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x141f3d0
	bool TriggerUseConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.TriggerUseConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x141f330
	bool TriggerDropConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.TriggerDropConsumable // (Final|Native|Public|BlueprintCallable) // @ game+0x141f290
	void TigerDelegateConsumableSuccessfullyFinishedUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableSuccessfullyFinishedUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateConsumableStartedUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableStartedUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateConsumablePrevented__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumablePrevented__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateConsumableCancelledUse__DelegateSignature(struct UTigerConsumableAsset* Consumable); // DelegateFunction Tiger.TigerConsumablesComponent.TigerDelegateConsumableCancelledUse__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Server_UseConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.Server_UseConsumable // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x141ee40
	void Server_StopUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Server_StopUseConsumable // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x141ed80
	void OnTraversalAction(struct ATigerPlayer* InPlayer, enum class ETigerTraversalAction InTraversalAction); // Function Tiger.TigerConsumablesComponent.OnTraversalAction // (Final|Native|Private) // @ game+0x141eb60
	void Multicast_StopUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Multicast_StopUseConsumable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x141ea40
	void Multicast_SimulateUseConsumable(struct UTigerConsumableAsset* Consumable, float UseTime); // Function Tiger.TigerConsumablesComponent.Multicast_SimulateUseConsumable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x141e970
	void Multicast_ClearConsumable(); // Function Tiger.TigerConsumablesComponent.Multicast_ClearConsumable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x141e950
	bool IsUsingConsumable(); // Function Tiger.TigerConsumablesComponent.IsUsingConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e920
	bool IsPlayingConsumableMontage(); // Function Tiger.TigerConsumablesComponent.IsPlayingConsumableMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e8f0
	float GetUseProgress(); // Function Tiger.TigerConsumablesComponent.GetUseProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e810
	struct UTigerConsumableAsset* GetCurrentlyUsingConsumable(); // Function Tiger.TigerConsumablesComponent.GetCurrentlyUsingConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e6d0
	bool GetConsumableAtIndex(int32_t Index, struct UTigerConsumableAsset*& Consumable, int32_t& Stack); // Function Tiger.TigerConsumablesComponent.GetConsumableAtIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e530
	void Client_UseConsumableFailed(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerConsumablesComponent.Client_UseConsumableFailed // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x141e3d0
	bool CanPickUpConsumable(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.CanPickUpConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e280
	bool CanBePickedup(struct UTigerConsumableAsset* Consumable); // Function Tiger.TigerConsumablesComponent.CanBePickedup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e280
};

// Class Tiger.TigerWheelWidget
// Size: 0x2a8 (Inherited: 0x298)
struct UTigerWheelWidget : UTigerMenuWidget {
	float LockCameraForGamepadAfterUseTime; // 0x298(0x04)
	bool bShouldSetMouseLocation; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	struct UTigerWheelInterfaceWidget* Interface; // 0x2a0(0x08)

	void PrimaryAction(int32_t Index); // Function Tiger.TigerWheelWidget.PrimaryAction // (Native|Protected) // @ game+0x1566370
	bool OpenWheel(); // Function Tiger.TigerWheelWidget.OpenWheel // (Native|Public|BlueprintCallable) // @ game+0x15662b0
	struct UTigerWheelInterfaceWidget* GetInterfaceWidget(); // Function Tiger.TigerWheelWidget.GetInterfaceWidget // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool CloseWheel(bool bTriggerAction); // Function Tiger.TigerWheelWidget.CloseWheel // (Native|Public|BlueprintCallable) // @ game+0x15659e0
	void AlternateAction(int32_t Index); // Function Tiger.TigerWheelWidget.AlternateAction // (Native|Protected) // @ game+0x1565830
};

// Class Tiger.TigerConsumableWheelWidget
// Size: 0x330 (Inherited: 0x2a8)
struct UTigerConsumableWheelWidget : UTigerWheelWidget {
	struct ATigerPlayer* Player; // 0x2a8(0x08)
	struct UTigerConsumablesComponent* ConsumablesComponent; // 0x2b0(0x08)
	struct UTigerInventoryComponent* InventoryComponent; // 0x2b8(0x08)
	struct TArray<struct UTigerConsumableAsset*> DefaultSortOrder; // 0x2c0(0x10)
	struct TMap<struct UTigerConsumableAsset*, int32_t> DefaultSortOrderMap; // 0x2d0(0x50)
	struct TArray<struct UTigerConsumableAsset*> SortedMenuItems; // 0x320(0x10)

	bool GetSortedMenuItem(int32_t InIndex, struct UTigerConsumableAsset*& OutConsumable, int32_t& OutQuantityAvailable); // Function Tiger.TigerConsumableWheelWidget.GetSortedMenuItem // (Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x141e6f0
};

// Class Tiger.TigerContextualHelp
// Size: 0xb0 (Inherited: 0x28)
struct UTigerContextualHelp : UObject {
	float LifeTimeInSeconds; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FText HeaderText; // 0x30(0x18)
	struct FText DescriptionText; // 0x48(0x18)
	struct FName InputAction; // 0x60(0x08)
	bool bShouldHideOnInput; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct TSoftObjectPtr<UTexture2D> Icon; // 0x70(0x28)
	int32_t MatchesPlayedLimit; // 0x98(0x04)
	bool bWantsToShow; // 0x9c(0x01)
	char pad_9D[0x3]; // 0x9d(0x03)
	float CooldownInSeconds; // 0xa0(0x04)
	enum class ETigerContextualHelpType ContextualHelpType; // 0xa4(0x01)
	enum class ETigerContextualHelpShouldShowInGameMode ShouldShowInGameMode; // 0xa5(0x01)
	char ShouldShowInGameModeFlags; // 0xa6(0x01)
	char pad_A7[0x9]; // 0xa7(0x09)

	void SetupTriggerConditions(struct FTigerContextualHelpContext& InContext); // Function Tiger.TigerContextualHelp.SetupTriggerConditions // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	bool SatisfiesCustomCondition(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerContextualHelp.SatisfiesCustomCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x141ece0
	void OnPlayerSpawned(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerContextualHelp.OnPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnHide(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerContextualHelp.OnHide // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool HasReachedMaxMatchesPlayedLimit(struct FTigerContextualHelpContext& InContext); // Function Tiger.TigerContextualHelp.HasReachedMaxMatchesPlayedLimit // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x141e840
	void ExtendLifetime(float InLifeTimeInSeconds, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelp.ExtendLifetime // (Final|Native|Public|BlueprintCallable) // @ game+0x141e460
	bool CanEverShow(struct FTigerContextualHelpContext& InContext); // Function Tiger.TigerContextualHelp.CanEverShow // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x141e320
};

// Class Tiger.TigerContextualHelpComponent
// Size: 0x100 (Inherited: 0xb0)
struct UTigerContextualHelpComponent : UActorComponent {
	struct ATigerPlayerController* TigerPlayerController; // 0xb0(0x08)
	struct UTigerContextualHelpUI* ContextualHelpUI; // 0xb8(0x08)
	struct TArray<struct FTigerCurrentContextualHelp> ActiveContextualHelps; // 0xc0(0x10)
	struct TArray<struct UTigerContextualHelp*> ContextualHelpCandidates; // 0xd0(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> ContextualHelpTypes; // 0xe0(0x10)
	float CooldownTime; // 0xf0(0x04)
	float MinimumDisplayTime; // 0xf4(0x04)
	char pad_F8[0x8]; // 0xf8(0x08)

	void PrepareContextualHelpComponentsForCurrentSession(struct FTigerContextualHelpContext InContext); // Function Tiger.TigerContextualHelpComponent.PrepareContextualHelpComponentsForCurrentSession // (Final|Native|Protected) // @ game+0x141ec30
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerContextualHelpComponent.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x141ead0
	struct TArray<struct UTigerContextualHelp*> GetCurrentContextualHelpCandidates(); // Function Tiger.TigerContextualHelpComponent.GetCurrentContextualHelpCandidates // (Final|Native|Public|BlueprintCallable) // @ game+0x141e650
};

// Class Tiger.TigerContextualHelpUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerContextualHelpUI : UTigerWidget {

	void OnShowHelpWidget(struct UTigerContextualHelp* InData, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelpUI.OnShowHelpWidget // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnHideHelpWidget(struct UTigerContextualHelp* InData, float& OutAnimationDuration, enum class ETigerContextualHelpType InType); // Function Tiger.TigerContextualHelpUI.OnHideHelpWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerCrosshairWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerCrosshairWidget : UTigerWidget {
	enum class ETargetInteraction PreviousInteraction; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UObject* PreviousInteractionObject; // 0x288(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> PreviousInteractionCharacter; // 0x290(0x08)
	struct UTigerInventoryComponent* Inventory; // 0x298(0x08)
	struct UMaterialInstanceDynamic* ProgressBarMaterial; // 0x2a0(0x08)
	struct UCanvasPanel* RootPanel; // 0x2a8(0x08)
	struct ATigerPlayer* TigerPlayer; // 0x2b0(0x08)
	struct UTigerWeaponCrosshairWidget* CurrentWeaponCrosshair; // 0x2b8(0x08)
	struct TArray<struct UTigerWeaponCrosshairWidget*> PreviousWeaponCrosshairs; // 0x2c0(0x10)
	float ProgressValue; // 0x2d0(0x04)
	enum class ETigerUIColor CurrentProgressBarColor; // 0x2d4(0x01)
	char pad_2D5[0xb]; // 0x2d5(0x0b)

	void UpdateInteraction(enum class ETargetInteraction Interaction, struct UObject* InteractionObject); // Function Tiger.TigerCrosshairWidget.UpdateInteraction // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void SetProgressBarColor(enum class ETigerUIColor UIColor); // Function Tiger.TigerCrosshairWidget.SetProgressBarColor // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnShowHitMarker(struct FLinearColor& HitmarkerColor, bool bWasDownedOrKilled); // Function Tiger.TigerCrosshairWidget.OnShowHitMarker // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnInventoryUpdatedBP(); // Function Tiger.TigerCrosshairWidget.OnInventoryUpdatedBP // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerCrowdAgentComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerCrowdAgentComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class Tiger.TigerCSVTable
// Size: 0x40 (Inherited: 0x28)
struct UTigerCSVTable : UObject {
	char pad_28[0x18]; // 0x28(0x18)

	void WriteToFile(struct FString Filename, struct FString Path); // Function Tiger.TigerCSVTable.WriteToFile // (Final|Native|Public|BlueprintCallable) // @ game+0x141f420
	void SetValueString(int32_t Row, int32_t Column, struct FString Value); // Function Tiger.TigerCSVTable.SetValueString // (Final|Native|Public|BlueprintCallable) // @ game+0x141f040
	void SetValueFloat(int32_t Row, int32_t Column, float Value); // Function Tiger.TigerCSVTable.SetValueFloat // (Final|Native|Public|BlueprintCallable) // @ game+0x141ef00
	int32_t AddColumn(struct FString ColumnName); // Function Tiger.TigerCSVTable.AddColumn // (Final|Native|Public|BlueprintCallable) // @ game+0x141e130
	void AccumulateValue(int32_t Row, int32_t Column, float Value); // Function Tiger.TigerCSVTable.AccumulateValue // (Final|Native|Public|BlueprintCallable) // @ game+0x141dfc0
};

// Class Tiger.TigerDamageFeedbackComponent
// Size: 0x110 (Inherited: 0xb0)
struct UTigerDamageFeedbackComponent : UActorComponent {
	struct TSet<struct UDamageType*> ProjectileFeedbackDamageTypes; // 0xb0(0x50)
	char pad_100[0x10]; // 0x100(0x10)

	struct FLinearColor GetHitmarkerColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent); // Function Tiger.TigerDamageFeedbackComponent.GetHitmarkerColor // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1424950
	struct FLinearColor GetDamageTextColor(bool bInWasDowned, bool bInWasKilled, bool bInWasCriticalHit, bool bInHasExtraHealth, float InRangedDamageFalloffPercent); // Function Tiger.TigerDamageFeedbackComponent.GetDamageTextColor // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1424740
	void Client_ShowOutgoingValidatedFeedback(struct FTigerDamageNumberData InData, struct FDamageEvent InDamageEvent, struct ATigerCharacter* InDamagedCharacter, bool bInShowEffects); // Function Tiger.TigerDamageFeedbackComponent.Client_ShowOutgoingValidatedFeedback // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1424460
};

// Class Tiger.TigerDamageTriggerVolume
// Size: 0x280 (Inherited: 0x260)
struct ATigerDamageTriggerVolume : ATriggerVolume {
	float DamagePerSecond; // 0x260(0x04)
	bool bOnlyDamageKindred; // 0x264(0x01)
	bool bDoNotDamageDowned; // 0x265(0x01)
	char pad_266[0x2]; // 0x266(0x02)
	float DamageRate; // 0x268(0x04)
	bool bEnableDamage; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	struct TArray<struct FDamageTriggerOverlapData> OverlappingCharacters; // 0x270(0x10)

	void OnEndOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerDamageTriggerVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x1424fe0
	void OnBeginOverlap(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerDamageTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x1424f10
};

// Class Tiger.TigerDamageBase
// Size: 0x40 (Inherited: 0x40)
struct UTigerDamageBase : UDamageType {
};

// Class Tiger.DmgType_Ranged
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Ranged : UTigerDamageBase {
};

// Class Tiger.DmgType_RangedCritical
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_RangedCritical : UDmgType_Ranged {
};

// Class Tiger.DmgType_Melee
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Melee : UTigerDamageBase {
};

// Class Tiger.DmgType_Discipline
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Discipline : UTigerDamageBase {
};

// Class Tiger.DmgType_DisciplineFOTT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_DisciplineFOTT : UDmgType_Discipline {
};

// Class Tiger.DmgType_DOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_DOT : UTigerDamageBase {
};

// Class Tiger.DmgType_FireDOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_FireDOT : UDmgType_DOT {
};

// Class Tiger.DmgType_ToreadorDOT
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_ToreadorDOT : UDmgType_DOT {
};

// Class Tiger.DmgType_GameInflicted
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_GameInflicted : UTigerDamageBase {
};

// Class Tiger.DmgType_Environmental
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Environmental : UDmgType_GameInflicted {
};

// Class Tiger.DmgType_Mosquito
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_Mosquito : UDmgType_GameInflicted {
};

// Class Tiger.DmgType_OutOfBoundsMosquito
// Size: 0x40 (Inherited: 0x40)
struct UDmgType_OutOfBoundsMosquito : UDmgType_GameInflicted {
};

// Class Tiger.TigerDataDependentWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerDataDependentWidget : UTigerWidget {

	void OnDataLoaded(); // Function Tiger.TigerDataDependentWidget.OnDataLoaded // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ListenToDataLoadingEvent(); // Function Tiger.TigerDataDependentWidget.ListenToDataLoadingEvent // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsDataLoaded(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerDataDependentWidget.IsDataLoaded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void CheckDataLoaded(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerDataDependentWidget.CheckDataLoaded // (Final|Native|Private) // @ game+0x14243d0
};

// Class Tiger.TigerDeathScreen
// Size: 0x2f0 (Inherited: 0x298)
struct UTigerDeathScreen : UTigerMenuWidget {
	char pad_298[0x8]; // 0x298(0x08)
	struct TMap<enum class ETigerKillerType, struct FText> KillerTypeNames; // 0x2a0(0x50)

	bool ShouldReturnToElysium(); // Function Tiger.TigerDeathScreen.ShouldReturnToElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14250b0
	void SetInformation(int32_t InPlayerPlacement, int32_t InNumGroupsAtStart, struct FTigerPlayerStateGameData& InPlayerStateGameData, enum class ETigerKillerType InKillerType); // Function Tiger.TigerDeathScreen.SetInformation // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	bool CanStartSpectating(); // Function Tiger.TigerDeathScreen.CanStartSpectating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14243a0
};

// Class Tiger.TigerDebugCameraHUD
// Size: 0x318 (Inherited: 0x318)
struct ATigerDebugCameraHUD : ADebugCameraHUD {
};

// Class Tiger.TigerDeferredGroupRetainerBox
// Size: 0x150 (Inherited: 0x150)
struct UTigerDeferredGroupRetainerBox : URetainerBox {

	void Construct(); // Function Tiger.TigerDeferredGroupRetainerBox.Construct // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerDeferredRenderBox
// Size: 0x130 (Inherited: 0x120)
struct UTigerDeferredRenderBox : UContentWidget {
	char pad_120[0x10]; // 0x120(0x10)
};

// Class Tiger.TigerDestroySessionAsync
// Size: 0x78 (Inherited: 0x30)
struct UTigerDestroySessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0x28]; // 0x50(0x28)

	struct UTigerDestroySessionAsync* DestroySession(struct UObject* WorldContextObject, enum class ESessionType SESSIONTYPE); // Function Tiger.TigerDestroySessionAsync.DestroySession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14245e0
};

// Class Tiger.TigerDialogueInteractionScreen
// Size: 0x2b8 (Inherited: 0x298)
struct UTigerDialogueInteractionScreen : UTigerMenuWidget {
	float TransitionTime; // 0x298(0x04)
	struct TWeakObjectPtr<struct ATigerBaseNPC> VendorNPC; // 0x29c(0x08)
	struct TWeakObjectPtr<struct UTigerAnimInstance> TargetAnimationInstance; // 0x2a4(0x08)
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x2ac(0x08)
	char pad_2B4[0x4]; // 0x2b4(0x04)

	void TransitionToPlayerCamera(); // Function Tiger.TigerDialogueInteractionScreen.TransitionToPlayerCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x14251c0
	void TransitionToInteractionCamera(); // Function Tiger.TigerDialogueInteractionScreen.TransitionToInteractionCamera // (Final|Native|Protected|BlueprintCallable) // @ game+0x14251a0
};

// Class Tiger.TigerNpcDialogueList
// Size: 0x90 (Inherited: 0x30)
struct UTigerNpcDialogueList : UDataAsset {
	struct FString DialogueIdBase; // 0x30(0x10)
	struct TMap<struct FString, struct FTigerNpcDialogue> DialogueLines; // 0x40(0x50)
};

// Class Tiger.TigerDialogueManager
// Size: 0x150 (Inherited: 0x28)
struct UTigerDialogueManager : UObject {
	char pad_28[0x128]; // 0x28(0x128)

	void SortDialogueLines(struct ATigerPlayerState* InState); // Function Tiger.TigerDialogueManager.SortDialogueLines // (Final|Native|Public|BlueprintCallable) // @ game+0x1425110
	bool HasQuestDialogue(); // Function Tiger.TigerDialogueManager.HasQuestDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424ee0
	bool HasMoreDialogue(); // Function Tiger.TigerDialogueManager.HasMoreDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424e80
	bool HasHighPriorityDialogue(); // Function Tiger.TigerDialogueManager.HasHighPriorityDialogue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424e50
	enum class ETigerClan GetSpeakerClan(); // Function Tiger.TigerDialogueManager.GetSpeakerClan // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424db0
	struct FTigerNpcDialogue GetNextDialoguePack(); // Function Tiger.TigerDialogueManager.GetNextDialoguePack // (Final|Native|Public|BlueprintCallable) // @ game+0x1424d10
	bool GetNextDialogueLine(struct FText& OutText, struct FText& OutQuestDescription); // Function Tiger.TigerDialogueManager.GetNextDialogueLine // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1424b90
	int32_t GetCurrentDialogueId(); // Function Tiger.TigerDialogueManager.GetCurrentDialogueId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424710
	bool CanInteract(); // Function Tiger.TigerDialogueManager.CanInteract // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424370
};

// Class Tiger.TigerDisciplineBase
// Size: 0x78 (Inherited: 0x28)
struct UTigerDisciplineBase : UObject {
	struct ATigerCharacter* Owner; // 0x28(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x30(0x08)
	struct UTigerActiveDisciplineConfig* BaseConfig; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)
	int32_t PowerLevel; // 0x58(0x04)
	char pad_5C[0x8]; // 0x5c(0x08)
	float AIUseDuration; // 0x64(0x04)
	float AIMinCooldownDuration; // 0x68(0x04)
	float AIMaxCooldownDuration; // 0x6c(0x04)
	char pad_70[0x8]; // 0x70(0x08)

	bool UsesChargesUI(); // Function Tiger.TigerDisciplineBase.UsesChargesUI // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1425210
	bool UsesCharges(); // Function Tiger.TigerDisciplineBase.UsesCharges // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14251e0
	bool ShouldUseCameraPresetWhenActive(); // Function Tiger.TigerDisciplineBase.ShouldUseCameraPresetWhenActive // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14250e0
	bool HasPreparationCameraPreset(); // Function Tiger.TigerDisciplineBase.HasPreparationCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424eb0
	bool HasCharge(); // Function Tiger.TigerDisciplineBase.HasCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424e30
	bool HasCameraPreset(); // Function Tiger.TigerDisciplineBase.HasCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424e00
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerDisciplineBase.GetTigerPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424dd0
	bool GetShouldDisplayActiveTimeLeft(); // Function Tiger.TigerDisciplineBase.GetShouldDisplayActiveTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424d90
	struct UTigerCameraPreset* GetPreparationCameraPreset(); // Function Tiger.TigerDisciplineBase.GetPreparationCameraPreset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424d50
	int32_t GetMaxCharges(); // Function Tiger.TigerDisciplineBase.GetMaxCharges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1424b60
	int32_t GetCharges(); // Function Tiger.TigerDisciplineBase.GetCharges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14246f0
	struct UTigerCameraPreset* GetCameraPreset(); // Function Tiger.TigerDisciplineBase.GetCameraPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14246b0
};

// Class Tiger.TigerDisciplineAnimTriggered
// Size: 0xf0 (Inherited: 0x78)
struct UTigerDisciplineAnimTriggered : UTigerDisciplineBase {
	struct UTigerDisciplineAnimTriggeredConfig* AnimConfig; // 0x78(0x08)
	char pad_80[0x10]; // 0x80(0x10)
	struct UAnimMontage* LastPlayingMontage; // 0x90(0x08)
	struct TMap<struct UAnimMontage*, float> TriggerTimes; // 0x98(0x50)
	char pad_E8[0x8]; // 0xe8(0x08)
};

// Class Tiger.TigerDisciplineConfigBase
// Size: 0x100 (Inherited: 0x28)
struct UTigerDisciplineConfigBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UTexture2D* UIIcon; // 0x30(0x08)
	struct FText DisciplineName; // 0x38(0x18)
	struct FText DisciplineDescription; // 0x50(0x18)
	struct FText DisciplineSummary; // 0x68(0x18)
	bool bIsClanAbility; // 0x80(0x01)
	bool bEnablesGroupMemberHealthBars; // 0x81(0x01)
	enum class ETigerAIPlayerAction ActivationActionReported; // 0x82(0x01)
	char pad_83[0x5]; // 0x83(0x05)
	struct UTigerDisciplineBase* DisciplineClass; // 0x88(0x08)
	enum class ETigerActionAllowed AllowedActions[0xf]; // 0x90(0x3c)
	uint16_t ActionsThatShouldCancelDiscipline; // 0xcc(0x02)
	bool bShouldAutomaticallyUseCameraPreset; // 0xce(0x01)
	char pad_CF[0x1]; // 0xcf(0x01)
	struct UTigerCameraPreset* PreparationCameraPreset; // 0xd0(0x08)
	struct UTigerCameraPreset* CameraPreset; // 0xd8(0x08)
	struct UTigerCameraPreset* CameraPresetIndoor; // 0xe0(0x08)
	struct UTigerWeaponCrosshairWidget* Crosshair; // 0xe8(0x08)
	struct UMediaSource* PreviewVideo; // 0xf0(0x08)
	uint64_t PersistentTelemetryID; // 0xf8(0x08)

	void GetLevelInfo(struct TArray<struct FTigerDisciplineLevelInfo>& LevelInfo); // Function Tiger.TigerDisciplineConfigBase.GetLevelInfo // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x142cdb0
};

// Class Tiger.TigerActiveDisciplineConfig
// Size: 0x178 (Inherited: 0x100)
struct UTigerActiveDisciplineConfig : UTigerDisciplineConfigBase {
	int32_t MaxLevel; // 0x100(0x04)
	char pad_104[0x4]; // 0x104(0x04)
	struct FText CooldownText; // 0x108(0x18)
	struct FText CooldownSuffix; // 0x120(0x18)
	int32_t MaxCharges; // 0x138(0x04)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct TArray<float> RechargeTimes; // 0x140(0x10)
	struct TArray<float> CooldownTimes; // 0x150(0x10)
	bool bShouldRotateTowardsCameraOnActivation; // 0x160(0x01)
	bool bShouldRotateTowardsCameraOnRelease; // 0x161(0x01)
	char pad_162[0x2]; // 0x162(0x02)
	float MovementMultiplier; // 0x164(0x04)
	float GravityMultiplier; // 0x168(0x04)
	float PrimaryAINoiseEventRange; // 0x16c(0x04)
	float SecondaryAINoiseEventRange; // 0x170(0x04)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class Tiger.TigerBlindingBeautyConfig
// Size: 0x1f0 (Inherited: 0x178)
struct UTigerBlindingBeautyConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x178(0x08)
	struct ATigerBlindingBeautyEffectActor* BlueprintActor; // 0x180(0x08)
	float BlueprintActorLifetime; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct UTigerBuff* BlindingDebuff; // 0x190(0x08)
	struct UTigerBuff* CharmDebuffPlayer; // 0x198(0x08)
	struct UTigerBuff* CharmDebuffNpc; // 0x1a0(0x08)
	struct TArray<float> BlindDuration; // 0x1a8(0x10)
	float CharmPlayerDuration; // 0x1b8(0x04)
	float CharmNpcDuration; // 0x1bc(0x04)
	float TriggerTime; // 0x1c0(0x04)
	float ActiveTimeAfterTrigger; // 0x1c4(0x04)
	float GuaranteedBlindRange; // 0x1c8(0x04)
	float LookBlindRange; // 0x1cc(0x04)
	float LookDotProductHitThreshold; // 0x1d0(0x04)
	char pad_1D4[0x4]; // 0x1d4(0x04)
	struct TArray<float> BlindDamage; // 0x1d8(0x10)
	bool bShouldDamageCivilians; // 0x1e8(0x01)
	bool bUseCameraAsLookDirection; // 0x1e9(0x01)
	char pad_1EA[0x6]; // 0x1ea(0x06)
};

// Class Tiger.TigerDisciplineBlindingBeauty
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineBlindingBeauty : UTigerDisciplineBase {
	struct UTigerBlindingBeautyConfig* Config; // 0x78(0x08)
	struct ATigerBlindingBeautyEffectActor* BlueprintActor; // 0x80(0x08)
	char pad_88[0x10]; // 0x88(0x10)
};

// Class Tiger.TigerDisciplineAnimTriggeredConfig
// Size: 0x188 (Inherited: 0x178)
struct UTigerDisciplineAnimTriggeredConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x178(0x08)
	enum class ETigerDisciplinesEnum DisciplineType; // 0x180(0x01)
	char pad_181[0x3]; // 0x181(0x03)
	float ActiveTimeAfterTrigger; // 0x184(0x04)
};

// Class Tiger.TigerCharmConfig
// Size: 0x1f0 (Inherited: 0x188)
struct UTigerCharmConfig : UTigerDisciplineAnimTriggeredConfig {
	float Damage; // 0x188(0x04)
	float BondMaxDistance; // 0x18c(0x04)
	float BackgroundFindTargetInterval; // 0x190(0x04)
	float BondPlayerDuration; // 0x194(0x04)
	float BondNPCDuration; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct TArray<struct UTigerMajestyBuff*> CharmedBuff; // 0x1a0(0x10)
	struct TArray<struct UTigerBondingBuff*> BondingBuff; // 0x1b0(0x10)
	struct UTigerCharacterEffect* OnHitEffect; // 0x1c0(0x08)
	struct UTigerBuff* ThornsBuff; // 0x1c8(0x08)
	bool bShowDebugInfo; // 0x1d0(0x01)
	char pad_1D1[0x3]; // 0x1d1(0x03)
	float MaxDistance; // 0x1d4(0x04)
	float MinDistance; // 0x1d8(0x04)
	float PlayerTargetMultiplier; // 0x1dc(0x04)
	struct UCurveFloat* AimAxisValueCurve; // 0x1e0(0x08)
	struct UCurveFloat* DistanceFromUseValueCurve; // 0x1e8(0x08)
};

// Class Tiger.TigerBondingBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerBondingBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerBondingBuff
// Size: 0x268 (Inherited: 0x268)
struct UTigerBondingBuff : UTigerBuff {
};

// Class Tiger.TigerDisciplineCharm
// Size: 0x118 (Inherited: 0xf0)
struct UTigerDisciplineCharm : UTigerDisciplineAnimTriggered {
	char pad_F0[0x18]; // 0xf0(0x18)
	struct UTigerCharmConfig* Config; // 0x108(0x08)
	char pad_110[0x8]; // 0x110(0x08)

	void OnTickBond(struct ATigerCharacter* Player, struct ATigerCharacter* TargetNpc); // Function Tiger.TigerDisciplineCharm.OnTickBond // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStoppedBond(); // Function Tiger.TigerDisciplineCharm.OnStoppedBond // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStartedBond(struct ATigerCharacter* Player, struct ATigerCharacter* TargetNpc); // Function Tiger.TigerDisciplineCharm.OnStartedBond // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerDisciplineComponent
// Size: 0x268 (Inherited: 0xb0)
struct UTigerDisciplineComponent : UActorComponent {
	struct UTigerDisciplineConfigs* DisciplineConfigs; // 0xb0(0x08)
	struct USoundBase* DisciplineFailSound; // 0xb8(0x08)
	struct FMulticastInlineDelegate OnDisciplineUsedDelegate; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnActivatedDisciplineDelegate; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnDeactivatedDisciplineDelegate; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnDisciplineUnlocked; // 0xf0(0x10)
	struct UAkAudioEvent* TraversalSkillCameOffCooldownAkAudioEvent; // 0x100(0x08)
	struct UAkAudioEvent* ArchetypeSkillCameOffCooldownAkAudioEvent; // 0x108(0x08)
	struct FTigerScouterCharacterData ScouterCharacterData; // 0x110(0x30)
	struct UTigerBuffShackles* PrimaryShacklesBuff; // 0x140(0x08)
	struct UTigerBuff* SecondaryShacklesBuff; // 0x148(0x08)
	float WeaponRarityDamageMultipliers[0x5]; // 0x150(0x14)
	char pad_164[0x4]; // 0x164(0x04)
	struct ATigerPlayer* Player; // 0x168(0x08)
	char pad_170[0x88]; // 0x170(0x88)
	struct TMap<enum class ETigerDisciplinesEnum, struct UTigerDisciplineBase*> Disciplines; // 0x1f8(0x50)
	char pad_248[0x20]; // 0x248(0x20)

	bool WantsToStrafe(); // Function Tiger.TigerDisciplineComponent.WantsToStrafe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1429a80
	void UnlockDisciplineSlot(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplineComponent.UnlockDisciplineSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1429a00
	void UnlockDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.UnlockDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1429980
	enum class ETigerInputActionResult TryUseDiscipline(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.TryUseDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x14298f0
	void TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.TryToAbortHoldingDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x14298d0
	void TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.TryToAbortChannelingDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x14298b0
	enum class ETigerInputActionResult TryReleaseDiscipline(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplineComponent.TryReleaseDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1429820
	void TigerDelegateDisciplineUsed__DelegateSignature(enum class ETigerDisciplineSlot InDisciplineSlot); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDisciplineUsed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateDisciplineUnlocked__DelegateSignature(enum class ETigerDisciplineSlot InDisciplineSlot); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDisciplineUnlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateDeactivatedDiscipline__DelegateSignature(enum class ETigerDisciplinesEnum InDiscipline); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateDeactivatedDiscipline__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateActivatedDiscipline__DelegateSignature(enum class ETigerDisciplinesEnum InDiscipline); // DelegateFunction Tiger.TigerDisciplineComponent.TigerDelegateActivatedDiscipline__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Server_UseDiscipline(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_UseDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1429720
	void Server_TryToInterruptActiveDiscipline(enum class ETigerCharacterActions InAction); // Function Tiger.TigerDisciplineComponent.Server_TryToInterruptActiveDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1429670
	void Server_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Server_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1429620
	void Server_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Server_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14295d0
	void Server_SetPreparingDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.Server_SetPreparingDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1429520
	void Server_SetCrosshairHitLocation(struct FVector InLocation); // Function Tiger.TigerDisciplineComponent.Server_SetCrosshairHitLocation // (Final|Net|Native|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x1429480
	void Server_ReleaseDiscipline(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_ReleaseDiscipline // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1429380
	void Server_ForceInterruptActiveDiscipline(enum class ETigerDisciplinesEnum InDiscipline); // Function Tiger.TigerDisciplineComponent.Server_ForceInterruptActiveDiscipline // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14292d0
	void Server_AnimTriggerNotify(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Server_AnimTriggerNotify // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14291d0
	void NotifyDisciplineEvent(enum class ETigerDisciplinesEnum Discipline, enum class ETigerDisciplineEvent Event); // Function Tiger.TigerDisciplineComponent.NotifyDisciplineEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1429100
	void Multicast_UseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Multicast_UseSucceeded // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1429020
	void Multicast_TryToInterruptActiveDiscipline(enum class ETigerCharacterActions InAction); // Function Tiger.TigerDisciplineComponent.Multicast_TryToInterruptActiveDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1428f90
	void Multicast_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Multicast_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1428f70
	void Multicast_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Multicast_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1428f50
	void Multicast_SucceededAdditional(struct FDisciplineUse InDisciplineUse, bool bInSendReliableToAllTargets, char InEventFlags); // Function Tiger.TigerDisciplineComponent.Multicast_SucceededAdditional // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1428df0
	void Multicast_ReleaseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Multicast_ReleaseSucceeded // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1428d10
	void Multicast_ForceInterruptActiveDiscipline(enum class ETigerDisciplinesEnum InDiscipline); // Function Tiger.TigerDisciplineComponent.Multicast_ForceInterruptActiveDiscipline // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1428c90
	void LockDisciplineSlot(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplineComponent.LockDisciplineSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1428c10
	void LockDiscipline(enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerDisciplineComponent.LockDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1428b90
	bool IsRecharging(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.IsRecharging // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428b00
	bool IsOnGlobalCoolDown(); // Function Tiger.TigerDisciplineComponent.IsOnGlobalCoolDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428ad0
	bool IsDisciplineUnlocked(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineUnlocked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428a40
	bool IsDisciplineAtMaxPowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineAtMaxPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14289b0
	bool IsDisciplineActive(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.IsDisciplineActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428920
	bool IsAnyWeaponAbilityActive(); // Function Tiger.TigerDisciplineComponent.IsAnyWeaponAbilityActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14288f0
	bool IsAnyDisciplinePreparing(); // Function Tiger.TigerDisciplineComponent.IsAnyDisciplinePreparing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14288c0
	bool IsAnyDisciplineActive(); // Function Tiger.TigerDisciplineComponent.IsAnyDisciplineActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428890
	void GetUnlockedDisciplines(struct TArray<enum class ETigerDisciplinesEnum>& OutUnlockedDisciplines); // Function Tiger.TigerDisciplineComponent.GetUnlockedDisciplines // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14287e0
	struct UTexture2D* GetUIIconForSlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetUIIconForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1428750
	struct UTexture2D* GetUIIconForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetUIIconForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x14286c0
	enum class ETigerDisciplineSlot GetSlotForDiscipline(struct UTigerDisciplineBase* Discipline); // Function Tiger.TigerDisciplineComponent.GetSlotForDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428620
	float GetRechargeSecondsLeft(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetRechargeSecondsLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428590
	float GetRechargePercentage(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetRechargePercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428500
	struct UTigerDisciplineBase* GetPreparingDiscipline(); // Function Tiger.TigerDisciplineComponent.GetPreparingDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14284d0
	struct FText GetNameForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetNameForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x14283e0
	int32_t GetDisciplinePowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.GetDisciplinePowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428350
	int32_t GetDisciplineMaxPowerLevel(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.GetDisciplineMaxPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14282c0
	enum class ETigerDisciplinesEnum GetDisciplineForSlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetDisciplineForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428230
	struct UTigerDisciplineConfigBase* GetDisciplineConfigBySlot(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplineComponent.GetDisciplineConfigBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14281a0
	struct UTigerDisciplineConfigBase* GetDisciplineConfig(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetDisciplineConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428110
	struct UTigerDisciplineBase* GetDiscipline(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1428080
	struct FText GetDescriptionForDiscipline(enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.GetDescriptionForDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1427f90
	float GetCooldownSecondsLeft(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetCooldownSecondsLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1427f00
	float GetCooldownPercentageBySlot(enum class ETigerDisciplineSlot Slot); // Function Tiger.TigerDisciplineComponent.GetCooldownPercentageBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1427e70
	float GetCooldownPercentage(enum class ETigerDisciplinesEnum DisciplineToGet); // Function Tiger.TigerDisciplineComponent.GetCooldownPercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1427de0
	struct TArray<enum class ETigerDisciplinesEnum> GetClanDisciplinesSortedByUnlockLevel(); // Function Tiger.TigerDisciplineComponent.GetClanDisciplinesSortedByUnlockLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1427d50
	enum class ETigerDisciplinesEnum GetBlockingDiscipline(); // Function Tiger.TigerDisciplineComponent.GetBlockingDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1427d30
	struct UTigerDisciplineBase* GetActiveDiscipline(); // Function Tiger.TigerDisciplineComponent.GetActiveDiscipline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1427d00
	void EquipDiscipline(enum class ETigerDisciplineSlot Slot, enum class ETigerDisciplinesEnum Discipline); // Function Tiger.TigerDisciplineComponent.EquipDiscipline // (Final|Native|Public|BlueprintCallable) // @ game+0x1427c30
	void Client_UseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseSucceeded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1427b50
	void Client_UseFailed(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1427a70
	void Client_UseAnimTriggeredFailed(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_UseAnimTriggeredFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1427990
	void Client_UpdateDisciplineLevel(enum class ETigerDisciplinesEnum DisciplineType, int32_t PowerLevel); // Function Tiger.TigerDisciplineComponent.Client_UpdateDisciplineLevel // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14278c0
	void Client_TryToAbortHoldingDiscipline(); // Function Tiger.TigerDisciplineComponent.Client_TryToAbortHoldingDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14278a0
	void Client_TryToAbortChannelingDiscipline(); // Function Tiger.TigerDisciplineComponent.Client_TryToAbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1427880
	void Client_SucceededAdditional(struct FDisciplineUse DisciplineUse, char EventFlags, struct ATigerPlayer* DisciplineOwner); // Function Tiger.TigerDisciplineComponent.Client_SucceededAdditional // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1427730
	void Client_SendScoutedCharacterToGroupMember(struct ATigerCharacter* InScoutedCharacter, float InTime); // Function Tiger.TigerDisciplineComponent.Client_SendScoutedCharacterToGroupMember // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1427660
	void Client_ReleaseSucceeded(struct FDisciplineUse DisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_ReleaseSucceeded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1427580
	void Client_ReleaseFailed(struct FDisciplineUse InDisciplineUse); // Function Tiger.TigerDisciplineComponent.Client_ReleaseFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14274a0
	void Client_ReduceCooldowns(float InMultiplierToReduceBy, enum class ETigerDisciplineCooldownReductionType InReductionTypes); // Function Tiger.TigerDisciplineComponent.Client_ReduceCooldowns // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14273d0
	void Client_MomentumUpdateCooldowns(); // Function Tiger.TigerDisciplineComponent.Client_MomentumUpdateCooldowns // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14273b0
	void Client_LockDiscipline(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.Client_LockDiscipline // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1427330
	void Client_LockAllDisciplines(); // Function Tiger.TigerDisciplineComponent.Client_LockAllDisciplines // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1427310
	void Client_CancelCooldown(enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerDisciplineComponent.Client_CancelCooldown // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1427290
	void AuthorityReduceCooldowns(float InAmount, enum class ETigerDisciplineCooldownReductionType InReductionType); // Function Tiger.TigerDisciplineComponent.AuthorityReduceCooldowns // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x14271c0
	void AddScoutedCharacter(struct ATigerCharacter* InScoutedCharacter, float InTime); // Function Tiger.TigerDisciplineComponent.AddScoutedCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x14270f0
};

// Class Tiger.TigerDisciplineConfigs
// Size: 0x78 (Inherited: 0x28)
struct UTigerDisciplineConfigs : UObject {
	struct TMap<enum class ETigerDisciplinesEnum, struct UTigerActiveDisciplineConfig*> Configs; // 0x28(0x50)
};

// Class Tiger.TigerDisplacementConfig
// Size: 0x1f0 (Inherited: 0x188)
struct UTigerDisplacementConfig : UTigerDisciplineAnimTriggeredConfig {
	bool bShowDebugInfo; // 0x188(0x01)
	char pad_189[0x3]; // 0x189(0x03)
	float AttackingRange; // 0x18c(0x04)
	float AttackingRadius; // 0x190(0x04)
	float PlayerTargetMultiplier; // 0x194(0x04)
	float MeleeAreaMultiplier; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UCurveFloat* AimAxisValueCurve; // 0x1a0(0x08)
	struct UCurveFloat* DistanceFromUseValueCurve; // 0x1a8(0x08)
	float Damage; // 0x1b0(0x04)
	float BackgroundFindTargetInterval; // 0x1b4(0x04)
	float PlayerToScoutedTargetDotProductCutoff; // 0x1b8(0x04)
	char pad_1BC[0x4]; // 0x1bc(0x04)
	struct USoundBase* ActivationSound; // 0x1c0(0x08)
	struct UTigerBuffDOT* DOTToApply; // 0x1c8(0x08)
	struct UTigerBuff* BuffToApplyOnCasterWhenTeleporting; // 0x1d0(0x08)
	struct UTigerWidget* TargetMarkerWidgetClass; // 0x1d8(0x08)
	struct UAnimMontage* AirMontage; // 0x1e0(0x08)
	bool bInterruptClimbOnTarget; // 0x1e8(0x01)
	char pad_1E9[0x7]; // 0x1e9(0x07)
};

// Class Tiger.TigerDisciplineDisplacement
// Size: 0x148 (Inherited: 0xf0)
struct UTigerDisciplineDisplacement : UTigerDisciplineAnimTriggered {
	struct UTigerWidget* TargetMarker; // 0xf0(0x08)
	struct UTigerDisplacementConfig* Config; // 0xf8(0x08)
	char pad_100[0x10]; // 0x100(0x10)
	struct ATigerCharacter* ClientSidePotentialTarget; // 0x110(0x08)
	char pad_118[0x30]; // 0x118(0x30)

	void OnLockTarget(); // Function Tiger.TigerDisciplineDisplacement.OnLockTarget // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerEarthshockConfig
// Size: 0x268 (Inherited: 0x178)
struct UTigerEarthshockConfig : UTigerActiveDisciplineConfig {
	struct FText EffectRadiusText; // 0x178(0x18)
	struct FText EffectRadiusSuffix; // 0x190(0x18)
	float SurfaceAngleThreshold; // 0x1a8(0x04)
	float KnockupInitialVelocity; // 0x1ac(0x04)
	float HitboxConeHalfAngleInDegrees; // 0x1b0(0x04)
	float TerrainBlockTraceHeightGrace; // 0x1b4(0x04)
	float ConeDamageRadius; // 0x1b8(0x04)
	float InnerHitSphereRadius; // 0x1bc(0x04)
	float ConeForwardOffset; // 0x1c0(0x04)
	float SphereTraceRadius; // 0x1c4(0x04)
	float MaxRangeAngleDeviationThreshold; // 0x1c8(0x04)
	float MaximumRange; // 0x1cc(0x04)
	float MaximumHeight; // 0x1d0(0x04)
	float DownTraceLength; // 0x1d4(0x04)
	float InitialJumpApexHeight; // 0x1d8(0x04)
	bool bUseSurfaceProjectedForward; // 0x1dc(0x01)
	char pad_1DD[0x3]; // 0x1dd(0x03)
	float AirAttackSpeed; // 0x1e0(0x04)
	float MaxTargetEffectDistanceUp; // 0x1e4(0x04)
	float MaxTargetEffectDistanceDown; // 0x1e8(0x04)
	float StunTime; // 0x1ec(0x04)
	struct UCurveFloat* TravelDistanceDamageMultiplierCurve; // 0x1f0(0x08)
	float Damage; // 0x1f8(0x04)
	float WallAngleLandingAnimationThreshold; // 0x1fc(0x04)
	float StartLandingAnimationOffsetGround; // 0x200(0x04)
	float StartLandingAnimationOffsetWall; // 0x204(0x04)
	struct UAnimMontage* AirAttackAnimationJump; // 0x208(0x08)
	struct UAnimMontage* AirAttackAnimationMidAir; // 0x210(0x08)
	struct UAnimMontage* AirAttackAnimationLandGround; // 0x218(0x08)
	struct UAnimMontage* AirAttackAnimationLandWall; // 0x220(0x08)
	struct UAkAudioEvent* TakeOffAudioEvent; // 0x228(0x08)
	struct UAkAudioEvent* LaunchAudioEvent; // 0x230(0x08)
	struct UAkAudioEvent* HitGroundSound; // 0x238(0x08)
	struct UAkAudioEvent* ImpactWarningSound; // 0x240(0x08)
	float CameraShakeBoundaryHeight; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UMatineeCameraShake* CameraLowEffectShake; // 0x250(0x08)
	struct UMatineeCameraShake* CameraHighEffectShake; // 0x258(0x08)
	struct UMatineeCameraShake* CameraAirEffectShake; // 0x260(0x08)
};

// Class Tiger.TigerDisciplineEarthshock
// Size: 0x178 (Inherited: 0x78)
struct UTigerDisciplineEarthshock : UTigerDisciplineBase {
	struct FEarthshockUseDataNetworked EarthshockUseData; // 0x78(0x34)
	char pad_AC[0x4]; // 0xac(0x04)
	struct UTigerEarthshockConfig* EarthshockConfig; // 0xb0(0x08)
	char pad_B8[0xc0]; // 0xb8(0xc0)

	void OnTargetIndicatorUpdated(bool bInHasTargetLocation, struct FVector InTargetLocation, struct FVector InSurfaceNormal, bool bInTargetIsWall); // Function Tiger.TigerDisciplineEarthshock.OnTargetIndicatorUpdated // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnSpawnTargetIndicator(); // Function Tiger.TigerDisciplineEarthshock.OnSpawnTargetIndicator // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnRemoveTargetIndicator(); // Function Tiger.TigerDisciplineEarthshock.OnRemoveTargetIndicator // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnOwnerLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerDisciplineEarthshock.OnOwnerLifeStatusChanged // (Final|Native|Protected) // @ game+0x142d160
	void OnLanded(struct FVector InLocation, struct FVector InSurfaceNormal, bool bInTargetIsWall); // Function Tiger.TigerDisciplineEarthshock.OnLanded // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnEnemyCharacterHit(struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerDisciplineEarthshock.OnEnemyCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDescentForcedMoveDone(enum class ETigerForcedMoveResult ForcedMoveResult); // Function Tiger.TigerDisciplineEarthshock.OnDescentForcedMoveDone // (Final|Native|Private) // @ game+0x142d0e0
	void Multicast_SimulatedProxyImpact(struct FVector InConeDirection); // Function Tiger.TigerDisciplineEarthshock.Multicast_SimulatedProxyImpact // (Net|NetReliableNative|Event|NetMulticast|Protected|HasDefaults) // @ game+0x142d060
	float GetLeapTime(struct FVector& InLeapVector); // Function Tiger.TigerDisciplineEarthshock.GetLeapTime // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x142cd10
	struct FVector GetConeDirection(); // Function Tiger.TigerDisciplineEarthshock.GetConeDirection // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x142cce0
	bool EvaluateIsTargetLocationValid(bool bIsWall, struct FHitResult& InHitSurface); // Function Tiger.TigerDisciplineEarthshock.EvaluateIsTargetLocationValid // (Event|Protected|HasOutParms|BlueprintEvent|Const) // @ game+0x18b4070
	struct FVector CalculateKnockbackForce(struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerDisciplineEarthshock.CalculateKnockbackForce // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x142c9b0
	struct FVector CalculateConeDirection(); // Function Tiger.TigerDisciplineEarthshock.CalculateConeDirection // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x142c970
};

// Class Tiger.TigerFlowerOfDeathConfig
// Size: 0x1a8 (Inherited: 0x178)
struct UTigerFlowerOfDeathConfig : UTigerActiveDisciplineConfig {
	bool ShowDebugCapsule; // 0x178(0x01)
	char pad_179[0x3]; // 0x179(0x03)
	float TargetRadius; // 0x17c(0x04)
	float OverrideDuration; // 0x180(0x04)
	float Damage; // 0x184(0x04)
	struct UObject* EffectBlueprint; // 0x188(0x08)
	struct UAnimMontage* AttackerAnimation; // 0x190(0x08)
	struct USoundBase* ActivationSound; // 0x198(0x08)
	struct UTigerBuff* SpeedBuff; // 0x1a0(0x08)
};

// Class Tiger.TigerDisciplineFlowerOfDeath
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineFlowerOfDeath : UTigerDisciplineBase {
	struct UTigerFlowerOfDeathConfig* Config; // 0x78(0x08)
	char pad_80[0x18]; // 0x80(0x18)
};

// Class Tiger.TigerFOTTConfig
// Size: 0x2c8 (Inherited: 0x178)
struct UTigerFOTTConfig : UTigerActiveDisciplineConfig {
	bool bDebugHitboxVisualization; // 0x178(0x01)
	bool bDebugWallhitAngle; // 0x179(0x01)
	char pad_17A[0x2]; // 0x17a(0x02)
	struct FVector HitBoxExtents; // 0x17c(0x0c)
	struct FVector HitBoxOffset; // 0x188(0x0c)
	char pad_194[0x4]; // 0x194(0x04)
	struct FText KnockbackDistanceText; // 0x198(0x18)
	struct TArray<float> KnockbackDistanceTooltipValues; // 0x1b0(0x10)
	struct FText KnockbackDistanceSuffix; // 0x1c0(0x18)
	float KnockbackTime; // 0x1d8(0x04)
	float TimeBeforeRagdollOnDeadNPCs; // 0x1dc(0x04)
	float RagdollKnockbackForceMultiplier; // 0x1e0(0x04)
	float KnockbackStunDuration; // 0x1e4(0x04)
	float KnockbackAngle; // 0x1e8(0x04)
	float MaxChargeDuration; // 0x1ec(0x04)
	float AttackDuration; // 0x1f0(0x04)
	float MaxWallStunAnglePitchDiff; // 0x1f4(0x04)
	float MaxWallStunAngleYawDiff; // 0x1f8(0x04)
	float MinimumChargeupTime; // 0x1fc(0x04)
	float EndOfAttackPercentageSpeedKept; // 0x200(0x04)
	float HitTargetsPercentageSpeedKept; // 0x204(0x04)
	struct UTigerBuff* SelfbuffWhileCharging; // 0x208(0x08)
	struct UTigerBuff* TargetKnockedIntoWallBuff; // 0x210(0x08)
	struct UCurveFloat* TravelDistance; // 0x218(0x08)
	struct TArray<struct UCurveFloat*> KnockbackDistance; // 0x220(0x10)
	struct UCurveFloat* FistDamage; // 0x230(0x08)
	struct UCurveFloat* TargetWallHitDamage; // 0x238(0x08)
	struct UCurveFloat* TargetWallHitStun; // 0x240(0x08)
	float WallEffectRadius; // 0x248(0x04)
	float WallEffectStayTime; // 0x24c(0x04)
	float WallEffectFadeTime; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct UTigerAnimationSetAsset* ChargeupBlendspaceAnimationSet; // 0x258(0x08)
	struct UAnimMontage* TargetKnockbackAnimation; // 0x260(0x08)
	struct UCurveFloat* KnockbackAnimationPlayrate; // 0x268(0x08)
	struct UAnimMontage* ChargeupAnimation; // 0x270(0x08)
	struct UAnimMontage* ChargeupAnimationAir; // 0x278(0x08)
	float ChargeupAnimationSpeed; // 0x280(0x04)
	struct FName FullyChargedSectionName; // 0x284(0x08)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UAnimMontage* AttackerAnimation; // 0x290(0x08)
	struct UAnimMontage* AttackerAnimationAir; // 0x298(0x08)
	float AttackAnimationSpeed; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct UAnimMontage* RecoverAnimation; // 0x2a8(0x08)
	struct UAnimMontage* RecoverAnimationAir; // 0x2b0(0x08)
	struct UAnimMontage* WallHitStunAnimation; // 0x2b8(0x08)
	struct UAkAudioEvent* WallHitAudioEvent; // 0x2c0(0x08)
};

// Class Tiger.TigerDisciplineFOTT
// Size: 0xf0 (Inherited: 0x78)
struct UTigerDisciplineFOTT : UTigerDisciplineBase {
	struct UTigerFOTTConfig* Config; // 0x78(0x08)
	char pad_80[0x30]; // 0x80(0x30)
	struct UParticleSystemComponent* PlayerChargeupParticles; // 0xb0(0x08)
	struct UParticleSystemComponent* PlayerAttackParticles; // 0xb8(0x08)
	struct UParticleSystemComponent* PlayerAttackEndParticles; // 0xc0(0x08)
	char pad_C8[0x28]; // 0xc8(0x28)

	void TickDisciplineEvent(float DeltaTime); // Function Tiger.TigerDisciplineFOTT.TickDisciplineEvent // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OwnerCollided(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerDisciplineFOTT.OwnerCollided // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x142d1e0
	void OnTargetHitSomething(struct ATigerCharacter* Target, struct FVector& HitLocation, struct FVector& HitNormal); // Function Tiger.TigerDisciplineFOTT.OnTargetHitSomething // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnStartedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnStartedChargeup // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnReleasedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnReleasedChargeup // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnHitSomething(bool bHitACharacter); // Function Tiger.TigerDisciplineFOTT.OnHitSomething // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnCollidedWithWall(struct FVector& HitLocation, struct FVector& HitNormal); // Function Tiger.TigerDisciplineFOTT.OnCollidedWithWall // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnAbortedChargeup(); // Function Tiger.TigerDisciplineFOTT.OnAbortedChargeup // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Multicast_FOTTKnockback(struct ATigerCharacter* TigerChar, struct FVector HitLocation, struct FVector EndLocation, bool bWasKilledByHit); // Function Tiger.TigerDisciplineFOTT.Multicast_FOTTKnockback // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x142cf10
	float GetChargeupProgress(bool ClampProgressAtOne); // Function Tiger.TigerDisciplineFOTT.GetChargeupProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x142cc40
	void CharacterCollided(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerDisciplineFOTT.CharacterCollided // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x142ca60
	void ApplyFOTT(struct FDisciplineUse& DisciplineUse); // Function Tiger.TigerDisciplineFOTT.ApplyFOTT // (Final|Native|Private|HasOutParms) // @ game+0x142c880
};

// Class Tiger.TigerFrenzyConfig
// Size: 0x1b8 (Inherited: 0x178)
struct UTigerFrenzyConfig : UTigerActiveDisciplineConfig {
	float RoarRadius; // 0x178(0x04)
	float RoarDamage; // 0x17c(0x04)
	float GroundedTime; // 0x180(0x04)
	float ImmobilizeTime; // 0x184(0x04)
	float DelayBeforeRoarEffect; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct UTigerBuff* FrenzyBuff; // 0x190(0x08)
	struct UAnimMontage* RoarAnimation; // 0x198(0x08)
	struct USoundBase* RoarSound; // 0x1a0(0x08)
	struct USoundBase* BuffActiveSound; // 0x1a8(0x08)
	struct UParticleSystem* RoarParticles; // 0x1b0(0x08)
};

// Class Tiger.TigerDisciplineFrenzy
// Size: 0x98 (Inherited: 0x78)
struct UTigerDisciplineFrenzy : UTigerDisciplineBase {
	char pad_78[0x10]; // 0x78(0x10)
	struct UTigerFrenzyConfig* Config; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerGuardBreakConfig
// Size: 0x1b0 (Inherited: 0x178)
struct UTigerGuardBreakConfig : UTigerActiveDisciplineConfig {
	float DashDistance; // 0x178(0x04)
	float StartupTime; // 0x17c(0x04)
	float DashTime; // 0x180(0x04)
	float StrikeDelay; // 0x184(0x04)
	float StrikeDuration; // 0x188(0x04)
	float OnHitDamage; // 0x18c(0x04)
	float BlockedOnHitDamage; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct UTigerBuff* OnHitDebuff; // 0x198(0x08)
	struct FVector HitBoxSize; // 0x1a0(0x0c)
	bool DrawDebugInfo; // 0x1ac(0x01)
	char pad_1AD[0x3]; // 0x1ad(0x03)

	void OnTargetsHitByStrike(struct TArray<struct ATigerCharacter*>& Targets); // Function Tiger.TigerGuardBreakConfig.OnTargetsHitByStrike // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnStrike(struct ATigerCharacter* Character); // Function Tiger.TigerGuardBreakConfig.OnStrike // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStartup(struct ATigerCharacter* Character); // Function Tiger.TigerGuardBreakConfig.OnStartup // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnDash(struct ATigerCharacter* Character, struct FVector& Location, struct FVector& Direction); // Function Tiger.TigerGuardBreakConfig.OnDash // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerDisciplineGuardBreak
// Size: 0xa8 (Inherited: 0x78)
struct UTigerDisciplineGuardBreak : UTigerDisciplineBase {
	struct UTigerGuardBreakConfig* Config; // 0x78(0x08)
	char pad_80[0x28]; // 0x80(0x28)
};

// Class Tiger.TigerDisciplineIcon
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerDisciplineIcon : UTigerWidget {
	enum class ETigerDisciplinesEnum DisciplineType; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UTexture2D* UiIconPtr; // 0x288(0x08)
	bool DisciplineUnlocked; // 0x290(0x01)
	bool CanBeUsed; // 0x291(0x01)
	bool HasCharges; // 0x292(0x01)
	bool bHasFinishedSetup; // 0x293(0x01)
	int32_t ChargeCount; // 0x294(0x04)
	bool bIsOnCooldown; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	int32_t CooldownSeconds; // 0x29c(0x04)
	float CooldownPercentage; // 0x2a0(0x04)
	float OldCooldownPercentage; // 0x2a4(0x04)
	bool bIsActive; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	int32_t ActiveTimeLeft; // 0x2ac(0x04)
	bool bIsRecharging; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	int32_t RechargeRemainingSeconds; // 0x2b4(0x04)
	float RechargePercentage; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)

	void SetupSkillData(enum class ETigerDisciplinesEnum& InEnum, struct UTexture2D* InTexture); // Function Tiger.TigerDisciplineIcon.SetupSkillData // (Final|Native|Public|HasOutParms) // @ game+0x1431b40
	void SetSkillIcon(struct UTexture2D* InTexture); // Function Tiger.TigerDisciplineIcon.SetSkillIcon // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SetSkillData(bool bInIsUnlocked, bool bInHasCharge, bool bInCanBeUsed, int32_t InChargeCount, int32_t InCooldownSecondsLeft, float inCooldownPercentage, int32_t InActiveTimeLeft, float InRechargePercentage, int32_t InRechargeRemainingSeconds); // Function Tiger.TigerDisciplineIcon.SetSkillData // (Final|Native|Public) // @ game+0x1431880
	void OnInterrupted(); // Function Tiger.TigerDisciplineIcon.OnInterrupted // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerIncitePainConfig
// Size: 0x198 (Inherited: 0x188)
struct UTigerIncitePainConfig : UTigerDisciplineAnimTriggeredConfig {
	float DamageAmount; // 0x188(0x04)
	float Radius; // 0x18c(0x04)
	float Reach; // 0x190(0x04)
	bool bDebugDraw; // 0x194(0x01)
	char pad_195[0x3]; // 0x195(0x03)
};

// Class Tiger.TigerDisciplineIncitePain
// Size: 0xf8 (Inherited: 0xf0)
struct UTigerDisciplineIncitePain : UTigerDisciplineAnimTriggered {
	struct UTigerIncitePainConfig* Config; // 0xf0(0x08)
};

// Class Tiger.TigerJumpConfig
// Size: 0x208 (Inherited: 0x188)
struct UTigerJumpConfig : UTigerDisciplineAnimTriggeredConfig {
	bool bDebugJumpline; // 0x188(0x01)
	bool bDebugBlockJump; // 0x189(0x01)
	char pad_18A[0x2]; // 0x18a(0x02)
	float JumpVelocity; // 0x18c(0x04)
	bool bAllowDoublejumpAfterDiscipline; // 0x190(0x01)
	bool bShouldDelayJumpInAir; // 0x191(0x01)
	char pad_192[0x6]; // 0x192(0x06)
	struct UAnimMontage* LaunchMontage; // 0x198(0x08)
	struct UAnimMontage* GroundAnticipationMontage; // 0x1a0(0x08)
	float CameraPresetDuration; // 0x1a8(0x04)
	char pad_1AC[0x4]; // 0x1ac(0x04)
	struct UMaterial* JumpFullscreenPostFX; // 0x1b0(0x08)
	struct UMaterialParameterCollection* JumpPostFXCollection; // 0x1b8(0x08)
	struct FName JumpPostFXStrengthParameterName; // 0x1c0(0x08)
	float JumpPostFXMaxStrength; // 0x1c8(0x04)
	float JumpEffectsDuration; // 0x1cc(0x04)
	float JumpEffectsLerpInTime; // 0x1d0(0x04)
	float JumpEffectsLerpOutTime; // 0x1d4(0x04)
	struct UAkAudioEvent* LeapStartedAudio; // 0x1d8(0x08)
	struct FVector FeetObstacleOffset; // 0x1e0(0x0c)
	float ObstacleDistanceCheck; // 0x1ec(0x04)
	float PartiallyBlockedJumpModifier; // 0x1f0(0x04)
	float BackLeapPitch; // 0x1f4(0x04)
	struct UCurveFloat* LeapPitchCurve; // 0x1f8(0x08)
	bool bCanLeapBackward; // 0x200(0x01)
	char pad_201[0x3]; // 0x201(0x03)
	float AnimationBlendoutTime; // 0x204(0x04)
};

// Class Tiger.TigerDisciplineJump
// Size: 0x168 (Inherited: 0xf0)
struct UTigerDisciplineJump : UTigerDisciplineAnimTriggered {
	char pad_F0[0x8]; // 0xf0(0x08)
	struct UTigerJumpConfig* Config; // 0xf8(0x08)
	struct UCapsuleComponent* CapsuleOverlapComponent; // 0x100(0x08)
	struct FMulticastInlineDelegate LeapConfirmed; // 0x108(0x10)
	char pad_118[0x40]; // 0x118(0x40)
	struct TArray<struct AActor*> ActorsThatOverlapped; // 0x158(0x10)

	void TigerLeapConfirmedMulticastDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerDisciplineJump.TigerLeapConfirmedMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnLeapStarted(); // Function Tiger.TigerDisciplineJump.OnLeapStarted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnLeapEnded(); // Function Tiger.TigerDisciplineJump.OnLeapEnded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_OnLeapConfirmed(); // Function Tiger.TigerDisciplineJump.Multicast_OnLeapConfirmed // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1431530
	struct FVector GetTargetPosition(struct FVector& PlayerEyeLocation, struct FRotator& CameraRotation, float JumpCheckDistance); // Function Tiger.TigerDisciplineJump.GetTargetPosition // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1430ff0
};

// Class Tiger.TigerLaceratingThrowConfig
// Size: 0x1e0 (Inherited: 0x188)
struct UTigerLaceratingThrowConfig : UTigerDisciplineAnimTriggeredConfig {
	struct ATigerLaceratingThrowProjectile* KnifeActor; // 0x188(0x08)
	struct TArray<struct UTigerBuff*> BuffToApplyOnHit; // 0x190(0x10)
	float ProjectileSpeed; // 0x1a0(0x04)
	float DamageOnHit; // 0x1a4(0x04)
	float Reach; // 0x1a8(0x04)
	char pad_1AC[0x4]; // 0x1ac(0x04)
	struct FText SlowText; // 0x1b0(0x18)
	struct FText SlowSuffix; // 0x1c8(0x18)
};

// Class Tiger.TigerDisciplineLaceratingThrow
// Size: 0xf8 (Inherited: 0xf0)
struct UTigerDisciplineLaceratingThrow : UTigerDisciplineAnimTriggered {
	struct UTigerLaceratingThrowConfig* Config; // 0xf0(0x08)
};

// Class Tiger.TigerMajestyConfig
// Size: 0x1d8 (Inherited: 0x178)
struct UTigerMajestyConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* Montage; // 0x178(0x08)
	float ApplyEffectTime; // 0x180(0x04)
	char pad_184[0x4]; // 0x184(0x04)
	struct FText CharmDurationText; // 0x188(0x18)
	struct FText CharmDurationSuffix; // 0x1a0(0x18)
	struct TArray<struct UTigerMajestyBuff*> CharmedBuff; // 0x1b8(0x10)
	bool bDoFacingCheckOnNPCs; // 0x1c8(0x01)
	bool bIsEntityImmune; // 0x1c9(0x01)
	bool bRequireLineOfSight; // 0x1ca(0x01)
	char pad_1CB[0x1]; // 0x1cb(0x01)
	float Radius; // 0x1cc(0x04)
	float FacingAllowedYawDifference; // 0x1d0(0x04)
	bool bDebugDraw; // 0x1d4(0x01)
	char pad_1D5[0x3]; // 0x1d5(0x03)
};

// Class Tiger.TigerMajestyBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerMajestyBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerMajestyBuff
// Size: 0x270 (Inherited: 0x268)
struct UTigerMajestyBuff : UTigerBuff {
	float NPCDuration; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
};

// Class Tiger.TigerDisciplineMajesty
// Size: 0x88 (Inherited: 0x78)
struct UTigerDisciplineMajesty : UTigerDisciplineBase {
	struct UTigerMajestyConfig* Config; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerParticleStrategy
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategy : UObject {
};

// Class Tiger.TigerParticleStrategyPostSpawn
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategyPostSpawn : UTigerParticleStrategy {

	void ExecutePostSpawnStrategy(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator); // Function Tiger.TigerParticleStrategyPostSpawn.ExecutePostSpawnStrategy // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x14af340
};

// Class Tiger.TigerDisciplineParticleStrategy
// Size: 0x58 (Inherited: 0x28)
struct UTigerDisciplineParticleStrategy : UTigerParticleStrategyPostSpawn {
	struct FLinearColor StandardColorOverride; // 0x28(0x10)
	struct FLinearColor EnemyColorOverride; // 0x38(0x10)
	enum class ETigerDisciplineParticleStrategyColorModes ColorOverrideMode; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	struct FName ColorParameterName; // 0x4c(0x08)
	char pad_54[0x4]; // 0x54(0x04)

	void PickColors(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator, struct FLinearColor& OutStandardColorOverride, struct FLinearColor& OutEnemyColorOverride); // Function Tiger.TigerDisciplineParticleStrategy.PickColors // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x1431650
	void ApplyColors(struct UParticleSystemComponent* InParticleToExecuteOn, struct ATigerCharacter* InParticleInstigator, struct FLinearColor& InStandardColorOverride, struct FLinearColor& InEnemyColorOverride); // Function Tiger.TigerDisciplineParticleStrategy.ApplyColors // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x1430e10
};

// Class Tiger.TigerPassionConfig
// Size: 0x298 (Inherited: 0x178)
struct UTigerPassionConfig : UTigerActiveDisciplineConfig {
	float ProjectileMinLengthScale; // 0x178(0x04)
	float ProjectileMaxLengthScale; // 0x17c(0x04)
	float ProjectileMinWidthScale; // 0x180(0x04)
	float ProjectileMaxWidthScale; // 0x184(0x04)
	float ProjectileMinHeightScale; // 0x188(0x04)
	float ProjectileMaxHeightScale; // 0x18c(0x04)
	float ProjectileMinSpeed; // 0x190(0x04)
	float ProjectileMaxSpeed; // 0x194(0x04)
	float ProjectileMinRange; // 0x198(0x04)
	float ProjectileMaxRange; // 0x19c(0x04)
	float PanicMinDuration; // 0x1a0(0x04)
	float PanicMaxDuration; // 0x1a4(0x04)
	float ApathyMinDuration; // 0x1a8(0x04)
	float ApathyMaxDuration; // 0x1ac(0x04)
	float ApathyStartSlowMultiplier; // 0x1b0(0x04)
	float ApathyEndSlowMultiplier; // 0x1b4(0x04)
	float WrathMinDuration; // 0x1b8(0x04)
	float WrathMaxDuration; // 0x1bc(0x04)
	float WrathMinAdditionalDamageMultiplier; // 0x1c0(0x04)
	float WrathMaxAdditionalDamageMultiplier; // 0x1c4(0x04)
	struct UAnimMontage* ChooseEffectAnimation; // 0x1c8(0x08)
	struct UAnimMontage* ChargeEffectAnimation; // 0x1d0(0x08)
	struct UAnimMontage* ReleaseEffectAnimation; // 0x1d8(0x08)
	struct TMap<enum class ETigerPassionEffect, struct UTigerBuff*> EffectBuffs; // 0x1e0(0x50)
	struct TMap<enum class ETigerPassionEffect, struct UParticleSystem*> ProjectileParticles; // 0x230(0x50)
	struct ATigerPassionProjectile* ProjectileActor; // 0x280(0x08)
	float TimeBetweenEffectChange; // 0x288(0x04)
	float ChooseEffectTimeOut; // 0x28c(0x04)
	float MaxChargeTime; // 0x290(0x04)
	float UsageCooldown; // 0x294(0x04)
};

// Class Tiger.TigerDisciplinePassion
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplinePassion : UTigerDisciplineBase {
	struct UTigerPassionConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerProjectionDashConfig
// Size: 0x208 (Inherited: 0x188)
struct UTigerProjectionDashConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAnimMontage* DownedMontage; // 0x188(0x08)
	struct UAnimMontage* DashStartMontage; // 0x190(0x08)
	struct UAnimMontage* DashEnterMontage; // 0x198(0x08)
	struct UAnimMontage* DashExitMontage; // 0x1a0(0x08)
	struct UTexture2D* DashIcon; // 0x1a8(0x08)
	struct UTigerBuff* DashBuff; // 0x1b0(0x08)
	struct UTigerBuff* ThornsBuff; // 0x1b8(0x08)
	struct ATigerProjectionDashProjectile* ProjectionActor; // 0x1c0(0x08)
	struct AActor* TargetIndicatorActor; // 0x1c8(0x08)
	struct FVector TargetingRayStartOffset; // 0x1d0(0x0c)
	float DelayBeforeDashIsPossible; // 0x1dc(0x04)
	float DashSpeed; // 0x1e0(0x04)
	float DashExitVelocityScale; // 0x1e4(0x04)
	float DashEnterDuration; // 0x1e8(0x04)
	float DashExitDuration; // 0x1ec(0x04)
	float ProjectionMaxDistance; // 0x1f0(0x04)
	float ProjectionAutoDespawnDistance; // 0x1f4(0x04)
	float ProjectionSpeed; // 0x1f8(0x04)
	float ProjectionStoppedLifetime; // 0x1fc(0x04)
	float TargetIndicatorLerpSpeed; // 0x200(0x04)
	bool bDashMoveToExit; // 0x204(0x01)
	enum class ETigerProjectionDashCooldownStart CooldownStart; // 0x205(0x01)
	char pad_206[0x2]; // 0x206(0x02)
};

// Class Tiger.TigerDisciplineProjectionDash
// Size: 0x170 (Inherited: 0xf0)
struct UTigerDisciplineProjectionDash : UTigerDisciplineAnimTriggered {
	struct FVector DashStartLocation; // 0xf0(0x0c)
	struct FVector DashEnterLocation; // 0xfc(0x0c)
	struct FVector DashExitLocation; // 0x108(0x0c)
	struct FVector DashEndLocation; // 0x114(0x0c)
	struct UTigerProjectionDashConfig* Config; // 0x120(0x08)
	struct ATigerProjectionDashProjectile* SpawnedProjection; // 0x128(0x08)
	char pad_130[0x18]; // 0x130(0x18)
	struct AActor* TargetIndicator; // 0x148(0x08)
	char pad_150[0x20]; // 0x150(0x20)

	void Server_StopProjection(float InLerpAlpha); // Function Tiger.TigerDisciplineProjectionDash.Server_StopProjection // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14317c0
	void OnProjectionDestroyedOnClient(enum class ETigerProjectionDashEndReason InReason); // Function Tiger.TigerDisciplineProjectionDash.OnProjectionDestroyedOnClient // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnOwnerLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerDisciplineProjectionDash.OnOwnerLifeStatusChanged // (Final|Native|Protected) // @ game+0x14315d0
	void OnForcedMoveResult(enum class ETigerForcedMoveResult InForcedMoveResult); // Function Tiger.TigerDisciplineProjectionDash.OnForcedMoveResult // (Final|Native|Private) // @ game+0x1431550
	void OnDashStart(); // Function Tiger.TigerDisciplineProjectionDash.OnDashStart // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDashExit(); // Function Tiger.TigerDisciplineProjectionDash.OnDashExit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDashEnter(); // Function Tiger.TigerDisciplineProjectionDash.OnDashEnter // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDashEnd(); // Function Tiger.TigerDisciplineProjectionDash.OnDashEnd // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_DashStart(struct FVector InStartLocation, struct FVector InEnterLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashStart // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x14313f0
	void Multicast_DashExit(struct FVector InExitLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashExit // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x1431300
	void Multicast_DashEnter(); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashEnter // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14312e0
	void Multicast_DashEnd(struct FVector InStartLocation, struct FVector InEnterLocation, struct FVector InExitLocation, struct FVector InEndLocation); // Function Tiger.TigerDisciplineProjectionDash.Multicast_DashEnd // (Net|Native|Event|NetMulticast|Protected|HasDefaults) // @ game+0x1431150
	float GetCurrentProjectionMaxDistanceRatio(); // Function Tiger.TigerDisciplineProjectionDash.GetCurrentProjectionMaxDistanceRatio // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1430fc0
	void Client_TimeoutProjection(); // Function Tiger.TigerDisciplineProjectionDash.Client_TimeoutProjection // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1430fa0
	void Client_DespawnProjectionDueToRange(); // Function Tiger.TigerDisciplineProjectionDash.Client_DespawnProjectionDueToRange // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1430f80
};

// Class Tiger.TigerRejuvenatingVoiceConfig
// Size: 0x1e8 (Inherited: 0x178)
struct UTigerRejuvenatingVoiceConfig : UTigerActiveDisciplineConfig {
	struct UAnimMontage* DownedMontage; // 0x178(0x08)
	struct UAnimMontage* DownedCancelMontage; // 0x180(0x08)
	struct UAnimMontage* DownedInterruptMontage; // 0x188(0x08)
	struct UAnimMontage* NormalMontage; // 0x190(0x08)
	struct UAnimMontage* CancelMontage; // 0x198(0x08)
	struct UAnimMontage* InterruptMontage; // 0x1a0(0x08)
	struct UTigerBuff* HealingBuff; // 0x1a8(0x08)
	float ReceivedDamageThreshold; // 0x1b0(0x04)
	float ActiveTimeAfterStop; // 0x1b4(0x04)
	float FailNormalMontageResetTime; // 0x1b8(0x04)
	float DownedIntroDuration; // 0x1bc(0x04)
	float CasterHealRange; // 0x1c0(0x04)
	float ProjectionHealRange; // 0x1c4(0x04)
	float ProjectionHealMultiplier; // 0x1c8(0x04)
	float FirstHealMultiplier; // 0x1cc(0x04)
	float SelfHealFlat; // 0x1d0(0x04)
	float SelfHealPercent; // 0x1d4(0x04)
	float TeamHealFlat; // 0x1d8(0x04)
	float TeamHealPercent; // 0x1dc(0x04)
	float HealTickRate; // 0x1e0(0x04)
	bool bOnlyHealRecentDamage; // 0x1e4(0x01)
	bool bRecentDamageVisibleForGroup; // 0x1e5(0x01)
	bool bShouldGlideWhenActive; // 0x1e6(0x01)
	char pad_1E7[0x1]; // 0x1e7(0x01)
};

// Class Tiger.TigerDisciplineRejuvenatingVoice
// Size: 0xf0 (Inherited: 0x78)
struct UTigerDisciplineRejuvenatingVoice : UTigerDisciplineBase {
	struct UTigerRejuvenatingVoiceConfig* Config; // 0x78(0x08)
	struct UTigerDisciplineProjectionDash* ProjectionDash; // 0x80(0x08)
	struct UAnimMontage* CurrentAnimMontage; // 0x88(0x08)
	char pad_90[0x5c]; // 0x90(0x5c)
	bool bIsChanneling; // 0xec(0x01)
	char pad_ED[0x3]; // 0xed(0x03)

	void PulseHeal(float InHealMultiplier, bool bInOnCaster, bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.PulseHeal // (Final|Native|Public|BlueprintCallable) // @ game+0x1436400
	void OnSilencedChanged(bool bInIsSilenced); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnSilencedChanged // (Final|Native|Public) // @ game+0x1436370
	void OnPlayerExit(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerExit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPlayerEnter(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerEnter // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPlayerDamageTaken(struct AActor* InDamagedActor, float InDamage, struct UDamageType* InDamageType, struct AController* InInstigatedBy, struct AActor* InDamageCauser); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnPlayerDamageTaken // (Final|Native|Public) // @ game+0x14361c0
	void OnHealStop(); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealStop // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnHealStart(); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealStart // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnHealPulse(bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnHealPulse // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDownedIntroIsDone(); // Function Tiger.TigerDisciplineRejuvenatingVoice.OnDownedIntroIsDone // (Final|Native|Private) // @ game+0x14361a0
	void Multicast_PlayerExit(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_PlayerExit // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1436060
	void Multicast_PlayerEnter(struct ATigerPlayer* InPlayer); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_PlayerEnter // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1435fd0
	void Multicast_InterruptChanneling(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_InterruptChanneling // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1435fb0
	void Multicast_HealStop(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealStop // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1435f90
	void Multicast_HealStart(); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealStart // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1435f70
	void Multicast_HealPulse(bool bInOnProjection); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_HealPulse // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1435ee0
	void Multicast_BuffHealTick(struct ATigerPlayer* InBuffOwner, char InHealAmount); // Function Tiger.TigerDisciplineRejuvenatingVoice.Multicast_BuffHealTick // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1435e10
	bool HasProjection(); // Function Tiger.TigerDisciplineRejuvenatingVoice.HasProjection // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435de0
	struct FVector GetProjectionLocation(); // Function Tiger.TigerDisciplineRejuvenatingVoice.GetProjectionLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435c80
	struct AActor* GetProjectionActor(); // Function Tiger.TigerDisciplineRejuvenatingVoice.GetProjectionActor // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435c50
};

// Class Tiger.TigerRepositionConfig
// Size: 0x1a0 (Inherited: 0x178)
struct UTigerRepositionConfig : UTigerActiveDisciplineConfig {
	struct ATigerRepositionTracer* TracerActor; // 0x178(0x08)
	struct UTigerBuffReposition* RewindBuff; // 0x180(0x08)
	float RewindTimeSeconds; // 0x188(0x04)
	float SampleRate; // 0x18c(0x04)
	float RewindSpeed; // 0x190(0x04)
	float RewindPlaybackTimeMin; // 0x194(0x04)
	float RewindPlaybackTimeMax; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
};

// Class Tiger.TigerBuffRepositionInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffRepositionInstance : UTigerBuffInstance {
	struct UPrimitiveComponent* Root; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerBuffReposition
// Size: 0x270 (Inherited: 0x268)
struct UTigerBuffReposition : UTigerBuffStun {
	float NoiseNotifyEventRange; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
};

// Class Tiger.TigerRepositionTracer
// Size: 0x228 (Inherited: 0x228)
struct ATigerRepositionTracer : AActor {

	void Trace(struct TArray<struct FVector>& PreviousLocations, float Duration); // Function Tiger.TigerRepositionTracer.Trace // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerDisciplineReposition
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplineReposition : UTigerDisciplineBase {
	struct UTigerRepositionConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerScoutsConfig
// Size: 0x1d8 (Inherited: 0x188)
struct UTigerScoutsConfig : UTigerDisciplineAnimTriggeredConfig {
	struct ATigerFamiliarScout* ScoutActor; // 0x188(0x08)
	struct UTigerFamiliarScoutPassive* PassiveClass; // 0x190(0x08)
	float RevealDuration; // 0x198(0x04)
	float PassiveScanRadius; // 0x19c(0x04)
	float ActiveScanRadius; // 0x1a0(0x04)
	float ScoutDespawnDistance; // 0x1a4(0x04)
	float ScoutLifetime; // 0x1a8(0x04)
	float Reach; // 0x1ac(0x04)
	float ScoutingMaxDistanceFromOwner; // 0x1b0(0x04)
	float TargetLocationNormalOffset; // 0x1b4(0x04)
	struct UAnimMontage* AirMontage; // 0x1b8(0x08)
	struct UAkAudioEvent* RevealedCharacterAudioEvent; // 0x1c0(0x08)
	struct FName BoneToSpawnFrom; // 0x1c8(0x08)
	bool bShouldAlwaysStartFromPlayer; // 0x1d0(0x01)
	char pad_1D1[0x7]; // 0x1d1(0x07)
};

// Class Tiger.TigerDisciplineScouts
// Size: 0x118 (Inherited: 0xf0)
struct UTigerDisciplineScouts : UTigerDisciplineAnimTriggered {
	struct UTigerFamiliarScoutPassive* Server_PassiveComponent; // 0xf0(0x08)
	struct ATigerFamiliarScout* Server_SpawnedFamiliar; // 0xf8(0x08)
	struct UTigerScoutsConfig* Config; // 0x100(0x08)
	char pad_108[0x10]; // 0x108(0x10)

	void Multicast_ScoutSpawnedResult(bool bInAreScoutsOut); // Function Tiger.TigerDisciplineScouts.Multicast_ScoutSpawnedResult // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14360f0
};

// Class Tiger.TigerShacklesConfig
// Size: 0x1b8 (Inherited: 0x178)
struct UTigerShacklesConfig : UTigerActiveDisciplineConfig {
	struct UMaterialInterface* ShacklesAimingDecal; // 0x178(0x08)
	float MaxRange; // 0x180(0x04)
	float ShacklesAoeSize; // 0x184(0x04)
	float ExplosionDepth; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct TArray<float> ExplosionDamage; // 0x190(0x10)
	struct ATigerShacklesMine* ShackleMine; // 0x1a0(0x08)
	float MineLifeTime; // 0x1a8(0x04)
	float DelayBeforeShackleActivation; // 0x1ac(0x04)
	struct FName CastAnimationName; // 0x1b0(0x08)
};

// Class Tiger.TigerDisciplineShackles
// Size: 0x90 (Inherited: 0x78)
struct UTigerDisciplineShackles : UTigerDisciplineBase {
	char pad_78[0x8]; // 0x78(0x08)
	struct UTigerShacklesConfig* Config; // 0x80(0x08)
	struct ADecalActor* ClientAimDecal; // 0x88(0x08)
};

// Class Tiger.TigerShockwavePunchConfig
// Size: 0x208 (Inherited: 0x188)
struct UTigerShockwavePunchConfig : UTigerDisciplineAnimTriggeredConfig {
	struct TArray<struct UAnimMontage*> PunchMontages; // 0x188(0x10)
	struct TArray<struct ATigerShockwaveWall*> ShockwaveActorToSpawn; // 0x198(0x10)
	struct FTigerShockwaveWallData ShockwaveWallData; // 0x1a8(0x60)
};

// Class Tiger.TigerDisciplineShockwavePunch
// Size: 0x120 (Inherited: 0xf0)
struct UTigerDisciplineShockwavePunch : UTigerDisciplineAnimTriggered {
	char pad_F0[0x20]; // 0xf0(0x20)
	struct UTigerShockwavePunchConfig* DisciplineConfig; // 0x110(0x08)
	struct UAnimMontage* PickedMontage; // 0x118(0x08)
};

// Class Tiger.TigerStunConfig
// Size: 0x180 (Inherited: 0x178)
struct UTigerStunConfig : UTigerActiveDisciplineConfig {
	float StunTime; // 0x178(0x04)
	float StunRadius; // 0x17c(0x04)
};

// Class Tiger.TigerDisciplineStun
// Size: 0x80 (Inherited: 0x78)
struct UTigerDisciplineStun : UTigerDisciplineBase {
	struct UTigerStunConfig* Config; // 0x78(0x08)
};

// Class Tiger.TigerDisciplinesUi
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerDisciplinesUi : UTigerWidget {
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x280(0x08)
	struct UTigerFeedingComponent* FeedingComponent; // 0x288(0x08)
	struct UTigerDisciplineBase* DisciplineForSlot[0x3]; // 0x290(0x18)
	enum class ETigerDisciplinesEnum DisciplineTypeForSlot[0x3]; // 0x2a8(0x03)
	char pad_2AB[0x15]; // 0x2ab(0x15)

	void UpdateSlots(struct UTigerDisciplineIcon* InSlotOneDisciplineIcon, struct UTigerDisciplineIcon* InSlotTwoDisciplineIcon, struct UUserWidget* InSlotOneChargesWidget, struct UUserWidget* InSlotTwoChargesWidget, bool InHasPassiveFinalAct, float InDeltaTime, float InAlhpaLerpSpeed); // Function Tiger.TigerDisciplinesUi.UpdateSlots // (Final|Native|Protected|BlueprintCallable) // @ game+0x14365b0
	void OnUpdatePassiveUI(); // Function Tiger.TigerDisciplinesUi.OnUpdatePassiveUI // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnSetNumberOfCharges(enum class ETigerDisciplineSlot DisciplineSlot); // Function Tiger.TigerDisciplinesUi.OnSetNumberOfCharges // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnInitializeDisciplineUi(); // Function Tiger.TigerDisciplinesUi.OnInitializeDisciplineUi // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDisciplineInterrupted(enum class ETigerDisciplineSlot InDisciplineSlot); // Function Tiger.TigerDisciplinesUi.OnDisciplineInterrupted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool HasChargesIfApplicable(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.HasChargesIfApplicable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435d50
	struct UTigerDisciplineBase* GetSkill(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.GetSkill // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435cc0
	enum class ETigerDisciplinesEnum GetDisciplineTypeForSlot(enum class ETigerDisciplineSlot InSlot); // Function Tiger.TigerDisciplinesUi.GetDisciplineTypeForSlot // (Final|Native|Protected|BlueprintCallable) // @ game+0x1435bc0
	int32_t GetChargesForSlot(enum class ETigerDisciplineSlot DisciplineSlot); // Function Tiger.TigerDisciplinesUi.GetChargesForSlot // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1435b30
	void GetActiveTimeLeftForDiscipline(enum class ETigerDisciplinesEnum InDisciplineType, bool& OutIsActive, float& OutTimeLeft); // Function Tiger.TigerDisciplinesUi.GetActiveTimeLeftForDiscipline // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1435a00
};

// Class Tiger.TigerSwiftStrikeConfig
// Size: 0x1b8 (Inherited: 0x178)
struct UTigerSwiftStrikeConfig : UTigerActiveDisciplineConfig {
	float DashDistance; // 0x178(0x04)
	float StartupTime; // 0x17c(0x04)
	float DashTime; // 0x180(0x04)
	float DashDamage; // 0x184(0x04)
	struct FVector2D DashHitBoxSize; // 0x188(0x08)
	float StrikeDelay; // 0x190(0x04)
	float StrikeDuration; // 0x194(0x04)
	float StrikeDamage; // 0x198(0x04)
	char pad_19C[0x4]; // 0x19c(0x04)
	struct UTigerBuff* StrikeDebuff; // 0x1a0(0x08)
	struct FVector StrikeHitBoxSize; // 0x1a8(0x0c)
	bool DrawDebugInfo; // 0x1b4(0x01)
	char pad_1B5[0x3]; // 0x1b5(0x03)

	void OnTargetsHitByStrike(struct TArray<struct ATigerCharacter*>& Targets); // Function Tiger.TigerSwiftStrikeConfig.OnTargetsHitByStrike // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnTargetsHitByDash(struct TArray<struct ATigerCharacter*>& Targets); // Function Tiger.TigerSwiftStrikeConfig.OnTargetsHitByDash // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnStrike(struct ATigerCharacter* Character); // Function Tiger.TigerSwiftStrikeConfig.OnStrike // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStartup(struct ATigerCharacter* Character); // Function Tiger.TigerSwiftStrikeConfig.OnStartup // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnDash(struct ATigerCharacter* Character, struct FVector& Location, struct FVector& Direction); // Function Tiger.TigerSwiftStrikeConfig.OnDash // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerDisciplineSwiftStrike
// Size: 0xa8 (Inherited: 0x78)
struct UTigerDisciplineSwiftStrike : UTigerDisciplineBase {
	struct UTigerSwiftStrikeConfig* Config; // 0x78(0x08)
	char pad_80[0x28]; // 0x80(0x28)
};

// Class Tiger.TigerTeleportConfig
// Size: 0x180 (Inherited: 0x178)
struct UTigerTeleportConfig : UTigerActiveDisciplineConfig {
	float TeleportDistance; // 0x178(0x04)
	char pad_17C[0x4]; // 0x17c(0x04)
};

// Class Tiger.TigerDisciplineTeleport
// Size: 0xa0 (Inherited: 0x78)
struct UTigerDisciplineTeleport : UTigerDisciplineBase {
	struct UTigerTeleportConfig* Config; // 0x78(0x08)
	char pad_80[0x20]; // 0x80(0x20)
};

// Class Tiger.TigerTrapsConfig
// Size: 0x320 (Inherited: 0x188)
struct UTigerTrapsConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAkAudioEvent* ThrowAudioEvent; // 0x188(0x08)
	struct UAkAudioEvent* LandAudioEvent; // 0x190(0x08)
	struct UAkAudioEvent* ArmingAudioEvent; // 0x198(0x08)
	struct UAkAudioEvent* ExplosionAudioEvent; // 0x1a0(0x08)
	struct UAkAudioEvent* FizzleAudioEvent; // 0x1a8(0x08)
	struct UAkAudioEvent* StartGasAudioEvent; // 0x1b0(0x08)
	struct UAkAudioEvent* StopGasAudioEvent; // 0x1b8(0x08)
	struct UCurveFloat* PitchCurve; // 0x1c0(0x08)
	struct UCurveFloat* EmissiveCurve; // 0x1c8(0x08)
	float EmissiveCurveLoopTime; // 0x1d0(0x04)
	struct FLinearColor AllyStatusColor; // 0x1d4(0x10)
	struct FLinearColor EnemyStatusColor; // 0x1e4(0x10)
	float MaxEmissiveBoost; // 0x1f4(0x04)
	struct UMaterialInterface* DecalMaterial; // 0x1f8(0x08)
	struct UAnimMontage* AimMontage; // 0x200(0x08)
	struct FName AimTrapSpawnSocket; // 0x208(0x08)
	float FailAimMontageResetTime; // 0x210(0x04)
	char pad_214[0x4]; // 0x214(0x04)
	struct AActor* AimTrapType; // 0x218(0x08)
	struct ATigerTrap* TrapType; // 0x220(0x08)
	struct TArray<struct UTigerBuff*> GasBuff; // 0x228(0x10)
	struct TArray<int32_t> MaxTrapsActive; // 0x238(0x10)
	struct FVector SpawnOffset; // 0x248(0x0c)
	float TerminalVelocity; // 0x254(0x04)
	float GravitationalPull; // 0x258(0x04)
	float AirFriction; // 0x25c(0x04)
	float ThrowForce; // 0x260(0x04)
	float ThrowMaxForce; // 0x264(0x04)
	float ThrowPlayerVelocityForceScale; // 0x268(0x04)
	float ThrowPitchOffset; // 0x26c(0x04)
	float ThrowMinPitch; // 0x270(0x04)
	float ThrowMaxPitch; // 0x274(0x04)
	float LifeTime; // 0x278(0x04)
	float TriggerDelay; // 0x27c(0x04)
	float ReleaseDelay; // 0x280(0x04)
	float DecalFadeDuration; // 0x284(0x04)
	float ArmingDuration; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct TArray<float> GasDuration; // 0x290(0x10)
	struct TArray<float> TriggerRadius; // 0x2a0(0x10)
	struct TArray<float> ExplosionRadius; // 0x2b0(0x10)
	struct TArray<float> GasRadius; // 0x2c0(0x10)
	float DecalTriggerRadiusScale; // 0x2d0(0x04)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct TArray<float> AreaEffectScale; // 0x2d8(0x10)
	struct TArray<float> ExplosionEffectScale; // 0x2e8(0x10)
	struct TArray<float> GasEffectScale; // 0x2f8(0x10)
	struct TArray<float> ExplosionDamage; // 0x308(0x10)
	bool bHostileNpcTriggersTrap; // 0x318(0x01)
	bool bAllyAreaVisible; // 0x319(0x01)
	bool bAllyImmunityExplosion; // 0x31a(0x01)
	bool bAllyImmunityGas; // 0x31b(0x01)
	bool bClearGasBuffOnExit; // 0x31c(0x01)
	bool bDrawDebugSpheres; // 0x31d(0x01)
	char pad_31E[0x2]; // 0x31e(0x02)
};

// Class Tiger.TigerDisciplineTraps
// Size: 0x128 (Inherited: 0xf0)
struct UTigerDisciplineTraps : UTigerDisciplineAnimTriggered {
	struct UTigerTrapsConfig* Config; // 0xf0(0x08)
	struct AActor* AimTrapActor; // 0xf8(0x08)
	struct TArray<struct ATigerTrap*> CurrentTraps; // 0x100(0x10)
	struct TArray<int32_t> FreeTrapIndices; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)

	void RemoveActiveTrap(struct ATigerTrap* InTrap); // Function Tiger.TigerDisciplineTraps.RemoveActiveTrap // (Final|Native|Public) // @ game+0x1436520
	void Multicast_StopDiscipline(); // Function Tiger.TigerDisciplineTraps.Multicast_StopDiscipline // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1436180
};

// Class Tiger.TigerVanishConfig
// Size: 0x1c0 (Inherited: 0x178)
struct UTigerVanishConfig : UTigerActiveDisciplineConfig {
	struct TArray<struct UTigerBuff*> VanishBuff; // 0x178(0x10)
	float AttackDelayAfterBuff; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct FText MovementSpeedText; // 0x190(0x18)
	struct FText MovementSpeedSuffix; // 0x1a8(0x18)
};

// Class Tiger.TigerDisciplineVanish
// Size: 0x90 (Inherited: 0x78)
struct UTigerDisciplineVanish : UTigerDisciplineBase {
	struct UTigerVanishConfig* Config; // 0x78(0x08)
	char pad_80[0x10]; // 0x80(0x10)

	void OnBuffRemoved(struct UTigerBuff* InBuffType, int32_t InID, float InDuration); // Function Tiger.TigerDisciplineVanish.OnBuffRemoved // (Final|Native|Private) // @ game+0x143a1c0
};

// Class Tiger.TigerVentrueClanConfig
// Size: 0x1b0 (Inherited: 0x178)
struct UTigerVentrueClanConfig : UTigerActiveDisciplineConfig {
	struct UTigerBuff* BuffType; // 0x178(0x08)
	struct UAnimMontage* Montage; // 0x180(0x08)
	struct UAnimMontage* EndMontage; // 0x188(0x08)
	float TriggerTime; // 0x190(0x04)
	float EndingLockDuration; // 0x194(0x04)
	float ActiveTimeAfterEnd; // 0x198(0x04)
	float Duration; // 0x19c(0x04)
	float BuffActiveTimeAfterEnd; // 0x1a0(0x04)
	float CooldownReductionPerDamageMitigated; // 0x1a4(0x04)
	float CooldownReductionSecondsPerDamageMitigated; // 0x1a8(0x04)
	bool bIncludeArchetypeDisciplineMitigation; // 0x1ac(0x01)
	char pad_1AD[0x3]; // 0x1ad(0x03)
};

// Class Tiger.TigerDisciplineVentrueClan
// Size: 0xb0 (Inherited: 0x78)
struct UTigerDisciplineVentrueClan : UTigerDisciplineBase {
	struct UTigerVentrueClanConfig* Config; // 0x78(0x08)
	char pad_80[0x30]; // 0x80(0x30)

	void OnDamageMitigatedCosmetic(); // Function Tiger.TigerDisciplineVentrueClan.OnDamageMitigatedCosmetic // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDamageMitigated(float InTotalDamage, float InDamageMitigated); // Function Tiger.TigerDisciplineVentrueClan.OnDamageMitigated // (Final|Native|Private) // @ game+0x143a2e0
	void Multicast_StartEndMontage(); // Function Tiger.TigerDisciplineVentrueClan.Multicast_StartEndMontage // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1435fb0
	void Multicast_OnDamageMitigatedCosmetic(); // Function Tiger.TigerDisciplineVentrueClan.Multicast_OnDamageMitigatedCosmetic // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x143a180
};

// Class Tiger.TigerVentrueOneConfig
// Size: 0x1e0 (Inherited: 0x178)
struct UTigerVentrueOneConfig : UTigerActiveDisciplineConfig {
	struct UTigerBuff* DashStartBuffType; // 0x178(0x08)
	struct UTigerBuff* DashEndBuffType; // 0x180(0x08)
	struct UTigerBuff* DebuffType; // 0x188(0x08)
	struct UAnimMontage* OnHitStopMontage; // 0x190(0x08)
	struct UAnimMontage* Montage; // 0x198(0x08)
	float DashDistance; // 0x1a0(0x04)
	float DashDuration; // 0x1a4(0x04)
	float DashExitVelocity; // 0x1a8(0x04)
	float DashMaxUpAngle; // 0x1ac(0x04)
	float DashMaxDownAngle; // 0x1b0(0x04)
	float ActiveTimeAfterDash; // 0x1b4(0x04)
	struct FVector DashHitboxExtents; // 0x1b8(0x0c)
	float DashEndHitRadius; // 0x1c4(0x04)
	float SurfaceStopThreshold; // 0x1c8(0x04)
	float HitDamage; // 0x1cc(0x04)
	float KnockbackPitch; // 0x1d0(0x04)
	float KnockbackForce; // 0x1d4(0x04)
	bool bDepleteShield; // 0x1d8(0x01)
	bool bDashEndBuffRequiresHit; // 0x1d9(0x01)
	bool bShouldStopDashOnHit; // 0x1da(0x01)
	bool bShouldStopMontageWhenDashStops; // 0x1db(0x01)
	bool bShouldPlayOnHitMontageOnTerrainHit; // 0x1dc(0x01)
	char pad_1DD[0x3]; // 0x1dd(0x03)
};

// Class Tiger.TigerDisciplineVentrueOne
// Size: 0xd0 (Inherited: 0x78)
struct UTigerDisciplineVentrueOne : UTigerDisciplineBase {
	struct TArray<struct AActor*> PreviouslyHitCharacters; // 0x78(0x10)
	struct FVector TargetLocation; // 0x88(0x0c)
	char pad_94[0x4]; // 0x94(0x04)
	struct UTigerVentrueOneConfig* Config; // 0x98(0x08)
	char pad_A0[0x30]; // 0xa0(0x30)

	void OnTerrainHit(struct UPrimitiveComponent* InHitComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, struct FVector InNormalImpulse, struct FHitResult& InHit); // Function Tiger.TigerDisciplineVentrueOne.OnTerrainHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x143a3b0
	void OnHitTerrain(struct FHitResult& InHitResult); // Function Tiger.TigerDisciplineVentrueOne.OnHitTerrain // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnHitCharacter(struct ATigerCharacter* InCharacter); // Function Tiger.TigerDisciplineVentrueOne.OnHitCharacter // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDashStart(); // Function Tiger.TigerDisciplineVentrueOne.OnDashStart // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDashEnd(); // Function Tiger.TigerDisciplineVentrueOne.OnDashEnd // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_PlayOnHitStopMontage(); // Function Tiger.TigerDisciplineVentrueOne.Multicast_PlayOnHitStopMontage // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1435fb0
};

// Class Tiger.TigerVentrueTwoConfig
// Size: 0x240 (Inherited: 0x178)
struct UTigerVentrueTwoConfig : UTigerActiveDisciplineConfig {
	struct ATigerDisciplineVentrueTwoLeashPoint* LeashPointActor; // 0x178(0x08)
	struct UTigerWidget* TargetingWidget; // 0x180(0x08)
	struct UTigerBuff* BreakBuffType; // 0x188(0x08)
	struct UTigerBuff* BreakMomentumDrainBuffType; // 0x190(0x08)
	struct UTigerBuff* BreakBuffTypeNpc; // 0x198(0x08)
	struct UTigerBuff* LeashedBuffType; // 0x1a0(0x08)
	struct UTigerBuff* PreLeashedBuffType; // 0x1a8(0x08)
	struct UTigerBuff* OnHitBuffType; // 0x1b0(0x08)
	struct UCurveFloat* AimAxisValueCurve; // 0x1b8(0x08)
	struct UCurveFloat* DistanceFromUseValueCurve; // 0x1c0(0x08)
	struct UAnimMontage* AimMontage; // 0x1c8(0x08)
	struct UAnimMontage* AbortMontage; // 0x1d0(0x08)
	struct UAnimMontage* CastMontage; // 0x1d8(0x08)
	float AimIntroTime; // 0x1e0(0x04)
	float TriggerTime; // 0x1e4(0x04)
	float ActiveTimeAfterTrigger; // 0x1e8(0x04)
	float LeashPointCreationDelay; // 0x1ec(0x04)
	float BreakMomentumDrainSpeedMultiplier; // 0x1f0(0x04)
	float BreakDamage; // 0x1f4(0x04)
	float BreakStunDuration; // 0x1f8(0x04)
	float BreakDamageNpc; // 0x1fc(0x04)
	float BreakStunDurationNpc; // 0x200(0x04)
	float LeashInstantBreakRange; // 0x204(0x04)
	float LeashTimedBreakRange; // 0x208(0x04)
	float LeashTimedBreakDuration; // 0x20c(0x04)
	float LeashLifetime; // 0x210(0x04)
	float LeashDestroyDelayAfterBreak; // 0x214(0x04)
	float PlayerTargetMultiplier; // 0x218(0x04)
	float TargetingSweepRadius; // 0x21c(0x04)
	float ShowTargetRange; // 0x220(0x04)
	float ValidTargetRange; // 0x224(0x04)
	float TargetWidthForProjection; // 0x228(0x04)
	float TargetHeightOffsetForProjection; // 0x22c(0x04)
	float WidgetHeightScale; // 0x230(0x04)
	float RemovalDelay; // 0x234(0x04)
	bool bAllowBloodhuntedTargetingThroughWalls; // 0x238(0x01)
	bool bAllowScoutedTargetingThroughWalls; // 0x239(0x01)
	bool bAllowPassiveTargetingThroughWalls; // 0x23a(0x01)
	bool bLeashInstantBreakOnNpc; // 0x23b(0x01)
	bool bShowTargetingDebugInfo; // 0x23c(0x01)
	bool bRotateWidgetWithTarget; // 0x23d(0x01)
	bool bLeashDestroyOnCasterDowned; // 0x23e(0x01)
	bool bShowLeashDebugInfo; // 0x23f(0x01)
};

// Class Tiger.TigerDisciplineVentrueTwo
// Size: 0xb8 (Inherited: 0x78)
struct UTigerDisciplineVentrueTwo : UTigerDisciplineBase {
	struct ATigerCharacter* TargetCharacter; // 0x78(0x08)
	struct UTigerWidget* TargetingWidget; // 0x80(0x08)
	struct UTigerVentrueTwoConfig* Config; // 0x88(0x08)
	char pad_90[0x28]; // 0x90(0x28)

	void OnTriggerCastEffects(); // Function Tiger.TigerDisciplineVentrueTwo.OnTriggerCastEffects // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnTargetValidStateUpdated(bool bInIsTargetInRange); // Function Tiger.TigerDisciplineVentrueTwo.OnTargetValidStateUpdated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnNewTarget(bool bInIsTargetInRange); // Function Tiger.TigerDisciplineVentrueTwo.OnNewTarget // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCastStarted(); // Function Tiger.TigerDisciplineVentrueTwo.OnCastStarted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnAimStopped(); // Function Tiger.TigerDisciplineVentrueTwo.OnAimStopped // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnAimStarted(); // Function Tiger.TigerDisciplineVentrueTwo.OnAimStarted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_TriggerCastEffects(); // Function Tiger.TigerDisciplineVentrueTwo.Multicast_TriggerCastEffects // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1435fb0
	void Multicast_StopAim(); // Function Tiger.TigerDisciplineVentrueTwo.Multicast_StopAim // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x143a1a0
	void Multicast_StartCast(); // Function Tiger.TigerDisciplineVentrueTwo.Multicast_StartCast // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x143a180
	float GetTargetRangePercentage(bool bInUseShowRange); // Function Tiger.TigerDisciplineVentrueTwo.GetTargetRangePercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439fb0
	void DoTargetLockedLogic(); // Function Tiger.TigerDisciplineVentrueTwo.DoTargetLockedLogic // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerDisciplineVentrueTwoLeashPoint
// Size: 0x260 (Inherited: 0x228)
struct ATigerDisciplineVentrueTwoLeashPoint : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct ATigerCharacter* LeashedCharacter; // 0x230(0x08)
	float LeashLength; // 0x238(0x04)
	bool bIsLeashBroken; // 0x23c(0x01)
	char pad_23D[0xb]; // 0x23d(0x0b)
	float InstantBreakRange; // 0x248(0x04)
	float TimedBreakRange; // 0x24c(0x04)
	char pad_250[0xc]; // 0x250(0x0c)
	bool bShowDebugInfo; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)

	void OnBreakTimerStarted(); // Function Tiger.TigerDisciplineVentrueTwoLeashPoint.OnBreakTimerStarted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnBreakLeash(); // Function Tiger.TigerDisciplineVentrueTwoLeashPoint.OnBreakLeash // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_BreakTimerStarted(); // Function Tiger.TigerDisciplineVentrueTwoLeashPoint.Multicast_BreakTimerStarted // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1418f00
	void Multicast_BreakLeash(); // Function Tiger.TigerDisciplineVentrueTwoLeashPoint.Multicast_BreakLeash // (Net|Native|Event|NetMulticast|Protected) // @ game+0xbaaef0
	void HandleLeashedLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerDisciplineVentrueTwoLeashPoint.HandleLeashedLifeStatusChanged // (Final|Native|Protected) // @ game+0x143a0d0
	void HandleCasterLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerDisciplineVentrueTwoLeashPoint.HandleCasterLifeStatusChanged // (Final|Native|Protected) // @ game+0x143a050
};

// Class Tiger.TigerDistrictComponent
// Size: 0x118 (Inherited: 0xb0)
struct UTigerDistrictComponent : UActorComponent {
	struct FMulticastInlineDelegate OnInsideHolyIncenseChanged; // 0xb0(0x10)
	bool bEnableVertexValidation; // 0xc0(0x01)
	bool bIsInsideHolyIncense; // 0xc1(0x01)
	bool bIsOutOfBounds; // 0xc2(0x01)
	char pad_C3[0x1]; // 0xc3(0x01)
	float DistanceToHolyIncense; // 0xc4(0x04)
	struct FVector2D ClosestGasLocation; // 0xc8(0x08)
	struct FVector2D ClosestGasNormal; // 0xd0(0x08)
	float OutOfBoundsDamagePerTick; // 0xd8(0x04)
	float OutOfBoundsDamageTickInterval; // 0xdc(0x04)
	char pad_E0[0x8]; // 0xe0(0x08)
	struct UCurveFloat* EffectStrengthScaling; // 0xe8(0x08)
	bool bDebugEffectStrength; // 0xf0(0x01)
	char pad_F1[0x7]; // 0xf1(0x07)
	struct ATigerCharacter* TigerCharacter; // 0xf8(0x08)
	struct ATigerLevelScriptActor* TigerLevelScriptActor; // 0x100(0x08)
	struct FTimerHandle DamageTimerHandle; // 0x108(0x08)
	char pad_110[0x8]; // 0x110(0x08)

	void TigerOnInsideHolyIncenseChanged__DelegateSignature(bool bIsInsideHolyIncense); // DelegateFunction Tiger.TigerDistrictComponent.TigerOnInsideHolyIncenseChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool ShouldTakeDamage(); // Function Tiger.TigerDistrictComponent.ShouldTakeDamage // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x143a6f0
	void Server_RequestServerVerticesForDebugging(float InDuration); // Function Tiger.TigerDistrictComponent.Server_RequestServerVerticesForDebugging // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x143a660
	void Server_RequestLatestRevealedWaveData(); // Function Tiger.TigerDistrictComponent.Server_RequestLatestRevealedWaveData // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x143a640
	void Server_EnableHolyIncenseProgressDebugging(bool bInEnable); // Function Tiger.TigerDistrictComponent.Server_EnableHolyIncenseProgressDebugging // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x143a5b0
	void OnWaveStopped(); // Function Tiger.TigerDistrictComponent.OnWaveStopped // (Final|Native|Private) // @ game+0x143a590
	void OnWaveRevealed(); // Function Tiger.TigerDistrictComponent.OnWaveRevealed // (Final|Native|Public) // @ game+0xb64580
	float GetEffectStrength(); // Function Tiger.TigerDistrictComponent.GetEffectStrength // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1439f80
	void Client_SendWaveData(int32_t InWaveIndex, int32_t InServerInitialVertexCount, struct TArray<struct FVector2D> InServerStartVertices, struct TArray<struct FVector2D> InServerEndVertices); // Function Tiger.TigerDistrictComponent.Client_SendWaveData // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1439d70
	void Client_SendHolyIncenseServerProgressData(float InProgress, float InAssaultTime, float InTimeUntilWaveEnds, int32_t InWaveVerticesCount, bool bIsInside, float InDistanceFromGas, int32_t InSmoothedCount); // Function Tiger.TigerDistrictComponent.Client_SendHolyIncenseServerProgressData // (Final|Net|Native|Event|Private|NetClient) // @ game+0x1439b50
	void Client_SendHolyIncenceVerticesForDebugging(struct TArray<struct FVector2D> InServerVertices, float InDuration); // Function Tiger.TigerDistrictComponent.Client_SendHolyIncenceVerticesForDebugging // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1439a60
};

// Class Tiger.TigerDistrictData
// Size: 0x60 (Inherited: 0x30)
struct UTigerDistrictData : UDataAsset {
	struct UTexture2D* MapTexture; // 0x30(0x08)
	struct FDistrictDataAnchor FirstAnchor; // 0x38(0x10)
	struct FDistrictDataAnchor SecondAnchor; // 0x48(0x10)
	bool bSpawnHighPotenceBlood; // 0x58(0x01)
	bool bSpawnSuperHighPotenceBlood; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
};

// Class Tiger.TigerDodgeBuff
// Size: 0x270 (Inherited: 0x268)
struct UTigerDodgeBuff : UTigerBuff {
	struct UCurveFloat* MaxSpeedCurve; // 0x268(0x08)
};

// Class Tiger.TigerDodgeBuffInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerDodgeBuffInstance : UTigerBuffInstance {
	struct UTigerDodgeBuff* BuffClassDefaultObject; // 0x88(0x08)
	char pad_90[0x8]; // 0x90(0x08)
};

// Class Tiger.TigerDoor
// Size: 0x2a8 (Inherited: 0x2a0)
struct ATigerDoor : ATigerInteractiveObject {
	struct ATigerPlayer* InteractingPlayer; // 0x2a0(0x08)

	bool IsOpen(); // Function Tiger.TigerDoor.IsOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143a150
};

// Class Tiger.TigerDownedEnemyPromptUi
// Size: 0x378 (Inherited: 0x2a8)
struct UTigerDownedEnemyPromptUi : UTigerSimpleTextPrompt {
	struct FTigerPlayerStateGameData PlayerStateData; // 0x2a8(0xd0)
};

// Class Tiger.TigerDsBackendAgent
// Size: 0x50 (Inherited: 0x28)
struct UTigerDsBackendAgent : UObject {
	struct FString DsAgentType; // 0x28(0x10)
	float HeartbeatIntervalSeconds; // 0x38(0x04)
	char pad_3C[0x14]; // 0x3c(0x14)
};

// Class Tiger.TigerDsPresenceSubsystem
// Size: 0x38 (Inherited: 0x30)
struct UTigerDsPresenceSubsystem : UGameInstanceSubsystem {
	struct UTigerPresenceService* PresenceService; // 0x30(0x08)
};

// Class Tiger.TigerDsReliableTimeSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerDsReliableTimeSubSystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)

	bool IsReliableDateTimeSet(); // Function Tiger.TigerDsReliableTimeSubSystem.IsReliableDateTimeSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x9501a0
	struct FDateTime GetCurrentDateTimeUtc(struct UObject* InWorldContextObject); // Function Tiger.TigerDsReliableTimeSubSystem.GetCurrentDateTimeUtc // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1439ef0
};

// Class Tiger.TigerDynamicObject
// Size: 0x258 (Inherited: 0x228)
struct ATigerDynamicObject : AActor {
	struct FComponentReference MeshComponentRef; // 0x228(0x28)
	float PlayerImpactMultiplier; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
};

// Class Tiger.TigerEditorGameSettings
// Size: 0xf0 (Inherited: 0x38)
struct UTigerEditorGameSettings : USharkLocalDeveloperSettings {
	bool bMatchWaitsForMultipleGroupsInEditor; // 0x38(0x01)
	bool bMatchWaitsForReadyStatesInEditor; // 0x39(0x01)
	bool bEnableSpawnCountdownInEditor; // 0x3a(0x01)
	bool bForceRespawnPlayerOnDeath; // 0x3b(0x01)
	bool bEnableNpcSpawningInEditor; // 0x3c(0x01)
	bool bUseLocalVendorCategories; // 0x3d(0x01)
	char pad_3E[0x2]; // 0x3e(0x02)
	struct TSoftObjectPtr<UTigerSeasonConfigAsset> SeasonConfigOverride; // 0x40(0x28)
	bool bShowGeneratedMeshActorsInOutliner; // 0x68(0x01)
	bool bSimulateParticlesInEditor; // 0x69(0x01)
	char pad_6A[0x6]; // 0x6a(0x06)
	struct TSoftClassPtr<UObject> PreviewerClass; // 0x70(0x28)
	struct FColor IndoorVolumeColor; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct TSoftObjectPtr<UTigerEventConfigAsset> EventConfigOverrideAsset; // 0xa0(0x28)
	struct FString EventConfigOverridePath; // 0xc8(0x10)
	struct FString GAMEMODEID; // 0xd8(0x10)
	bool bAllowApplyVisualSettings; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
};

// Class Tiger.TigerEliminationPromptUi
// Size: 0x378 (Inherited: 0x2a8)
struct UTigerEliminationPromptUi : UTigerSimpleTextPrompt {
	struct FTigerPlayerStateGameData PlayerStateData; // 0x2a8(0xd0)
};

// Class Tiger.TigerGameMode
// Size: 0x9f8 (Inherited: 0x2c8)
struct ATigerGameMode : AGameModeBase {
	char pad_2C8[0x10]; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnRestartPlayer; // 0x2d8(0x10)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x2e8(0x08)
	struct UTigerSoloCoordinator* SoloCoordinator; // 0x2f0(0x08)
	struct UTigerMasqueradeCoordinator* MasqueradeCoordinator; // 0x2f8(0x08)
	char pad_300[0x250]; // 0x300(0x250)
	struct TSoftClassPtr<UObject> SpawnMechanicClass; // 0x550(0x28)
	struct UTigerAICoordinator* AICoordinator; // 0x578(0x08)
	struct UTigerNPCSpawningCoordinator* NPCSpawner; // 0x580(0x08)
	enum class ESessionType SessionTraveledFrom; // 0x588(0x01)
	enum class ETigerGameType GameType; // 0x589(0x01)
	char pad_58A[0x372]; // 0x58a(0x372)
	enum class ETigerMatchMode MatchMode; // 0x8fc(0x01)
	char pad_8FD[0x23]; // 0x8fd(0x23)
	struct UTigerSpawnMechanic* SpawnMechanic; // 0x920(0x08)
	struct UTigerSessionService* TigerSessionService; // 0x928(0x08)
	char pad_930[0x50]; // 0x930(0x50)
	struct ATigerItemCluster* ItemClusterClass; // 0x980(0x08)
	char pad_988[0x4]; // 0x988(0x04)
	float LootSpawnFrameBudget; // 0x98c(0x04)
	float ServerLoadScalabilityUpdateFrequency; // 0x990(0x04)
	float ServerLoadScalability30HzTarget; // 0x994(0x04)
	float ServerLoadScalability20HzTarget; // 0x998(0x04)
	bool ServerLoadScalabilityEnabled; // 0x99c(0x01)
	char pad_99D[0x1b]; // 0x99d(0x1b)
	struct UTigerPlayerServerLoginProcess* PlayerServerLoginProcess; // 0x9b8(0x08)
	struct TArray<struct ATigerLootSpawner*> PendingLootSpawners; // 0x9c0(0x10)
	char pad_9D0[0x18]; // 0x9d0(0x18)
	float NetworkProfileOnPlayerConnectionDuration; // 0x9e8(0x04)
	char pad_9EC[0xc]; // 0x9ec(0x0c)

	bool TryRestartPlayerIfNeeded(struct ATigerPlayerController* Player); // Function Tiger.TigerGameMode.TryRestartPlayerIfNeeded // (Final|Native|Public|BlueprintCallable) // @ game+0x1457990
	void TigerEnableServerScalability(bool InEnabled); // Function Tiger.TigerGameMode.TigerEnableServerScalability // (Final|Exec|Native|Public) // @ game+0x13f3120
	void ShutdownServer(); // Function Tiger.TigerGameMode.ShutdownServer // (Final|Native|Public|BlueprintCallable) // @ game+0x1457720
	void SetPlayerIsReadyToPlay(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerGameMode.SetPlayerIsReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x1457690
	void SendChatMessageToGroupMembers(struct UTigerChatComponent* InMessageSender, struct FText& InMessageText); // Function Tiger.TigerGameMode.SendChatMessageToGroupMembers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14573f0
	void SendChatMessageToAllClients(struct UTigerChatComponent* InMessageSender, struct FText& InMessageText); // Function Tiger.TigerGameMode.SendChatMessageToAllClients // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14572e0
	void OnRestartPlayer__DelegateSignature(struct AController* NewPlayer); // DelegateFunction Tiger.TigerGameMode.OnRestartPlayer__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnNpcDeathEvent__DelegateSignature(struct ATigerNPC* NPC, struct AController* InstigatorController); // DelegateFunction Tiger.TigerGameMode.OnNpcDeathEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool IsMatchSettingsSet(); // Function Tiger.TigerGameMode.IsMatchSettingsSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1457090
	struct FTigerMatchSettings GetMatchSettings(); // Function Tiger.TigerGameMode.GetMatchSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1456af0
	enum class ETigerMatchMode GetMatchMode(); // Function Tiger.TigerGameMode.GetMatchMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1456ad0
	struct UTigerAICoordinator* GetAICoordinator(); // Function Tiger.TigerGameMode.GetAICoordinator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14567b0
	void CreateClientSpawners(struct AController* InNewPlayer); // Function Tiger.TigerGameMode.CreateClientSpawners // (Final|Native|Private) // @ game+0x1456720
};

// Class Tiger.TigerElysiumGameMode
// Size: 0xa38 (Inherited: 0x9f8)
struct ATigerElysiumGameMode : ATigerGameMode {
	char pad_9F8[0x38]; // 0x9f8(0x38)
	float TigerAutoRestartZLocation; // 0xa30(0x04)
	char pad_A34[0x4]; // 0xa34(0x04)

	void OnShowAdminMessages(); // Function Tiger.TigerElysiumGameMode.OnShowAdminMessages // (Final|Native|Private) // @ game+0x143e950
	void OnReloadAdminMessages(); // Function Tiger.TigerElysiumGameMode.OnReloadAdminMessages // (Final|Native|Private) // @ game+0x143e890
};

// Class Tiger.TigerGameSession
// Size: 0x298 (Inherited: 0x240)
struct ATigerGameSession : AGameSession {
	char pad_240[0x58]; // 0x240(0x58)
};

// Class Tiger.TigerElysiumGameSession
// Size: 0x298 (Inherited: 0x298)
struct ATigerElysiumGameSession : ATigerGameSession {
};

// Class Tiger.TigerElysiumGameState
// Size: 0x4f0 (Inherited: 0x390)
struct ATigerElysiumGameState : ATigerGameState {
	char pad_390[0x60]; // 0x390(0x60)
	struct FTigerMetaStoreEntriesKeeper FlashStoreStoreEntries; // 0x3f0(0x40)
	char pad_430[0x10]; // 0x430(0x10)
	struct FTigerMetaStoreEntriesKeeper BattlepassStoreEntries; // 0x440(0x40)
	struct FTigerMetaStoreEntriesKeeper RankSkipStoreEntries; // 0x480(0x40)
	bool PartyMaintenanceMode; // 0x4c0(0x01)
	char pad_4C1[0x2f]; // 0x4c1(0x2f)

	void OnRep_RankSkipEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_RankSkipEntriesChanged // (Final|Native|Private) // @ game+0x143e930
	void OnRep_PartyMaintenanceModeChanged(); // Function Tiger.TigerElysiumGameState.OnRep_PartyMaintenanceModeChanged // (Final|Native|Private) // @ game+0x143e8f0
	void OnRep_FlashStoreEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_FlashStoreEntriesChanged // (Final|Native|Private) // @ game+0x143e8d0
	void OnRep_BattlepassEntriesChanged(); // Function Tiger.TigerElysiumGameState.OnRep_BattlepassEntriesChanged // (Final|Native|Private) // @ game+0x143e8b0
};

// Class Tiger.TigerHUD
// Size: 0x428 (Inherited: 0x318)
struct ATigerHUD : AHUD {
	struct FMulticastInlineDelegate OnInGameMenuToggled; // 0x318(0x10)
	struct FMulticastInlineDelegate OnMenuOpened; // 0x328(0x10)
	struct FMulticastInlineDelegate OnMenuClosed; // 0x338(0x10)
	struct UTigerIngameMenuWidget* IngameMenuUI; // 0x348(0x08)
	struct UTigerGroupUIWidget* GroupStatus; // 0x350(0x08)
	struct UTigerEmoteWheelWidget* EmoteWheel; // 0x358(0x08)
	struct UTigerNotificationsUI* NotificationsUI; // 0x360(0x08)
	struct UTigerContextualHelpUI* ContextualHelpUI; // 0x368(0x08)
	struct UTigerWidget* PerformanceIndicatorUi; // 0x370(0x08)
	struct UTigerInGameGraphs* InGameGraphsUI; // 0x378(0x08)
	char pad_380[0x18]; // 0x380(0x18)
	struct ATigerPlayerController* TigerPlayerController; // 0x398(0x08)
	struct UTigerCrosshairWidget* Crosshair; // 0x3a0(0x08)
	struct TArray<struct FAutoInitializedWidget> AutoInitializedWidgets; // 0x3a8(0x10)
	char pad_3B8[0x10]; // 0x3b8(0x10)
	struct TArray<struct UTigerMenuWidget*> CurrentlyOpenMenus; // 0x3c8(0x10)
	char pad_3D8[0x10]; // 0x3d8(0x10)
	struct TArray<struct UUserWidget*> HiddenWidgets; // 0x3e8(0x10)
	struct TArray<struct TWeakObjectPtr<struct UWidgetComponent>> HiddenWidgetComponents; // 0x3f8(0x10)
	char pad_408[0x20]; // 0x408(0x20)

	void ShowOnScreenUI(); // Function Tiger.TigerHUD.ShowOnScreenUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x146a990
	void RemoveOnScreenWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.RemoveOnScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x146a840
	void OpenMenuWidget(struct UTigerMenuWidget* InMenuWidget, int32_t InZOrder); // Function Tiger.TigerHUD.OpenMenuWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x146a770
	void OnStreamerOptionChanged(); // Function Tiger.TigerHUD.OnStreamerOptionChanged // (Final|Native|Private) // @ game+0x146a750
	void OnPawnPossessed(); // Function Tiger.TigerHUD.OnPawnPossessed // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnMenuWidgetOpened__DelegateSignature(struct UTigerMenuWidget* InMenuWidget); // DelegateFunction Tiger.TigerHUD.OnMenuWidgetOpened__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInGameMenuToggled__DelegateSignature(bool bIsOpen); // DelegateFunction Tiger.TigerHUD.OnInGameMenuToggled__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool IsAnyMenuWidgetOpen(); // Function Tiger.TigerHUD.IsAnyMenuWidgetOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469e80
	void HideOnScreenUI(); // Function Tiger.TigerHUD.HideOnScreenUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14694f0
	int32_t GetDefaultZOrderForAutoInitializedWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.GetDefaultZOrderForAutoInitializedWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14691c0
	void CloseMenuWidget(struct UTigerMenuWidget* InMenuWidget); // Function Tiger.TigerHUD.CloseMenuWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1468e40
	void CloseIngameMenu(); // Function Tiger.TigerHUD.CloseIngameMenu // (Native|Public|BlueprintCallable) // @ game+0x1468e20
	void AddOnScreenWidget(struct UTigerWidget* InWidget); // Function Tiger.TigerHUD.AddOnScreenWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1468980
};

// Class Tiger.TigerElysiumHUD
// Size: 0x5f8 (Inherited: 0x428)
struct ATigerElysiumHUD : ATigerHUD {
	struct UTigerDialogueInteractionScreen* DialogueInteractionWidget; // 0x428(0x08)
	struct TSoftClassPtr<UObject> SoftPromotionalUiClass; // 0x430(0x28)
	struct UTigerPromotionalUI* PromotionalUi; // 0x458(0x08)
	struct TSoftClassPtr<UObject> SoftRewardsPopupClass; // 0x460(0x28)
	struct UTigerRewardsPopup* RewardsPopup; // 0x488(0x08)
	struct UTigerDialogueInteractionScreen* CurrentVendorUI; // 0x490(0x08)
	struct TSoftClassPtr<UObject> DialogueInteractionCameraPreset; // 0x498(0x28)
	struct UTigerWidget* ElysiumPlayerInfoUI; // 0x4c0(0x08)
	struct UTigerWidget* InGameQueueIndicatorUI; // 0x4c8(0x08)
	struct UTigerWidget* Watermark; // 0x4d0(0x08)
	struct UTigerWidget* ProgressHUD; // 0x4d8(0x08)
	struct UTigerInputMenuUI* SettingsMenuUi; // 0x4e0(0x08)
	struct UTigerMenuWidget* GameModeSelectionUI; // 0x4e8(0x08)
	struct UTigerWidget* OnboardingUi; // 0x4f0(0x08)
	struct TSoftClassPtr<UObject> SoftOnboardingUiClass; // 0x4f8(0x28)
	struct TArray<struct FAutoInitializedWidget> OpenMenuHiddenWidgets; // 0x520(0x10)
	struct TArray<struct UTigerWidget*> OpenMenuWidgetIgnoreList; // 0x530(0x10)
	struct TArray<struct TWeakObjectPtr<struct UTigerWidget>> HiddenTigerWidgets; // 0x540(0x10)
	int32_t VendorUIZOrder; // 0x550(0x04)
	char pad_554[0x4]; // 0x554(0x04)
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x558(0x10)
	char pad_568[0x8]; // 0x568(0x08)
	struct FMulticastInlineDelegate OnLastPreGamePopupClosed; // 0x570(0x10)
	char pad_580[0x28]; // 0x580(0x28)
	struct TMap<struct FString, int32_t> TimeSpentPerMenu; // 0x5a8(0x50)

	bool TryShowPendingRewards(); // Function Tiger.TigerElysiumHUD.TryShowPendingRewards // (Final|Native|Protected) // @ game+0x143f8d0
	void ToggleVanityInventory(); // Function Tiger.TigerElysiumHUD.ToggleVanityInventory // (Final|Native|Protected|BlueprintCallable) // @ game+0x143f820
	void ToggleElysiumGameMenuSubmenu(struct UTigerIngameSubmenuWidget* InSubwidgetClass); // Function Tiger.TigerElysiumHUD.ToggleElysiumGameMenuSubmenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143f700
	void ToggleElysiumGameMenu(); // Function Tiger.TigerElysiumHUD.ToggleElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143f6e0
	void ShowPendingRewardsPopup(); // Function Tiger.TigerElysiumHUD.ShowPendingRewardsPopup // (Final|Native|Protected) // @ game+0x143f6c0
	void ShowHiddenWidgets(); // Function Tiger.TigerElysiumHUD.ShowHiddenWidgets // (Final|Native|Protected|BlueprintCallable) // @ game+0x143f6a0
	void RemoveOnboardingUi(); // Function Tiger.TigerElysiumHUD.RemoveOnboardingUi // (Final|Native|Public|BlueprintCallable) // @ game+0x143ec10
	void PromotionalPopupClosed(); // Function Tiger.TigerElysiumHUD.PromotionalPopupClosed // (Final|Native|Public|BlueprintCallable) // @ game+0x143eb20
	void OpenGameModeSelectionMenu(); // Function Tiger.TigerElysiumHUD.OpenGameModeSelectionMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143ea00
	void OpenElysiumGameMenu(struct UTigerIngameSubmenuWidget* InSubwidgetClass); // Function Tiger.TigerElysiumHUD.OpenElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143e970
	void OnWidgetClosed__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnWidgetClosed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnSeasonConfigUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnSeasonConfigUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPreloadingDoneMulti__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnPreloadingDoneMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPreloadingDone__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumHUD.OnPreloadingDone__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void OnEnteredElysium(); // Function Tiger.TigerElysiumHUD.OnEnteredElysium // (Final|Native|Protected) // @ game+0x143e720
	void IsPreloadingDoneAsync(struct FDelegate& InDelegate); // Function Tiger.TigerElysiumHUD.IsPreloadingDoneAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x143e3f0
	bool IsElysiumGameMenuOpen(); // Function Tiger.TigerElysiumHUD.IsElysiumGameMenuOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143e390
	void HideCreatedWidgets(); // Function Tiger.TigerElysiumHUD.HideCreatedWidgets // (Final|Native|Protected|BlueprintCallable) // @ game+0x143e370
	void HandlePersistentPlayerInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerElysiumHUD.HandlePersistentPlayerInitialized // (Final|Native|Protected) // @ game+0x143e2e0
	void HandleLastPreGamePopupClosed(); // Function Tiger.TigerElysiumHUD.HandleLastPreGamePopupClosed // (Final|Native|Protected) // @ game+0x143e2c0
	void FadeInHiddenWidgets(); // Function Tiger.TigerElysiumHUD.FadeInHiddenWidgets // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x143e280
	void CloseGameModeSelectionMenu(); // Function Tiger.TigerElysiumHUD.CloseGameModeSelectionMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143e110
	void CloseElysiumGameMenu(); // Function Tiger.TigerElysiumHUD.CloseElysiumGameMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x143e0f0
};

// Class Tiger.TigerElysiumNpcBase
// Size: 0x420 (Inherited: 0x228)
struct ATigerElysiumNpcBase : AActor {
	bool bAllowCollision; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct UCapsuleComponent* CapsuleComponent; // 0x230(0x08)
	struct USkeletalMeshComponent* BodyMesh; // 0x238(0x08)
	struct USkeletalMeshComponent* HeadMesh; // 0x240(0x08)
	struct USkeletalMeshComponent* HairMesh; // 0x248(0x08)
	struct USkeletalMeshComponent* HoodieMesh; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)
	struct FTigerElysiumNpcData NpcData; // 0x260(0x190)
	struct UStaticMeshComponent* FirstPropSm; // 0x3f0(0x08)
	struct USkeletalMeshComponent* FirstPropSk; // 0x3f8(0x08)
	struct UStaticMeshComponent* SecondPropSm; // 0x400(0x08)
	struct USkeletalMeshComponent* SecondPropSk; // 0x408(0x08)
	char pad_410[0x10]; // 0x410(0x10)

	void LoadAssetsCompleted(); // Function Tiger.TigerElysiumNpcBase.LoadAssetsCompleted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void LoadAssets(); // Function Tiger.TigerElysiumNpcBase.LoadAssets // (Final|Native|Protected|BlueprintCallable) // @ game+0x143e680
	void CreatePropFromNonActorAsset(struct FTigerElysiumNpcProp& InPropStructure); // Function Tiger.TigerElysiumNpcBase.CreatePropFromNonActorAsset // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x143e130
};

// Class Tiger.TigerElysiumNpcNameplateWidget
// Size: 0x288 (Inherited: 0x280)
struct UTigerElysiumNpcNameplateWidget : UTigerWidget {
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x280(0x08)

	bool DoesPlayerHaveObjectiveToTalkToNPC(); // Function Tiger.TigerElysiumNpcNameplateWidget.DoesPlayerHaveObjectiveToTalkToNPC // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x143e250
};

// Class Tiger.TigerPlayerState
// Size: 0x9c8 (Inherited: 0x328)
struct ATigerPlayerState : APlayerState {
	bool bGhostModeOnInit; // 0x328(0x01)
	bool bIsGroupLeader; // 0x329(0x01)
	char pad_32A[0x6]; // 0x32a(0x06)
	struct UEOSUserComponent* EOSUserComponent; // 0x330(0x08)
	struct UTigerGroupStateComponent* GroupStateComponent; // 0x338(0x08)
	struct UTigerPlayerMasqueradeComponent* PlayerMasqueradeComponent; // 0x340(0x08)
	struct UTigerMatchRecapComponent* MatchRecapComponent; // 0x348(0x08)
	bool bIsGroupFull; // 0x350(0x01)
	char pad_351[0x7]; // 0x351(0x07)
	struct UTigerPersistentPlayerState* PersistentPlayerState; // 0x358(0x08)
	bool bStreamerModeIsScramblingEnabled; // 0x360(0x01)
	char pad_361[0x7]; // 0x361(0x07)
	struct FMulticastInlineDelegate OnGroupChangedDelegate; // 0x368(0x10)
	struct FMulticastInlineDelegate OnGroupFullnessChangedDelegate; // 0x378(0x10)
	struct FMulticastInlineDelegate OnNameChangedDelegate; // 0x388(0x10)
	struct FMulticastInlineDelegate OnApperanceChanged; // 0x398(0x10)
	struct FMulticastInlineDelegate OnPlayerCardLoaded; // 0x3a8(0x10)
	struct FMulticastInlineDelegate OnNumSpectatorsChanged; // 0x3b8(0x10)
	struct FMulticastInlineDelegate OnLeaderStatusChangedDelegate; // 0x3c8(0x10)
	enum class ETigerPowerKitType ArchetypeType; // 0x3d8(0x01)
	enum class ETigerGroupingMode GroupingMode; // 0x3d9(0x01)
	char pad_3DA[0x6]; // 0x3da(0x06)
	struct FMulticastInlineDelegate OnPawnChanged; // 0x3e0(0x10)
	struct FMulticastInlineDelegate OnArchetypeChanged; // 0x3f0(0x10)
	struct FMulticastInlineDelegate OnSeasonLevelChanged; // 0x400(0x10)
	struct FMulticastInlineDelegate OnArchetypeLevelChanged; // 0x410(0x10)
	struct FMulticastInlineDelegate OnPlayerLevelChanged; // 0x420(0x10)
	struct UTigerCollectibleProgressCache* CollectibleProgressCache; // 0x430(0x08)
	char pad_438[0x4]; // 0x438(0x04)
	struct FTigerGroupId GroupID; // 0x43c(0x10)
	int32_t CurrentSeasonLevel; // 0x44c(0x04)
	int32_t CurrentArchetypeLevel; // 0x450(0x04)
	int32_t CurrentPlayerLevel; // 0x454(0x04)
	int32_t PlayerScore; // 0x458(0x04)
	char pad_45C[0x4]; // 0x45c(0x04)
	struct FTigerPreviewerData AppearanceAsPreviewerData; // 0x460(0x2d8)
	struct FTigerCharacterAppearance CharacterAppearance; // 0x738(0xc8)
	bool bHasLoadedAppearance; // 0x800(0x01)
	char pad_801[0x7]; // 0x801(0x07)
	struct FTigerPersistentPlayerCardData PlayerCardData; // 0x808(0x18)
	char pad_820[0x18]; // 0x820(0x18)
	bool bHasLoadedPlayerCard; // 0x838(0x01)
	char pad_839[0x8b]; // 0x839(0x8b)
	struct TWeakObjectPtr<struct APawn> OwningPawn; // 0x8c4(0x08)
	struct TWeakObjectPtr<struct APawn> PreviousOwningPawn; // 0x8cc(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> LastOwningPlayer; // 0x8d4(0x08)
	char pad_8DC[0x4]; // 0x8dc(0x04)
	struct ATigerPlayerAppearanceCache* AppearanceCache; // 0x8e0(0x08)
	struct AActor* Killer; // 0x8e8(0x08)
	struct TArray<struct ATigerPlayer*> AssistPlayers; // 0x8f0(0x10)
	char pad_900[0x10]; // 0x900(0x10)
	struct FString FakePlayerName; // 0x910(0x10)
	char pad_920[0x78]; // 0x920(0x78)
	bool bIsVoipEnabled; // 0x998(0x01)
	bool bIsVoipInputDeviceEnabled; // 0x999(0x01)
	char pad_99A[0x16]; // 0x99a(0x16)
	struct FTigerGroupId ExtendedGroupId; // 0x9b0(0x10)
	char pad_9C0[0x8]; // 0x9c0(0x08)

	void UpdatePlayerStateGameDataInt(int32_t InValue); // Function Tiger.TigerPlayerState.UpdatePlayerStateGameDataInt // (Final|Native|Public) // @ game+0x14f6f50
	void UpdatePlayerStateGameData(); // Function Tiger.TigerPlayerState.UpdatePlayerStateGameData // (Final|Native|Public) // @ game+0x14f6f30
	bool ShouldShowSpeakerIcon(); // Function Tiger.TigerPlayerState.ShouldShowSpeakerIcon // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x14f6d40
	bool SharesGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerPlayerState.SharesGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f6ca0
	void SetAppearanceFromPreviewerDataLocally(struct FTigerPreviewerData& InPreviewerData); // Function Tiger.TigerPlayerState.SetAppearanceFromPreviewerDataLocally // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f6bf0
	void Server_UpdatePlayerMutedStatus(struct FTigerPersistentPlayerID InMutedPlayer, bool bInWasMuted); // Function Tiger.TigerPlayerState.Server_UpdatePlayerMutedStatus // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14f6b00
	void Server_UpdatePlayerBlockedStatus(struct FTigerPersistentPlayerID InBlockedPlayer, bool bInWasBlocked); // Function Tiger.TigerPlayerState.Server_UpdatePlayerBlockedStatus // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14f6a10
	void Server_SetIsVoipInputDeviceEnabled(bool bInIsVoipInputDeviceEnabled); // Function Tiger.TigerPlayerState.Server_SetIsVoipInputDeviceEnabled // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14f67e0
	void Server_SetIsVoipEnabled(bool bInIsVoipInputDeviceEnabled); // Function Tiger.TigerPlayerState.Server_SetIsVoipEnabled // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14f6750
	void Server_SetCharacterAppearance(struct FTigerCharacterAppearance NewCharacterAppearance); // Function Tiger.TigerPlayerState.Server_SetCharacterAppearance // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x14f6670
	void Server_SetBlockedAndMutedPlayers(struct TArray<struct FTigerPersistentPlayerID> InBlockedPlayers, struct TArray<struct FTigerPersistentPlayerID> InMutedPlayers); // Function Tiger.TigerPlayerState.Server_SetBlockedAndMutedPlayers // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x14f6520
	void Server_SetArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerPlayerState.Server_SetArchetype // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14f6470
	void Server_ReportPlayer(enum class ETigerReportReason InReason, int32_t InReportTargetID); // Function Tiger.TigerPlayerState.Server_ReportPlayer // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14f63a0
	void Server_OnStreamerSettingsChanged(bool bIsScramblingPlayers); // Function Tiger.TigerPlayerState.Server_OnStreamerSettingsChanged // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14f62e0
	void Server_LeaveGroup(); // Function Tiger.TigerPlayerState.Server_LeaveGroup // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14f6290
	void RandomizeCharacterMeshes(); // Function Tiger.TigerPlayerState.RandomizeCharacterMeshes // (Final|Native|Protected|BlueprintCallable) // @ game+0x14f6270
	void OptionallyLeavePartyAndLeaveGroupIfNotInAParty(bool bInShouldLeaveParty); // Function Tiger.TigerPlayerState.OptionallyLeavePartyAndLeaveGroupIfNotInAParty // (Final|Native|Public|BlueprintCallable) // @ game+0x14f61e0
	void OnTigerNumSpectatorsChanged__DelegateSignature(int32_t InSpectators); // DelegateFunction Tiger.TigerPlayerState.OnTigerNumSpectatorsChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnSeasonLevelChanged__DelegateSignature(int32_t InSeasonLevel); // DelegateFunction Tiger.TigerPlayerState.OnSeasonLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRep_PlayerCardData(); // Function Tiger.TigerPlayerState.OnRep_PlayerCardData // (Final|Native|Protected) // @ game+0x14f61c0
	void OnRep_IsVoipInputDeviceEnabledChanged(); // Function Tiger.TigerPlayerState.OnRep_IsVoipInputDeviceEnabledChanged // (Final|Native|Protected) // @ game+0xb64580
	void OnRep_IsVoipEnabledChanged(); // Function Tiger.TigerPlayerState.OnRep_IsVoipEnabledChanged // (Final|Native|Protected) // @ game+0x14f61a0
	void OnRep_GroupLeader(); // Function Tiger.TigerPlayerState.OnRep_GroupLeader // (Final|Native|Protected) // @ game+0x14f6180
	void OnRep_GroupIsFull(); // Function Tiger.TigerPlayerState.OnRep_GroupIsFull // (Final|Native|Protected) // @ game+0x14f6160
	void OnRep_GroupChanged(); // Function Tiger.TigerPlayerState.OnRep_GroupChanged // (Final|Native|Protected) // @ game+0x14f6140
	void OnRep_CurrentSeasonLevel(); // Function Tiger.TigerPlayerState.OnRep_CurrentSeasonLevel // (Final|Native|Protected) // @ game+0x14f6120
	void OnRep_CurrentPlayerLevel(); // Function Tiger.TigerPlayerState.OnRep_CurrentPlayerLevel // (Final|Native|Protected) // @ game+0x14f6100
	void OnRep_CurrentArchetypeLevel(); // Function Tiger.TigerPlayerState.OnRep_CurrentArchetypeLevel // (Final|Native|Protected) // @ game+0x14f60e0
	void OnRep_CharacterAppearance(); // Function Tiger.TigerPlayerState.OnRep_CharacterAppearance // (Final|Native|Protected) // @ game+0x14f60c0
	void OnRep_ArchetypeType(); // Function Tiger.TigerPlayerState.OnRep_ArchetypeType // (Final|Native|Public) // @ game+0x14f60a0
	void OnPlayerMutedStatusChanged(struct FTigerPersistentPlayerID& InMutedPlayer, bool bInWasMuted); // Function Tiger.TigerPlayerState.OnPlayerMutedStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x14f5fa0
	void OnPlayerLevelChanged__DelegateSignature(int32_t InPlayerLevel); // DelegateFunction Tiger.TigerPlayerState.OnPlayerLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlayerKilledBy(struct AActor* InKiller, struct ATigerPlayer* InKilledPlayer); // Function Tiger.TigerPlayerState.OnPlayerKilledBy // (Final|Native|Protected) // @ game+0x14f5ed0
	void OnPlayerCardLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnPlayerCardLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlayerBlockedStatusChanged(struct FTigerPersistentPlayerID& InBlockedPlayer, bool bInWasBlocked); // Function Tiger.TigerPlayerState.OnPlayerBlockedStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x14f5dd0
	void OnPlayerApperanceChanged__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerPlayerState.OnPlayerApperanceChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPersistentPlayerDataInitialized(); // Function Tiger.TigerPlayerState.OnPersistentPlayerDataInitialized // (Native|Protected) // @ game+0x14f5db0
	void OnPawnChanged__DelegateSignature(struct APawn* NewPawn); // DelegateFunction Tiger.TigerPlayerState.OnPawnChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnNameChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnNameChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnLeaderStatusChanged__DelegateSignature(bool bInIsLeader); // DelegateFunction Tiger.TigerPlayerState.OnLeaderStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnGroupModifiedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnGroupModifiedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnGroupChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerState.OnGroupChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnArchetypeTypeChangedDelegate__DelegateSignature(struct UTigerPlayerClanData* InClanData, struct UTigerPowerKit* InArchetypeData); // DelegateFunction Tiger.TigerPlayerState.OnArchetypeTypeChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnArchetypeLevelChanged__DelegateSignature(int32_t InArchetypeLevel); // DelegateFunction Tiger.TigerPlayerState.OnArchetypeLevelChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void LeaveGroup(); // Function Tiger.TigerPlayerState.LeaveGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x14f5d90
	bool IsVoipOutputDeviceEnabled(); // Function Tiger.TigerPlayerState.IsVoipOutputDeviceEnabled // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x14f5d60
	bool IsVoipInputDeviceEnabled(); // Function Tiger.TigerPlayerState.IsVoipInputDeviceEnabled // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x14f5d30
	bool IsVoipEnabled(); // Function Tiger.TigerPlayerState.IsVoipEnabled // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x14f5d00
	bool IsPlayerTalking(); // Function Tiger.TigerPlayerState.IsPlayerTalking // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x14f5cd0
	bool IsGroupLeader(); // Function Tiger.TigerPlayerState.IsGroupLeader // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5ca0
	bool IsGroupFull(); // Function Tiger.TigerPlayerState.IsGroupFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5c70
	bool HasGroup(); // Function Tiger.TigerPlayerState.HasGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5c40
	bool HasExtendedGroup(); // Function Tiger.TigerPlayerState.HasExtendedGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5c10
	bool HasAnySpectators(); // Function Tiger.TigerPlayerState.HasAnySpectators // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5be0
	void HandleOnDailyChallengesInitializedEvent(); // Function Tiger.TigerPlayerState.HandleOnDailyChallengesInitializedEvent // (Final|Native|Protected) // @ game+0xb64580
	void HandleAssistPlayerKilled(struct AActor* InKiller, struct ATigerPlayer* InKilledPlayer); // Function Tiger.TigerPlayerState.HandleAssistPlayerKilled // (Final|Native|Protected) // @ game+0x14f5b10
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerPlayerState.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5ae0
	float GetProgressToNextArchetypeLevelForArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerPlayerState.GetProgressToNextArchetypeLevelForArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5a50
	float GetProgressToNextArchetypeLevel(); // Function Tiger.TigerPlayerState.GetProgressToNextArchetypeLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5a20
	struct FTigerPlayerMatchStats GetPlayerMatchStats(); // Function Tiger.TigerPlayerState.GetPlayerMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f59e0
	struct FTigerPlayerMatchMetaStats GetPlayerMatchMetaStats(); // Function Tiger.TigerPlayerState.GetPlayerMatchMetaStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f59a0
	struct FTigerCharacterCardData GetPlayerCardCustomizations(); // Function Tiger.TigerPlayerState.GetPlayerCardCustomizations // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5900
	struct UTigerPowerKit* GetPlayerArchetypeData(); // Function Tiger.TigerPlayerState.GetPlayerArchetypeData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14f58d0
	enum class ESharkPlatformType GetPlatformType(); // Function Tiger.TigerPlayerState.GetPlatformType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f58a0
	int32_t GetPlacement(); // Function Tiger.TigerPlayerState.GetPlacement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5870
	struct APawn* GetOwningPawn(); // Function Tiger.TigerPlayerState.GetOwningPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5830
	enum class ETigerClan GetClanFromArchetype(); // Function Tiger.TigerPlayerState.GetClanFromArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f5770
	void Client_OnRecievedReward(); // Function Tiger.TigerPlayerState.Client_OnRecievedReward // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14f5750
	void Client_OnCollectibleAwardsReceived(struct UTigerCollectibleData* InCollectible, struct FTigerRewardsCollection InRewards); // Function Tiger.TigerPlayerState.Client_OnCollectibleAwardsReceived // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14f5660
	void CheckForInvalidAppearance(); // Function Tiger.TigerPlayerState.CheckForInvalidAppearance // (Final|Native|Protected) // @ game+0x14f5640
	void ApplyPlayerCard(); // Function Tiger.TigerPlayerState.ApplyPlayerCard // (Final|Native|Public|BlueprintCallable) // @ game+0x14f5620
	void ApplyOutfitSetup(struct FTigerPersistentOutfitSetup& InOutfitSetup); // Function Tiger.TigerPlayerState.ApplyOutfitSetup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f5550
	void ApplyCharacterAppearance(); // Function Tiger.TigerPlayerState.ApplyCharacterAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x14f5530
};

// Class Tiger.TigerElysiumPlayerState
// Size: 0xa70 (Inherited: 0x9c8)
struct ATigerElysiumPlayerState : ATigerPlayerState {
	char pad_9C8[0x8]; // 0x9c8(0x08)
	struct FMulticastInlineDelegate OnIsInPartyChanged; // 0x9d0(0x10)
	struct FMulticastInlineDelegate OnSelectedGameModeChanged; // 0x9e0(0x10)
	struct FMulticastInlineDelegate OnPartySizeChanged; // 0x9f0(0x10)
	struct FMulticastInlineDelegate OnAppearanceChanged; // 0xa00(0x10)
	bool bIsInParty; // 0xa10(0x01)
	int8_t PartySize; // 0xa11(0x01)
	char pad_A12[0x16]; // 0xa12(0x16)
	bool bIsReadyForMatchmaking; // 0xa28(0x01)
	char pad_A29[0x7]; // 0xa29(0x07)
	struct FMulticastInlineDelegate OnDisplayGroupNotReady; // 0xa30(0x10)
	struct FMulticastInlineDelegate OnGroupReadyStateChanged; // 0xa40(0x10)
	struct FMulticastInlineDelegate OnLocalPlayerReadyStateChanged; // 0xa50(0x10)
	struct UTigerGrimoireEntry* TrainingVideoGrimoireEntry; // 0xa60(0x08)
	char pad_A68[0x8]; // 0xa68(0x08)

	void TryInvitePlayerToGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerElysiumPlayerState.TryInvitePlayerToGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x143f840
	void ToggleReadyState(bool& bOutNewReadyState); // Function Tiger.TigerElysiumPlayerState.ToggleReadyState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x143f790
	void TigerOnAppearanceChanged__DelegateSignature(enum class ETigerPlayerApperanceChangeReason InReason); // DelegateFunction Tiger.TigerElysiumPlayerState.TigerOnAppearanceChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void SetSelectedGameMode(struct FString InSelectedGameModeId); // Function Tiger.TigerElysiumPlayerState.SetSelectedGameMode // (Final|Native|Public|BlueprintCallable) // @ game+0x143f600
	void SetReadyState(bool bInNewReadyState); // Function Tiger.TigerElysiumPlayerState.SetReadyState // (Final|Native|Public|BlueprintCallable) // @ game+0x143f570
	void Server_TryInvitePlayerToGroup(struct ATigerPlayerState* OtherPlayer); // Function Tiger.TigerElysiumPlayerState.Server_TryInvitePlayerToGroup // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x143f4b0
	void Server_SetSelectedGameMode(struct FString InSelectedGameModeId); // Function Tiger.TigerElysiumPlayerState.Server_SetSelectedGameMode // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x143f3f0
	void Server_SetPartySize(int8_t InPartySize); // Function Tiger.TigerElysiumPlayerState.Server_SetPartySize // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x143f340
	void Server_SetJoinReadyState(bool bInIsReady); // Function Tiger.TigerElysiumPlayerState.Server_SetJoinReadyState // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x143f280
	void Server_PersistPlayerCardChanges(); // Function Tiger.TigerElysiumPlayerState.Server_PersistPlayerCardChanges // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x143f230
	void Server_PersistCharacterChanges(); // Function Tiger.TigerElysiumPlayerState.Server_PersistCharacterChanges // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x143f1e0
	void Server_GetStoreCategories(); // Function Tiger.TigerElysiumPlayerState.Server_GetStoreCategories // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x143f190
	void Server_EquipItem(struct TSoftClassPtr<UObject> InItemPath, struct TSoftClassPtr<UObject> InPotentialCombinedItemPath, int32_t InSlot); // Function Tiger.TigerElysiumPlayerState.Server_EquipItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x143f010
	void Server_EquipCardItem(struct TSoftClassPtr<UObject> InItemPath); // Function Tiger.TigerElysiumPlayerState.Server_EquipCardItem // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x143ef30
	void Server_DeclineInvitation(struct FTigerGroupInvitation GroupInvitation); // Function Tiger.TigerElysiumPlayerState.Server_DeclineInvitation // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x143ee80
	void Server_BlockedPlayerJoinedParty(struct ATigerElysiumPlayerState* InBlockedPlayer); // Function Tiger.TigerElysiumPlayerState.Server_BlockedPlayerJoinedParty // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x143edf0
	void Server_AddPlayerToGroup(struct FTigerPartyId InPartyId, bool bInAssignLeader); // Function Tiger.TigerElysiumPlayerState.Server_AddPlayerToGroup // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x143ece0
	void Server_AcceptInvitation(struct FTigerGroupInvitation GroupInvitation); // Function Tiger.TigerElysiumPlayerState.Server_AcceptInvitation // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x143ec30
	void RemoveBlockedPlayerFromGroup(struct UTigerPlayerGroup* InGroup, struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerElysiumPlayerState.RemoveBlockedPlayerFromGroup // (Final|Native|Public) // @ game+0x143eb40
	void PartyMemberJoinedOrLeft(struct FTigerPartyId& InPartyId, struct FString InPlayerId); // Function Tiger.TigerElysiumPlayerState.PartyMemberJoinedOrLeft // (Final|Native|Private|HasOutParms) // @ game+0x143ea20
	void OnSelectedGameModeChanged__DelegateSignature(struct FString InSelectedGameModeId); // DelegateFunction Tiger.TigerElysiumPlayerState.OnSelectedGameModeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRep_PartySize(); // Function Tiger.TigerElysiumPlayerState.OnRep_PartySize // (Final|Native|Protected) // @ game+0x143e910
	void OnPartySizeChanged__DelegateSignature(int32_t InPartySize); // DelegateFunction Tiger.TigerElysiumPlayerState.OnPartySizeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnNewPlayerCard(struct FTigerPersistentPlayerCardData& InCard); // Function Tiger.TigerElysiumPlayerState.OnNewPlayerCard // (Final|Native|Private|HasOutParms) // @ game+0x143e7f0
	void OnNewCharacterAppearanceFromPreview(struct FTigerPreviewerData& InAppearance); // Function Tiger.TigerElysiumPlayerState.OnNewCharacterAppearanceFromPreview // (Final|Native|Private|HasOutParms) // @ game+0x143e740
	void OnIsInPartyChanged__DelegateSignature(bool bInIsInParty); // DelegateFunction Tiger.TigerElysiumPlayerState.OnIsInPartyChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnGroupReadyStateChanged__DelegateSignature(bool bInIsGroupReady); // DelegateFunction Tiger.TigerElysiumPlayerState.OnGroupReadyStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnDisplayGroupNotReady__DelegateSignature(); // DelegateFunction Tiger.TigerElysiumPlayerState.OnDisplayGroupNotReady__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Multicast_OnAppearanceChanged(enum class ETigerPlayerApperanceChangeReason InReason); // Function Tiger.TigerElysiumPlayerState.Multicast_OnAppearanceChanged // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x143e6a0
	void LeftPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerElysiumPlayerState.LeftPartyDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void LeftParty(struct FTigerParty& InParty); // Function Tiger.TigerElysiumPlayerState.LeftParty // (Final|Native|Private|HasOutParms) // @ game+0x143e590
	void JoinedPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerElysiumPlayerState.JoinedPartyDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void JoinedParty(struct FTigerParty& InParty); // Function Tiger.TigerElysiumPlayerState.JoinedParty // (Final|Native|Private|HasOutParms) // @ game+0x143e4a0
	bool IsFirstTimeMatchMaking(); // Function Tiger.TigerElysiumPlayerState.IsFirstTimeMatchMaking // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x143e3c0
	int32_t GetPartySize(); // Function Tiger.TigerElysiumPlayerState.GetPartySize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x143e2a0
	void Client_ReceiveOutfitVendorCategories(struct TArray<struct FTigerClientCategoryDefinition> ClientCategories); // Function Tiger.TigerElysiumPlayerState.Client_ReceiveOutfitVendorCategories // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x143e020
	void Client_ReceiveGroupInvitation(struct FTigerGroupInvitation GroupInvitation, struct ATigerPlayerState* Inviter); // Function Tiger.TigerElysiumPlayerState.Client_ReceiveGroupInvitation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x143df40
	void Client_OnSelectedGameModeChanged(struct FString InSelectedGameModeId); // Function Tiger.TigerElysiumPlayerState.Client_OnSelectedGameModeChanged // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x143dea0
	void Client_OnGroupMemberReadyStateChanged(struct ATigerElysiumPlayerState* InGroupMember, bool bInNewReadyState, bool bInIsEveryoneReady); // Function Tiger.TigerElysiumPlayerState.Client_OnGroupMemberReadyStateChanged // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x143dd80
	void Client_LeavePartyDueToBlocked(); // Function Tiger.TigerElysiumPlayerState.Client_LeavePartyDueToBlocked // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x143dd60
	void Client_DisplayWaitingForGroupUi(); // Function Tiger.TigerElysiumPlayerState.Client_DisplayWaitingForGroupUi // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x143dd40
	void Client_BlockedPlayerWasRemovedFromParty(bool bWasBlockedByMe); // Function Tiger.TigerElysiumPlayerState.Client_BlockedPlayerWasRemovedFromParty // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x143dcb0
};

// Class Tiger.TigerEmoteControllerComponent
// Size: 0x140 (Inherited: 0xb0)
struct UTigerEmoteControllerComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	char SelectableEmoteCount; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct ATigerPlayerController* PlayerController; // 0xd0(0x08)
	char pad_D8[0x10]; // 0xd8(0x10)
	struct TMap<struct FGuid, struct UTigerQuestAnimation*> QuestAnims; // 0xe8(0x50)
	char pad_138[0x8]; // 0x138(0x08)

	void Server_StopEmote(); // Function Tiger.TigerEmoteControllerComponent.Server_StopEmote // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1444370
	void Server_PlayQuestMontage(struct FGuid InID, uint32_t InClientObjId); // Function Tiger.TigerEmoteControllerComponent.Server_PlayQuestMontage // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x1444250
	void Server_PlayEmote(char InIndex); // Function Tiger.TigerEmoteControllerComponent.Server_PlayEmote // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14441a0
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerEmoteControllerComponent.OnSelectedCharacterChanged // (Final|Native|Private) // @ game+0x1443e70
	void OnIconsLoaded__DelegateSignature(struct TArray<struct UTexture2D*>& InIcons); // DelegateFunction Tiger.TigerEmoteControllerComponent.OnIconsLoaded__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void LoadEmoteIcons(struct FDelegate& InDelegate); // Function Tiger.TigerEmoteControllerComponent.LoadEmoteIcons // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1443a40
	bool HasEmoteAtIndex(char InIndex); // Function Tiger.TigerEmoteControllerComponent.HasEmoteAtIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1443980
	struct TArray<struct UTigerCharacterEmoteCustomization*> GetSelectedEmotes(); // Function Tiger.TigerEmoteControllerComponent.GetSelectedEmotes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1443900
	void GetEmoteNames(struct TArray<struct FText>& OutEmoteNames); // Function Tiger.TigerEmoteControllerComponent.GetEmoteNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1443690
	void Client_StopEmote(); // Function Tiger.TigerEmoteControllerComponent.Client_StopEmote // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x143a640
	void Client_EmoteFailed(); // Function Tiger.TigerEmoteControllerComponent.Client_EmoteFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1443670
};

// Class Tiger.TigerEmotePlayerComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerEmotePlayerComponent : UActorComponent {
	struct FTigerPlayingEmote PlayingEmote; // 0xb0(0x10)

	void OnRep_PlayingEmote(struct FTigerPlayingEmote& InOldEmote); // Function Tiger.TigerEmotePlayerComponent.OnRep_PlayingEmote // (Final|Native|Private|HasOutParms) // @ game+0x1443dc0
};

// Class Tiger.TigerEmoteWheelWidget
// Size: 0x2b8 (Inherited: 0x2a8)
struct UTigerEmoteWheelWidget : UTigerWheelWidget {
	struct ATigerPlayer* Player; // 0x2a8(0x08)
	struct UTigerEmoteControllerComponent* EmoteController; // 0x2b0(0x08)

	void PopulateLoadedEmotes(struct TArray<struct UTexture2D*>& InEmoteIcons); // Function Tiger.TigerEmoteWheelWidget.PopulateLoadedEmotes // (Final|Native|Private|HasOutParms) // @ game+0x1444000
};

// Class Tiger.TigerEmptyActorWithChild
// Size: 0x230 (Inherited: 0x228)
struct ATigerEmptyActorWithChild : AActor {
	struct UChildActorComponent* ChildActorComponent; // 0x228(0x08)
};

// Class Tiger.TigerEngineSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerEngineSettings : UDeveloperSettings {
	bool bVerifyGc; // 0x38(0x01)
	bool bCreateGameInstanceGcCluster; // 0x39(0x01)
	char pad_3A[0x2]; // 0x3a(0x02)
	float AcousticPortalAutoCloseDistance; // 0x3c(0x04)
};

// Class Tiger.TigerEnragedEffectActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerEnragedEffectActor : AActor {
	bool bIsActive; // 0x228(0x01)
	bool bHasDamageBuff; // 0x229(0x01)
	bool bIsRegenerating; // 0x22a(0x01)
	char pad_22B[0x5]; // 0x22b(0x05)

	void OnRegenStopped(); // Function Tiger.TigerEnragedEffectActor.OnRegenStopped // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnRegenStarted(); // Function Tiger.TigerEnragedEffectActor.OnRegenStarted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnEnragedDeactivated(); // Function Tiger.TigerEnragedEffectActor.OnEnragedDeactivated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnEnragedActivated(); // Function Tiger.TigerEnragedEffectActor.OnEnragedActivated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDamageBuffRemoved(); // Function Tiger.TigerEnragedEffectActor.OnDamageBuffRemoved // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCharacterAction(enum class ETigerCharacterAction InAction); // Function Tiger.TigerEnragedEffectActor.OnCharacterAction // (Final|Native|Protected) // @ game+0x1443c90
	void Multicast_RegenStopped(); // Function Tiger.TigerEnragedEffectActor.Multicast_RegenStopped // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1418f00
	void Multicast_RegenStarted(); // Function Tiger.TigerEnragedEffectActor.Multicast_RegenStarted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xbaaef0
	void Multicast_EnragedDeactivated(); // Function Tiger.TigerEnragedEffectActor.Multicast_EnragedDeactivated // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1443be0
	void Multicast_EnragedActivated(); // Function Tiger.TigerEnragedEffectActor.Multicast_EnragedActivated // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0xccd050
	void Multicast_DamageBuffRemoved(); // Function Tiger.TigerEnragedEffectActor.Multicast_DamageBuffRemoved // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1443bc0
	struct ATigerPlayer* GetPlayer(); // Function Tiger.TigerEnragedEffectActor.GetPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14438d0
};

// Class Tiger.TigerEnteringNewAreaPrompt
// Size: 0x2c8 (Inherited: 0x2a8)
struct UTigerEnteringNewAreaPrompt : UTigerSimpleTextPrompt {
	struct FText SubText; // 0x2a8(0x18)
	struct UTexture2D* TextBackground; // 0x2c0(0x08)
};

// Class Tiger.TigerEntityCheckpointActorSpawner
// Size: 0x200 (Inherited: 0x200)
struct UTigerEntityCheckpointActorSpawner : USceneComponent {
	struct AActor* ActorToSpawn; // 0x1f8(0x08)
};

// Class Tiger.TigerNPCInstantSpawner
// Size: 0x270 (Inherited: 0x270)
struct ATigerNPCInstantSpawner : ATigerNPCSpawningBase {

	struct ATigerBaseNPC* SpawnNpcAtLocation(struct FVector& Location, struct UTigerNPCAsset* NpcAssetToUse, struct FRotator& Rotation, bool bIgnoreSpawnSetting); // Function Tiger.TigerNPCInstantSpawner.SpawnNpcAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14abe40
};

// Class Tiger.TigerEntityLeaderSpawner
// Size: 0x270 (Inherited: 0x270)
struct ATigerEntityLeaderSpawner : ATigerNPCInstantSpawner {

	struct ATigerBaseNPC* SpawnEntityLeader(); // Function Tiger.TigerEntityLeaderSpawner.SpawnEntityLeader // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerEntityCheckpointSupplyDropLocation
// Size: 0x230 (Inherited: 0x228)
struct ATigerEntityCheckpointSupplyDropLocation : AActor {
	struct USceneComponent* SupplyRoot; // 0x228(0x08)
};

// Class Tiger.TigerNPCPointSpawner
// Size: 0x298 (Inherited: 0x270)
struct ATigerNPCPointSpawner : ATigerNPCSpawningBase {
	struct TArray<struct FTigerNPCSpawningPoint> SpawningPoints; // 0x270(0x10)
	int32_t MaxNPCsToSpawn; // 0x280(0x04)
	int32_t MinNPCsToSpawn; // 0x284(0x04)
	int32_t MaxNPCsToSpawnGroup; // 0x288(0x04)
	int32_t MinNPCsToSpawnGroup; // 0x28c(0x04)
	char pad_290[0x8]; // 0x290(0x08)
};

// Class Tiger.TigerEntityCheckpoint
// Size: 0x2c0 (Inherited: 0x298)
struct ATigerEntityCheckpoint : ATigerNPCPointSpawner {
	struct ATigerBaseNPC* EntityLeader; // 0x298(0x08)
	struct AActor* SupplyDropLocation; // 0x2a0(0x08)
	struct UTigerSupplyDropConsumableAsset* SupplyDropConsumable; // 0x2a8(0x08)
	struct UActorComponent* SupplyDropComponent; // 0x2b0(0x08)
	bool bIsAcknowledged; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)

	void OnRep_Acknowledged(bool bOldIsAcknowledged); // Function Tiger.TigerEntityCheckpoint.OnRep_Acknowledged // (Final|Native|Private) // @ game+0x1443d10
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerEntityCheckpoint.MatchStateChanged // (Final|Native|Private) // @ game+0x1443af0
};

// Class Tiger.TigerEntityCombatComponent
// Size: 0x138 (Inherited: 0xb0)
struct UTigerEntityCombatComponent : UActorComponent {
	float TimeBeforeAttackingNewPlayer; // 0xb0(0x04)
	float ClosestAllowedDistanceToBeSprinting; // 0xb4(0x04)
	float SprintingCooldownDuration; // 0xb8(0x04)
	float MaxLaserLength; // 0xbc(0x04)
	float MaxAngleFromOriginalWeapon; // 0xc0(0x04)
	float LaserInterpolateSpeed; // 0xc4(0x04)
	float LaserInterpolateRuberbandSpeedMultiplier; // 0xc8(0x04)
	struct FName MaterialScaleName; // 0xcc(0x08)
	struct FName MaterialFadeLaserName; // 0xd4(0x08)
	bool bHideLaserDuringReload; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	float NotInCombatFadedLaserLength; // 0xe0(0x04)
	float ReloadingFadedLaserLength; // 0xe4(0x04)
	struct ATigerNPC* NpcOwner; // 0xe8(0x08)
	char pad_F0[0x10]; // 0xf0(0x10)
	struct UStaticMeshComponent* LaserPointer; // 0x100(0x08)
	struct UParticleSystemComponent* LaserPointerOriginGlowParticleSystem; // 0x108(0x08)
	char pad_110[0x28]; // 0x110(0x28)

	void Multicast_EntityEvent(enum class ETigerEntityEvent InEntityEvent); // Function Tiger.TigerEntityCombatComponent.Multicast_EntityEvent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x13e7710
	void BeginProjectileOverlap(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerEntityCombatComponent.BeginProjectileOverlap // (Final|Native|Private|HasOutParms) // @ game+0x1443440
};

// Class Tiger.TigerEntityHelicopter
// Size: 0x2e0 (Inherited: 0x228)
struct ATigerEntityHelicopter : AActor {
	struct UAkAudioEvent* PreparingToFireSound; // 0x228(0x08)
	struct UAkAudioEvent* TargetEnteredSpotlightSound; // 0x230(0x08)
	struct UAkAudioEvent* TargetLeftSpotlightSound; // 0x238(0x08)
	struct ATigerProjectile* ProjectileClass; // 0x240(0x08)
	struct UTigerRangedWeapon* WeaponType; // 0x248(0x08)
	struct UTigerRangedWeapon* Weapon; // 0x250(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x258(0x08)
	char pad_260[0x8]; // 0x260(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> TargetedPlayer; // 0x268(0x08)
	struct USceneComponent* LineOfSightStart; // 0x270(0x08)
	char pad_278[0xc]; // 0x278(0x0c)
	struct FVector_NetQuantize10 SpotlightEndTarget; // 0x284(0x0c)
	struct USceneComponent* SceneRoot; // 0x290(0x08)
	struct UChildActorComponent* HelicopterChildActor; // 0x298(0x08)
	float SpotlightMovementSpeed; // 0x2a0(0x04)
	char pad_2A4[0x14]; // 0x2a4(0x14)
	float TargetSpottedDelayBeforeFiring; // 0x2b8(0x04)
	char pad_2BC[0x24]; // 0x2bc(0x24)

	void SetSpotlightForLos(struct USceneComponent* SpotLightPosition); // Function Tiger.TigerEntityHelicopter.SetSpotlightForLos // (Final|Native|Protected|BlueprintCallable) // @ game+0x14443c0
	void Multicast_PlayAudio(struct UAkAudioEvent* AudioEventToPlay); // Function Tiger.TigerEntityHelicopter.Multicast_PlayAudio // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1443c00
	void Multicast_FireProjectile(); // Function Tiger.TigerEntityHelicopter.Multicast_FireProjectile // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1418f00
	void GetLookAtRotatorForSpotLight(struct FVector& SpotLightPosition, float& OutDistance, struct FRotator& OutLookAtRotator); // Function Tiger.TigerEntityHelicopter.GetLookAtRotatorForSpotLight // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1443790
};

// Class Tiger.TigerEntityJudgeHelicopter
// Size: 0x320 (Inherited: 0x2e0)
struct ATigerEntityJudgeHelicopter : ATigerEntityHelicopter {
	struct ATigerJudge* Judge; // 0x2e0(0x08)
	char pad_2E8[0x8]; // 0x2e8(0x08)
	float DesiredForwardOffsetFromJudge; // 0x2f0(0x04)
	float DesiredHeight; // 0x2f4(0x04)
	float MaxSpeed; // 0x2f8(0x04)
	float MaxTargetDistance2DFromJudge; // 0x2fc(0x04)
	float MinimumTargetHeight; // 0x300(0x04)
	float MinimumHeightOverJudge; // 0x304(0x04)
	float LoseTargetTime; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct FTimerHandle KillSelfHandle; // 0x310(0x08)
	enum class ETigerJudgeHelicopterSpotlightState CurrentSpotlightState; // 0x318(0x01)
	char pad_319[0x7]; // 0x319(0x07)

	bool ShouldFlyAway(); // Function Tiger.TigerEntityJudgeHelicopter.ShouldFlyAway // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1444450
	void SelectNewTarget(struct TArray<struct ATigerPlayer*> PossibleTargets); // Function Tiger.TigerEntityJudgeHelicopter.SelectNewTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x14440b0
	bool HasTarget(); // Function Tiger.TigerEntityJudgeHelicopter.HasTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1443a10
};

// Class Tiger.TigerEntityPatrollingHelicopter
// Size: 0x498 (Inherited: 0x2e0)
struct ATigerEntityPatrollingHelicopter : ATigerEntityHelicopter {
	struct FTigerAISplinePathData PathData; // 0x2e0(0xa0)
	struct TArray<struct FVector> GeneratedCirclularPath; // 0x380(0x10)
	struct TMap<enum class ETigerPatrollingHelicopterSpotlightState, struct FColor> SpotlightColours; // 0x390(0x50)
	struct FVector CurrentTrackingFlightTarget; // 0x3e0(0x0c)
	char pad_3EC[0x18]; // 0x3ec(0x18)
	int32_t NumberOfPointsInCirclularPath; // 0x404(0x04)
	int32_t CurrentSplineWaypointIndex; // 0x408(0x04)
	int32_t CurrentTrackingIndex; // 0x40c(0x04)
	char pad_410[0x4]; // 0x410(0x04)
	float IdleRotationSpeed; // 0x414(0x04)
	float HoverRotationSpeed; // 0x418(0x04)
	float IdleFlightSpeed; // 0x41c(0x04)
	float HoverFlightSpeed; // 0x420(0x04)
	float LostPlayerStateNewSpotlightTargetRadius; // 0x424(0x04)
	float MaxTimeToSearchForLostPlayer; // 0x428(0x04)
	float CurrentTimeUntilReturnToPatrol; // 0x42c(0x04)
	float MasqueradePointGainFromSpotlightPerSecond; // 0x430(0x04)
	float SpaceBetweenMeshes; // 0x434(0x04)
	float MovementDistanceThresholdSquared; // 0x438(0x04)
	float BelowRoofHeightCutOffTime; // 0x43c(0x04)
	float TimeCurrentTargetWasBelowRoofHeight; // 0x440(0x04)
	float TargetedPlayerHoverCircleRadius; // 0x444(0x04)
	float LostPlayerHoverCircleRadius; // 0x448(0x04)
	char pad_44C[0x4]; // 0x44c(0x04)
	float CircleGrowthRate; // 0x450(0x04)
	float MaxTimeToFindGunFireEventCulprit; // 0x454(0x04)
	char pad_458[0x14]; // 0x458(0x14)
	float TimeToLoseInvisibleBloodhuntTarget; // 0x46c(0x04)
	float DelayUntilPlayTargetSpottingSounds; // 0x470(0x04)
	enum class ETigerPatrollingHelicopterState CurrentState; // 0x474(0x01)
	enum class ETigerPatrollingHelicopterSpotlightState CurrentSpotlightState; // 0x475(0x01)
	bool bHasReachedTarget; // 0x476(0x01)
	bool bNeedToCalculateEntryVectorForTracking; // 0x477(0x01)
	bool bWasLastTargetedPlayerBloodHunted; // 0x478(0x01)
	bool bHasActiveTask; // 0x479(0x01)
	bool bIsFiring; // 0x47a(0x01)
	char pad_47B[0x5]; // 0x47b(0x05)
	struct UTigerAICoordinator* AICoordinator; // 0x480(0x08)
	struct USplineComponent* Spline; // 0x488(0x08)
	char pad_490[0x8]; // 0x490(0x08)

	void UpdateSpotlightPositionFromPatrollingLightSweep(); // Function Tiger.TigerEntityPatrollingHelicopter.UpdateSpotlightPositionFromPatrollingLightSweep // (Final|Native|Protected|BlueprintCallable) // @ game+0x14444a0
	void UpdateClientSpotlight(); // Function Tiger.TigerEntityPatrollingHelicopter.UpdateClientSpotlight // (Final|Native|Protected|BlueprintCallable) // @ game+0x1444480
	void OnStoppedShooting(); // Function Tiger.TigerEntityPatrollingHelicopter.OnStoppedShooting // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnStartedShooting(); // Function Tiger.TigerEntityPatrollingHelicopter.OnStartedShooting // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnRep_IsFiring(); // Function Tiger.TigerEntityPatrollingHelicopter.OnRep_IsFiring // (Final|Native|Protected) // @ game+0x1443da0
	float GetSpotlightRadius(); // Function Tiger.TigerEntityPatrollingHelicopter.GetSpotlightRadius // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerEquipWheelWidget
// Size: 0x2a8 (Inherited: 0x2a8)
struct UTigerEquipWheelWidget : UTigerWheelWidget {

	void Populate(struct TArray<struct UTigerInventoryItemBase*>& InItemArray, int32_t InMaxItemCount); // Function Tiger.TigerEquipWheelWidget.Populate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1443f00
};

// Class Tiger.TigerEventConfigAsset
// Size: 0x1b0 (Inherited: 0x30)
struct UTigerEventConfigAsset : UDataAsset {
	struct FTigerEventConfig EventConfig; // 0x30(0x178)
	char pad_1A8[0x8]; // 0x1a8(0x08)
};

// Class Tiger.TigerEventSystem
// Size: 0x1c0 (Inherited: 0x28)
struct UTigerEventSystem : UObject {
	char pad_28[0x50]; // 0x28(0x50)
	struct TMap<struct FString, struct FTigerEventConfig> EventConfigsMap; // 0x78(0x50)
	char pad_C8[0xf8]; // 0xc8(0xf8)
};

// Class Tiger.TigerExperienceEvent
// Size: 0x50 (Inherited: 0x28)
struct UTigerExperienceEvent : UObject {
	int32_t BaseExperienceGain[0x2]; // 0x28(0x08)
	struct UTexture2D* EventIcon; // 0x30(0x08)
	struct FText Description; // 0x38(0x18)

	void GetExperienceAmount(struct ATigerPlayer* Player, struct ATigerCharacter* EventTiedCharacter, enum class EMatchBalanceMode BalanceMode, int32_t& OutOwnPlayerExperienceGain, int32_t& OutExperienceToAddToEveryGroupMemberIncludingSelf); // Function Tiger.TigerExperienceEvent.GetExperienceAmount // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1448c30
	int32_t GetBalanceModeExperience(enum class EMatchBalanceMode InBalanceMode); // Function Tiger.TigerExperienceEvent.GetBalanceModeExperience // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448ba0
};

// Class Tiger.TigerCheatExperienceEvent
// Size: 0x50 (Inherited: 0x50)
struct UTigerCheatExperienceEvent : UTigerExperienceEvent {
};

// Class Tiger.TigerExtendedGroupState
// Size: 0x270 (Inherited: 0x228)
struct ATigerExtendedGroupState : AInfo {
	struct FTigerGroupId ExtendedGroupId; // 0x228(0x10)
	char pad_238[0x8]; // 0x238(0x08)
	struct TArray<struct FTigerExtendedGroupPlayerInfo> ReplicatedPlayerInfo; // 0x240(0x10)
	struct TArray<struct FTigerExtendedGroupMemberClientData> ExtendedGroupMembers; // 0x250(0x10)
	struct TArray<struct ATigerPlayerState*> AuthPlayersInExtendedTeam; // 0x260(0x10)

	void OnRep_ReplicatedPlayerInfo(); // Function Tiger.TigerExtendedGroupState.OnRep_ReplicatedPlayerInfo // (Final|Native|Protected) // @ game+0x1449370
	void HandlePreMatchStateChanged(struct FTigerPreMatchStateInfo InPreMatchState); // Function Tiger.TigerExtendedGroupState.HandlePreMatchStateChanged // (Final|Native|Protected) // @ game+0x1448e50
};

// Class Tiger.TigerEyewearAnimInstance
// Size: 0x450 (Inherited: 0x3c0)
struct UTigerEyewearAnimInstance : UTigerAnimInstance {
	struct FTransform NoseTransform; // 0x3c0(0x30)
	struct FTransform EarRightTransform; // 0x3f0(0x30)
	struct FTransform EarLeftTransform; // 0x420(0x30)
};

// Class Tiger.TigerFamiliarScout
// Size: 0x2b8 (Inherited: 0x228)
struct ATigerFamiliarScout : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USphereComponent* ScanSphereComponent; // 0x230(0x08)
	float MoveSpeed; // 0x238(0x04)
	float RecallMoveSpeed; // 0x23c(0x04)
	struct FVector TargetLocation; // 0x240(0x0c)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct FTimerHandle ArrivalTimerHandle; // 0x250(0x08)
	struct FVector ManuallyScoutAtLocation; // 0x258(0x0c)
	int32_t Rank; // 0x264(0x04)
	bool bIsMoving; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	struct FVector Velocity; // 0x26c(0x0c)
	float ScoutTimeToReachTarget; // 0x278(0x04)
	float RevealDurationMultiplier; // 0x27c(0x04)
	char pad_280[0x38]; // 0x280(0x38)

	void OnTargetLocationChanged(); // Function Tiger.TigerFamiliarScout.OnTargetLocationChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnScoutStartedReturnToOwner(); // Function Tiger.TigerFamiliarScout.OnScoutStartedReturnToOwner // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnRep_TargetLocation(); // Function Tiger.TigerFamiliarScout.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x1449390
	void OnRep_ManuallyScoutAtLocation(); // Function Tiger.TigerFamiliarScout.OnRep_ManuallyScoutAtLocation // (Final|Native|Private) // @ game+0x1449350
	void OnArrivedAtOwner(); // Function Tiger.TigerFamiliarScout.OnArrivedAtOwner // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void DeactivateScouting(); // Function Tiger.TigerFamiliarScout.DeactivateScouting // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void AttachToCharacter(struct ATigerCharacter* InCharacter); // Function Tiger.TigerFamiliarScout.AttachToCharacter // (Final|Native|Protected|BlueprintCallable) // @ game+0x14488c0
	void AddCachedAchievementTarget(struct ATigerPlayerState* InTargetPlayerState); // Function Tiger.TigerFamiliarScout.AddCachedAchievementTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1448830
	void ActivateScouting(); // Function Tiger.TigerFamiliarScout.ActivateScouting // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerFamiliarScoutPassive
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerFamiliarScoutPassive : UActorComponent {
	struct TArray<struct ATigerCharacter*> OverlappingCharacters; // 0xb0(0x10)
	struct UParticleSystemComponent* OrbitingParticles; // 0xc0(0x08)
	struct USphereComponent* ScanSphere; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	struct UTigerScoutsConfig* Config; // 0xd8(0x08)
	bool bIsPassiveActivated; // 0xe0(0x01)
	bool bPlayerIsVisible; // 0xe1(0x01)
	char pad_E2[0xe]; // 0xe2(0x0e)

	void ScoutSpawned(struct ATigerFamiliarScout* SpawnedScout); // Function Tiger.TigerFamiliarScoutPassive.ScoutSpawned // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnComponentEndOverlapScanSphere(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerFamiliarScoutPassive.OnComponentEndOverlapScanSphere // (Final|Native|Private) // @ game+0x14491d0
	void OnComponentBeginOverlapScanSphere(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerFamiliarScoutPassive.OnComponentBeginOverlapScanSphere // (Final|Native|Private|HasOutParms) // @ game+0x1448fa0
	void EvaluateVisibility(); // Function Tiger.TigerFamiliarScoutPassive.EvaluateVisibility // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	struct UParticleSystemComponent* CreateOrbitingParticles(); // Function Tiger.TigerFamiliarScoutPassive.CreateOrbitingParticles // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerFeedingAnimationAsset
// Size: 0x4b0 (Inherited: 0x30)
struct UTigerFeedingAnimationAsset : UDataAsset {
	struct FTigerFeedingDataByGender FeedingDataByClan[0x4]; // 0x30(0x480)
};

// Class Tiger.TigerFeedingComponent
// Size: 0x1f8 (Inherited: 0xb0)
struct UTigerFeedingComponent : UActorComponent {
	bool bIsBloodDrained; // 0xb0(0x01)
	bool bIsBeingFedOn; // 0xb1(0x01)
	bool bDidAttackEndFeed; // 0xb2(0x01)
	char pad_B3[0x5]; // 0xb3(0x05)
	struct FMulticastInlineDelegate OnStoppedFeeding; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnFeedingDoneEvent; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnStartedFeedingApproach; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnStartedFeeding; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnFeedingApproachDone; // 0xf8(0x10)
	float MaximumFeedingDistance; // 0x108(0x04)
	int32_t MaxFeedingTicks; // 0x10c(0x04)
	float FeedTickTime; // 0x110(0x04)
	float PartRequiredForBloodDrainedState; // 0x114(0x04)
	float FeedHealthAmount; // 0x118(0x04)
	float TravelSpeed; // 0x11c(0x04)
	int32_t FeedingTicksLeft; // 0x120(0x04)
	int32_t CurrentFeedingTicksLeft; // 0x124(0x04)
	struct TWeakObjectPtr<struct ATigerNPC> DesiredFeedingTarget; // 0x128(0x08)
	struct TWeakObjectPtr<struct ATigerNPC> CurrentTarget; // 0x130(0x08)
	struct UMatineeCameraShake* FeedingCameraShake; // 0x138(0x08)
	struct UTigerFeedingAnimationAsset* FeedingAnimationAsset; // 0x140(0x08)
	float FeedingCameraDecoupleDelay; // 0x148(0x04)
	float ApproachUIProgress; // 0x14c(0x04)
	float CapsuleDistanceCompensator; // 0x150(0x04)
	bool bFeedingDebug; // 0x154(0x01)
	char pad_155[0x7b]; // 0x155(0x7b)
	struct UAnimMontage* FedOnApproachAnim; // 0x1d0(0x08)
	struct UAnimMontage* FedOnFeedingAnim; // 0x1d8(0x08)
	struct UAnimMontage* FedOnDecoupleAnim; // 0x1e0(0x08)
	struct FTimerHandle DecoupleTimerCamera; // 0x1e8(0x08)
	char pad_1F0[0x8]; // 0x1f0(0x08)

	void TigerStartedFeedingApproach__DelegateSignature(float TravelTime); // DelegateFunction Tiger.TigerFeedingComponent.TigerStartedFeedingApproach__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerFeedingMulticastDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerFeedingComponent.TigerFeedingMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateStoppedFeeding__DelegateSignature(bool bWasAttacked); // DelegateFunction Tiger.TigerFeedingComponent.TigerDelegateStoppedFeeding__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Server_StartFeeding(struct ATigerNPC* InTarget, struct FVector InDesiredAttackerFeedingLocation); // Function Tiger.TigerFeedingComponent.Server_StartFeeding // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1449740
	void RestoreFeedingTicks(); // Function Tiger.TigerFeedingComponent.RestoreFeedingTicks // (Final|Native|Public|BlueprintCallable) // @ game+0x1449570
	void OnRep_DesiredFeedingTargetChanged(); // Function Tiger.TigerFeedingComponent.OnRep_DesiredFeedingTargetChanged // (Final|Native|Private) // @ game+0x1449330
	void OnFeedingDoneEvent__DelegateSignature(bool bTargetIsDrained, struct ATigerCharacter* InTargetFedOn); // DelegateFunction Tiger.TigerFeedingComponent.OnFeedingDoneEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Multicast_AttackerAbortFeeding(bool bInWasAttacked); // Function Tiger.TigerFeedingComponent.Multicast_AttackerAbortFeeding // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x14130e0
	bool IsFeeding(); // Function Tiger.TigerFeedingComponent.IsFeeding // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448f70
	bool IsFedOn(); // Function Tiger.TigerFeedingComponent.IsFedOn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448f40
	bool IsDecoupling(); // Function Tiger.TigerFeedingComponent.IsDecoupling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448f10
	bool IsBloodDrained(); // Function Tiger.TigerFeedingComponent.IsBloodDrained // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448ee0
	float GetNormalizedFeedingAmount(); // Function Tiger.TigerFeedingComponent.GetNormalizedFeedingAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448e20
	float GetFeedingProgress(); // Function Tiger.TigerFeedingComponent.GetFeedingProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448df0
	void Client_AttackerAbortFeeding(bool bInWasAttacked); // Function Tiger.TigerFeedingComponent.Client_AttackerAbortFeeding // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1448950
};

// Class Tiger.TigerFindSessionAsync
// Size: 0x108 (Inherited: 0x30)
struct UTigerFindSessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0xb8]; // 0x50(0xb8)

	struct FTigerBpFindSessionSelectedSession SelectSession(struct FTigerBpFindSessionResultList& FindSessionResult, int32_t Index); // Function Tiger.TigerFindSessionAsync.SelectSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1449590
	void ReportMatchFoundSuccessfully(struct FTigerBpFindSessionResultList& InResult); // Function Tiger.TigerFindSessionAsync.ReportMatchFoundSuccessfully // (Final|Native|Protected|HasOutParms) // @ game+0x1449460
	struct UTigerFindSessionAsync* FindSession(struct UObject* WorldContextObject, struct APlayerController* InPlayerController, struct FString InGameModeId, int32_t InGameModeIndex, enum class ESessionType InSessionType); // Function Tiger.TigerFindSessionAsync.FindSession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14489e0
};

// Class Tiger.TigerFirstTimeArchetypeSelectionUI
// Size: 0x480 (Inherited: 0x3c0)
struct UTigerFirstTimeArchetypeSelectionUI : UTigerSceneBackgroundUI {
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x3c0(0x10)
	struct FMulticastInlineDelegate OnSelectedArchetypeChanged; // 0x3d0(0x10)
	struct FName CameraSocketName; // 0x3e0(0x08)
	struct FName AnimationSequenceName; // 0x3e8(0x08)
	struct UAkAudioEvent* CharacterSelectedAudioEvent; // 0x3f0(0x08)
	struct UAkAudioEvent* CharacterHoveredAudioEvent; // 0x3f8(0x08)
	struct UAkAudioEvent* EnterElysiumAudioEvent; // 0x400(0x08)
	enum class ETigerPowerKitType DefaultSelectedArchetype; // 0x408(0x01)
	char pad_409[0x7]; // 0x409(0x07)
	struct TSoftClassPtr<UObject> PaperDollClass; // 0x410(0x28)
	struct ATigerPaperDoll* CachedPaperDollClass; // 0x438(0x08)
	struct ATigerPaperDoll* PaperDoll; // 0x440(0x08)
	int32_t SelectedAppearanceIndex; // 0x448(0x04)
	enum class ETigerPowerKitType SelectedArchetypeType; // 0x44c(0x01)
	char pad_44D[0x3]; // 0x44d(0x03)
	struct UTigerPlayerClanData* CurrentClanData; // 0x450(0x08)
	struct TArray<struct FTigerCharacterAppearance> ArchetypeApperances; // 0x458(0x10)
	char pad_468[0x18]; // 0x468(0x18)

	void PreviewArchetype(struct UTigerPowerKit* InArchetypeData); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.PreviewArchetype // (Final|Native|Protected|BlueprintCallable) // @ game+0x14493d0
	void OnStartGameNative(); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.OnStartGameNative // (Final|Native|Protected|BlueprintCallable) // @ game+0x14493b0
	void OnStartGame(struct FTigerPersistentCharacterID InSelectedCharacterId); // Function Tiger.TigerFirstTimeArchetypeSelectionUI.OnStartGame // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPreloadingDone__DelegateSignature(); // DelegateFunction Tiger.TigerFirstTimeArchetypeSelectionUI.OnPreloadingDone__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void ArchetypeSelectionDelegate__DelegateSignature(struct UTigerPowerKit* InArchetypeData, struct FTigerCharacterAppearance InCharacterAppearance); // DelegateFunction Tiger.TigerFirstTimeArchetypeSelectionUI.ArchetypeSelectionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
};

// Class Tiger.TigerFriend
// Size: 0x158 (Inherited: 0x28)
struct UTigerFriend : UObject {
	struct FMulticastInlineDelegate OnOnlineStatusChanged; // 0x28(0x10)
	struct FMulticastInlineDelegate OnLocationChanged; // 0x38(0x10)
	struct FMulticastInlineDelegate OnPlayerCardLoaded; // 0x48(0x10)
	struct FString DISPLAYNAME; // 0x58(0x10)
	struct FTigerPersistentPlayerID PlayerId; // 0x68(0x10)
	struct FSharkUserId SharkmobUserId; // 0x78(0x10)
	struct FString PlatformUserId; // 0x88(0x10)
	enum class EShAccountChannel Channel; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
	struct FString Location; // 0xa0(0x10)
	char pad_B0[0x8]; // 0xb0(0x08)
	struct FString PlayerLevel; // 0xb8(0x10)
	struct FString CardDataString; // 0xc8(0x10)
	char pad_D8[0x80]; // 0xd8(0x80)

	void OnPlayerCardLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerFriend.OnPlayerCardLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnOnlineStatusChanged__DelegateSignature(bool bInOnline); // DelegateFunction Tiger.TigerFriend.OnOnlineStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnLocationChanged__DelegateSignature(struct FString InLocation); // DelegateFunction Tiger.TigerFriend.OnLocationChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	struct FSharkUserId GetSharkmobUserId(); // Function Tiger.TigerFriend.GetSharkmobUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d8e0
	int32_t GetPlayerLevel(); // Function Tiger.TigerFriend.GetPlayerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d880
	struct FTigerPersistentPlayerID GetPlayerId(); // Function Tiger.TigerFriend.GetPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d840
	enum class EShAccountChannel GetPlayerChannel(); // Function Tiger.TigerFriend.GetPlayerChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d7e0
	struct FString GetPlatformUserId(); // Function Tiger.TigerFriend.GetPlatformUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d7a0
	bool GetOnline(); // Function Tiger.TigerFriend.GetOnline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d770
	struct FString GetLocation(); // Function Tiger.TigerFriend.GetLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d700
	bool GetIsSharkmobFriend(); // Function Tiger.TigerFriend.GetIsSharkmobFriend // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448ee0
	struct FString GetDisplayName(); // Function Tiger.TigerFriend.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d420
	struct FTigerCharacterCardData GetCardData(); // Function Tiger.TigerFriend.GetCardData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d2a0
	bool CouldRemove(); // Function Tiger.TigerFriend.CouldRemove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1448ee0
	bool CouldInviteToParty(); // Function Tiger.TigerFriend.CouldInviteToParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d1b0
};

// Class Tiger.TigerFriendInvite
// Size: 0x120 (Inherited: 0x28)
struct UTigerFriendInvite : UObject {
	struct FMulticastInlineDelegate OnPlayerCardLoaded; // 0x28(0x10)
	struct FString DISPLAYNAME; // 0x38(0x10)
	struct FTigerPersistentPlayerID PlayerId; // 0x48(0x10)
	struct FSharkUserId SharkmobUserId; // 0x58(0x10)
	struct FString PlatformUserId; // 0x68(0x10)
	enum class EShAccountChannel Channel; // 0x78(0x01)
	char pad_79[0x7]; // 0x79(0x07)
	struct FString PlayerLevel; // 0x80(0x10)
	struct FString CardDataString; // 0x90(0x10)
	char pad_A0[0x80]; // 0xa0(0x80)

	void OnPlayerCardLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerFriendInvite.OnPlayerCardLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	int32_t GetPlayerLevel(); // Function Tiger.TigerFriendInvite.GetPlayerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d8b0
	struct FString GetDisplayName(); // Function Tiger.TigerFriendInvite.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d460
	struct FTigerCharacterCardData GetCardData(); // Function Tiger.TigerFriendInvite.GetCardData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d310
};

// Class Tiger.TigerFriendService
// Size: 0x1c0 (Inherited: 0x28)
struct UTigerFriendService : UObject {
	char pad_28[0x198]; // 0x28(0x198)
};

// Class Tiger.TigerFriendSubsystem
// Size: 0x1b8 (Inherited: 0x30)
struct UTigerFriendSubsystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)
	struct TArray<struct UTigerFriend*> Friends; // 0x50(0x10)
	struct TArray<struct UTigerFriendInvite*> Invites; // 0x60(0x10)
	enum class ETigerOnlineServiceStatus ServiceStatus; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
	struct TArray<struct FTigerPersistentPlayerID> BlockedPlayers; // 0x78(0x10)
	struct TArray<struct FTigerPersistentPlayerID> MutedPlayers; // 0x88(0x10)
	char pad_98[0xf0]; // 0x98(0xf0)
	struct UTigerPresenceSubsystem* PresenceSubsystem; // 0x188(0x08)
	char pad_190[0x10]; // 0x190(0x10)
	struct FString FriendSubsystemType; // 0x1a0(0x10)
	struct UTigerFriendSubsystemImpl* Impl; // 0x1b0(0x08)

	void TigerFriendSetServiceStatus(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerFriendSubsystem.TigerFriendSetServiceStatus // (Final|Exec|Native|Public) // @ game+0x1413ff0
	void TigerFriendListFriends(); // Function Tiger.TigerFriendSubsystem.TigerFriendListFriends // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerDebugUnmutePlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugUnmutePlayer // (Final|Exec|Native|Protected) // @ game+0x1413530
	void TigerDebugUnblockPlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugUnblockPlayer // (Final|Exec|Native|Protected) // @ game+0x1413530
	void TigerDebugMutePlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugMutePlayer // (Final|Exec|Native|Protected) // @ game+0x1413530
	void TigerDebugBlockPlayer(struct FString InPlayerId); // Function Tiger.TigerFriendSubsystem.TigerDebugBlockPlayer // (Final|Exec|Native|Protected) // @ game+0x1413530
	void SortFriends(); // Function Tiger.TigerFriendSubsystem.SortFriends // (Final|Native|Public|BlueprintCallable) // @ game+0x144e3a0
	void SetPlayerMuteStatus(struct FTigerPersistentPlayerID& InPlayerId, bool bInMute); // Function Tiger.TigerFriendSubsystem.SetPlayerMuteStatus // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x144e2a0
	void SendInvite(struct FSharkUserId& InInviteeSharkmobUserId, struct FTigerPersistentPlayerID& InInviteePlayerId); // Function Tiger.TigerFriendSubsystem.SendInvite // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x144e180
	void SendChatNotification(struct FString InRecipientPlayerId, struct FString InChatNotificationCommand); // Function Tiger.TigerFriendSubsystem.SendChatNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x144e080
	void SearchPlayer(struct FString InUsername); // Function Tiger.TigerFriendSubsystem.SearchPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x144dfe0
	void RemoveFriend(struct FSharkUserId& InFriendSharkmobUserId); // Function Tiger.TigerFriendSubsystem.RemoveFriend // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x144df30
	void RejectInvite(struct FSharkUserId& InFromSharkmobUserId); // Function Tiger.TigerFriendSubsystem.RejectInvite // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x144de80
	void OnPlayerToPlayerStatusChanged__DelegateSignature(struct FTigerPersistentPlayerID& InPlayerId, bool bInBool); // DelegateFunction Tiger.TigerFriendSubsystem.OnPlayerToPlayerStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnPlayersPresenceChange(struct TArray<struct FTigerPlayerPresenceInfo>& InPlayersPresenceInfo); // Function Tiger.TigerFriendSubsystem.OnPlayersPresenceChange // (Final|Native|Private|HasOutParms) // @ game+0x144dda0
	void OnPlayerPresenceChange(struct FTigerPlayerPresenceInfo& InPlayerPresenceInfo); // Function Tiger.TigerFriendSubsystem.OnPlayerPresenceChange // (Final|Native|Private|HasOutParms) // @ game+0x144dce0
	void LoadInvites(); // Function Tiger.TigerFriendSubsystem.LoadInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x144dcc0
	void LoadFriends(); // Function Tiger.TigerFriendSubsystem.LoadFriends // (Final|Native|Public|BlueprintCallable) // @ game+0x144dca0
	bool IsMuted(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerFriendSubsystem.IsMuted // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x144dbe0
	bool IsFriendOrInvited(struct FSharkUserId& InSharkmobUserId); // Function Tiger.TigerFriendSubsystem.IsFriendOrInvited // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x144dac0
	bool IsFriend(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerFriendSubsystem.IsFriend // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x144da00
	bool IsBlocked(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerFriendSubsystem.IsBlocked // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d940
	int32_t GetNumFriendsOnline(); // Function Tiger.TigerFriendSubsystem.GetNumFriendsOnline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d740
	bool GetIsEnabled(); // Function Tiger.TigerFriendSubsystem.GetIsEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d6d0
	struct FText GetInvitesUnsupportedReason(); // Function Tiger.TigerFriendSubsystem.GetInvitesUnsupportedReason // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d630
	enum class ETigerFriendLoadStatus GetInvitesLoadStatus(); // Function Tiger.TigerFriendSubsystem.GetInvitesLoadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d600
	enum class ETigerFriendLoadStatus GetFriendsLoadStatus(); // Function Tiger.TigerFriendSubsystem.GetFriendsLoadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d4a0
	struct FText GetDisabledReason(); // Function Tiger.TigerFriendSubsystem.GetDisabledReason // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d380
	bool GetAreInvitesSupported(); // Function Tiger.TigerFriendSubsystem.GetAreInvitesSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d270
	void AcceptInvite(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerFriendSubsystem.AcceptInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x144d0c0
};

// Class Tiger.TigerFriendSubsystemImpl
// Size: 0x30 (Inherited: 0x28)
struct UTigerFriendSubsystemImpl : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Tiger.TigerFriendSubsystemMockImpl
// Size: 0x30 (Inherited: 0x30)
struct UTigerFriendSubsystemMockImpl : UTigerFriendSubsystemImpl {
};

// Class Tiger.TigerFriendSubsystemSharkmobImpl
// Size: 0xa0 (Inherited: 0x30)
struct UTigerFriendSubsystemSharkmobImpl : UTigerFriendSubsystemImpl {
	char pad_30[0x8]; // 0x30(0x08)
	struct UTigerFriendService* FriendService; // 0x38(0x08)
	struct UTigerGetSharkmobAccountIdsBatcher* GetSharkmobAccountIdsBatcher; // 0x40(0x08)
	char pad_48[0x58]; // 0x48(0x58)

	void TigerFriendReadPlatformFriends(); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendReadPlatformFriends // (Final|Exec|Native|Public) // @ game+0x144e4a0
	void TigerFriendGetUserInfo(struct FString InOpenId); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendGetUserInfo // (Final|Exec|Native|Public) // @ game+0x144e400
	void TigerFriendForceReloadInvites(); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendForceReloadInvites // (Final|Exec|Native|Public) // @ game+0x144e3e0
	void TigerFriendForceReloadFriends(); // Function Tiger.TigerFriendSubsystemSharkmobImpl.TigerFriendForceReloadFriends // (Final|Exec|Native|Public) // @ game+0x144e3c0
};

// Class Tiger.TigerFullscreenFXManager
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerFullscreenFXManager : UActorComponent {
	struct ATigerPlayerController* Controller; // 0xb0(0x08)
	char pad_B8[0x8]; // 0xb8(0x08)
	struct UMaterial* TimedPostFXMaterial; // 0xc0(0x08)
	struct UMaterialParameterCollection* TimedPostFXCollection; // 0xc8(0x08)
	struct FName TimedPostFXCollectionName; // 0xd0(0x08)
	char pad_D8[0x18]; // 0xd8(0x18)
};

// Class Tiger.TigerGameActivitySubsystem
// Size: 0x48 (Inherited: 0x30)
struct UTigerGameActivitySubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnSoloOrGroupGameActivityRequestedWhileStayingInElysium; // 0x30(0x10)
	char pad_40[0x8]; // 0x40(0x08)

	void SoloOrGroupGameActivityRequestedWhileStayingInElysium__DelegateSignature(enum class ETigerGameActivityType InGameActivityType); // DelegateFunction Tiger.TigerGameActivitySubsystem.SoloOrGroupGameActivityRequestedWhileStayingInElysium__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void HandleTutorialStarted(); // Function Tiger.TigerGameActivitySubsystem.HandleTutorialStarted // (Final|Native|Protected) // @ game+0x144d920
};

// Class Tiger.TigerGameActivityStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerGameActivityStatics : UBlueprintFunctionLibrary {

	bool GetGameModeIdForActivity(struct UObject* InWorldContextObject, enum class ETigerGameActivityType InGameActivityType, struct FString& OutGameModeId); // Function Tiger.TigerGameActivityStatics.GetGameModeIdForActivity // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x144d4d0
};

// Class Tiger.TigerGameFlowState
// Size: 0x40 (Inherited: 0x30)
struct UTigerGameFlowState : UBlueprintAsyncActionBase {
	char pad_30[0x10]; // 0x30(0x10)

	void OnEnter(); // Function Tiger.TigerGameFlowState.OnEnter // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct ATigerPlayerController* GetPlayerController(); // Function Tiger.TigerGameFlowState.GetPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d810
};

// Class Tiger.TigerGameFlowStateMap
// Size: 0x80 (Inherited: 0x30)
struct UTigerGameFlowStateMap : UDataAsset {
	struct TMap<struct UTigerGameFlowState*, struct UTigerGameFlowState*> FlowStateMap; // 0x30(0x50)
};

// Class Tiger.TigerGameFlowStateBoot
// Size: 0x80 (Inherited: 0x40)
struct UTigerGameFlowStateBoot : UTigerGameFlowState {
	struct FMulticastInlineDelegate OnLaunchTutorial; // 0x40(0x10)
	struct FMulticastInlineDelegate OnEnterElysiumFirstTime; // 0x50(0x10)
	struct FMulticastInlineDelegate OnEnterElysium; // 0x60(0x10)
	struct FMulticastInlineDelegate OnPreloadingDone; // 0x70(0x10)

	bool IsLandingPageEnabled(); // Function Tiger.TigerGameFlowStateBoot.IsLandingPageEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144dbb0
	bool IsIntroEnabled(); // Function Tiger.TigerGameFlowStateBoot.IsIntroEnabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144db80
	struct UTigerGameFlowStateBoot* EnterBoot(struct UObject* InWorldContextObject); // Function Tiger.TigerGameFlowStateBoot.EnterBoot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x144d1e0
	bool CommandlineSkipTutorial(); // Function Tiger.TigerGameFlowStateBoot.CommandlineSkipTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d180
	bool CommandlineForceTutorial(); // Function Tiger.TigerGameFlowStateBoot.CommandlineForceTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x144d150
};

// Class Tiger.TigerGameGCClusterSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerGameGCClusterSubSystem : UGameInstanceSubsystem {
	char pad_30[0x8]; // 0x30(0x08)
	struct TArray<struct AActor*> CurrentActorsToProcess; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)

	void FillClusterFromLevels(); // Function Tiger.TigerGameGCClusterSubSystem.FillClusterFromLevels // (Final|Native|Public) // @ game+0x1451a90
};

// Class Tiger.TigerExpRequirements
// Size: 0x40 (Inherited: 0x28)
struct UTigerExpRequirements : UObject {
	struct FTigerExpLevelRequirements ExpLevelRequirements; // 0x28(0x18)

	int32_t GetSeasonLevelCount(); // Function Tiger.TigerExpRequirements.GetSeasonLevelCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452420
	int32_t GetLevelFromExp(int32_t Exp); // Function Tiger.TigerExpRequirements.GetLevelFromExp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452130
	int32_t GetExpFromLevel(int32_t Level); // Function Tiger.TigerExpRequirements.GetExpFromLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452020
	bool ClampAtMaxLevel(); // Function Tiger.TigerExpRequirements.ClampAtMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x9501a0
};

// Class Tiger.TigerPreloadedNiagaraSystems
// Size: 0x68 (Inherited: 0x30)
struct UTigerPreloadedNiagaraSystems : UDataAsset {
	struct FMulticastInlineDelegate OnLoadedAllAssetsEvent; // 0x30(0x10)
	struct TArray<struct TSoftObjectPtr<UNiagaraSystem>> Systems; // 0x40(0x10)
	char pad_50[0x18]; // 0x50(0x18)
};

// Class Tiger.TigerPreloadedClasses
// Size: 0x38 (Inherited: 0x28)
struct UTigerPreloadedClasses : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerGameModeLoadingScreens
// Size: 0x80 (Inherited: 0x30)
struct UTigerGameModeLoadingScreens : UDataAsset {
	struct TMap<struct TSoftClassPtr<UObject>, struct UTigerLoadingScreenAsset*> LoadingScreenAssets; // 0x30(0x50)
};

// Class Tiger.TigerGCClusterObject
// Size: 0x28 (Inherited: 0x28)
struct UTigerGCClusterObject : UObject {
};

// Class Tiger.TigerGameInstance
// Size: 0xa00 (Inherited: 0x1a8)
struct UTigerGameInstance : UGameInstance {
	struct UAkAudioEvent* MusicPlayAkEvent; // 0x1a8(0x08)
	struct FMulticastInlineDelegate OnTitleScreenClosed; // 0x1b0(0x10)
	struct FMulticastInlineDelegate OnGameStateSetEvent; // 0x1c0(0x10)
	struct FMulticastInlineDelegate OnGameModesUpdated; // 0x1d0(0x10)
	struct FMulticastInlineDelegate OnRankConfigSet; // 0x1e0(0x10)
	struct FString JoinErrorString; // 0x1f0(0x10)
	enum class ETigerGameActivityType ForceGameActivityOnJoiningElysium; // 0x200(0x01)
	char pad_201[0xf]; // 0x201(0x0f)
	struct TSoftClassPtr<UObject> DisciplineConfigsClassPtr; // 0x210(0x28)
	struct UObject* DisciplineConfigsClass; // 0x238(0x08)
	struct TArray<struct UTigerPlayerClanData*> AvailablePlayerClans; // 0x240(0x10)
	struct UTigerExpRequirements* SeasonExpRequirements; // 0x250(0x08)
	struct UTigerExpRequirements* ArchetypeExpRequirements; // 0x258(0x08)
	struct UTigerExpRequirements* PlayerExpRequirements; // 0x260(0x08)
	struct UTigerTitleListAsset* TitleList; // 0x268(0x08)
	struct UTigerOnlineStatusMessages* OnlineStatusMessagesClass; // 0x270(0x08)
	struct UTigerSaveGame* CurrentSaveGame; // 0x278(0x08)
	struct UTigerPreloadedNiagaraSystems* PreloadedNiagaraSystems; // 0x280(0x08)
	struct UTigerLoadingScreenUI* LoadingScreen; // 0x288(0x08)
	struct FMulticastInlineDelegate OnLoadingScreenFullyOpaque; // 0x290(0x10)
	char pad_2A0[0x50]; // 0x2a0(0x50)
	struct TArray<struct UTigerCharacterPreset*> BotCharacterPresets; // 0x2f0(0x10)
	bool bBotsIgnorePlayer; // 0x300(0x01)
	bool bEnableBotsAsClients; // 0x301(0x01)
	bool bOnlyBotsAliveEndsMatch; // 0x302(0x01)
	bool bIsJoiningMatch; // 0x303(0x01)
	bool bHasShownTitleScreen; // 0x304(0x01)
	bool bIsRetryingTutorial; // 0x305(0x01)
	char pad_306[0x2]; // 0x306(0x02)
	struct FString BotAutoJoinServer; // 0x308(0x10)
	int32_t LoadingScreenZValue; // 0x318(0x04)
	char pad_31C[0x4]; // 0x31c(0x04)
	struct TSoftClassPtr<UObject> BlackLoadingScreenWidget; // 0x320(0x28)
	struct UTigerGameModeLoadingScreens* GameModeLoadingScreens; // 0x348(0x08)
	struct UDataTable* SoftCurrencies; // 0x350(0x08)
	struct FMulticastInlineDelegate OnFindMatchFailed; // 0x358(0x10)
	struct UTigerGeneralUserSettings* GeneralUserSettingsClass; // 0x368(0x08)
	struct UTigerGeneralUserSettings* GeneralUserSettings; // 0x370(0x08)
	struct UTigerSessionSeeker* SessionSeekerClass; // 0x378(0x08)
	struct UTigerQuestCollection* QuestCollection; // 0x380(0x08)
	struct UTigerMasterChallengesConfigAsset* MasteryChallenges; // 0x388(0x08)
	struct UTigerTestChallengesConfigAsset* TestChallenges; // 0x390(0x08)
	struct UTigerMatchStatMedalRequirements* MatchStatMedalRequirements; // 0x398(0x08)
	struct UTigerRankConfigAsset* RankConfig; // 0x3a0(0x08)
	struct UTigerPartyService* PartyService; // 0x3a8(0x08)
	struct UTigerPlayerDataService* PlayerDataService; // 0x3b0(0x08)
	struct UTigerConfigService* ConfigService; // 0x3b8(0x08)
	struct UTigerInboxService* InboxService; // 0x3c0(0x08)
	struct UTigerStoreService* StoreService; // 0x3c8(0x08)
	struct UTigerConsoleService* ConsoleService; // 0x3d0(0x08)
	char pad_3D8[0x8]; // 0x3d8(0x08)
	struct UTigerPremiumCurrencyManager* PremiumCurrencyManager; // 0x3e0(0x08)
	struct TWeakObjectPtr<struct UTigerWidget> SoftwareCursor; // 0x3e8(0x08)
	struct UTigerPartyManager* PartyManager; // 0x3f0(0x08)
	struct UTigerAuthenticationManager* AuthenticationManager; // 0x3f8(0x08)
	struct UTigerTelemetryEventHandler* TelemetryEventHandler; // 0x400(0x08)
	struct ATigerStatisticsGatherer* StatisticsGatherer; // 0x408(0x08)
	struct UTigerPushConnectionManager* PushConnectionManager; // 0x410(0x08)
	struct UTigerPlatformEntitlementsManager* PlatformEntitlementsManager; // 0x418(0x08)
	struct UTigerGameModesConfigCache* GameModesConfigCache; // 0x420(0x08)
	struct UTigerArchetypeRewardData* ArchetypePerkRewards; // 0x428(0x08)
	char pad_430[0x108]; // 0x430(0x108)
	struct UTigerPreloadedClasses* PreloadedClasses; // 0x538(0x08)
	enum class ETigerGroupingMode LastSelectedGroupingMode; // 0x540(0x01)
	char pad_541[0x3]; // 0x541(0x03)
	int32_t LastPlayedMatchGameModeIndex; // 0x544(0x04)
	struct FString LastPlayedMatchGameModeId; // 0x548(0x10)
	struct TMap<struct FString, enum class ETigerTelemetryMapIds> MapNamesToMapIDs; // 0x558(0x50)
	struct FString SharkmobUserName; // 0x5a8(0x10)
	struct UDataTable* BotNameTable; // 0x5b8(0x08)
	char pad_5C0[0x28]; // 0x5c0(0x28)
	struct UTigerDsBackendAgent* DsBackendAgent; // 0x5e8(0x08)
	struct USharkAccounts* AccountSystem; // 0x5f0(0x08)
	struct TArray<struct UTigerAmmoAsset*> AmmoPickupItems; // 0x5f8(0x10)
	struct TArray<struct UTigerPersistentPlayerState*> PlayerStatesToCheckForUnownedItems; // 0x608(0x10)
	struct FTigerSeasonConfig ClientSeasonConfig; // 0x618(0x360)
	char pad_978[0x18]; // 0x978(0x18)
	struct UTigerSessionSeeker* SessionSeeker; // 0x990(0x08)
	char pad_998[0x58]; // 0x998(0x58)
	struct UTigerEventSystem* EventSystem; // 0x9f0(0x08)
	char pad_9F8[0x8]; // 0x9f8(0x08)

	void WaitForCurrentMatchStats(int32_t TimeoutSecs, struct FDelegate& Delegate); // Function Tiger.TigerGameInstance.WaitForCurrentMatchStats // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1452950
	bool TravelToSession(struct FString InSessionURL, enum class ESessionType& InSessionType); // Function Tiger.TigerGameInstance.TravelToSession // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1452850
	void TransferToPartyElysium(); // Function Tiger.TigerGameInstance.TransferToPartyElysium // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void TransferToElysium(); // Function Tiger.TigerGameInstance.TransferToElysium // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ToggleTutorialMenu(); // Function Tiger.TigerGameInstance.ToggleTutorialMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ToggleMatchMeny(); // Function Tiger.TigerGameInstance.ToggleMatchMeny // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void TigerSetPlatformType(enum class ESharkPlatformType InPlatformType); // Function Tiger.TigerGameInstance.TigerSetPlatformType // (Final|Exec|Native|Public|Const) // @ game+0x1413ff0
	void TigerSetDemoCinematicOutfit(struct FString InOutfitName); // Function Tiger.TigerGameInstance.TigerSetDemoCinematicOutfit // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerSetDemoAppearanceItemById(struct FString InDatabaseId); // Function Tiger.TigerGameInstance.TigerSetDemoAppearanceItemById // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerSetDemoAppearance(struct FString AppearanceText); // Function Tiger.TigerGameInstance.TigerSetDemoAppearance // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerResetDemoAppearance(); // Function Tiger.TigerGameInstance.TigerResetDemoAppearance // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerOnTitleScreenClosed__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.TigerOnTitleScreenClosed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnRankConfigSet__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.TigerOnRankConfigSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerFakeGameActivity(struct FString InGameActivityType); // Function Tiger.TigerGameInstance.TigerFakeGameActivity // (Final|Exec|Native|Public) // @ game+0x1414560
	void TigerDemoPlay(struct FString InRecordingName); // Function Tiger.TigerGameInstance.TigerDemoPlay // (Final|Exec|Native|Public) // @ game+0x1413530
	void StartPushConnection(); // Function Tiger.TigerGameInstance.StartPushConnection // (Final|Native|Public|BlueprintCallable) // @ game+0x1452830
	void ShowPostMatchScreen(bool bInShouldLeaveParty); // Function Tiger.TigerGameInstance.ShowPostMatchScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	bool ShouldDebugGameFlow(); // Function Tiger.TigerGameInstance.ShouldDebugGameFlow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452810
	void SetLastPlayedMatchGameMode(struct FString InLastPlayedMatchGameModeId, int32_t InLastPlayedMatchGameModeIndex); // Function Tiger.TigerGameInstance.SetLastPlayedMatchGameMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1452730
	void ReturnToElysium(); // Function Tiger.TigerGameInstance.ReturnToElysium // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ReturnToCharacterSelectionDispatcher(); // Function Tiger.TigerGameInstance.ReturnToCharacterSelectionDispatcher // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ReturnToBootWithError(struct FString InError); // Function Tiger.TigerGameInstance.ReturnToBootWithError // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void RetryTutorial(); // Function Tiger.TigerGameInstance.RetryTutorial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ReceivePartyInvitation(struct UTigerPartyInvite* Invite, struct UTigerUser* Host); // Function Tiger.TigerGameInstance.ReceivePartyInvitation // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void ReceiveInvitation(struct FTigerGroupInvitation& Invitation, struct ATigerPlayerState* Inviter); // Function Tiger.TigerGameInstance.ReceiveInvitation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void PostLoadMapWithWorld(); // Function Tiger.TigerGameInstance.PostLoadMapWithWorld // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void PostEndOfLoadingTelemetry(); // Function Tiger.TigerGameInstance.PostEndOfLoadingTelemetry // (Final|Native|Public|BlueprintCallable) // @ game+0x1452710
	void OnWinScreenShown(); // Function Tiger.TigerGameInstance.OnWinScreenShown // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnMatchStatsReceivedMulticastDelegate__DelegateSignature(bool bTimedOut); // DelegateFunction Tiger.TigerGameInstance.OnMatchStatsReceivedMulticastDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnMatchStatsReceivedDelegate__DelegateSignature(bool bTimedOut); // DelegateFunction Tiger.TigerGameInstance.OnMatchStatsReceivedDelegate__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void OnLoadingScreenHidden(); // Function Tiger.TigerGameInstance.OnLoadingScreenHidden // (Final|Native|Public|BlueprintCallable) // @ game+0x14526f0
	void OnLoadingScreenFullyOpaque__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.OnLoadingScreenFullyOpaque__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnGameStateSet__DelegateSignature(struct ATigerGameState* InGameState); // DelegateFunction Tiger.TigerGameInstance.OnGameStateSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnGameModesUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.OnGameModesUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnFindMatchFailed__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.OnFindMatchFailed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void LaunchTutorialNative(); // Function Tiger.TigerGameInstance.LaunchTutorialNative // (Final|Native|Public|BlueprintCallable) // @ game+0x14526d0
	void LaunchTransferFromMatch(); // Function Tiger.TigerGameInstance.LaunchTransferFromMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x14526b0
	void KickToLoginScreen(); // Function Tiger.TigerGameInstance.KickToLoginScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void JoinSessionThroughUrl(struct FString SessionURL); // Function Tiger.TigerGameInstance.JoinSessionThroughUrl // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsJoiningMatch(); // Function Tiger.TigerGameInstance.IsJoiningMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452690
	bool IsAllowedToOpenMainMenu(); // Function Tiger.TigerGameInstance.IsAllowedToOpenMainMenu // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool HasCurrentMatchStats(); // Function Tiger.TigerGameInstance.HasCurrentMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452660
	bool HasCompletedBattlepass(int32_t InCurrentSeasonLevel); // Function Tiger.TigerGameInstance.HasCompletedBattlepass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14525c0
	void HandleOnDisplaySettingsApplied(); // Function Tiger.TigerGameInstance.HandleOnDisplaySettingsApplied // (Final|Native|Private) // @ game+0x14525a0
	struct ATigerWeatherController* GetWeatherController(); // Function Tiger.TigerGameInstance.GetWeatherController // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1452570
	struct UTigerVoipTalkerState* GetVoipTalkerState(); // Function Tiger.TigerGameInstance.GetVoipTalkerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452520
	struct FLinearColor GetUIColor(enum class ETigerUIColor UIColor, enum class ETigerColourSpace ColorSpace); // Function Tiger.TigerGameInstance.GetUIColor // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	struct UTigerTitleListAsset* GetTitleList(); // Function Tiger.TigerGameInstance.GetTitleList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452500
	struct UTigerTestChallengesConfigAsset* GetTestChallengeConfig(); // Function Tiger.TigerGameInstance.GetTestChallengeConfig // (Final|Native|Public|Const) // @ game+0x14524e0
	struct UTigerTelemetryEventHandler* GetTelemetryEventHandler(); // Function Tiger.TigerGameInstance.GetTelemetryEventHandler // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14524b0
	struct ATigerStatisticsGatherer* GetStatisticsGatherer(); // Function Tiger.TigerGameInstance.GetStatisticsGatherer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452480
	struct FString GetSharkmobUserName(); // Function Tiger.TigerGameInstance.GetSharkmobUserName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452450
	struct UTigerExpRequirements* GetSeasonExpRequirements(); // Function Tiger.TigerGameInstance.GetSeasonExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452400
	struct FDateTime GetSeasonEndDate(); // Function Tiger.TigerGameInstance.GetSeasonEndDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14523c0
	struct TSoftObjectPtr<UTexture2D> GetSeasonBannerTexture(); // Function Tiger.TigerGameInstance.GetSeasonBannerTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14522d0
	struct UTigerRankConfigAsset* GetRankConfig(); // Function Tiger.TigerGameInstance.GetRankConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14522b0
	struct UTigerQuestCollection* GetQuestCollection(); // Function Tiger.TigerGameInstance.GetQuestCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452290
	struct UTigerPremiumCurrencyManager* GetPremiumCurrencyManager(); // Function Tiger.TigerGameInstance.GetPremiumCurrencyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452260
	struct UTigerExpRequirements* GetPlayerExpRequirements(); // Function Tiger.TigerGameInstance.GetPlayerExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452240
	struct UTigerPartyManager* GetPartyManager(); // Function Tiger.TigerGameInstance.GetPartyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452210
	struct UTigerMatchStatMedalRequirements* GetMatchStatMedalRequirements(); // Function Tiger.TigerGameInstance.GetMatchStatMedalRequirements // (Final|Native|Public|Const) // @ game+0x14521f0
	struct UTigerMasterChallengesConfigAsset* GetMasteryChallengeConfig(); // Function Tiger.TigerGameInstance.GetMasteryChallengeConfig // (Final|Native|Public|Const) // @ game+0x14521d0
	struct FTigerMatchStats GetLastMatchStats(); // Function Tiger.TigerGameInstance.GetLastMatchStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14520f0
	bool GetHasSetRankConfig(); // Function Tiger.TigerGameInstance.GetHasSetRankConfig // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14520c0
	struct UTigerEventSystem* GetEventSystem(); // Function Tiger.TigerGameInstance.GetEventSystem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1452000
	struct FString GetDefaultPartyGameModeId(); // Function Tiger.TigerGameInstance.GetDefaultPartyGameModeId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451f80
	struct FTigerCharacterAppearance GetDefaultCharacterAppearanceForArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetDefaultCharacterAppearanceForArchetype // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451ee0
	enum class ESessionType GetCurrentSessionType(); // Function Tiger.TigerGameInstance.GetCurrentSessionType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451eb0
	enum class ETigerClan GetClanTypeFromArchetypeType(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetClanTypeFromArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451e20
	struct UTigerPlayerClanData* GetClanDataFromArchetypeType(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetClanDataFromArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451d90
	struct UTigerPlayerClanData* GetClanData(enum class ETigerClan Clan); // Function Tiger.TigerGameInstance.GetClanData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451d00
	struct FDateTime GetBattlepassStartDate(); // Function Tiger.TigerGameInstance.GetBattlepassStartDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451c90
	struct FTigerItemId GetBattlepassItemId(); // Function Tiger.TigerGameInstance.GetBattlepassItemId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451c70
	struct FDateTime GetBattlepassEndDate(); // Function Tiger.TigerGameInstance.GetBattlepassEndDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451c30
	enum class ETigerBattlepassActiveState GetBattlepassActiveState(); // Function Tiger.TigerGameInstance.GetBattlepassActiveState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451c00
	struct TArray<struct UTigerPlayerClanData*> GetAvailableClans(); // Function Tiger.TigerGameInstance.GetAvailableClans // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451b80
	struct UTigerAuthenticationManager* GetAuthenticationManager(); // Function Tiger.TigerGameInstance.GetAuthenticationManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451b60
	struct UTigerArchetypeRewardData* GetArchetypePerkRewards(); // Function Tiger.TigerGameInstance.GetArchetypePerkRewards // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451b40
	struct UTigerExpRequirements* GetArchetypeExpRequirements(); // Function Tiger.TigerGameInstance.GetArchetypeExpRequirements // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13cde60
	struct UTigerPowerKit* GetArchetypeData(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerGameInstance.GetArchetypeData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451ab0
	void GameStateSet(); // Function Tiger.TigerGameInstance.GameStateSet // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void DebugOnWorldCleanup(struct UWorld* World, bool bSessionEnded, bool bCleanupResources); // Function Tiger.TigerGameInstance.DebugOnWorldCleanup // (Final|Native|Protected) // @ game+0x1451980
	void DebugOnWorldBeginTearDown(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnWorldBeginTearDown // (Final|Native|Protected) // @ game+0x14518f0
	void DebugOnStreamingStarted(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerGameInstance.DebugOnStreamingStarted // (Final|Native|Protected) // @ game+0x14518f0
	void DebugOnPreWorldFinishDestroy(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnPreWorldFinishDestroy // (Final|Native|Protected) // @ game+0x14518f0
	void DebugOnPostWorldCreation(struct UWorld* World); // Function Tiger.TigerGameInstance.DebugOnPostWorldCreation // (Final|Native|Protected) // @ game+0x14518f0
	void DebugOnPostWorldCleanUp(struct UWorld* World, bool bSessionEnded, bool bCleanupResources); // Function Tiger.TigerGameInstance.DebugOnPostWorldCleanUp // (Final|Native|Protected) // @ game+0x1451980
	void DebugOnMapPreLoad(struct FString InNameOfMapToLoad); // Function Tiger.TigerGameInstance.DebugOnMapPreLoad // (Final|Native|Protected) // @ game+0x1413530
	void DebugOnMapPostLoad(struct UWorld* InNewWorld); // Function Tiger.TigerGameInstance.DebugOnMapPostLoad // (Final|Native|Protected) // @ game+0x14518f0
	void DebugOnInitialStreamingFinished(); // Function Tiger.TigerGameInstance.DebugOnInitialStreamingFinished // (Final|Native|Protected) // @ game+0xb64580
	void DebugOnGameStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerGameInstance.DebugOnGameStateChanged // (Final|Native|Protected) // @ game+0x1451820
	void DebugOnCharacterStartedLoading(); // Function Tiger.TigerGameInstance.DebugOnCharacterStartedLoading // (Final|Native|Protected) // @ game+0xb64580
	void DebugOnCharacterFinishedLoading(); // Function Tiger.TigerGameInstance.DebugOnCharacterFinishedLoading // (Final|Native|Protected) // @ game+0xb64580
	void CreateLoadingScreenForGameMode(struct TSoftClassPtr<UObject> InGameModePath, float InFadeInTime); // Function Tiger.TigerGameInstance.CreateLoadingScreenForGameMode // (Final|Native|Public|BlueprintCallable) // @ game+0x14516d0
	void CreateBlackLoadingScreen(); // Function Tiger.TigerGameInstance.CreateBlackLoadingScreen // (Final|Native|Protected|BlueprintCallable) // @ game+0x14516b0
	void CloseWinScreen(); // Function Tiger.TigerGameInstance.CloseWinScreen // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void CloseMatchMenu(); // Function Tiger.TigerGameInstance.CloseMatchMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void CheckOnlyBotsAliveEndsMatch(); // Function Tiger.TigerGameInstance.CheckOnlyBotsAliveEndsMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x1451690
	void CheckForBotsAsClients(); // Function Tiger.TigerGameInstance.CheckForBotsAsClients // (Final|Native|Public|BlueprintCallable) // @ game+0x1451670
	void CheckBotsIgnorePlayer(); // Function Tiger.TigerGameInstance.CheckBotsIgnorePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1451650
	void Cheat_QuitTutorial(); // Function Tiger.TigerGameInstance.Cheat_QuitTutorial // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void CharacterCustomizationLoadingStarted__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.CharacterCustomizationLoadingStarted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void CharacterCustomizationLoadingFinished__DelegateSignature(); // DelegateFunction Tiger.TigerGameInstance.CharacterCustomizationLoadingFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void CallOnTitleScreenClosed(); // Function Tiger.TigerGameInstance.CallOnTitleScreenClosed // (Final|Native|Public|BlueprintCallable) // @ game+0x1451630
};

// Class Tiger.TigerGameSettings
// Size: 0x2c0 (Inherited: 0x38)
struct UTigerGameSettings : USharkLocalDeveloperSettings {
	struct FSoftObjectPath QuestCollection; // 0x38(0x18)
	bool bEnableNpcSpawning; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float NpcLocationCorrectionInterval; // 0x54(0x04)
	float ItemClusterSize; // 0x58(0x04)
	float ItemClusterExtraReplicationRange; // 0x5c(0x04)
	int32_t BuildingSystemVersion; // 0x60(0x04)
	int32_t RoofSystemVersion; // 0x64(0x04)
	int32_t RoofSystemFreeTransformableVersion; // 0x68(0x04)
	struct FVector SideVolumeExtents; // 0x6c(0x0c)
	float BelowSideMargin; // 0x78(0x04)
	float BelowDepthMargin; // 0x7c(0x04)
	float BelowVolumeHeight; // 0x80(0x04)
	float ShallowBalconyDepth; // 0x84(0x04)
	bool bEnableApartments; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct ATigerBuildingWallPreviewer* BuildingWallPreviewerClass; // 0x90(0x08)
	bool bEnableStatisticsGathering; // 0x98(0x01)
	bool bEnableLandingPage; // 0x99(0x01)
	bool bEnableIntro; // 0x9a(0x01)
	char pad_9B[0x5]; // 0x9b(0x05)
	struct FSoftObjectPath TutorialLevel; // 0xa0(0x18)
	struct FSoftObjectPath TransferFromMatchLevel; // 0xb8(0x18)
	struct TSoftClassPtr<UObject> CustomizationOptions; // 0xd0(0x28)
	struct TSoftClassPtr<UObject> ItemsDatabase; // 0xf8(0x28)
	struct TSoftClassPtr<UObject> GrimoireTree; // 0x120(0x28)
	struct TSoftClassPtr<UObject> GrimoireSeasonDatabase; // 0x148(0x28)
	struct TSoftObjectPtr<UTigerGrimoireEntry> TrainingVideoGrimoireEntry; // 0x170(0x28)
	struct TSoftClassPtr<UObject> ChallengeDatabase; // 0x198(0x28)
	struct TSoftClassPtr<UObject> LogPopUp; // 0x1c0(0x28)
	struct FSoftObjectPath MasteryChallenges; // 0x1e8(0x18)
	struct FSoftObjectPath TestChallenges; // 0x200(0x18)
	struct FSoftObjectPath MatchStatMedalRequirements; // 0x218(0x18)
	struct FSoftObjectPath RankConfig; // 0x230(0x18)
	struct FString PromotionalPopupConfigUrl; // 0x248(0x10)
	struct TSoftObjectPtr<UMaterial> AssetStatusDoNotUseMaterial; // 0x258(0x28)
	bool bLogNetworkMovementFlagsOnServer; // 0x280(0x01)
	char pad_281[0x3]; // 0x281(0x03)
	struct FRotator SavedPlayerRotation; // 0x284(0x0c)
	struct FVector SavedPlayerLocation; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct FSoftObjectPath ArchetypePerkRewards; // 0x2a0(0x18)
	bool bForceCollectibleLootDrops; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)

	struct UTigerChallengeTypeDatabase* GetChallengeDatabaseMutable(); // Function Tiger.TigerGameSettings.GetChallengeDatabaseMutable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1451cd0
};

// Class Tiger.TigerGameModeDescriptorStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerGameModeDescriptorStatics : UBlueprintFunctionLibrary {

	void SetLastPlayedGameModeId(struct UObject* InWorldContextObject, struct FString InGameModeId); // Function Tiger.TigerGameModeDescriptorStatics.SetLastPlayedGameModeId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14575c0
	bool GetLastPlayedGameModeId(struct UObject* InWorldContextObject, struct FString& OutLastPlayedGameModeId); // Function Tiger.TigerGameModeDescriptorStatics.GetLastPlayedGameModeId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14569b0
	enum class ETigerGameModeAvailability GetGameModeAvailability(struct UObject* InWorldContextObject, struct FTigerGameModeDescriptor& InGameModeDescriptor); // Function Tiger.TigerGameModeDescriptorStatics.GetGameModeAvailability // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1456860
};

// Class Tiger.TigerGameModeFeature
// Size: 0x30 (Inherited: 0x28)
struct UTigerGameModeFeature : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Tiger.TigerGameModeFeatureBundle
// Size: 0x68 (Inherited: 0x30)
struct UTigerGameModeFeatureBundle : UPrimaryDataAsset {
	struct TSoftClassPtr<UObject> GameModeFeatureClass; // 0x30(0x28)
	struct TArray<struct FTigerGameModeFeatureWidget> WidgetClasses; // 0x58(0x10)
};

// Class Tiger.TigerRespawnSettingsBundle
// Size: 0x150 (Inherited: 0x68)
struct UTigerRespawnSettingsBundle : UTigerGameModeFeatureBundle {
	struct FTigerRespawnFeatureSettings RespawnSettings; // 0x68(0xe8)
};

// Class Tiger.TigerRespawnStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerRespawnStatics : UBlueprintFunctionLibrary {

	bool IsScheduledForRespawnOrGhost(struct ATigerPlayer* InPlayer); // Function Tiger.TigerRespawnStatics.IsScheduledForRespawnOrGhost // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1457160
	bool IsFirstTimePlayingWithRespawnFeature(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerRespawnStatics.IsFirstTimePlayingWithRespawnFeature // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1457000
	bool HasInfiniteLives(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerRespawnStatics.HasInfiniteLives // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1456f70
	struct UTigerGameModeFeatureRespawn* GetFeatureComponentForPlayer(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerRespawnStatics.GetFeatureComponentForPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14567d0
};

// Class Tiger.TigerGameModeFeatureRespawn
// Size: 0x240 (Inherited: 0xb0)
struct UTigerGameModeFeatureRespawn : UActorComponent {
	struct FMulticastInlineDelegate OnRespawnFinished; // 0xb0(0x10)
	struct FTigerGameModeFeatureWidget FeatureWidgetClass; // 0xc0(0x30)
	struct UTigerRespawnFeatureWidget* WidgetInstance; // 0xf0(0x08)
	struct FTigerRespawnFeatureSettings Settings; // 0xf8(0xe8)
	struct ATigerPlayerController* OwningController; // 0x1e0(0x08)
	struct ATigerHolyIncense* HolyIncense; // 0x1e8(0x08)
	int32_t LifeTokenCount; // 0x1f0(0x04)
	float SyncedRespawnTime; // 0x1f4(0x04)
	struct FMulticastInlineDelegate OnLifeTokensChanged; // 0x1f8(0x10)
	char pad_208[0x28]; // 0x208(0x28)
	struct FMulticastInlineDelegate OnRespawnEnabled; // 0x230(0x10)

	void Server_NotifyReady(); // Function Tiger.TigerGameModeFeatureRespawn.Server_NotifyReady // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x13ecaa0
	void Server_Cheat_ChangeLives(int32_t InLifeTokenCount); // Function Tiger.TigerGameModeFeatureRespawn.Server_Cheat_ChangeLives // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1457500
	void RespawnFinished__DelegateSignature(); // DelegateFunction Tiger.TigerGameModeFeatureRespawn.RespawnFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void PlayerLifeTokensChanged__DelegateSignature(int32_t InLifeTokenCount, int32_t InMaxTokenCount); // DelegateFunction Tiger.TigerGameModeFeatureRespawn.PlayerLifeTokensChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void IsRespawnFeatureEnabledAsync(struct FDelegate& InDelegate); // Function Tiger.TigerGameModeFeatureRespawn.IsRespawnFeatureEnabledAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14570b0
	void IsRespawnEnabledDelegateMulti__DelegateSignature(bool bIsFeatureEnabled); // DelegateFunction Tiger.TigerGameModeFeatureRespawn.IsRespawnEnabledDelegateMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void IsRespawnEnabledDelegate__DelegateSignature(bool bIsFeatureEnabled); // DelegateFunction Tiger.TigerGameModeFeatureRespawn.IsRespawnEnabledDelegate__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	bool HasInfiniteLives(); // Function Tiger.TigerGameModeFeatureRespawn.HasInfiniteLives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1456f40
	void HandleWaveStartMovement(); // Function Tiger.TigerGameModeFeatureRespawn.HandleWaveStartMovement // (Final|Native|Protected) // @ game+0x1456f20
	void HandleMatchStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerGameModeFeatureRespawn.HandleMatchStateChanged // (Final|Native|Protected) // @ game+0x1456e50
	void HandleGameStateAvailable(struct ATigerGameState* InGameState); // Function Tiger.TigerGameModeFeatureRespawn.HandleGameStateAvailable // (Final|Native|Protected) // @ game+0x1456dc0
	void HandleBuffRemoved(struct UTigerBuff* InBuff, int32_t InID, float InDuration); // Function Tiger.TigerGameModeFeatureRespawn.HandleBuffRemoved // (Final|Native|Protected) // @ game+0x1456ca0
	void Client_UpdatePlayerLifeTokens(int32_t InLifeTokens, float InSyncedRespawnTime); // Function Tiger.TigerGameModeFeatureRespawn.Client_UpdatePlayerLifeTokens // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1456650
	void Client_OnPlayerRespawned(); // Function Tiger.TigerGameModeFeatureRespawn.Client_OnPlayerRespawned // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x143a640
	void Client_Initialize(struct FTigerRespawnFeatureSettings InSettings); // Function Tiger.TigerGameModeFeatureRespawn.Client_Initialize // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1456520
	void Client_DisableRespawn(); // Function Tiger.TigerGameModeFeatureRespawn.Client_DisableRespawn // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1443670
	void AuthHandleMatchSettingsAvailable(); // Function Tiger.TigerGameModeFeatureRespawn.AuthHandleMatchSettingsAvailable // (Final|Native|Private) // @ game+0x1456500
};

// Class Tiger.TigerGameModesConfigCache
// Size: 0xb8 (Inherited: 0x28)
struct UTigerGameModesConfigCache : UObject {
	struct FTigerGameModesConfigBranch BranchConfiguration; // 0x28(0x30)
	struct FString GameModesConfigBranchName; // 0x58(0x10)
	char pad_68[0x50]; // 0x68(0x50)
};

// Class Tiger.TigerGamepad
// Size: 0xa0 (Inherited: 0x28)
struct UTigerGamepad : UObject {
	char pad_28[0x20]; // 0x28(0x20)
	struct ATigerPlayerController* PlayerController; // 0x48(0x08)
	float RegularTriggerPullThreshold; // 0x50(0x04)
	float MeleeAdaptiveTriggerPullThreshold; // 0x54(0x04)
	char WeaponRightTriggerResistanceStart; // 0x58(0x01)
	char WeaponRightTriggerResistanceEnd; // 0x59(0x01)
	char WeaponRightTriggerResistanceStrength; // 0x5a(0x01)
	char WeaponLeftTriggerResistanceStart; // 0x5b(0x01)
	char WeaponLeftTriggerResistanceStrength; // 0x5c(0x01)
	char MeleeRightTriggerResistanceStart; // 0x5d(0x01)
	char MeleeRightTriggerResistanceStrength; // 0x5e(0x01)
	char pad_5F[0x41]; // 0x5f(0x41)
};

// Class Tiger.TigerLocalAIControllerBase
// Size: 0x4b0 (Inherited: 0x330)
struct ATigerLocalAIControllerBase : AAIController {
	struct UBehaviorTree* BehaviorTree; // 0x330(0x08)
	struct UTigerInteractionControllerComponent* InteractionControllerComponent; // 0x338(0x08)
	float LowShieldThreshold; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct ATigerPlayerController* LocalPlayerController; // 0x348(0x08)
	float SightRange; // 0x350(0x04)
	float LoseSightModifier; // 0x354(0x04)
	float VisionAngleDegrees; // 0x358(0x04)
	float AimOffsetAmount; // 0x35c(0x04)
	float AimAccuracy; // 0x360(0x04)
	float MinimumAcceptableDamageMultiplier; // 0x364(0x04)
	struct ATigerPlayerCameraManager* TigerPlayerCameraManager; // 0x368(0x08)
	struct UBehaviorTreeComponent* BehaviorComp; // 0x370(0x08)
	struct UAIPerceptionComponent* AIPerceptionComp; // 0x378(0x08)
	struct UBlackboardComponent* BlackboardComp; // 0x380(0x08)
	struct UMovementComponent* PlayerMovComp; // 0x388(0x08)
	struct UPathFollowingComponent* PathFollowingComp; // 0x390(0x08)
	struct APawn* LocalPawn; // 0x398(0x08)
	struct ATigerPlayer* PlayerPawn; // 0x3a0(0x08)
	char pad_3A8[0x18]; // 0x3a8(0x18)
	struct AActor* BotHasJustBeenHitBy; // 0x3c0(0x08)
	char pad_3C8[0x18]; // 0x3c8(0x18)
	struct TMap<struct AActor*, float> TemporaryIgnoredTargets; // 0x3e0(0x50)
	char pad_430[0x10]; // 0x430(0x10)
	struct ATigerCharacter* FocusCharacter; // 0x440(0x08)
	char pad_448[0x24]; // 0x448(0x24)
	float LowHealthThreshold; // 0x46c(0x04)
	char pad_470[0x18]; // 0x470(0x18)
	float BotDifficulty; // 0x488(0x04)
	char pad_48C[0x24]; // 0x48c(0x24)

	void SetTargetPosition(struct FVector InNewPosition, enum class ETigerAIPlayerTargetType TargetType); // Function Tiger.TigerLocalAIControllerBase.SetTargetPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x148ae00
	void SetLureTarget(struct UObject* InNewLureTarget, enum class ETigerAIPlayerTargetType TargetType); // Function Tiger.TigerLocalAIControllerBase.SetLureTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x148ab20
	void LocalUnPossess(); // Function Tiger.TigerLocalAIControllerBase.LocalUnPossess // (Native|Public|BlueprintCallable) // @ game+0x148a6f0
	void LocalPossess(struct APawn* InPawn); // Function Tiger.TigerLocalAIControllerBase.LocalPossess // (Native|Public|BlueprintCallable) // @ game+0x148a660
	struct ATigerPlayerController* GetPlayerController(); // Function Tiger.TigerLocalAIControllerBase.GetPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x148a450
};

// Class Tiger.TigerGameplayPerfBenchmarkController
// Size: 0x4b0 (Inherited: 0x4b0)
struct ATigerGameplayPerfBenchmarkController : ATigerLocalAIControllerBase {

	void StartBehaviorTree(struct UBehaviorTree* InBehaviorTree); // Function Tiger.TigerGameplayPerfBenchmarkController.StartBehaviorTree // (Final|Native|Public|BlueprintCallable) // @ game+0x1457740
};

// Class Tiger.TigerGameplayStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerGameplayStatics : UGameplayStatics {
};

// Class Tiger.TigerGameSingleton
// Size: 0x78 (Inherited: 0x28)
struct UTigerGameSingleton : UObject {
	struct TMap<struct UAnimSequence*, struct UAnimMontage*> GeneratedMontages; // 0x28(0x50)
};

// Class Tiger.TigerGameViewportClient
// Size: 0x380 (Inherited: 0x360)
struct UTigerGameViewportClient : UGameViewportClient {
	char pad_360[0x20]; // 0x360(0x20)
};

// Class Tiger.TigerGasOverlay
// Size: 0x340 (Inherited: 0x108)
struct UTigerGasOverlay : UWidget {
	struct FSlateBrush WaveTextureBrush; // 0x108(0x88)
	struct FSlateBrush TargetTextureBrush; // 0x190(0x88)
	struct FSlateBrush WavePolyTextureBrush; // 0x218(0x88)
	struct FSlateBrush TargetPolyTextureBrush; // 0x2a0(0x88)
	struct ATigerPlayerController* PlayerController; // 0x328(0x08)
	char pad_330[0x10]; // 0x330(0x10)

	void UpdateGeomtery(); // Function Tiger.TigerGasOverlay.UpdateGeomtery // (Final|Native|Public|BlueprintCallable) // @ game+0x145cdc0
};

// Class Tiger.TigerGeneralUserSettings
// Size: 0x468 (Inherited: 0x28)
struct UTigerGeneralUserSettings : UObject {
	struct FMulticastInlineDelegate OnStreamerOptionChanged; // 0x28(0x10)
	struct UAkAudioEvent* EnableAtmosMixEvent; // 0x38(0x08)
	struct UAkAudioEvent* EnableHeadphonesEvent; // 0x40(0x08)
	struct FMulticastInlineDelegate OnQualityOptionChanged; // 0x48(0x10)
	struct FMulticastInlineDelegate OnDisplaySettingsApplied; // 0x58(0x10)
	struct FMulticastInlineDelegate OnGraphicsSettingsApplied; // 0x68(0x10)
	struct FMulticastInlineDelegate OnLanguageTextSettingChanged; // 0x78(0x10)
	struct FMulticastInlineDelegate OnGameplaySettingsChanged; // 0x88(0x10)
	char pad_98[0x8]; // 0x98(0x08)
	struct UTigerSaveSubSystem* SaveSubSystem; // 0xa0(0x08)
	struct FTigerStreamerModeSettings UserStreamerModeSettings; // 0xa8(0x10)
	struct FTigerStreamerModeSettings DefaultStreamerModeSettings; // 0xb8(0x10)
	struct FTigerAudioSettings UserAudioSettings; // 0xc8(0x70)
	struct FTigerAudioSettings DefaultAudioSettings; // 0x138(0x70)
	struct FTigerLanguageSettings UserLanguageSettings; // 0x1a8(0x28)
	struct FTigerLanguageSettings DefaultLanguageSettings; // 0x1d0(0x28)
	struct FTigerGameplaySettings UserGameplaySettings; // 0x1f8(0x08)
	struct FTigerGameplaySettings DefaultGameplaySettings; // 0x200(0x08)
	struct TArray<struct FString> AvailableTextLanguages; // 0x208(0x10)
	struct TArray<struct FString> AvailableAudioLanguages; // 0x218(0x10)
	struct TMap<struct FString, struct FString> LanguageDisplayName; // 0x228(0x50)
	char pad_278[0x10]; // 0x278(0x10)
	struct FTigerDisplaySettings TempDisplaySettings; // 0x288(0x2c)
	struct FTigerDisplaySettings UserDisplaySettings; // 0x2b4(0x2c)
	struct FTigerDisplaySettings DefaultDisplaySettings; // 0x2e0(0x2c)
	char pad_30C[0x3c]; // 0x30c(0x3c)
	struct FTigerGraphicsSettings TempGraphicsSettings; // 0x348(0x48)
	struct FTigerGraphicsSettings UserGraphicsSettings; // 0x390(0x48)
	struct FTigerGraphicsSettings DefaultGraphicsSettings; // 0x3d8(0x48)
	struct FTigerGraphicsSettingsPS5 TempGraphicsSettingsPS5; // 0x420(0x10)
	struct FTigerGraphicsSettingsPS5 UserGraphicsSettingsPS5; // 0x430(0x10)
	struct FTigerGraphicsSettingsPS5 DefaultGraphicsSettingsPS5; // 0x440(0x10)
	char pad_450[0x18]; // 0x450(0x18)

	bool WillNeedRestart(); // Function Tiger.TigerGeneralUserSettings.WillNeedRestart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145cde0
	void UpdateAvailableResolutions(); // Function Tiger.TigerGeneralUserSettings.UpdateAvailableResolutions // (Final|Native|Public|BlueprintCallable) // @ game+0x145cda0
	void ToggleUseCrossplay(); // Function Tiger.TigerGeneralUserSettings.ToggleUseCrossplay // (Final|Native|Public|BlueprintCallable) // @ game+0x145cd80
	void ToggleSwapOutDefaultWeapon(); // Function Tiger.TigerGeneralUserSettings.ToggleSwapOutDefaultWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x145cd60
	void ToggleRotateMinimap(); // Function Tiger.TigerGeneralUserSettings.ToggleRotateMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x145cd40
	void ToggleMuteGeneralChat(); // Function Tiger.TigerGeneralUserSettings.ToggleMuteGeneralChat // (Final|Native|Public|BlueprintCallable) // @ game+0x145cd20
	bool ShouldUseCrossplay(); // Function Tiger.TigerGeneralUserSettings.ShouldUseCrossplay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145ccf0
	bool ShouldPromptRevertTimer(); // Function Tiger.TigerGeneralUserSettings.ShouldPromptRevertTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145ccc0
	void SetWindowMode(int32_t InWindowMode); // Function Tiger.TigerGeneralUserSettings.SetWindowMode // (Final|Native|Public|BlueprintCallable) // @ game+0x145cc30
	void SetVolumetricFogQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetVolumetricFogQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145cba0
	void SetVoipOutputDevice(struct FString InVoipOutputDevice); // Function Tiger.TigerGeneralUserSettings.SetVoipOutputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x145cb00
	void SetVoipInputDevice(struct FString InVoipInputDevice); // Function Tiger.TigerGeneralUserSettings.SetVoipInputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x145ca60
	void SetVoiceChatVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetVoiceChatVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145c9e0
	void SetVisualEffectQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetVisualEffectQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145c950
	void SetViewDistanceQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetViewDistanceQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145c8c0
	void SetVideoVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetVideoVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145c840
	void SetUseSubtitles(bool bInUsed); // Function Tiger.TigerGeneralUserSettings.SetUseSubtitles // (Final|Native|Public|BlueprintCallable) // @ game+0x145c7b0
	void SetUsePushToTalk(bool bInUse); // Function Tiger.TigerGeneralUserSettings.SetUsePushToTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x145c720
	void SetUseLightShafts(bool bInUseLightShaft); // Function Tiger.TigerGeneralUserSettings.SetUseLightShafts // (Final|Native|Public|BlueprintCallable) // @ game+0x145c690
	void SetUseFilmGrain(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetUseFilmGrain // (Final|Native|Public|BlueprintCallable) // @ game+0x145c600
	void SetUseChromaticAberration(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetUseChromaticAberration // (Final|Native|Public|BlueprintCallable) // @ game+0x145c570
	void SetTextureQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetTextureQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145c4e0
	void SetTextureFilteringQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetTextureFilteringQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145c450
	void SetTextLanguage(struct FString InLanguage); // Function Tiger.TigerGeneralUserSettings.SetTextLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x145c3b0
	void SetSubSurfaceScatteringQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetSubSurfaceScatteringQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145c320
	void SetStreamerModeLevel(enum class ETigerStreamerModeLevel InStreamerModeLevel); // Function Tiger.TigerGeneralUserSettings.SetStreamerModeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x145c2a0
	void SetShadowQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetShadowQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145c210
	void SetSfxVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetSfxVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145c190
	void SetScreenSpaceReflectionQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetScreenSpaceReflectionQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145c100
	void SetScramblePlayersMode(bool bInEnablePlayerScramble); // Function Tiger.TigerGeneralUserSettings.SetScramblePlayersMode // (Final|Native|Public|BlueprintCallable) // @ game+0x145c070
	void SetResolutionScale(float InScale); // Function Tiger.TigerGeneralUserSettings.SetResolutionScale // (Final|Native|Public|BlueprintCallable) // @ game+0x145bff0
	void SetResolution(struct FIntPoint& InResolution); // Function Tiger.TigerGeneralUserSettings.SetResolution // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x145bf60
	void SetQualityPreset(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetQualityPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x145bed0
	void SetMusicVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMusicVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145be50
	void SetMotionBlurQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetMotionBlurQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145bdc0
	void SetMicVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMicVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145bd40
	void SetMaterialQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetMaterialQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145bcb0
	void SetMasterVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetMasterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145bc30
	void SetLightingQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetLightingQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145bba0
	void SetLensFlareQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetLensFlareQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145bb10
	void SetHideMatchId(bool bInHideMatchId); // Function Tiger.TigerGeneralUserSettings.SetHideMatchId // (Final|Native|Public|BlueprintCallable) // @ game+0x145ba80
	void SetHideCurrency(bool bInHideCurrency); // Function Tiger.TigerGeneralUserSettings.SetHideCurrency // (Final|Native|Public|BlueprintCallable) // @ game+0x145b9f0
	void SetGamma(float InGamma); // Function Tiger.TigerGeneralUserSettings.SetGamma // (Final|Native|Public|BlueprintCallable) // @ game+0x145b970
	void SetFsrSharpening(float InSharpeningAmount); // Function Tiger.TigerGeneralUserSettings.SetFsrSharpening // (Final|Native|Public|BlueprintCallable) // @ game+0x145b8f0
	void SetFsrQualityLevel(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetFsrQualityLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x145b860
	void SetFrameRateLimit(float InFrameRateLimit); // Function Tiger.TigerGeneralUserSettings.SetFrameRateLimit // (Final|Native|Public|BlueprintCallable) // @ game+0x145b7e0
	void SetFoliageQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetFoliageQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145b750
	void SetEnableVSync(bool bInEnableVSync); // Function Tiger.TigerGeneralUserSettings.SetEnableVSync // (Final|Native|Public|BlueprintCallable) // @ game+0x145b630
	void SetEnableVoiceChat(bool bInEnabled); // Function Tiger.TigerGeneralUserSettings.SetEnableVoiceChat // (Final|Native|Public|BlueprintCallable) // @ game+0x145b6c0
	void SetEnableFrameRateSmoothing(bool bInIsEnabled); // Function Tiger.TigerGeneralUserSettings.SetEnableFrameRateSmoothing // (Final|Native|Public|BlueprintCallable) // @ game+0x145b5a0
	void SetEnableDolbyAtmos(bool bInShouldEnableDolbyAtmos); // Function Tiger.TigerGeneralUserSettings.SetEnableDolbyAtmos // (Final|Native|Public|BlueprintCallable) // @ game+0x145b510
	void SetDisablePlayerMessages(bool bInDisablePlayerMessages); // Function Tiger.TigerGeneralUserSettings.SetDisablePlayerMessages // (Final|Native|Public|BlueprintCallable) // @ game+0x145b480
	void SetDisableNotifications(bool bInDisableNotifications); // Function Tiger.TigerGeneralUserSettings.SetDisableNotifications // (Final|Native|Public|BlueprintCallable) // @ game+0x145b3f0
	void SetDisableMiniMap(bool bInDisableMiniMap); // Function Tiger.TigerGeneralUserSettings.SetDisableMiniMap // (Final|Native|Public|BlueprintCallable) // @ game+0x145b360
	void SetDisableKillFeed(bool bInDisableKillFeed); // Function Tiger.TigerGeneralUserSettings.SetDisableKillFeed // (Final|Native|Public|BlueprintCallable) // @ game+0x145b2d0
	void SetDialogueVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetDialogueVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145b250
	void SetControllerSpeakerVolume(float InVolume); // Function Tiger.TigerGeneralUserSettings.SetControllerSpeakerVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x145b1d0
	void SetBloomQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetBloomQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145b140
	void SetAudioOutputDevice(struct FString InDeviceInfo); // Function Tiger.TigerGeneralUserSettings.SetAudioOutputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x145b0a0
	void SetAudioMixPreset(struct FString InMixPresetName); // Function Tiger.TigerGeneralUserSettings.SetAudioMixPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x145b000
	void SetAudioLanguage(struct FString InLanguage); // Function Tiger.TigerGeneralUserSettings.SetAudioLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x145af60
	void SetAntiAliasingQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetAntiAliasingQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145aed0
	void SetAnonymousMode(bool bInEnableAnonymousMode); // Function Tiger.TigerGeneralUserSettings.SetAnonymousMode // (Final|Native|Public|BlueprintCallable) // @ game+0x145ae40
	void SetAmbientOcclusionQuality(int32_t InQualityLevel); // Function Tiger.TigerGeneralUserSettings.SetAmbientOcclusionQuality // (Final|Native|Public|BlueprintCallable) // @ game+0x145adb0
	void SetAllowBackgroundAudio(bool bInShouldAllowBackgroundAudio); // Function Tiger.TigerGeneralUserSettings.SetAllowBackgroundAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x145ad20
	void SaveSelectedAudioOutput(); // Function Tiger.TigerGeneralUserSettings.SaveSelectedAudioOutput // (Final|Native|Public|BlueprintCallable) // @ game+0x145ad00
	void SaveGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.SaveGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145ace0
	void SaveDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.SaveDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145acc0
	void SaveAudioSettings(); // Function Tiger.TigerGeneralUserSettings.SaveAudioSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145aca0
	void ResetStreamerModeSettings(); // Function Tiger.TigerGeneralUserSettings.ResetStreamerModeSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145ac80
	void ResetLanguageSettings(); // Function Tiger.TigerGeneralUserSettings.ResetLanguageSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145ac60
	void ResetGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.ResetGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145ac40
	void ResetGameplaySettings(); // Function Tiger.TigerGeneralUserSettings.ResetGameplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145ac20
	void ResetDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.ResetDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145ac00
	void ResetAudioSettings(); // Function Tiger.TigerGeneralUserSettings.ResetAudioSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145abe0
	void ResetAudioOutputDevice(); // Function Tiger.TigerGeneralUserSettings.ResetAudioOutputDevice // (Final|Native|Public|BlueprintCallable) // @ game+0x145abc0
	void ReapplyUserGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.ReapplyUserGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145aba0
	void ReapplyUserDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.ReapplyUserDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145ab80
	bool IsResolutionAvailable(struct FIntPoint& InResolution, enum class EWindowMode InWindowMode); // Function Tiger.TigerGeneralUserSettings.IsResolutionAvailable // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x145aaa0
	bool IsPlatformPS5(); // Function Tiger.TigerGeneralUserSettings.IsPlatformPS5 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145aa70
	bool HasNonDefaultGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.HasNonDefaultGraphicsSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145aa40
	bool HasNonDefaultDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.HasNonDefaultDisplaySettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145aa10
	bool HasGraphicsChanges(); // Function Tiger.TigerGeneralUserSettings.HasGraphicsChanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a9e0
	bool HasDisplayChanges(); // Function Tiger.TigerGeneralUserSettings.HasDisplayChanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a9b0
	enum class EWindowMode GetTempWindowMode(); // Function Tiger.TigerGeneralUserSettings.GetTempWindowMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a980
	struct TArray<struct FString> GetNonDefaultGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.GetNonDefaultGraphicsSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a900
	struct TArray<struct FString> GetNonDefaultDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.GetNonDefaultDisplaySettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a880
	int32_t GetCurrentFrameRateLimitOption(); // Function Tiger.TigerGeneralUserSettings.GetCurrentFrameRateLimitOption // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a850
	bool GetAvailableResolutionsForWindowMode(struct TArray<struct FIntPoint>& OutResolutions, enum class EWindowMode InWindowMode); // Function Tiger.TigerGeneralUserSettings.GetAvailableResolutionsForWindowMode // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a750
	int32_t FindCurrentQualityPreset(); // Function Tiger.TigerGeneralUserSettings.FindCurrentQualityPreset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x145a720
	void DiscardResolutionChanges(); // Function Tiger.TigerGeneralUserSettings.DiscardResolutionChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x145a700
	void DiscardGraphicsSettings(); // Function Tiger.TigerGeneralUserSettings.DiscardGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145a6e0
	void DiscardDisplaySettings(); // Function Tiger.TigerGeneralUserSettings.DiscardDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145a6c0
	void ApplyStreamerSettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyStreamerSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145a630
	void ApplyGraphicsSettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyGraphicsSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145a5a0
	void ApplyDisplaySettings(bool bInShouldSaveSettings); // Function Tiger.TigerGeneralUserSettings.ApplyDisplaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x145a510
};

// Class Tiger.TigerGeneralUserSettingsPS5
// Size: 0x28 (Inherited: 0x28)
struct UTigerGeneralUserSettingsPS5 : UObject {
};

// Class Tiger.TigerGetSharkmobAccountIdsBatcher
// Size: 0x30 (Inherited: 0x28)
struct UTigerGetSharkmobAccountIdsBatcher : UObject {
	struct UTigerFriendService* FriendService; // 0x28(0x08)
};

// Class Tiger.TigerGhostCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerGhostCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.TransientScaleBox
// Size: 0x140 (Inherited: 0x140)
struct UTransientScaleBox : UScaleBox {
};

// Class Tiger.TigerGraphWidget
// Size: 0x398 (Inherited: 0x260)
struct UTigerGraphWidget : UUserWidget {
	bool bPreviewInEditor; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	int32_t ColumnForGraphName; // 0x264(0x04)
	int32_t ColumnForGraphData; // 0x268(0x04)
	bool bIsRealtime; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	int32_t HistoryInSamples; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	double UpdateInSeconds; // 0x278(0x08)
	double HistoryInSeconds; // 0x280(0x08)
	struct FSlateBrush BackgroundBrush; // 0x288(0x88)
	bool bAntiAliasLines; // 0x310(0x01)
	char pad_311[0x3]; // 0x311(0x03)
	float LineThickness; // 0x314(0x04)
	struct FSlateFontInfo Font; // 0x318(0x58)
	char pad_370[0x8]; // 0x370(0x08)
	struct TArray<struct UTigerGraphData*> Graphs; // 0x378(0x10)
	char pad_388[0x10]; // 0x388(0x10)

	void RemoveAllGraphs(); // Function Tiger.TigerGraphWidget.RemoveAllGraphs // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x14611b0
	void FinishedAddingGraphs(); // Function Tiger.TigerGraphWidget.FinishedAddingGraphs // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x1460720
	void AddGraph(struct FText& InLegendName, struct FLinearColor& InLegendColour, float InMinBounds, float InMaxBounds, enum class ETigerGraphDisplayType InMetricsVisibility, char InPrecision, struct UTigerGraphData*& OutGraphData); // Function Tiger.TigerGraphWidget.AddGraph // (Final|BlueprintCosmetic|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14603f0
};

// Class Tiger.TigerGraphData
// Size: 0xa8 (Inherited: 0x28)
struct UTigerGraphData : UObject {
	char pad_28[0x80]; // 0x28(0x80)

	void GraphAddSample__DelegateSignature(float InSample); // DelegateFunction Tiger.TigerGraphData.GraphAddSample__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void AddSample(float InSample); // Function Tiger.TigerGraphData.AddSample // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1460670
};

// Class Tiger.GrimoireCardMaterialPreset
// Size: 0x90 (Inherited: 0x30)
struct UGrimoireCardMaterialPreset : UDataAsset {
	float Roughness; // 0x30(0x04)
	float Damage; // 0x34(0x04)
	float ExtraDamage; // 0x38(0x04)
	float ExtraDamageOnEdges; // 0x3c(0x04)
	struct FVector ExtraDamageMoveScale; // 0x40(0x0c)
	struct FVector BorderRoughnessSpecularity; // 0x4c(0x0c)
	float BorderAmount; // 0x58(0x04)
	struct FColor BorderColor; // 0x5c(0x04)
	float BorderRaisedAmount; // 0x60(0x04)
	struct FVector BorderRoughnessSpecularityMetalic; // 0x64(0x0c)
	struct FVector DirtMaps; // 0x70(0x0c)
	struct FColor DirtColor; // 0x7c(0x04)
	struct FVector DirtMoveXYScale; // 0x80(0x0c)
	float DirtHardness; // 0x8c(0x04)
};

// Class Tiger.TigerGrimoireCard
// Size: 0x248 (Inherited: 0x228)
struct ATigerGrimoireCard : AActor {
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	struct UTexture* FrontTexture; // 0x230(0x08)
	struct UTexture* BackfaceTextureDMNR; // 0x238(0x08)
	bool bIsFloating; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)

	void RestartFloatingAnimation(); // Function Tiger.TigerGrimoireCard.RestartFloatingAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void PlayFloatingAnimation(); // Function Tiger.TigerGrimoireCard.PlayFloatingAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	int32_t GenerateSeed(struct UTigerGrimoireEntry* InEntry); // Function Tiger.TigerGrimoireCard.GenerateSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1460740
};

// Class Tiger.TigerGrimoireLandingUi
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerGrimoireLandingUi : UTigerWidget {
	char pad_280[0x10]; // 0x280(0x10)
	struct TArray<struct UTigerGrimoireEntry*> CachedUnlockedEntries; // 0x290(0x10)
	struct TArray<struct UTigerGrimoireEntry*> CachedReadEntries; // 0x2a0(0x10)
	struct FTigerSuggestedArticlesData CachedSuggestedArticlesData; // 0x2b0(0x18)

	void RemoveSuggestedEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireLandingUi.RemoveSuggestedEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x14611d0
	struct UTigerGrimoireEntry* GetRandomEntry(); // Function Tiger.TigerGrimoireLandingUi.GetRandomEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x1460d00
	void GetArticleEntries(struct UTigerGrimoireEntry*& OutFeaturedEntry, struct TArray<struct UTigerGrimoireEntry*>& OutSuggestedEntries, struct TArray<struct UTigerGrimoireEntry*>& OutNewEntries); // Function Tiger.TigerGrimoireLandingUi.GetArticleEntries // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14608c0
};

// Class Tiger.TigerGrimoireRichBlockDecorator
// Size: 0x810 (Inherited: 0x28)
struct UTigerGrimoireRichBlockDecorator : URichTextBlockDecorator {
	struct FSlateBrush SummaryBackground; // 0x28(0x88)
	struct UTigerGrimoireUi* GrimoireUI; // 0xb0(0x08)
	struct FButtonStyle ButtonStyle; // 0xb8(0x278)
	struct FTextBlockStyle UnlockedEntryTextStyle; // 0x330(0x270)
	struct FTextBlockStyle LockedEntryTextStyle; // 0x5a0(0x270)
};

// Class Tiger.TigerGrimoireSeasonData
// Size: 0x60 (Inherited: 0x30)
struct UTigerGrimoireSeasonData : UDataAsset {
	int32_t SeasonId; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct FDateTime StartDate; // 0x38(0x08)
	struct FDateTime EndDate; // 0x40(0x08)
	struct TArray<struct UTigerGrimoireEntry*> Entries; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)
};

// Class Tiger.TigerGrimoireSeasonDatabase
// Size: 0x38 (Inherited: 0x28)
struct UTigerGrimoireSeasonDatabase : UObject {
	struct TArray<struct UTigerGrimoireSeasonData*> Seasons; // 0x28(0x10)
};

// Class Tiger.TigerGrimoireDialogueWrapper
// Size: 0x40 (Inherited: 0x28)
struct UTigerGrimoireDialogueWrapper : UObject {
	struct UTigerNpcDialogueList* DialogueList; // 0x28(0x08)
	struct FString DialogueKey; // 0x30(0x10)

	struct FText GetDialogueText(); // Function Tiger.TigerGrimoireDialogueWrapper.GetDialogueText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1460ad0
};

// Class Tiger.TigerGrimoireEntry
// Size: 0x1f8 (Inherited: 0x30)
struct UTigerGrimoireEntry : UDataAsset {
	struct FText Name; // 0x30(0x18)
	struct FText GameplayText; // 0x48(0x18)
	struct FText Heading; // 0x60(0x18)
	struct FText Description; // 0x78(0x18)
	struct UTigerGrimoireDialogueWrapper* Dialogue; // 0x90(0x08)
	struct FText Summary; // 0x98(0x18)
	struct FText UnlockSummary; // 0xb0(0x18)
	enum class ETigerGrimoireEntryMediaDisplayMode MediaDisplayMode; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct TSoftObjectPtr<UTexture2D> Image; // 0xd0(0x28)
	struct TSoftObjectPtr<UTexture2D> BackgroundImage; // 0xf8(0x28)
	struct TSoftObjectPtr<UStaticMesh> Mesh; // 0x120(0x28)
	struct TSoftObjectPtr<UFileMediaSource> Video; // 0x148(0x28)
	enum class ETigerGrimoireEntryState DefaultState; // 0x170(0x01)
	enum class ETigerGrimoireContinuationMethod TextContinuationMethod; // 0x171(0x01)
	char pad_172[0x6]; // 0x172(0x06)
	struct UGrimoireCardMaterialPreset* GrimoireCardPreset; // 0x178(0x08)
	struct FDataTableRowHandle CardQualityRow; // 0x180(0x10)
	struct FDataTableRowHandle CardBorderRow; // 0x190(0x10)
	struct TSoftObjectPtr<UTexture> FrontCardTexture; // 0x1a0(0x28)
	float DefaultOrderValue; // 0x1c8(0x04)
	float MeshScaleMultiplier; // 0x1cc(0x04)
	char pad_1D0[0x8]; // 0x1d0(0x08)
	struct FString EntryIdAsString; // 0x1d8(0x10)
	bool bHideEntry; // 0x1e8(0x01)
	char pad_1E9[0x7]; // 0x1e9(0x07)
	struct UTigerGrimoireEntry* ParentEntry; // 0x1f0(0x08)
};

// Class Tiger.TigerGrimoireCategory
// Size: 0xc8 (Inherited: 0x30)
struct UTigerGrimoireCategory : UDataAsset {
	struct FText Title; // 0x30(0x18)
	struct FText Description; // 0x48(0x18)
	struct UDataTable* Entries; // 0x60(0x08)
	struct TArray<struct UTigerGrimoireCategory*> SubCategories; // 0x68(0x10)
	struct UTigerGrimoireCategory* ParentCategory; // 0x78(0x08)
	bool bHideCategory; // 0x80(0x01)
	enum class ETigerNewNotificationMenuOptions NewNotificationCategory; // 0x81(0x01)
	char pad_82[0x6]; // 0x82(0x06)
	struct TSoftObjectPtr<UTexture> BackfaceTextureDMNR; // 0x88(0x28)
	float DefaultOrderValue; // 0xb0(0x04)
	char pad_B4[0x14]; // 0xb4(0x14)

	struct TArray<struct UTigerGrimoireEntry*> GetAllEntries(bool bInIncludeSubEntries); // Function Tiger.TigerGrimoireCategory.GetAllEntries // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14607e0
};

// Class Tiger.TigerGrimoireTree
// Size: 0x158 (Inherited: 0x28)
struct UTigerGrimoireTree : UObject {
	struct TArray<struct UTigerGrimoireCategory*> Categories; // 0x28(0x10)
	struct TArray<struct TSoftObjectPtr<UTigerGrimoireCategory>> CategoryAssets; // 0x38(0x10)
	struct UStringTable* LocalisationVisiblePsStringTable; // 0x48(0x08)
	char pad_50[0x108]; // 0x50(0x108)

	void SearchTreeByName(struct FString InSearch, struct FDelegate& InOnCompleteDelegate); // Function Tiger.TigerGrimoireTree.SearchTreeByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14612c0
	void PopulateSearchMap(); // Function Tiger.TigerGrimoireTree.PopulateSearchMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1461170
	void GetSubEntriesForEntryId(struct FString InEntryId, bool& OutIsPartial, struct TArray<struct UTigerGrimoireEntry*>& OutSubEntries); // Function Tiger.TigerGrimoireTree.GetSubEntriesForEntryId // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1460e70
	void GetSubEntriesForEntry(struct UTigerGrimoireEntry* InEntry, bool& OutIsPartial, struct TArray<struct UTigerGrimoireEntry*>& OutSubEntries); // Function Tiger.TigerGrimoireTree.GetSubEntriesForEntry // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1460d30
	struct UTigerGrimoireEntry* GetEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireTree.GetEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1460b70
	struct UTigerGrimoireCategory* GetCategoryForEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireTree.GetCategoryForEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1460a20
};

// Class Tiger.TigerGrimoireUi
// Size: 0x418 (Inherited: 0x3c0)
struct UTigerGrimoireUi : UTigerSceneBackgroundUI {
	bool bNotificationIdsSetup; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct ATigerModelViewerItem* GrimoireItem; // 0x3c8(0x08)
	struct ATigerGrimoireCard* GrimoireCard; // 0x3d0(0x08)
	struct AActor* ModelCam; // 0x3d8(0x08)
	struct AActor* CloseModelCam; // 0x3e0(0x08)
	struct FName ItemRotationNodeTag; // 0x3e8(0x08)
	struct FName CloseViewerCamName; // 0x3f0(0x08)
	struct FName ViewerCamName; // 0x3f8(0x08)
	struct FName ExaminablePropsLevelName; // 0x400(0x08)
	struct AActor* ItemRotationNode; // 0x408(0x08)
	struct FName LightingSubLevelName; // 0x410(0x08)

	void TigerDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerGrimoireUi.TigerDelegate__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void SortEntries(struct TArray<struct UTigerGrimoireEntry*>& InGrimoireEntries, struct UTigerPersistentPlayerState* InPersistentPlayerState, enum class ETigerGrimoireSortType InSortType, struct TArray<struct UTigerGrimoireEntry*>& OutSortedEntries); // Function Tiger.TigerGrimoireUi.SortEntries // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1461570
	void SortCategories(struct TArray<struct UTigerGrimoireCategory*>& InGrimoireCategories, struct UTigerPersistentPlayerState* InPersistentPlayerState, enum class ETigerGrimoireSortType InSortType, struct TArray<struct UTigerGrimoireCategory*>& OutSortedCategories); // Function Tiger.TigerGrimoireUi.SortCategories // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14613e0
	void SetupNotificationEntryIds(); // Function Tiger.TigerGrimoireUi.SetupNotificationEntryIds // (Final|Native|Public|BlueprintCallable) // @ game+0x14613c0
	void RefreshLanguageOnGrimoireProps(); // Function Tiger.TigerGrimoireUi.RefreshLanguageOnGrimoireProps // (Final|Native|Public|BlueprintCallable) // @ game+0x1461190
	void LoadMediaForGrimoireEntriesAsync(struct TArray<struct UTigerGrimoireEntry*>& InGrimoireEntries, struct FDelegate& OnLoadedDelegate); // Function Tiger.TigerGrimoireUi.LoadMediaForGrimoireEntriesAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1461060
	void JumpToSubCategory(struct UTigerGrimoireCategory* InSubCategory); // Function Tiger.TigerGrimoireUi.JumpToSubCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void JumpToEntry(struct FString InEntryId); // Function Tiger.TigerGrimoireUi.JumpToEntry // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void JumpToCategory(struct UTigerGrimoireCategory* InCategory); // Function Tiger.TigerGrimoireUi.JumpToCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	bool IsGrimoireEntryMediaLoaded(struct UTigerGrimoireEntry* InEntry); // Function Tiger.TigerGrimoireUi.IsGrimoireEntryMediaLoaded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1460fd0
	struct AActor* GetFirstActorWithTag(struct ULevel* InLoadedLevel, struct FName& InTag); // Function Tiger.TigerGrimoireUi.GetFirstActorWithTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1460c20
	void FindGrimoireDisplayItems(); // Function Tiger.TigerGrimoireUi.FindGrimoireDisplayItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1460700
};

// Class Tiger.TigerGrimoireUnlockPickup
// Size: 0x2c0 (Inherited: 0x2a0)
struct ATigerGrimoireUnlockPickup : ATigerInteractiveObject {
	struct UStaticMeshComponent* PickupMesh; // 0x2a0(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x2a8(0x08)
	char pad_2B0[0x10]; // 0x2b0(0x10)
};

// Class Tiger.TigerGrimoireUnlockTriggerVolume
// Size: 0x2b8 (Inherited: 0x260)
struct ATigerGrimoireUnlockTriggerVolume : ATriggerVolume {
	struct TArray<struct FTigerGrimoireEntryTimeThreshold> EntriesToUnlock; // 0x260(0x10)
	char pad_270[0x10]; // 0x270(0x10)
	struct FString LocationName; // 0x280(0x10)
	char pad_290[0x28]; // 0x290(0x28)

	void OnEndOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerGrimoireUnlockTriggerVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x1465830
	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerGrimoireUnlockTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x1465740
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerGrimoireUnlockTriggerVolume.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x1465280
};

// Class Tiger.TigerGroupCoordinator
// Size: 0x158 (Inherited: 0xb0)
struct UTigerGroupCoordinator : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct TArray<struct UTigerPlayerGroup*> Groups; // 0xc0(0x10)
	struct TArray<struct ATigerExtendedGroupState*> ExtendedGroupStates; // 0xd0(0x10)
	char pad_E0[0x78]; // 0xe0(0x78)

	struct UTigerPlayerGroup* GetGroupFromPlayerController(struct ATigerPlayerController* TigerPlayerController); // Function Tiger.TigerGroupCoordinator.GetGroupFromPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x1464fc0
};

// Class Tiger.TigerMapMarkerProxy
// Size: 0x68 (Inherited: 0x28)
struct UTigerMapMarkerProxy : UObject {
	struct FMulticastInlineDelegate OnUpdated; // 0x28(0x10)
	bool bIsDynamicIcon; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	int32_t MarkerId; // 0x3c(0x04)
	char pad_40[0x18]; // 0x40(0x18)
	struct UUserWidget* WidgetType; // 0x58(0x08)
	char pad_60[0x8]; // 0x60(0x08)

	struct UTigerMapMarkerProxy* Show(); // Function Tiger.TigerMapMarkerProxy.Show // (Final|Native|Public|BlueprintCallable) // @ game+0x148fec0
	struct UTigerMapMarkerProxy* SetWidgetType(struct UUserWidget* InWidgetType); // Function Tiger.TigerMapMarkerProxy.SetWidgetType // (Final|Native|Public|BlueprintCallable) // @ game+0x148fe20
	struct UTigerMapMarkerProxy* SetRotation(float NewRotation); // Function Tiger.TigerMapMarkerProxy.SetRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x148fd10
	struct UTigerMapMarkerProxy* SetLocation(struct FVector WorldLocation); // Function Tiger.TigerMapMarkerProxy.SetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x148fb50
	struct UTigerMapMarkerProxy* SetAlignment(struct FVector2D NewAlignment); // Function Tiger.TigerMapMarkerProxy.SetAlignment // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x148f8b0
	bool IsVisible(); // Function Tiger.TigerMapMarkerProxy.IsVisible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f5c0
	struct UTigerMapMarkerProxy* Hide(); // Function Tiger.TigerMapMarkerProxy.Hide // (Final|Native|Public|BlueprintCallable) // @ game+0x148f500
	struct UUserWidget* GetWidgetType(); // Function Tiger.TigerMapMarkerProxy.GetWidgetType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f410
	float GetRotation(); // Function Tiger.TigerMapMarkerProxy.GetRotation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f3b0
	struct FVector GetLocation(); // Function Tiger.TigerMapMarkerProxy.GetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f120
	struct FVector2D GetAlignment(); // Function Tiger.TigerMapMarkerProxy.GetAlignment // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f070
};

// Class Tiger.TigerGroupMemberMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerGroupMemberMarkerProxy : UTigerMapMarkerProxy {
	char PlayerIndex; // 0x68(0x01)
	bool bIsExtendedGroupMember; // 0x69(0x01)
	bool bIsDead; // 0x6a(0x01)
	char pad_6B[0x5]; // 0x6b(0x05)
};

// Class Tiger.TigerGroupSettings
// Size: 0x70 (Inherited: 0x38)
struct UTigerGroupSettings : USharkLocalDeveloperSettings {
	struct FTigerGroupSettingsData GroupSettingsData; // 0x38(0x38)
};

// Class Tiger.TigerGroupStateComponent
// Size: 0x198 (Inherited: 0xb0)
struct UTigerGroupStateComponent : UActorComponent {
	struct FMulticastInlineDelegate OnGroupMembersChanged; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnPlayerIndexChanged; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnCrossplaySettingSynced; // 0xd0(0x10)
	struct FTigerOtherGroupMembersData OtherGroupMembersData; // 0xe0(0x20)
	char pad_100[0x18]; // 0x100(0x18)
	struct FMulticastInlineDelegate OnMarkedAsGroupMember; // 0x118(0x10)
	struct FMulticastInlineDelegate OnRemoveMarkedAsGroupMember; // 0x128(0x10)
	struct UTigerCompassMarkerComponent* CompassComponent; // 0x138(0x08)
	struct ATigerPlayerController* LocalPlayerController; // 0x140(0x08)
	struct UTigerGroupMemberMarkerProxy* GroupMemberMapMarkerProxy; // 0x148(0x08)
	struct UTigerInWorldWidget* ExtendedGroupMemberWidget; // 0x150(0x08)
	char GroupMemberId; // 0x158(0x01)
	char pad_159[0x3]; // 0x159(0x03)
	struct FTigerGroupId PreviousGroupID; // 0x15c(0x10)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct TArray<int32_t> GroupMemberIDs; // 0x170(0x10)
	char pad_180[0x18]; // 0x180(0x18)

	bool ValidGroupID(); // Function Tiger.TigerGroupStateComponent.ValidGroupID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14660a0
	void TeamMembersChanged__DelegateSignature(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*>& InPreviousGroupMembers); // DelegateFunction Tiger.TigerGroupStateComponent.TeamMembersChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void Server_ReportCrossplaySettings(enum class ETigerMatchmakingPlatform InClientSetting, struct ATigerPlayerState* InOtherTigerPlayerState); // Function Tiger.TigerGroupStateComponent.Server_ReportCrossplaySettings // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1465f40
	void Server_RefreshGroupMembers(); // Function Tiger.TigerGroupStateComponent.Server_RefreshGroupMembers // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1465ef0
	void Server_LockAndSyncCrossplaySettings(enum class ETigerMatchmakingPlatform InInstigatorSetting); // Function Tiger.TigerGroupStateComponent.Server_LockAndSyncCrossplaySettings // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1465e70
	bool PlayerIsInAGroup(); // Function Tiger.TigerGroupStateComponent.PlayerIsInAGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1465e20
	void OnUserEnteredVoipRoom(struct FTigerPersistentVoipID& InPersistentVoipId); // Function Tiger.TigerGroupStateComponent.OnUserEnteredVoipRoom // (Final|Native|Protected|HasOutParms) // @ game+0x1465d70
	void OnRep_OnGroupMemberIdChanged(char InOldGroupMemberId); // Function Tiger.TigerGroupStateComponent.OnRep_OnGroupMemberIdChanged // (Final|Native|Protected) // @ game+0x1465cd0
	void OnRep_OnGroupChanged(); // Function Tiger.TigerGroupStateComponent.OnRep_OnGroupChanged // (Final|Native|Protected) // @ game+0x1465cb0
	void OnPlayerVoiceStatusChanged(struct FTigerPersistentPlayerID& InAffectedPlayer, bool bInWasSilenced); // Function Tiger.TigerGroupStateComponent.OnPlayerVoiceStatusChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1465bb0
	void OnCrossplaySyncTimeout(); // Function Tiger.TigerGroupStateComponent.OnCrossplaySyncTimeout // (Final|Native|Protected) // @ game+0x1465810
	bool IsGroupMemberWithLocalPlayer(); // Function Tiger.TigerGroupStateComponent.IsGroupMemberWithLocalPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14655e0
	bool IsGroupMemberByPersistentPlayerId(struct FTigerPersistentPlayerID InPlayerId); // Function Tiger.TigerGroupStateComponent.IsGroupMemberByPersistentPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14654e0
	bool IsGroupMember(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerGroupStateComponent.IsGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1465440
	bool IsExtendedGroupMember(struct ATigerPlayer* InTigerPlayer); // Function Tiger.TigerGroupStateComponent.IsExtendedGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14653a0
	void HandlePlayerStateAdded(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerGroupStateComponent.HandlePlayerStateAdded // (Final|Native|Protected) // @ game+0x1465310
	void HandleLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerGroupStateComponent.HandleLifeStatusChanged // (Final|Native|Protected) // @ game+0x14651e0
	char GetPlayerIndex(); // Function Tiger.TigerGroupStateComponent.GetPlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1465190
	struct TArray<struct ATigerPlayerState*> GetOtherGroupMembersBP(); // Function Tiger.TigerGroupStateComponent.GetOtherGroupMembersBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1465110
	struct TArray<int32_t> GetOtherGroupMemberIDsBP(); // Function Tiger.TigerGroupStateComponent.GetOtherGroupMemberIDsBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1465090
	void ExecuteForAllOtherMembers(struct FDelegate& InDelegate); // Function Tiger.TigerGroupStateComponent.ExecuteForAllOtherMembers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1464e80
	void ExecuteDelegate__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerGroupStateComponent.ExecuteDelegate__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	int32_t CurrentPresentGroupMemberCount(); // Function Tiger.TigerGroupStateComponent.CurrentPresentGroupMemberCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1464cf0
	void Client_UpdateGroupMembers(struct FTigerOtherGroupMembersData InOtherGroupMembers); // Function Tiger.TigerGroupStateComponent.Client_UpdateGroupMembers // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1464c30
	void Client_ReportCrossplaySettings(enum class ETigerMatchmakingPlatform InSyncedSetting); // Function Tiger.TigerGroupStateComponent.Client_ReportCrossplaySettings // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1464bb0
	void Client_LockArchetypeSelection(struct ATigerPlayerState* InPlayerState, enum class ETigerPowerKitType InArchetype); // Function Tiger.TigerGroupStateComponent.Client_LockArchetypeSelection // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1464ae0
	void Client_LockAndSyncCrossplaySettings(struct ATigerPlayerState* InOtherTigerPlayerState); // Function Tiger.TigerGroupStateComponent.Client_LockAndSyncCrossplaySettings // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x140d510
	bool AnyOtherMemberAlive(); // Function Tiger.TigerGroupStateComponent.AnyOtherMemberAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1464880
};

// Class Tiger.TigerGroupUIWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerGroupUIWidget : UTigerWidget {

	void OnGroupMemberReadyStatusChanged(struct ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking); // Function Tiger.TigerGroupUIWidget.OnGroupMemberReadyStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void ClearGroupMembers(); // Function Tiger.TigerGroupUIWidget.ClearGroupMembers // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void AddGroupMemberToCanvas(struct ATigerPlayerState* InGroupMember, bool bInIsReadyForMatchmaking); // Function Tiger.TigerGroupUIWidget.AddGroupMemberToCanvas // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerGuardVolume
// Size: 0x240 (Inherited: 0x228)
struct ATigerGuardVolume : AActor {
	bool bTriggerThreatState; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)
	struct TArray<struct UShapeComponent*> Colliders; // 0x230(0x10)

	void EndOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerGuardVolume.EndOverlappedActor // (Final|Native|Public) // @ game+0x1464d20
	void BeginOverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerGuardVolume.BeginOverlappedActor // (Final|Native|Public|HasOutParms) // @ game+0x14648b0
};

// Class Tiger.TigerHavenTriggerVolume
// Size: 0x260 (Inherited: 0x260)
struct ATigerHavenTriggerVolume : ATriggerVolume {
};

// Class Tiger.TigerHaven
// Size: 0x270 (Inherited: 0x228)
struct ATigerHaven : AActor {
	struct FString OverrideFinalHavenIdentifier; // 0x228(0x10)
	struct USplineComponent* HolyIncenseOuterSpline; // 0x238(0x08)
	struct USplineComponent* HolyIncenseInnerSpline; // 0x240(0x08)
	bool bUseInnerHolyIncenseSpline; // 0x248(0x01)
	char pad_249[0x27]; // 0x249(0x27)
};

// Class Tiger.TigerHavenCapturePoint
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerHavenCapturePoint : AActor {
	struct FText PointActivatedText; // 0x228(0x18)
	float HavenMarkerHeightOffset; // 0x240(0x04)
	char pad_244[0x4]; // 0x244(0x04)
	struct ATigerHaven* AssignedHaven; // 0x248(0x08)
	char pad_250[0x7c]; // 0x250(0x7c)
	bool bRevealedEveryone; // 0x2cc(0x01)
	char pad_2CD[0x3]; // 0x2cd(0x03)

	void StatusChanged(enum class ETigerCapturePointStatus Status); // Function Tiger.TigerHavenCapturePoint.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnRep_RevealEveryone(); // Function Tiger.TigerHavenCapturePoint.OnRep_RevealEveryone // (Final|Native|Private) // @ game+0x1465d50
	void OnPlayerDeath(struct ATigerPlayer* InDeadPlayer, struct AActor* InInstigator, bool bInWillRespawn); // Function Tiger.TigerHavenCapturePoint.OnPlayerDeath // (Final|Native|Private) // @ game+0x1465aa0
	void OnOverlapEnd(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerHavenCapturePoint.OnOverlapEnd // (Final|Native|Private) // @ game+0x14659d0
	void OnOverlapBegin(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerHavenCapturePoint.OnOverlapBegin // (Final|Native|Private) // @ game+0x1465900
	void OnAssaultFinished(); // Function Tiger.TigerHavenCapturePoint.OnAssaultFinished // (Final|Native|Private) // @ game+0x1465720
	void Multicast_OnEnableCapturePoint(); // Function Tiger.TigerHavenCapturePoint.Multicast_OnEnableCapturePoint // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0xbaaef0
	void Multicast_OnCurrentCaptureeChanged(struct ATigerPlayer* Capturee, enum class ETigerCapturePointStatus Status, float AuthCurrentCaptureTime); // Function Tiger.TigerHavenCapturePoint.Multicast_OnCurrentCaptureeChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1465610
	void HandleMatchSettingsSet(); // Function Tiger.TigerHavenCapturePoint.HandleMatchSettingsSet // (Final|Native|Protected) // @ game+0x1465260
};

// Class Tiger.TigerHealingBuff
// Size: 0x278 (Inherited: 0x268)
struct UTigerHealingBuff : UTigerBuff {
	float FlatHealPerSecond; // 0x268(0x04)
	float PercentageHealPerSecond; // 0x26c(0x04)
	struct UTigerCharacterEffect* HealEffect; // 0x270(0x08)
};

// Class Tiger.TigerHealingBuffInstance
// Size: 0x90 (Inherited: 0x88)
struct UTigerHealingBuffInstance : UTigerBuffInstance {
	struct UTigerHealingBuff* BuffConfig; // 0x88(0x08)
};

// Class Tiger.TigerHealthBarUI
// Size: 0x2a8 (Inherited: 0x260)
struct UTigerHealthBarUI : UUserWidget {
	struct FMulticastInlineDelegate OnHealthChanged; // 0x260(0x10)
	struct ATigerCharacter* TigerCharacterOwner; // 0x270(0x08)
	struct UMaterialInstanceDynamic* HealthBarMaterial; // 0x278(0x08)
	float LostHealthDelay; // 0x280(0x04)
	float LostHealthBarSpeed; // 0x284(0x04)
	float HealthAmountPerBar; // 0x288(0x04)
	float WidthBetweenSegments; // 0x28c(0x04)
	float LostHealthPercentage; // 0x290(0x04)
	char pad_294[0x10]; // 0x294(0x10)
	float DefaultHealthAmount; // 0x2a4(0x04)

	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealthPercentage); // DelegateFunction Tiger.TigerHealthBarUI.TigerDelegateHealthChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void SetOwner(struct ATigerCharacter* TigerCharacter); // Function Tiger.TigerHealthBarUI.SetOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x1466010
	void OnSegmentEmptied(float HorizontalProgress); // Function Tiger.TigerHealthBarUI.OnSegmentEmptied // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnHealthLost(); // Function Tiger.TigerHealthBarUI.OnHealthLost // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	float GetRecentDamageTaken(); // Function Tiger.TigerHealthBarUI.GetRecentDamageTaken // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x14651b0
	float GetNumberOfBars(); // Function Tiger.TigerHealthBarUI.GetNumberOfBars // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1465060
	float GetCurrentShield(); // Function Tiger.TigerHealthBarUI.GetCurrentShield // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1464f90
	float GetCurrentMaxHealth(); // Function Tiger.TigerHealthBarUI.GetCurrentMaxHealth // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1464f60
	float GetCurrentHealth(); // Function Tiger.TigerHealthBarUI.GetCurrentHealth // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1464f30
};

// Class Tiger.TigerHeatmapCollector
// Size: 0x140 (Inherited: 0x28)
struct UTigerHeatmapCollector : UObject {
	char pad_28[0xc0]; // 0x28(0xc0)
	struct TMap<struct ATigerCharacter*, struct FTigerCampingData> CampingData; // 0xe8(0x50)
	struct FTimerHandle CharacterMovementTimerHandle; // 0x138(0x08)

	void RecordCharacterMovement(); // Function Tiger.TigerHeatmapCollector.RecordCharacterMovement // (Final|Native|Private) // @ game+0x1465e50
};

// Class Tiger.TigerHeightenedSensesActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerHeightenedSensesActor : AActor {
	char pad_228[0x8]; // 0x228(0x08)
};

// Class Tiger.TigerHighTierLootGroup
// Size: 0x38 (Inherited: 0x28)
struct UTigerHighTierLootGroup : UObject {
	struct FLinearColor TextColor; // 0x28(0x10)

	struct FLinearColor GetTextColor(); // Function Tiger.TigerHighTierLootGroup.GetTextColor // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1469450
};

// Class Tiger.TigerHighTierLootComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerHighTierLootComponent : UActorComponent {
	struct TSoftClassPtr<UObject> HighTierLootGroup; // 0xb0(0x28)
};

// Class Tiger.TigerHitVerificationSettings
// Size: 0x60 (Inherited: 0x38)
struct UTigerHitVerificationSettings : UDeveloperSettings {
	bool bEnableVerification; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float MaxEndPointDistance; // 0x3c(0x04)
	float MaxStartingPointDistance; // 0x40(0x04)
	float SkipSimulatePathDistanceSquared; // 0x44(0x04)
	float MaxAngleDeviationFromPredictedPath; // 0x48(0x04)
	float MaxDistanceFromProjectilePath; // 0x4c(0x04)
	int32_t MinPathCountForLOSSubdivideCheck; // 0x50(0x04)
	int32_t MinPathCountForComplexLOSCheck; // 0x54(0x04)
	int32_t MaxComplexLOSChecks; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)
};

// Class Tiger.TigerHolyIncense
// Size: 0x2b0 (Inherited: 0x228)
struct ATigerHolyIncense : AActor {
	struct FMulticastInlineDelegate OnAssaultFinished; // 0x228(0x10)
	struct UTigerScriptedTexture* Texture; // 0x238(0x08)
	struct UTigerGasOverlay* SlateGasOverlay; // 0x240(0x08)
	struct UProceduralMeshComponent* ProceduralMesh; // 0x248(0x08)
	struct UTigerHolyIncenseWaveComponent* WaveComponent; // 0x250(0x08)
	struct USplineComponent* LevelBorder; // 0x258(0x08)
	float WallMinHeight; // 0x260(0x04)
	float WallMaxHeight; // 0x264(0x04)
	struct UProceduralMeshComponent* PreviewMesh; // 0x268(0x08)
	struct UMaterialInterface* GasMaterial; // 0x270(0x08)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x278(0x08)
	struct TArray<struct FVector2D> InitialVertices; // 0x280(0x10)
	struct ATigerHaven* FinalHaven; // 0x290(0x08)
	float NumVerticesPerKilometer; // 0x298(0x04)
	enum class ETigerGameType ValidForGameType; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float InitialArea; // 0x2a0(0x04)
	float InitialCircumference; // 0x2a4(0x04)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	bool UpdateAndRenderSlateGasOverlay(struct UTigerGasOverlay* InGasOverlay); // Function Tiger.TigerHolyIncense.UpdateAndRenderSlateGasOverlay // (Final|Native|Public|BlueprintCallable) // @ game+0x146a9b0
	void SetGasMaterial(struct UMaterialInterface* InMaterial); // Function Tiger.TigerHolyIncense.SetGasMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x146a900
	bool RenderToTexture(); // Function Tiger.TigerHolyIncense.RenderToTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x146a8d0
	void PreviewWallMesh(); // Function Tiger.TigerHolyIncense.PreviewWallMesh // (Final|Native|Private|BlueprintCallable) // @ game+0xb64580
	bool IsLocationInsideHolyIncense(struct FVector2D& InLocation, bool bInIncludeScheduledWave); // Function Tiger.TigerHolyIncense.IsLocationInsideHolyIncense // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469eb0
	struct UTigerGasOverlay* InitializeScriptedTexture(struct FSlateBrush InWaveBrush, struct FSlateBrush InTargetBrush, struct FSlateBrush InWavePolyBrush, struct FSlateBrush InTargetPolyBrush); // Function Tiger.TigerHolyIncense.InitializeScriptedTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x1469540
	struct UTextureRenderTarget2D* InitializeRenderTexture(); // Function Tiger.TigerHolyIncense.InitializeRenderTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x1469510
	float GetTimeSecondsUntilCurrentWaveBegins(); // Function Tiger.TigerHolyIncense.GetTimeSecondsUntilCurrentWaveBegins // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469490
	float GetSecondsUntilCurrentWaveEnds(); // Function Tiger.TigerHolyIncense.GetSecondsUntilCurrentWaveEnds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469420
	float GetDistanceToBorder(struct FVector2D& Location, bool bIncludeScheduledWave, struct FVector2D& OutClosestLocation, struct FVector2D& OutClosestNormal); // Function Tiger.TigerHolyIncense.GetDistanceToBorder // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469260
	float GetCurrentDamageInterval(); // Function Tiger.TigerHolyIncense.GetCurrentDamageInterval // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469160
	float GetCurrentDamageAmount(); // Function Tiger.TigerHolyIncense.GetCurrentDamageAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469130
	bool GetClosestLocationOnNextWaveWall(struct FVector2D& Location, struct FVector2D& OutClosestLocation, bool& bIsOutsidePlayableArea); // Function Tiger.TigerHolyIncense.GetClosestLocationOnNextWaveWall // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1468ed0
	void ForceBlueprintInitialise(); // Function Tiger.TigerHolyIncense.ForceBlueprintInitialise // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerHolyIncenseWaveComponent
// Size: 0x238 (Inherited: 0xb0)
struct UTigerHolyIncenseWaveComponent : UActorComponent {
	struct FMulticastInlineDelegate OnWaveStartMovement; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnWaveStopped; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnWaveRevealed; // 0xd0(0x10)
	int32_t FallbackSeed; // 0xe0(0x04)
	int32_t FallbackHavenSeed; // 0xe4(0x04)
	bool bTestFallbackSeed; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	struct TArray<struct UDataTable*> WaveDataTables; // 0xf0(0x10)
	struct UCurveFloat* WaveProgressSmoothingCurve; // 0x100(0x08)
	int32_t NumAvoidancePoints; // 0x108(0x04)
	bool bRetraceInnerAndOuterMapPaths; // 0x10c(0x01)
	char pad_10D[0x3]; // 0x10d(0x03)
	float MapGradientThickness; // 0x110(0x04)
	float TickCollisionAndMapTextureInterval; // 0x114(0x04)
	float CircumferenceKmForMinimumVFXVertices; // 0x118(0x04)
	float CircumferenceKmForMaximumVFXVertices; // 0x11c(0x04)
	int32_t MinimumVFXVertices; // 0x120(0x04)
	int32_t MaximumVFXVertices; // 0x124(0x04)
	bool bUseInteriorTriangulation; // 0x128(0x01)
	bool bUseFallbackTriangulation; // 0x129(0x01)
	char pad_12A[0x6]; // 0x12a(0x06)
	struct UMaterialParameterCollection* RedGasParameterCollection; // 0x130(0x08)
	int32_t MinimumSimulatedVertices; // 0x138(0x04)
	int32_t MaximumSimulatedVertices; // 0x13c(0x04)
	bool bRedistributeVertices; // 0x140(0x01)
	bool bOutputWaveGeneration; // 0x141(0x01)
	char pad_142[0x2]; // 0x142(0x02)
	int32_t RepeatWaveGeneration; // 0x144(0x04)
	float DataSendingTime; // 0x148(0x04)
	int32_t GasVertexPackets; // 0x14c(0x04)
	int32_t LastPacketID; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct TArray<struct FTigerWaveData> Waves; // 0x158(0x10)
	struct FTigerHolyIncenseSettings Settings; // 0x168(0x08)
	struct TArray<struct FTigerRevealedWave> RevealedWaves; // 0x170(0x10)
	struct UMaterialInstanceDynamic* MaterialInstance; // 0x180(0x08)
	struct ATigerHolyIncense* HolyIncense; // 0x188(0x08)
	char pad_190[0x4]; // 0x190(0x04)
	float AssaultStartTime; // 0x194(0x04)
	char pad_198[0x50]; // 0x198(0x50)
	float DefaultOverlapToleranceCm; // 0x1e8(0x04)
	float OverlapToleranceIncreasePerWaveCm; // 0x1ec(0x04)
	float OverlapToleranceFailureIncrementCm; // 0x1f0(0x04)
	float OverlapToleranceMinimumCm; // 0x1f4(0x04)
	int32_t OverlapToleranceFailuresBeforeIncrement; // 0x1f8(0x04)
	int32_t OverlapTestingPerformanceVertexCount; // 0x1fc(0x04)
	float OverlapInterpStepDistanceCm; // 0x200(0x04)
	float OverlapMaximumInterpSteps; // 0x204(0x04)
	char pad_208[0x30]; // 0x208(0x30)

	void TigerOnWaveStopped__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveStopped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnWaveStartMovement__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveStartMovement__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnWaveRevealed__DelegateSignature(); // DelegateFunction Tiger.TigerHolyIncenseWaveComponent.TigerOnWaveRevealed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRep_Settings(); // Function Tiger.TigerHolyIncenseWaveComponent.OnRep_Settings // (Final|Native|Private) // @ game+0x146a730
	void OnRep_RevealedWaves(); // Function Tiger.TigerHolyIncenseWaveComponent.OnRep_RevealedWaves // (Final|Native|Private) // @ game+0x146a710
	void OnMatchSettingsSet(); // Function Tiger.TigerHolyIncenseWaveComponent.OnMatchSettingsSet // (Final|Native|Private) // @ game+0x146a5c0
	void Multicast_SettingsChanged(struct FTigerHolyIncenseSettings NewSettings); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_SettingsChanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x146a470
	void Multicast_SetElapsedAssaultTime(float InElapsedTime, float InTimeMultiplier); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_SetElapsedAssaultTime // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x146a3a0
	void Multicast_RevealWave(struct FTigerRevealedWave InPartiallyRevealedWave); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_RevealWave // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x146a2f0
	void Multicast_BeginAssaults(float StartTime); // Function Tiger.TigerHolyIncenseWaveComponent.Multicast_BeginAssaults // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x146a060
	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerHolyIncenseWaveComponent.MatchStateChanged // (Final|Native|Private) // @ game+0x1469f90
	float GetWaveProgress(); // Function Tiger.TigerHolyIncenseWaveComponent.GetWaveProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14694c0
	int32_t GetNumberOfWaves(); // Function Tiger.TigerHolyIncenseWaveComponent.GetNumberOfWaves // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469400
	int32_t GetCurrentWaveIndex(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentWaveIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469190
	float GetCurrentCircumference(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentCircumference // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469100
	float GetCurrentArea(); // Function Tiger.TigerHolyIncenseWaveComponent.GetCurrentArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14690e0
};

// Class Tiger.TigerHookingBuff
// Size: 0x268 (Inherited: 0x268)
struct UTigerHookingBuff : UTigerBuff {
};

// Class Tiger.TigerHookedBuff
// Size: 0x268 (Inherited: 0x268)
struct UTigerHookedBuff : UTigerBuff {
};

// Class Tiger.TigerHook
// Size: 0x2e8 (Inherited: 0x228)
struct ATigerHook : AActor {
	struct USphereComponent* HookTrigger; // 0x228(0x08)
	struct FVector HookLocation; // 0x230(0x0c)
	struct FVector TargetLocation; // 0x23c(0x0c)
	struct FVector StartLocation; // 0x248(0x0c)
	enum class ETigerHookState HookState; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	struct UTigerHookConfig* Config; // 0x258(0x08)
	float CurrentThrowTime; // 0x260(0x04)
	int32_t HookingBuffID; // 0x264(0x04)
	struct ATigerCharacter* HitCharacter; // 0x268(0x08)
	struct FVector PullBackStartAtLocation; // 0x270(0x0c)
	struct FVector PullBackStopAtLocation; // 0x27c(0x0c)
	float TimeUntilPulledBack; // 0x288(0x04)
	float CurrentTimeLeftUntilPulledBack; // 0x28c(0x04)
	float HitCharacterCameraRotateCurrentTime; // 0x290(0x04)
	struct FRotator HitCharacterCameraRotationStart; // 0x294(0x0c)
	struct FRotator HitCharacterRotationStart; // 0x2a0(0x0c)
	struct FRotator HitCharacterCameraRotationEnd; // 0x2ac(0x0c)
	struct FVector OriginalVelocity; // 0x2b8(0x0c)
	float CharacterVelocityCutoffCurrentTime; // 0x2c4(0x04)
	struct UAnimMontage* ThrowMontage; // 0x2c8(0x08)
	struct UAnimMontage* ReelMontage; // 0x2d0(0x08)
	struct FTimerHandle PreReelTimerHandle; // 0x2d8(0x08)
	char pad_2E0[0x8]; // 0x2e0(0x08)

	void OnStartThrow(); // Function Tiger.TigerHook.OnStartThrow // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnOwnerMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function Tiger.TigerHook.OnOwnerMovementUpdated // (Final|Native|Private|HasDefaults) // @ game+0x146a5e0
	void OnNothingHit(); // Function Tiger.TigerHook.OnNothingHit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnNonCharacterHit(struct AActor* Actor); // Function Tiger.TigerHook.OnNonCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCharacterHit(struct ATigerCharacter* Character); // Function Tiger.TigerHook.OnCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_StartThrow(struct FVector InStartLocation, struct FVector InTargetLocation); // Function Tiger.TigerHook.Multicast_StartThrow // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x146a500
	void Multicast_OnHookNothingHit(); // Function Tiger.TigerHook.Multicast_OnHookNothingHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1443bc0
	void Multicast_OnHookNonCharacterHit(struct AActor* Actor); // Function Tiger.TigerHook.Multicast_OnHookNonCharacterHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x146a260
	void Multicast_OnHookCharacterHit(struct FVector StopPullLocation, struct ATigerCharacter* Character, float TimeUntilReturn, bool bCharacterAlive); // Function Tiger.TigerHook.Multicast_OnHookCharacterHit // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x146a0f0
	void AuthHookBlockingHit(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerHook.AuthHookBlockingHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x1468c40
	void AuthHookBeginOverlap(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerHook.AuthHookBeginOverlap // (Final|Native|Private|HasOutParms) // @ game+0x1468a10
};

// Class Tiger.TigerHorizontalArchetypeSelectorUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerHorizontalArchetypeSelectorUI : UTigerWidget {
	struct UTigerGameInstance* TigerGameInstance; // 0x280(0x08)

	struct UUserWidget* CreateWidgetForArchetype(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateWidgetForArchetype // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void CreateDivider(); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateDivider // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void CreateArchetypeWidgetsForClan(struct UTigerPlayerClanData* InClanData); // Function Tiger.TigerHorizontalArchetypeSelectorUI.CreateArchetypeWidgetsForClan // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerHSensesTargetComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerHSensesTargetComponent : UActorComponent {
	float HeartAnimTime; // 0xb0(0x04)
	float HeartRate; // 0xb4(0x04)
	float HeartRateTarget; // 0xb8(0x04)
	float HeartRateNone; // 0xbc(0x04)
	float HeartRateSuspicious; // 0xc0(0x04)
	float HeartRateThreatened; // 0xc4(0x04)
	float HeartRateVariance; // 0xc8(0x04)
	float HeartRateChangeRate; // 0xcc(0x04)
	struct UCurveFloat* HeartAnimRateCurve; // 0xd0(0x08)
};

// Class Tiger.TigerUIColorSet
// Size: 0x290 (Inherited: 0x30)
struct UTigerUIColorSet : UDataAsset {
	struct FLinearColor ColorArray[0x26]; // 0x30(0x260)

	struct FLinearColor GetColor(enum class ETigerUIColor UIColor, enum class ETigerColourSpace ColourSpace); // Function Tiger.TigerUIColorSet.GetColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1469000
};

// Class Tiger.TigerHUDSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerHUDSettings : USharkLocalDeveloperSettings {
	enum class ETigerDamageNumberAmount DamageNumberAmountSetting; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerImageUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerImageUI : UTigerWidget {

	struct UImage* GetImage(); // Function Tiger.TigerImageUI.GetImage // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerImpendingCollisionCalculator
// Size: 0x58 (Inherited: 0x28)
struct UTigerImpendingCollisionCalculator : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerInboxRewardSectionWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerInboxRewardSectionWidget : UTigerWidget {

	struct TArray<struct FTigerItemId> ParseRewardIdsFromString(struct FString inString); // Function Tiger.TigerInboxRewardSectionWidget.ParseRewardIdsFromString // (Final|Native|Public|BlueprintCallable) // @ game+0x146f590
};

// Class Tiger.TigerInboxService
// Size: 0x90 (Inherited: 0x28)
struct UTigerInboxService : UObject {
	char pad_28[0x68]; // 0x28(0x68)
};

// Class Tiger.TigerInboxUI
// Size: 0x448 (Inherited: 0x3c0)
struct UTigerInboxUI : UTigerSceneBackgroundUI {
	struct TArray<struct FTigerInboxMessage> MessageList; // 0x3c0(0x10)
	struct TArray<uint64_t> ReadIdsCache; // 0x3d0(0x10)
	struct TArray<uint64_t> DeletedIdsCache; // 0x3e0(0x10)
	struct TMap<uint64_t, uint32_t> MessageLookup; // 0x3f0(0x50)
	bool bIsRefreshing; // 0x440(0x01)
	char pad_441[0x7]; // 0x441(0x07)

	void UpdateNotificationState(); // Function Tiger.TigerInboxUI.UpdateNotificationState // (Final|Native|Protected|BlueprintCallable) // @ game+0x1470390
	void SendStatusUpdatesToBackend(); // Function Tiger.TigerInboxUI.SendStatusUpdatesToBackend // (Final|Native|Protected) // @ game+0x146f940
	void RebuildMessageLookup(); // Function Tiger.TigerInboxUI.RebuildMessageLookup // (Final|Native|Protected) // @ game+0x146f6d0
	void OnGetInboxSucceeded(struct FTigerInbox& InInbox); // Function Tiger.TigerInboxUI.OnGetInboxSucceeded // (Final|Native|Protected|HasOutParms) // @ game+0x146f480
	void OnGetInboxFailed(struct FString InErrorMessage); // Function Tiger.TigerInboxUI.OnGetInboxFailed // (Final|Native|Protected) // @ game+0x146f3e0
	void OnFetchMessageInfoListComplete(bool InSuccess); // Function Tiger.TigerInboxUI.OnFetchMessageInfoListComplete // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void MarkMessageRead(struct FTigerInboxMessage& InMessage); // Function Tiger.TigerInboxUI.MarkMessageRead // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x146f210
	void MarkMessageDeleted(struct FTigerInboxMessage& InMessage); // Function Tiger.TigerInboxUI.MarkMessageDeleted // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x146f120
	bool IsStillLoggedIn(); // Function Tiger.TigerInboxUI.IsStillLoggedIn // (Final|Native|Private|Const) // @ game+0x146efb0
	void FetchMessages(); // Function Tiger.TigerInboxUI.FetchMessages // (Final|Native|Protected|BlueprintCallable) // @ game+0x146edf0
};

// Class Tiger.TigerIndoorComponent
// Size: 0x480 (Inherited: 0x480)
struct UTigerIndoorComponent : UBoxComponent {
};

// Class Tiger.TigerIndoorVolume
// Size: 0x260 (Inherited: 0x260)
struct ATigerIndoorVolume : ATriggerVolume {
};

// Class Tiger.TigerInGameGraphSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerInGameGraphSettings : UDeveloperSettings {
	bool bEnableNetGraph; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerInGameGraphs
// Size: 0x288 (Inherited: 0x280)
struct UTigerInGameGraphs : UTigerWidget {
	struct UTigerGraphWidget* NetGraphWidget; // 0x280(0x08)

	void ToggleNetGraph(); // Function Tiger.TigerInGameGraphs.ToggleNetGraph // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void ShowNetGraph(bool bInShow); // Function Tiger.TigerInGameGraphs.ShowNetGraph // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsNetGraphWidgetEnabled(); // Function Tiger.TigerInGameGraphs.IsNetGraphWidgetEnabled // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146ef80
};

// Class Tiger.TigerIngameMenuWidget
// Size: 0x2d0 (Inherited: 0x298)
struct UTigerIngameMenuWidget : UTigerMenuWidget {
	struct TArray<struct UTigerIngameSubmenuWidget*> SubmenuClasses; // 0x298(0x10)
	struct TArray<struct UTigerIngameSubmenuWidget*> SubmenuWidgets; // 0x2a8(0x10)
	int32_t ActiveMenuIndex; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct UTigerIngameSubmenuWidget* SelectedMenu; // 0x2c0(0x08)
	bool bShouldShowPlayerCurrency; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)

	void ToggleExistingSubmenu(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.ToggleExistingSubmenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1470100
	void SelectMenuToTheRight(); // Function Tiger.TigerIngameMenuWidget.SelectMenuToTheRight // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void SelectMenuToTheLeft(); // Function Tiger.TigerIngameMenuWidget.SelectMenuToTheLeft // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void SelectMenu(struct UTigerIngameSubmenuWidget* NewSelectedMenu); // Function Tiger.TigerIngameMenuWidget.SelectMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x146f8b0
	void OnMenuSelected(); // Function Tiger.TigerIngameMenuWidget.OnMenuSelected // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void LocalPlayerSpawned(); // Function Tiger.TigerIngameMenuWidget.LocalPlayerSpawned // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsSubmenuSelected(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.IsSubmenuSelected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146f080
	bool IsSubmenuOpen(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.IsSubmenuOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146efe0
	void HideFadeBackground(); // Function Tiger.TigerIngameMenuWidget.HideFadeBackground // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct UTigerIngameSubmenuWidget* GetSubmenuFromClass(struct UTigerIngameSubmenuWidget* WidgetClass); // Function Tiger.TigerIngameMenuWidget.GetSubmenuFromClass // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x146ee90
	void ConstructSubMenusIfNotConstructed(); // Function Tiger.TigerIngameMenuWidget.ConstructSubMenusIfNotConstructed // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerInputIcon
// Size: 0x280 (Inherited: 0x280)
struct UTigerInputIcon : UTigerWidget {

	void SetIconFromKey(struct FKey& Key); // Function Tiger.TigerInputIcon.SetIconFromKey // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerInputMenuUI
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerInputMenuUI : UTigerIngameSubmenuWidget {

	void ShowCursor(); // Function Tiger.TigerInputMenuUI.ShowCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x14700a0
	void ResetToDefault(); // Function Tiger.TigerInputMenuUI.ResetToDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x146f890
	void HideCursor(); // Function Tiger.TigerInputMenuUI.HideCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x146ef30
};

// Class Tiger.TigerInputPrompt
// Size: 0x2e8 (Inherited: 0x280)
struct UTigerInputPrompt : UTigerWidget {
	struct FText PrefixText; // 0x280(0x18)
	struct FText PostfixText; // 0x298(0x18)
	bool bUseKey; // 0x2b0(0x01)
	bool bUseAction; // 0x2b1(0x01)
	char pad_2B2[0x2]; // 0x2b2(0x02)
	struct FName InputAction; // 0x2b4(0x08)
	struct FName InputAxis; // 0x2bc(0x08)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct FKey InputKey; // 0x2c8(0x18)
	bool bToggleVisibilityOnGamepadChanged; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)

	void UpdateProperties(struct FText& NewPrefixText, struct FText& NewPostfixText, bool bNewUseKey, struct FName NewInputAction, struct FName NewInputAxis, struct FKey NewInputKey); // Function Tiger.TigerInputPrompt.UpdateProperties // (Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x14703b0
	void UpdateInputKey(struct FKey NewInputKey); // Function Tiger.TigerInputPrompt.UpdateInputKey // (Final|Native|Public|BlueprintCallable) // @ game+0x14702b0
	void UpdateInputAxis(struct FName NewInputAxis); // Function Tiger.TigerInputPrompt.UpdateInputAxis // (Final|Native|Public|BlueprintCallable) // @ game+0x1470220
	void UpdateInputAction(struct FName NewInputAction); // Function Tiger.TigerInputPrompt.UpdateInputAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1470190
	void UpdateIcon(); // Function Tiger.TigerInputPrompt.UpdateIcon // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void ResetDirtyFlag(); // Function Tiger.TigerInputPrompt.ResetDirtyFlag // (Final|Native|Protected|BlueprintCallable) // @ game+0x146f870
	void RegisterInputActionListener(struct FDelegate& Delegate); // Function Tiger.TigerInputPrompt.RegisterInputActionListener // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x146f6f0
	bool IsDirty(); // Function Tiger.TigerInputPrompt.IsDirty // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x146ef50
};

// Class Tiger.TigerInteractionControllerComponent
// Size: 0x278 (Inherited: 0xb0)
struct UTigerInteractionControllerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnTargetInteractionChanged; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnTargetInteractionBlocked; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnAddNearbyInteraction; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnRemoveNearbyInteraction; // 0xe0(0x10)
	char pad_F0[0x18]; // 0xf0(0x18)
	struct TArray<uint32_t> HashedNPCsToTalkTo; // 0x108(0x10)
	float DiablerizeDotProductCutOff; // 0x118(0x04)
	float HeldInputInteractionTime; // 0x11c(0x04)
	float InteractionLineTraceLength; // 0x120(0x04)
	float InteractionLineTraceThickness; // 0x124(0x04)
	bool AllowAutomaticPickUpBehindPlayer; // 0x128(0x01)
	char pad_129[0x3]; // 0x129(0x03)
	float AutoPickUpCoolDown; // 0x12c(0x04)
	struct FVector AutoPickUpBoxVolumeExtents; // 0x130(0x0c)
	float CloseInteractionSphereSize; // 0x13c(0x04)
	float CloseInteractionCheckInterval; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct ATigerPlayerController* TigerPC; // 0x148(0x08)
	struct ATigerPlayer* TigerPlayerPawn; // 0x150(0x08)
	char pad_158[0x10]; // 0x158(0x10)
	struct TWeakObjectPtr<struct ATigerCharacter> TargetCharacter; // 0x168(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> TrainerTarget; // 0x170(0x08)
	struct TWeakObjectPtr<struct ATigerItemWorldRepresentation> InteractionItem; // 0x178(0x08)
	struct TWeakObjectPtr<struct ATigerItemWorldRepresentation> LastAutoPickupItem; // 0x180(0x08)
	struct TWeakObjectPtr<struct ATigerInteractiveObject> TargetInteractiveObject; // 0x188(0x08)
	struct ATigerBaseNPC* PotentialFeedingTarget; // 0x190(0x08)
	char pad_198[0x10]; // 0x198(0x10)
	struct TArray<struct FOverlapResult> TriggerVolumeOverlaps; // 0x1a8(0x10)
	char pad_1B8[0x10]; // 0x1b8(0x10)
	struct TArray<struct FHitResult> InteractionSweepResults; // 0x1c8(0x10)
	char pad_1D8[0x10]; // 0x1d8(0x10)
	struct TArray<struct FHitResult> InteractionTraceResults; // 0x1e8(0x10)
	char pad_1F8[0x10]; // 0x1f8(0x10)
	struct TArray<struct FOverlapResult> AutoPickUpInteractionOverlaps; // 0x208(0x10)
	char pad_218[0x34]; // 0x218(0x34)
	struct TWeakObjectPtr<struct ATigerBaseNPC> CachedVendor; // 0x24c(0x08)
	char pad_254[0x24]; // 0x254(0x24)

	void StopVendorInteraction(); // Function Tiger.TigerInteractionControllerComponent.StopVendorInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x14700e0
	void StopObjectInteraction(); // Function Tiger.TigerInteractionControllerComponent.StopObjectInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x14700c0
	bool ShouldBeInDialogueCameraState(); // Function Tiger.TigerInteractionControllerComponent.ShouldBeInDialogueCameraState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1470060
	void SetShouldBeInDialogueCameraState(); // Function Tiger.TigerInteractionControllerComponent.SetShouldBeInDialogueCameraState // (Final|Native|Public|BlueprintCallable) // @ game+0x1470040
	void Server_StopVendorInteraction(); // Function Tiger.TigerInteractionControllerComponent.Server_StopVendorInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fff0
	void Server_StopPhysicalInteraction(enum class ETargetInteraction InStoppedInteraction); // Function Tiger.TigerInteractionControllerComponent.Server_StopPhysicalInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146ff40
	void Server_StopObjectInteraction(struct ATigerInteractiveObject* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StopObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fe80
	void Server_StopJudgeFeed(); // Function Tiger.TigerInteractionControllerComponent.Server_StopJudgeFeed // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fe30
	void Server_StopFeeding(); // Function Tiger.TigerInteractionControllerComponent.Server_StopFeeding // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fde0
	void Server_StartVendorInteraction(struct ATigerBaseNPC* InInteractingCharacter); // Function Tiger.TigerInteractionControllerComponent.Server_StartVendorInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fd20
	void Server_StartRevive(struct ATigerPlayer* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartRevive // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fc60
	void Server_StartObjectInteraction(struct ATigerInteractiveObject* InTarget); // Function Tiger.TigerInteractionControllerComponent.Server_StartObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fba0
	void Server_StartJudgeFeed(struct ATigerJudge* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartJudgeFeed // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fae0
	void Server_StartFeeding(struct ATigerBaseNPC* InTargetCharacter); // Function Tiger.TigerInteractionControllerComponent.Server_StartFeeding // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146fa20
	void Server_StartDiablerize(struct ATigerPlayer* Target); // Function Tiger.TigerInteractionControllerComponent.Server_StartDiablerize // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x146f960
	void RemoveNPCToTalkTo(struct FText& InNPCName); // Function Tiger.TigerInteractionControllerComponent.RemoveNPCToTalkTo // (Final|Native|Public|HasOutParms) // @ game+0x146f7a0
	void OnRemoveNearbyInteraction__DelegateSignature(struct ATigerInteractiveObject* InInteractionObject); // DelegateFunction Tiger.TigerInteractionControllerComponent.OnRemoveNearbyInteraction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInteractionChanged__DelegateSignature(enum class ETargetInteraction InInteraction); // DelegateFunction Tiger.TigerInteractionControllerComponent.OnInteractionChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInteractionBlocked__DelegateSignature(struct ATigerInteractiveObject* InInteractionObject); // DelegateFunction Tiger.TigerInteractionControllerComponent.OnInteractionBlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnAddNearbyInteraction__DelegateSignature(struct ATigerInteractiveObject* InInteractionObject); // DelegateFunction Tiger.TigerInteractionControllerComponent.OnAddNearbyInteraction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool NeedsToTalkToNPC(struct FText& InNPCName); // Function Tiger.TigerInteractionControllerComponent.NeedsToTalkToNPC // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x146f300
	struct ATigerCharacter* GetInteractionCharacter(); // Function Tiger.TigerInteractionControllerComponent.GetInteractionCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146ee40
	enum class ETargetInteraction GetActiveOrTargetInteraction(); // Function Tiger.TigerInteractionControllerComponent.GetActiveOrTargetInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x146ee10
	void Client_SuccessfulObjectInteraction(struct ATigerInteractiveObject* InTarget); // Function Tiger.TigerInteractionControllerComponent.Client_SuccessfulObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13d26a0
	void Client_RemoveNPCToTalkTo(uint32_t InHashedNPCName); // Function Tiger.TigerInteractionControllerComponent.Client_RemoveNPCToTalkTo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x146ed60
	void Client_InvalidateTimedObjectInteraction(); // Function Tiger.TigerInteractionControllerComponent.Client_InvalidateTimedObjectInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x146ed40
	void Client_FailedObjectInteraction(struct ATigerInteractiveObject* InTarget); // Function Tiger.TigerInteractionControllerComponent.Client_FailedObjectInteraction // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x146ecb0
	void Client_AddNPCToTalkTo(uint32_t InHashedNPCName); // Function Tiger.TigerInteractionControllerComponent.Client_AddNPCToTalkTo // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x146ec20
};

// Class Tiger.TigerInteractiveCollectible
// Size: 0x2d0 (Inherited: 0x2b0)
struct ATigerInteractiveCollectible : ATigerClientInteractiveObject {
	struct UTigerCollectibleData* Collectible; // 0x2b0(0x08)
	struct UStaticMeshComponent* CollectibleMesh; // 0x2b8(0x08)
	struct UAkAudioEvent* CollectibleSoundEffect; // 0x2c0(0x08)
	struct UParticleSystemComponent* CollectibleParticleSystem; // 0x2c8(0x08)
};

// Class Tiger.TigerInteractiveElevator
// Size: 0x2e0 (Inherited: 0x2a0)
struct ATigerInteractiveElevator : ATigerInteractiveObject {
	struct AActor* ElevatorDestination; // 0x2a0(0x08)
	struct AActor* ElevatorDestinationClanSpecific; // 0x2a8(0x08)
	enum class ETigerClan ElevatorDestinationClanType; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	float TravelDelay; // 0x2b4(0x04)
	struct UAkAudioEvent* ButtonPushedSound; // 0x2b8(0x08)
	struct UAkAudioEvent* ElevatorArriveSound; // 0x2c0(0x08)
	struct UAkAudioEvent* ElevatorTravelSound; // 0x2c8(0x08)
	char pad_2D0[0x10]; // 0x2d0(0x10)

	void OnClientStartTravelTimer(); // Function Tiger.TigerInteractiveElevator.OnClientStartTravelTimer // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnClientEndTravel(); // Function Tiger.TigerInteractiveElevator.OnClientEndTravel // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerInteractiveGrimoireProp
// Size: 0x2c0 (Inherited: 0x2a0)
struct ATigerInteractiveGrimoireProp : ATigerInteractiveObject {
	struct UStaticMeshComponent* ItemMesh; // 0x2a0(0x08)
	struct UTigerGrimoireEntry* EntryToUnlock; // 0x2a8(0x08)
	struct UTigerIngameSubmenuWidget* GrimoireSubmenu; // 0x2b0(0x08)
	char CustomStencilGroup; // 0x2b8(0x01)
	char pad_2B9[0x7]; // 0x2b9(0x07)

	void OpenGrimoire(); // Function Tiger.TigerInteractiveGrimoireProp.OpenGrimoire // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnLanguageChanged(); // Function Tiger.TigerInteractiveGrimoireProp.OnLanguageChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsDeactivated(); // Function Tiger.TigerInteractiveGrimoireProp.IsDeactivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1475230
	void DisableHighlight(); // Function Tiger.TigerInteractiveGrimoireProp.DisableHighlight // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerInteractiveItemDropOff
// Size: 0x358 (Inherited: 0x2b0)
struct ATigerInteractiveItemDropOff : ATigerClientInteractiveObject {
	struct UStaticMeshComponent* DropOffMesh; // 0x2b0(0x08)
	struct UAkAudioEvent* DropOffSoundEffect; // 0x2b8(0x08)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0x2c0(0x10)
	char pad_2D0[0x40]; // 0x2d0(0x40)
	struct UParticleSystemComponent* DropOffParticleSystem; // 0x310(0x08)
	struct FText PlayerFacingItemName; // 0x318(0x18)
	struct FText ActionOverrideText; // 0x330(0x18)
	float InteractionTimeIfNoAnimation; // 0x348(0x04)
	char pad_34C[0xc]; // 0x34c(0x0c)

	bool HasDroppedOff(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerInteractiveItemDropOff.HasDroppedOff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474e00
	void ClientOnDropOffComplete(); // Function Tiger.TigerInteractiveItemDropOff.ClientOnDropOffComplete // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerInteractiveNpcComponent
// Size: 0x110 (Inherited: 0xb0)
struct UTigerInteractiveNpcComponent : UActorComponent {
	struct UTigerElysiumNpcNameplateWidget* OverheadWidget; // 0xb0(0x08)
	struct UTigerNpcDialogueList* DialogueList; // 0xb8(0x08)
	float DelayBetweenInteractions; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct UTigerDialogueManager* DialogueManager; // 0xc8(0x08)
	struct FText NpcName; // 0xd0(0x18)
	struct FText NpcTitle; // 0xe8(0x18)
	struct UTexture2D* NpcIcon; // 0x100(0x08)
	enum class ETigerClan NpcClan; // 0x108(0x01)
	char pad_109[0x7]; // 0x109(0x07)

	void ResortDialogueLines(); // Function Tiger.TigerInteractiveNpcComponent.ResortDialogueLines // (Final|Native|Private) // @ game+0x1475590
	struct UTigerDialogueManager* GetDialogueManager(); // Function Tiger.TigerInteractiveNpcComponent.GetDialogueManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474290
	void BindToPlayerUpdate(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerInteractiveNpcComponent.BindToPlayerUpdate // (Final|Native|Private) // @ game+0x1473570
};

// Class Tiger.TigerInteractivePoint
// Size: 0x360 (Inherited: 0x2b0)
struct ATigerInteractivePoint : ATigerClientInteractiveObject {
	bool bHasMesh; // 0x2b0(0x01)
	bool bShowMeshPreInteraction; // 0x2b1(0x01)
	bool bShowMeshPostInteraction; // 0x2b2(0x01)
	char pad_2B3[0x5]; // 0x2b3(0x05)
	struct UStaticMesh* InteractivePointStaticMesh; // 0x2b8(0x08)
	struct UStaticMeshComponent* InteractivePointMeshComponent; // 0x2c0(0x08)
	bool bHasSoundEffect; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct UAkAudioEvent* InteractivePointSoundEffect; // 0x2d0(0x08)
	bool bHasParticleSystem; // 0x2d8(0x01)
	bool bShowParticleSystemPreInteraction; // 0x2d9(0x01)
	bool bShowParticleSystemPostInteraction; // 0x2da(0x01)
	char pad_2DB[0x5]; // 0x2db(0x05)
	struct UParticleSystem* InteractivePointParticleSystem; // 0x2e0(0x08)
	struct UParticleSystemComponent* InteractivePointParticleSystemComponent; // 0x2e8(0x08)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0x2f0(0x10)
	float InteractionTimeIfNoAnimation; // 0x300(0x04)
	bool bForceNotValidForPlayer; // 0x304(0x01)
	bool bDestroyPostInteraction; // 0x305(0x01)
	char pad_306[0x2]; // 0x306(0x02)
	struct FText PlayerFacingInteractionText; // 0x308(0x18)
	char pad_320[0x40]; // 0x320(0x40)

	void Client_SetParticeVisibility(bool InParticleVisibile); // Function Tiger.TigerInteractivePoint.Client_SetParticeVisibility // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1473b90
	void Client_SetMeshVisibility(bool InMeshVisibile); // Function Tiger.TigerInteractivePoint.Client_SetMeshVisibility // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1473b00
};

// Class Tiger.TigerInteractiveQuestItem
// Size: 0x348 (Inherited: 0x2b0)
struct ATigerInteractiveQuestItem : ATigerClientInteractiveObject {
	struct UStaticMeshComponent* QuestMesh; // 0x2b0(0x08)
	struct UAkAudioEvent* QuestSoundEffect; // 0x2b8(0x08)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0x2c0(0x10)
	char pad_2D0[0x40]; // 0x2d0(0x40)
	struct UParticleSystemComponent* QuestParticleSystem; // 0x310(0x08)
	struct FText PlayerFacingItemName; // 0x318(0x18)
	struct FText ActionOverrideText; // 0x330(0x18)
};

// Class Tiger.TigerEquippedModModifierValues
// Size: 0x80 (Inherited: 0x28)
struct UTigerEquippedModModifierValues : UObject {
	struct UTigerMaxIntAggregator* ExtendedMagazineLevel; // 0x28(0x08)
	struct UTigerFloatMultiplierAggregator* ReloadSpeed; // 0x30(0x08)
	struct UTigerFloatMultiplierAggregator* RecoilMultiplier; // 0x38(0x08)
	struct UTigerFloatMultiplierAggregator* SpreadMultiplier; // 0x40(0x08)
	struct UTigerFloatMultiplierAggregator* SwapSpeedMultiplier; // 0x48(0x08)
	struct UTigerFloatMultiplierAggregator* SpreadDecreaseMultiplier; // 0x50(0x08)
	struct UTigerFloatMinAggregator* ModdedFOV; // 0x58(0x08)
	struct UTigerFloatCurveMultiplierAggregator* AimedSpreadMultiplier; // 0x60(0x08)
	struct UTigerBoolAnyAggregator* IsScoped; // 0x68(0x08)
	struct UTigerBoolAnyAggregator* CanSwitchFireMode; // 0x70(0x08)
	struct UTigerWeaponCrosshairWidget* CrossHairWidget; // 0x78(0x08)
};

// Class Tiger.TigerInventoryComponent
// Size: 0x330 (Inherited: 0xb0)
struct UTigerInventoryComponent : UActorComponent {
	struct FMulticastInlineDelegate OnInventoryChanged; // 0xb0(0x10)
	int32_t MaxItemsPerCategory; // 0xc0(0x04)
	int32_t AmmoStackDistance; // 0xc4(0x04)
	struct FSharkRandomDeviation DropItemLaunchSpeed; // 0xc8(0x08)
	char SlotColumnCount; // 0xd0(0x01)
	char pad_D1[0x3f]; // 0xd1(0x3f)
	struct ATigerPlayer* Player; // 0x110(0x08)
	struct UTigerItemAsset* UnarmedItemAsset; // 0x118(0x08)
	struct FTigerInventoryWeapon Weapons[0x4]; // 0x120(0x20)
	struct FTigerItemData Items[0xe]; // 0x140(0xe0)
	struct TArray<struct UTigerAmmoAsset*> AmmoPickupItems; // 0x220(0x10)
	struct TArray<struct FTigerInventorySlotContent> Slots; // 0x230(0x10)
	char pad_240[0xc0]; // 0x240(0xc0)
	struct FTigerItemData Artifact; // 0x300(0x10)
	struct TArray<struct FTigerItemData> AdditionalItemsToDropOnDeath; // 0x310(0x10)
	struct TArray<struct UTigerItemAsset*> ItemBlacklistOnDeath; // 0x320(0x10)

	void UnequipWeaponModForSlot(enum class ETigerWeaponSlot Slot, struct UTigerItemAsset* ModItemAsset); // Function Tiger.TigerInventoryComponent.UnequipWeaponModForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1475e30
	struct UTigerHuntingKnifeItemAsset* TryToGetHuntingKnifeAsset(); // Function Tiger.TigerInventoryComponent.TryToGetHuntingKnifeAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1475e00
	void SwapRangedWeaponSlots(); // Function Tiger.TigerInventoryComponent.SwapRangedWeaponSlots // (Final|Native|Protected|BlueprintCallable) // @ game+0x1475de0
	void SwapModWeapon(enum class ERangedWeaponModType InModType); // Function Tiger.TigerInventoryComponent.SwapModWeapon // (Final|Native|Protected|BlueprintCallable) // @ game+0x1475d60
	void SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup); // Function Tiger.TigerInventoryComponent.SetSwapOutDefaultWeaponOnPickup // (Final|Native|Private|BlueprintCallable) // @ game+0x1475cd0
	void Server_UnequipWeaponModForSlot(enum class ETigerWeaponSlot InSlot, struct UTigerItemAsset* InModItemAsset); // Function Tiger.TigerInventoryComponent.Server_UnequipWeaponModForSlot // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1475bd0
	void Server_SwapRangedWeaponSlots(); // Function Tiger.TigerInventoryComponent.Server_SwapRangedWeaponSlots // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1475b80
	void Server_SwapModWeapon(enum class ERangedWeaponModType InModType); // Function Tiger.TigerInventoryComponent.Server_SwapModWeapon // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1475ad0
	void Server_SetSwapOutDefaultWeaponOnPickup(bool bInSwapOutDefaultWeaponOnPickup); // Function Tiger.TigerInventoryComponent.Server_SetSwapOutDefaultWeaponOnPickup // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1475a10
	void Server_RemoveItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Server_RemoveItem // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1475910
	void Server_EquipWeaponSlot(enum class ETigerWeaponSlot WeaponSlot); // Function Tiger.TigerInventoryComponent.Server_EquipWeaponSlot // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1475860
	void Server_EquipWeaponMod(struct UTigerRangedModItemAsset* InModItemAsset); // Function Tiger.TigerInventoryComponent.Server_EquipWeaponMod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14757a0
	void Server_DropWeapon(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.Server_DropWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14756f0
	void Server_DropItem(struct UTigerItemAsset* Item, int32_t DropCount, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Server_DropItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14755b0
	void RemoveItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.RemoveItem // (Final|Native|Public|BlueprintCallable) // @ game+0x14754c0
	void OnInventoryChanged__DelegateSignature(struct UTigerInventoryComponent* InInventoryComponent); // DelegateFunction Tiger.TigerInventoryComponent.OnInventoryChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool IsModSupportedForWeapon(struct UTigerRangedModItemAsset* InModItemAsset, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.IsModSupportedForWeapon // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1475270
	bool IsCategoryFull(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.IsCategoryFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14751a0
	bool HasModEquippedOnWeapon(struct UTigerRangedModItemAsset* InModItemAsset, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.HasModEquippedOnWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1475000
	bool HasItemInCategory(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.HasItemInCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474f70
	bool HasItem(struct UTigerItemAsset* InItem); // Function Tiger.TigerInventoryComponent.HasItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474ed0
	struct UTigerItemAsset* GetWeaponItemBySlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetWeaponItemBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474d70
	void GetWeaponInfoForUnequippedModItem(struct UTigerRangedModItemAsset* ModItemAsset, bool bIgnoreEquippedMod, struct FTigerInventoryWeapon& WeaponOut, struct FTigerModSlotInfo& ReplacesModOut); // Function Tiger.TigerInventoryComponent.GetWeaponInfoForUnequippedModItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1474be0
	struct UTigerWeapon* GetWeaponBySlot(enum class ETigerWeaponSlot WeaponSlot); // Function Tiger.TigerInventoryComponent.GetWeaponBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474b50
	void GetUsableModsForUnequippedWeaponItem(struct UTigerItemAsset* InWeaponItem, struct TArray<struct FTigerModSlotInfo>& OutWeaponItemMods, bool& bOutHasAnyTransferableMods); // Function Tiger.TigerInventoryComponent.GetUsableModsForUnequippedWeaponItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1474a10
	enum class ETigerWeaponSlot GetSlotForUnequippedWeaponItem(struct UTigerItemAsset* WeaponItem); // Function Tiger.TigerInventoryComponent.GetSlotForUnequippedWeaponItem // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474970
	struct FTigerInventorySlotContent GetSlotForPosition(int32_t Column, int32_t Row); // Function Tiger.TigerInventoryComponent.GetSlotForPosition // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474890
	enum class ETigerItemPickupInfo GetPickupInfo(struct UTigerItemAsset* Item, int32_t ItemCount, int32_t& OutPickedUpItemCount); // Function Tiger.TigerInventoryComponent.GetPickupInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474770
	struct TArray<struct FTigerModSlotInfo> GetModsForSlot(enum class ETigerWeaponSlot InSlot); // Function Tiger.TigerInventoryComponent.GetModsForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474690
	int32_t GetItemCountByCategory(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.GetItemCountByCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474600
	int32_t GetItemCount(struct UTigerItemAsset* InItemAsset); // Function Tiger.TigerInventoryComponent.GetItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474560
	struct UTigerItemAsset* GetItemByType(enum class ETigerInventoryItemType InventoryType); // Function Tiger.TigerInventoryComponent.GetItemByType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14744d0
	int32_t GetInventoryAmmoByType(enum class ETigerWeaponAmmoType AmmoType); // Function Tiger.TigerInventoryComponent.GetInventoryAmmoByType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474440
	struct TArray<struct UTigerItemAsset*> GetInventory(); // Function Tiger.TigerInventoryComponent.GetInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x14743c0
	bool GetEquippedRangedWeaponAmmo(int32_t& OutWeaponAmmo, int32_t& OutInventoryAmmo); // Function Tiger.TigerInventoryComponent.GetEquippedRangedWeaponAmmo // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14742b0
	struct UTigerItemAsset* GetArtifact(); // Function Tiger.TigerInventoryComponent.GetArtifact // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1474260
	int32_t GetAmmoInWeaponForSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetAmmoInWeaponForSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14741d0
	struct UTigerAmmoAsset* GetAmmoAssetOfSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerInventoryComponent.GetAmmoAssetOfSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1474140
	struct UTigerAmmoAsset* GetAmmoAssetFromAmmoType(enum class ETigerWeaponAmmoType AmmoType); // Function Tiger.TigerInventoryComponent.GetAmmoAssetFromAmmoType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14740b0
	void EquipWeaponMod(struct UTigerRangedModItemAsset* ModItemAsset); // Function Tiger.TigerInventoryComponent.EquipWeaponMod // (Final|Native|Public|BlueprintCallable) // @ game+0x1474020
	void EquipItem(struct UTigerItemAsset* Item); // Function Tiger.TigerInventoryComponent.EquipItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1473f90
	void DropWeapon(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerInventoryComponent.DropWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1473f10
	void DropItem(struct UTigerItemAsset* Item, bool bUpdateEquippedItem, int32_t DropCount); // Function Tiger.TigerInventoryComponent.DropItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1473e00
	void Client_UpdateWeaponModForSlot(enum class ETigerWeaponSlot Slot, struct UTigerRangedModItemAsset* EquippedBarrelMod, struct UTigerRangedModItemAsset* EquippedAmmoMod, struct UTigerRangedModItemAsset* EquippedScopeMod, struct UTigerRangedModItemAsset* EquippedStockMod, struct UTigerRangedModItemAsset* EquippedSpecialMod); // Function Tiger.TigerInventoryComponent.Client_UpdateWeaponModForSlot // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1473c20
	void Client_RevertSwapRangedWeaponSlots(struct UTigerWeapon* InPrimaryWeapon); // Function Tiger.TigerInventoryComponent.Client_RevertSwapRangedWeaponSlots // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1473a70
	void Client_RemoveWeapon(enum class ETigerWeaponSlot InWeaponSlot, bool bInPickedUpNewWeaponInSlot); // Function Tiger.TigerInventoryComponent.Client_RemoveWeapon // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14739a0
	void Client_RemoveFromInventory(struct UTigerItemAsset* Item, int32_t DropCount, bool bUpdateEquippedItem); // Function Tiger.TigerInventoryComponent.Client_RemoveFromInventory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1473890
	void Client_AddToInventory(struct UTigerItemAsset* InItem, int16_t InItemCount, bool bInNotifyPlayerOnNewItem, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerInventoryComponent.Client_AddToInventory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1473730
	void AddToInventory(struct UTigerItemAsset* InItem, enum class ETigerTelemetryItemSourceID InItemSourceID, int32_t InItemCount, struct ATigerLootBox* InLootbox, bool bInNotifyPlayerOnNewItem); // Function Tiger.TigerInventoryComponent.AddToInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1472f70
};

// Class Tiger.TigerInventoryUI
// Size: 0x2c8 (Inherited: 0x2c0)
struct UTigerInventoryUI : UTigerIngameSubmenuWidget {
	float RightStickXInput; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)

	void OnInventoryUpdatedBP(); // Function Tiger.TigerInventoryUI.OnInventoryUpdatedBP // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerInWorldWidget
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerInWorldWidget : UTigerWidget {
	struct FVector WorldLocation; // 0x280(0x0c)
	struct FVector ComponentOffset; // 0x28c(0x0c)
	struct FVector2D ViewportPosition; // 0x298(0x08)
	struct UTigerInWorldWidget* InnerWidget; // 0x2a0(0x08)
	struct TWeakObjectPtr<struct USceneComponent> ComponentToFollow; // 0x2a8(0x08)
	struct TArray<struct UWidget*> PlayerDistanceScalingWidgets; // 0x2b0(0x10)
	bool bWasOnScreen; // 0x2c0(0x01)
	bool bIsObstructed; // 0x2c1(0x01)
	bool bLimitRotationAngleToSides; // 0x2c2(0x01)
	bool bSupportsHover; // 0x2c3(0x01)
	bool bShowDistanceMarker; // 0x2c4(0x01)
	bool bConstrainWidgetToScreen; // 0x2c5(0x01)
	bool bCheckIfObscructed; // 0x2c6(0x01)
	char pad_2C7[0x1]; // 0x2c7(0x01)

	void UpdatePlayerDistanceScalingWidgets(); // Function Tiger.TigerInWorldWidget.UpdatePlayerDistanceScalingWidgets // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void UpdateOffScreenState(float InRotationDegrees); // Function Tiger.TigerInWorldWidget.UpdateOffScreenState // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool ShouldShowDistanceMarker(); // Function Tiger.TigerInWorldWidget.ShouldShowDistanceMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14815c0
	void OnWidgetObstructed(bool bInIsObstructed); // Function Tiger.TigerInWorldWidget.OnWidgetObstructed // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnScreenStateChanged(bool bInIsOnScreen); // Function Tiger.TigerInWorldWidget.OnScreenStateChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnInWorldFocusLost(); // Function Tiger.TigerInWorldWidget.OnInWorldFocusLost // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnInWorldFocusGained(); // Function Tiger.TigerInWorldWidget.OnInWorldFocusGained // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnInnerWidgetChanged(); // Function Tiger.TigerInWorldWidget.OnInnerWidgetChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void FollowActor(struct AActor* InActor); // Function Tiger.TigerInWorldWidget.FollowActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1480860
	struct UTigerInWorldWidget* CreateInnerWidget(struct UTigerInWorldWidget* InWidgetClass); // Function Tiger.TigerInWorldWidget.CreateInnerWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x14807c0
	void AddPlayerDistanceScalingWidget(struct UWidget* InWidget); // Function Tiger.TigerInWorldWidget.AddPlayerDistanceScalingWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1480490
};

// Class Tiger.TigerInWorldIconController
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerInWorldIconController : UActorComponent {
	struct UCanvasPanel* RootCanvas; // 0xb0(0x08)
	struct TArray<struct UTigerInWorldWidget*> Widgets; // 0xb8(0x10)
	struct UTigerInWorldWidget* ExplicitFocusWidget; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)
	float MaxFocusDistanceFromCrosshair; // 0xd8(0x04)
	struct FBox2D ScreenMargins; // 0xdc(0x14)

	void SetRootCanvas(struct UCanvasPanel* InRootCanvas); // Function Tiger.TigerInWorldIconController.SetRootCanvas // (Final|Native|Public|BlueprintCallable) // @ game+0x1481530
	void SetExplicitFocusWidget(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.SetExplicitFocusWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1481300
	void RemoveFromScreen(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.RemoveFromScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1481270
	void OnInGameMenuToggled(bool bInIsOpen); // Function Tiger.TigerInWorldIconController.OnInGameMenuToggled // (Final|Native|Protected) // @ game+0x14811e0
	struct UTigerInWorldWidget* CreateInWorldWidget(struct UTigerInWorldWidget* InOuterWidgetClass, struct UTigerInWorldWidget* InInnerWidgetClass); // Function Tiger.TigerInWorldIconController.CreateInWorldWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x14806f0
	void AddToScreen(struct UTigerInWorldWidget* InWidget); // Function Tiger.TigerInWorldIconController.AddToScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1480550
};

// Class Tiger.TigerCollectibleItemAsset
// Size: 0x138 (Inherited: 0x130)
struct UTigerCollectibleItemAsset : UTigerItemAsset {
	struct UTigerCollectibleData* Collectible; // 0x130(0x08)
};

// Class Tiger.TigerMultipleAmmoAsset
// Size: 0x180 (Inherited: 0x130)
struct UTigerMultipleAmmoAsset : UTigerItemAsset {
	struct TMap<struct UTigerAmmoAsset*, int32_t> AmmoCount; // 0x130(0x50)
};

// Class Tiger.TigerAmmoAsset
// Size: 0x160 (Inherited: 0x130)
struct UTigerAmmoAsset : UTigerItemAsset {
	enum class ETigerWeaponAmmoType AmmoType; // 0x130(0x01)
	char pad_131[0x7]; // 0x131(0x07)
	struct FSlateColor AmmoColor; // 0x138(0x28)
};

// Class Tiger.TigerArtifactAsset
// Size: 0x138 (Inherited: 0x130)
struct UTigerArtifactAsset : UTigerItemAsset {
	enum class ETigerArtifactAbility ArtifactAbility; // 0x130(0x01)
	char pad_131[0x7]; // 0x131(0x07)
};

// Class Tiger.TigerBodyArmorAsset
// Size: 0x1e0 (Inherited: 0x130)
struct UTigerBodyArmorAsset : UTigerItemAsset {
	int32_t Durability; // 0x130(0x04)
	struct FTigerCharacterStatModification StatChanges; // 0x134(0xa8)
	char pad_1DC[0x4]; // 0x1dc(0x04)
};

// Class Tiger.TigerRelicAsset
// Size: 0x130 (Inherited: 0x130)
struct UTigerRelicAsset : UTigerItemAsset {
};

// Class Tiger.TigerRangedModItemAsset
// Size: 0x148 (Inherited: 0x130)
struct UTigerRangedModItemAsset : UTigerItemAsset {
	struct TArray<struct UTigerRangedWeaponModModifier*> ModEffects; // 0x130(0x10)
	int32_t ModEquipPriority; // 0x140(0x04)
	enum class ERangedWeaponModType ModType; // 0x144(0x01)
	char pad_145[0x3]; // 0x145(0x03)
};

// Class Tiger.TigerHuntingKnifeItemAsset
// Size: 0x130 (Inherited: 0x130)
struct UTigerHuntingKnifeItemAsset : UTigerItemAsset {
};

// Class Tiger.TigerItemCluster
// Size: 0x360 (Inherited: 0x228)
struct ATigerItemCluster : AActor {
	struct ATigerItemWorldRepresentation* ItemActorClass; // 0x228(0x08)
	struct FItemClusterArray Items; // 0x230(0x120)
	struct TArray<struct ATigerItemWorldRepresentation*> ItemActors; // 0x350(0x10)

	void Multicast_UpdateItemCount(uint32_t InItemClusterUID, int32_t InNewItemCount); // Function Tiger.TigerItemCluster.Multicast_UpdateItemCount // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1481110
	void Multicast_SetFinalLocation(uint32_t InItemClusterUID, struct FVector_NetQuantize10 InFinalLocation); // Function Tiger.TigerItemCluster.Multicast_SetFinalLocation // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1481040
};

// Class Tiger.TigerItemDatabase
// Size: 0xc8 (Inherited: 0x28)
struct UTigerItemDatabase : UObject {
	struct TMap<struct FName, struct FTigerItemDatabaseCategory> ItemsByCategory; // 0x28(0x50)
	struct TMap<struct FTigerGenderClanKey, struct UTigerCharacterPreset*> StartingPresets; // 0x78(0x50)

	void OnItemLoaded__DelegateSignature(struct FTigerItemId ItemId, struct UTigerInventoryItemBase* InventoryItem); // DelegateFunction Tiger.TigerItemDatabase.OnItemLoaded__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void LoadItemIdAsync(struct FTigerItemId& InItemId, struct FDelegate& InDelegate); // Function Tiger.TigerItemDatabase.LoadItemIdAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1480ea0
	struct TSoftClassPtr<UObject> GetItemPath(struct FTigerItemId& InItemId); // Function Tiger.TigerItemDatabase.GetItemPath // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480b20
	struct FTigerItemId GetItemIdFromPath(struct FSoftObjectPath& InObjectPath); // Function Tiger.TigerItemDatabase.GetItemIdFromPath // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480a60
	struct UTigerInventoryItemBase* GetItem(struct FTigerItemId& InItemId); // Function Tiger.TigerItemDatabase.GetItem // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14809b0
};

// Class Tiger.TigerItemPreviewInputComponent
// Size: 0x158 (Inherited: 0x138)
struct UTigerItemPreviewInputComponent : UInputComponent {
	float CameraSensitivityTurnMultiplier; // 0x138(0x04)
	float CameraSensitivityTurnAtRateMultiplier; // 0x13c(0x04)
	float CameraSensitivityVerticalMovementMultiplier; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
	struct ATigerBattlepassRewardPreview* ItemActor; // 0x148(0x08)
	char pad_150[0x8]; // 0x150(0x08)
};

// Class Tiger.TigerBattlepassRewardPreview
// Size: 0x280 (Inherited: 0x228)
struct ATigerBattlepassRewardPreview : AActor {
	struct UTigerInventoryItemBase* PreviewItem; // 0x228(0x08)
	bool bIsZoomEnabled; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct TArray<struct FName> CameraTags; // 0x238(0x10)
	struct TArray<struct FTigerItemPreviewCamera> Cameras; // 0x248(0x10)
	struct FViewTargetTransitionParams CameraTransitionParams; // 0x258(0x10)
	float CameraRadius; // 0x268(0x04)
	float CameraMoveSpeed; // 0x26c(0x04)
	char pad_270[0x10]; // 0x270(0x10)

	void SetNormalizedCameraHeight(struct ACineCameraActor* InCameraActor, float InNormalizedHeight); // Function Tiger.TigerBattlepassRewardPreview.SetNormalizedCameraHeight // (Final|Native|Protected|BlueprintCallable) // @ game+0x1481460
	void OnToggleCamera(struct ACineCameraActor* InCurrentCamera, struct ACineCameraActor* InNewCamera); // Function Tiger.TigerBattlepassRewardPreview.OnToggleCamera // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnPreviewItemUpdated(); // Function Tiger.TigerBattlepassRewardPreview.OnPreviewItemUpdated // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnPreviewItemOpened(); // Function Tiger.TigerBattlepassRewardPreview.OnPreviewItemOpened // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void MoveToCameraIndex(int32_t InNewCameraIndex); // Function Tiger.TigerBattlepassRewardPreview.MoveToCameraIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1480fb0
	bool IsValidCameraOffset(struct FVector InCameraOffset); // Function Tiger.TigerBattlepassRewardPreview.IsValidCameraOffset // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1480e00
	float GetNormalizedCameraHeight(struct ACineCameraActor* InCameraActor); // Function Tiger.TigerBattlepassRewardPreview.GetNormalizedCameraHeight // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1480c00
	void AddWorldRotationToItem(struct FRotator& InRotation); // Function Tiger.TigerBattlepassRewardPreview.AddWorldRotationToItem // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x14805e0
};

// Class Tiger.TigerItemSpawner
// Size: 0x228 (Inherited: 0x228)
struct ATigerItemSpawner : AActor {
};

// Class Tiger.TigerItemWorldRepresentation
// Size: 0x2a8 (Inherited: 0x228)
struct ATigerItemWorldRepresentation : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct UTigerCompassMarkerWidget* CompassMarker; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct UTigerItemAsset* ItemType; // 0x240(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x248(0x08)
	char pad_250[0x18]; // 0x250(0x18)
	int32_t ItemCount; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UStaticMeshComponent* Mesh; // 0x270(0x08)
	struct ATigerItemCluster* ItemCluster; // 0x278(0x08)
	uint32_t ItemClusterUID; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct ATigerLootSpawner* LootSpawner; // 0x288(0x08)
	enum class ETigerTelemetryItemSourceID ItemSourceID; // 0x290(0x01)
	char pad_291[0x17]; // 0x291(0x17)

	void SetItemOutlineVisible(bool ShowOutline); // Function Tiger.TigerItemWorldRepresentation.SetItemOutlineVisible // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SetItemAsset(struct UTigerItemAsset* NewItemType, int32_t NewItemCount); // Function Tiger.TigerItemWorldRepresentation.SetItemAsset // (Native|Event|Public|BlueprintEvent) // @ game+0x1481390
	void OnFinalTransformReceived(struct FTransform& InFinalTransform); // Function Tiger.TigerItemWorldRepresentation.OnFinalTransformReceived // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerJoinSessionAsync
// Size: 0x188 (Inherited: 0x30)
struct UTigerJoinSessionAsync : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailed; // 0x40(0x10)
	char pad_50[0x138]; // 0x50(0x138)

	struct UTigerJoinSessionAsync* JoinSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController, struct FTigerBpFindSessionSelectedSession& FoundSession); // Function Tiger.TigerJoinSessionAsync.JoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1486290
};

// Class Tiger.TigerJudge
// Size: 0xa50 (Inherited: 0x9c0)
struct ATigerJudge : ATigerBaseNPC {
	struct UTigerJudgeShieldComponent* JudgeShieldComponent; // 0x9c0(0x08)
	struct UTigerJudgeSwordComponent* JudgeSwordComponent; // 0x9c8(0x08)
	struct UTigerWorldMarkerComponent* WorldMarkerComponent; // 0x9d0(0x08)
	struct UTigerJudgeBaseState* CurrentJudgeState; // 0x9d8(0x08)
	char pad_9E0[0x8]; // 0x9e0(0x08)
	struct ATigerPlayer* FeedingPlayer; // 0x9e8(0x08)
	struct ATigerEntityJudgeHelicopter* HelicopterClass; // 0x9f0(0x08)
	struct TWeakObjectPtr<struct ATigerEntityJudgeHelicopter> Helicopter; // 0x9f8(0x08)
	struct FTigerJudgeRotationSettings CurrentRotationSettings; // 0xa00(0x08)
	struct ATigerPlayer* CurrentPrimaryTarget; // 0xa08(0x08)
	float DamageCauserCutoffDistanceSq; // 0xa10(0x04)
	char pad_A14[0x4]; // 0xa14(0x04)
	struct FTigerTimedAnimationTriggerWrapper AnimationTriggerWrapper; // 0xa18(0x18)
	struct TArray<struct FTigerJudgePlayerDamage> PlayerDamageCollection; // 0xa30(0x10)
	char pad_A40[0x10]; // 0xa40(0x10)

	struct ATigerPlayer* SetPrimaryTarget(struct ATigerPlayer* PrimaryTarget); // Function Tiger.TigerJudge.SetPrimaryTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1486990
	void SetJudgeRotationSettings(struct FTigerJudgeRotationSettings& RotationSettings); // Function Tiger.TigerJudge.SetJudgeRotationSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14868f0
	void OnRep_CurrentJudgeState(struct UTigerJudgeBaseState* OldState); // Function Tiger.TigerJudge.OnRep_CurrentJudgeState // (Final|Native|Protected) // @ game+0x1486800
	void OnJudgeStateChanged(struct UTigerJudgeBaseState* OldState, struct UTigerJudgeBaseState* NewState); // Function Tiger.TigerJudge.OnJudgeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Multicast_PlayTimedAnimationTriggers(struct TArray<struct FTigerTimedAnimationTrigger> AnimationTriggers); // Function Tiger.TigerJudge.Multicast_PlayTimedAnimationTriggers // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1486570
	float GetDamageDoneByPlayer(struct ATigerPlayer* Player); // Function Tiger.TigerJudge.GetDamageDoneByPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1485f80
};

// Class Tiger.TigerJudgeAnimInstance
// Size: 0x3d0 (Inherited: 0x3c0)
struct UTigerJudgeAnimInstance : UTigerAnimInstance {
	struct UTigerJudgeBaseState* CurrentJudgeState; // 0x3c0(0x08)
	struct UTigerJudgeBaseState* OldJudgeState; // 0x3c8(0x08)

	void OnJudgeStateChanged(); // Function Tiger.TigerJudgeAnimInstance.OnJudgeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct ATigerJudge* GetOwningJudge(); // Function Tiger.TigerJudgeAnimInstance.GetOwningJudge // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1486190
};

// Class Tiger.TigerJudgeSwingData
// Size: 0x80 (Inherited: 0x30)
struct UTigerJudgeSwingData : UDataAsset {
	struct TMap<struct FName, struct FTigerJudgeSwingCollisionInfo> SwingCollisionInfos; // 0x30(0x50)
};

// Class Tiger.TigerJudgeBaseState
// Size: 0x60 (Inherited: 0x28)
struct UTigerJudgeBaseState : UObject {
	struct ATigerJudge* JudgePawn; // 0x28(0x08)
	struct ATigerAiJudgeController* JudgeAiController; // 0x30(0x08)
	struct UTigerAiJudgeSmComponent* JudgeStateMachineComp; // 0x38(0x08)
	float MovementSpeed; // 0x40(0x04)
	float TurnSpeed; // 0x44(0x04)
	float StateEntryTime; // 0x48(0x04)
	float JudgeDefaultRotationSpeed[0x4]; // 0x4c(0x10)
	char pad_5C[0x4]; // 0x5c(0x04)

	void OnTick(float DeltaTime); // Function Tiger.TigerJudgeBaseState.OnTick // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnStateCreationSetup(); // Function Tiger.TigerJudgeBaseState.OnStateCreationSetup // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnExitState(struct UTigerJudgeBaseState* NewState); // Function Tiger.TigerJudgeBaseState.OnExitState // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnEnterState(struct UTigerJudgeBaseState* OldState); // Function Tiger.TigerJudgeBaseState.OnEnterState // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	float GetDefaultRotationSpeed(enum class ETigerJudgeRotationMode RotationMode); // Function Tiger.TigerJudgeBaseState.GetDefaultRotationSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x1486020
};

// Class Tiger.TigerJudgeBaseAttackState
// Size: 0xc0 (Inherited: 0x60)
struct UTigerJudgeBaseAttackState : UTigerJudgeBaseState {
	struct TArray<struct ATigerCharacter*> HitCharacters; // 0x60(0x10)
	float Cooldown; // 0x70(0x04)
	float AttackFailSafeDuration; // 0x74(0x04)
	float AttackMinRange; // 0x78(0x04)
	float AttackMaxRange; // 0x7c(0x04)
	bool bUseAttackRangeHorizontally; // 0x80(0x01)
	char pad_81[0x3]; // 0x81(0x03)
	float MaxHeightDiff; // 0x84(0x04)
	struct UTigerJudgeBaseState* PreviousState; // 0x88(0x08)
	struct UTigerJudgeSwingData* SwingData; // 0x90(0x08)
	bool bJudgeSwordActiveStatus; // 0x98(0x01)
	bool bIsCheckingAttackCollisionData; // 0x99(0x01)
	char pad_9A[0x2]; // 0x9a(0x02)
	struct FVector SwordHitBox; // 0x9c(0x0c)
	struct UCurveFloat* SwordLengthCurve; // 0xa8(0x08)
	char pad_B0[0x10]; // 0xb0(0x10)

	void OnJudgeSwordActiveStatusChanged(); // Function Tiger.TigerJudgeBaseAttackState.OnJudgeSwordActiveStatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCharactersHitWithSword(struct ATigerCharacter* CharacterHitBySword); // Function Tiger.TigerJudgeBaseAttackState.OnCharactersHitWithSword // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsOffCooldown(); // Function Tiger.TigerJudgeBaseAttackState.IsOffCooldown // (Final|Native|Public|BlueprintCallable) // @ game+0x1486260
};

// Class Tiger.TigerJudgeCombatState
// Size: 0x88 (Inherited: 0x60)
struct UTigerJudgeCombatState : UTigerJudgeBaseState {
	struct TArray<struct UTigerJudgeBaseAttackState*> AttackTypes; // 0x60(0x10)
	struct TArray<struct UTigerJudgeBaseAttackState*> AvailableAttacks; // 0x70(0x10)
	float TimeWithoutSeeingBloodhuntedPlayers; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)

	bool UpdateAvailableAttacks(); // Function Tiger.TigerJudgeCombatState.UpdateAvailableAttacks // (Final|Native|Protected|BlueprintCallable) // @ game+0x1486b90
	void MoveToClosestBloodhuntedPlayer(); // Function Tiger.TigerJudgeCombatState.MoveToClosestBloodhuntedPlayer // (Final|Native|Protected|BlueprintCallable) // @ game+0x1486550
	bool IsAttackOffCooldown(struct UTigerJudgeBaseAttackState* StateType); // Function Tiger.TigerJudgeCombatState.IsAttackOffCooldown // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14861c0
	struct ATigerPlayer* GetClosestBloodhuntedPlayer(); // Function Tiger.TigerJudgeCombatState.GetClosestBloodhuntedPlayer // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1485f50
	struct TArray<struct UTigerJudgeBaseAttackState*> GetApplicableAttacksForTarget(struct ATigerPlayer* Player); // Function Tiger.TigerJudgeCombatState.GetApplicableAttacksForTarget // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1485e70
};

// Class Tiger.TigerJudgeDownedState
// Size: 0x60 (Inherited: 0x60)
struct UTigerJudgeDownedState : UTigerJudgeBaseState {
};

// Class Tiger.TigerJudgeFedOnState
// Size: 0x70 (Inherited: 0x60)
struct UTigerJudgeFedOnState : UTigerJudgeBaseState {
	float FeedingOffset; // 0x60(0x04)
	struct FName FeedingAnimationName; // 0x64(0x08)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class Tiger.TigerJudgePatrollingState
// Size: 0x110 (Inherited: 0x60)
struct UTigerJudgePatrollingState : UTigerJudgeBaseState {
	struct FName IndexKeyName; // 0x60(0x08)
	struct FName WaypointKeyName; // 0x68(0x08)
	struct FName DirectionKeyName; // 0x70(0x08)
	char pad_78[0x98]; // 0x78(0x98)
};

// Class Tiger.TigerJudgeShieldComponent
// Size: 0xf20 (Inherited: 0xef0)
struct UTigerJudgeShieldComponent : USkeletalMeshComponent {
	struct FVector DeflectEffectOffset; // 0xef0(0x0c)
	char pad_EFC[0x4]; // 0xefc(0x04)
	struct UParticleSystem* DeflectEffect; // 0xf00(0x08)
	struct UAkAudioEvent* DeflectSound; // 0xf08(0x08)
	float BlockingHalfAngle; // 0xf10(0x04)
	char pad_F14[0xc]; // 0xf14(0x0c)

	void TriggerDeflectEffect(struct ATigerCharacter* Attacker); // Function Tiger.TigerJudgeShieldComponent.TriggerDeflectEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1486b00
	void Multicast_TriggerDeflectEffect(struct ATigerCharacter* Attacker); // Function Tiger.TigerJudgeShieldComponent.Multicast_TriggerDeflectEffect // (Net|Native|Event|NetMulticast|Public) // @ game+0x1486770
};

// Class Tiger.TigerJudgeSwordComponent
// Size: 0x4f0 (Inherited: 0x4e0)
struct UTigerJudgeSwordComponent : UStaticMeshComponent {
	struct UParticleSystem* CharacterHitEffect; // 0x4e0(0x08)
	struct UAkAudioEvent* CharacterHitSound; // 0x4e8(0x08)

	void SpawnHitEffect(struct ATigerCharacter* Character, struct FVector& Offset); // Function Tiger.TigerJudgeSwordComponent.SpawnHitEffect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1486a30
	void Multicast_SpawnHitEffect(struct ATigerCharacter* Character, struct FVector Offset); // Function Tiger.TigerJudgeSwordComponent.Multicast_SpawnHitEffect // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x14866a0
};

// Class Tiger.TigerKindredCharmEffectActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerKindredCharmEffectActor : AActor {
	float KindredCharmPercent; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)

	void OnShouldDestroy(bool bInIsDedicatedServer); // Function Tiger.TigerKindredCharmEffectActor.OnShouldDestroy // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPercentChanged(bool bInIsDedicatedServer); // Function Tiger.TigerKindredCharmEffectActor.OnPercentChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_ShouldDestroy(); // Function Tiger.TigerKindredCharmEffectActor.Multicast_ShouldDestroy // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1418f00
	void Multicast_SetKindredCharmPercent(float InPercent); // Function Tiger.TigerKindredCharmEffectActor.Multicast_SetKindredCharmPercent // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1486610
};

// Class Tiger.TigerKindredCharmWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerKindredCharmWidget : UTigerWidget {

	void OnKindredCharmCountChanged(int32_t InNewCount); // Function Tiger.TigerKindredCharmWidget.OnKindredCharmCountChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerLaceratingThrowProjectile
// Size: 0x260 (Inherited: 0x228)
struct ATigerLaceratingThrowProjectile : AActor {
	struct UTigerLaceratingThrowConfig* ConfigType; // 0x228(0x08)
	struct FVector TargetLocation; // 0x230(0x0c)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct FTimerHandle ArrivalTimerHandle; // 0x240(0x08)
	bool bIsMoving; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	int32_t Rank; // 0x24c(0x04)
	char pad_250[0xc]; // 0x250(0x0c)
	bool bTargetIsOnWall; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)

	void PlayHitWallSound(); // Function Tiger.TigerLaceratingThrowProjectile.PlayHitWallSound // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnRep_TargetLocation(); // Function Tiger.TigerLaceratingThrowProjectile.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x1486890
};

// Class Tiger.TigerLegalDocuments
// Size: 0xf8 (Inherited: 0x28)
struct UTigerLegalDocuments : UObject {
	char pad_28[0xb8]; // 0x28(0xb8)
	struct UDataTable* CountryCodes; // 0xe0(0x08)
	char pad_E8[0x10]; // 0xe8(0x10)

	struct FString GetLegalDocumentString(enum class ETigerLegalDocumentType InDocumentType); // Function Tiger.TigerLegalDocuments.GetLegalDocumentString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14860b0
	void DownloadLegalDocumentStrings(struct UObject* InWorldContextObject, struct FString InLocale, struct FLatentActionInfo InLatentInfo); // Function Tiger.TigerLegalDocuments.DownloadLegalDocumentStrings // (Final|Native|Public|BlueprintCallable) // @ game+0x1485cd0
};

// Class Tiger.TigerLevelScriptActor
// Size: 0x230 (Inherited: 0x230)
struct ATigerLevelScriptActor : ALevelScriptActor {

	struct UTigerDistrictData* GetDistrictData(); // Function Tiger.TigerLevelScriptActor.GetDistrictData // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerLoadingScreenAsset
// Size: 0x78 (Inherited: 0x28)
struct UTigerLoadingScreenAsset : UObject {
	struct TSoftObjectPtr<UAkAudioEvent> StartAudioEvent; // 0x28(0x28)
	struct TSoftClassPtr<UObject> LoadingScreenWidget; // 0x50(0x28)

	void PrepareAssets(struct TArray<struct FSoftObjectPath>& OutAssetsToLoad); // Function Tiger.TigerLoadingScreenAsset.PrepareAssets // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerLoadingScreenUI
// Size: 0x2c8 (Inherited: 0x260)
struct UTigerLoadingScreenUI : UUserWidget {
	struct FMulticastInlineDelegate OnFadeInCompleteEvent; // 0x260(0x10)
	struct FMulticastInlineDelegate OnFadeOutCompleteEvent; // 0x270(0x10)
	float FadeInTime; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct UTigerLoadingScreenAsset* LoadingScreenAsset; // 0x288(0x08)
	struct TSoftClassPtr<UObject> GameModePath; // 0x290(0x28)
	int32_t AkPlayingId; // 0x2b8(0x04)
	char pad_2BC[0xc]; // 0x2bc(0x0c)

	void StartFadeOut(); // Function Tiger.TigerLoadingScreenUI.StartFadeOut // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void StartFadeIn(); // Function Tiger.TigerLoadingScreenUI.StartFadeIn // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void RaiseFadeOutComplete(); // Function Tiger.TigerLoadingScreenUI.RaiseFadeOutComplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x14868d0
	void RaiseFadeInComplete(); // Function Tiger.TigerLoadingScreenUI.RaiseFadeInComplete // (Final|Native|Protected|BlueprintCallable) // @ game+0x14868b0
	void OnFadeOutComplete__DelegateSignature(); // DelegateFunction Tiger.TigerLoadingScreenUI.OnFadeOutComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnFadeInComplete__DelegateSignature(); // DelegateFunction Tiger.TigerLoadingScreenUI.OnFadeInComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void FadeOut(); // Function Tiger.TigerLoadingScreenUI.FadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x1485e50
	void FadeIn(); // Function Tiger.TigerLoadingScreenUI.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x1485e30
	void ChangeStatusText(struct FText& InText); // Function Tiger.TigerLoadingScreenUI.ChangeStatusText // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerLocalAIController
// Size: 0x5b8 (Inherited: 0x4b0)
struct ATigerLocalAIController : ATigerLocalAIControllerBase {
	float FleeMaxDistanceSquared; // 0x4b0(0x04)
	float FacingConeHalfAngle; // 0x4b4(0x04)
	float MinimumAcceptableHeadshotDamageMultiplier; // 0x4b8(0x04)
	float HeadshotChance; // 0x4bc(0x04)
	struct TArray<struct UTigerBuff*> BuffsOnSelfToIgnoreTargetsList; // 0x4c0(0x10)
	struct TArray<struct UTigerBuff*> BuffsOnTargetsToIgnoreList; // 0x4d0(0x10)
	char pad_4E0[0x8]; // 0x4e0(0x08)
	struct ATigerPlayerState* TigerPlayerState; // 0x4e8(0x08)
	char pad_4F0[0xc8]; // 0x4f0(0xc8)

	bool SetMainStateWandering(); // Function Tiger.TigerLocalAIController.SetMainStateWandering // (Final|Native|Public|BlueprintCallable) // @ game+0x148ac20
	bool SetMainStateInBloodVein(); // Function Tiger.TigerLocalAIController.SetMainStateInBloodVein // (Final|Native|Public|BlueprintCallable) // @ game+0x148abf0
	bool SetBBMainState(enum class ETigerAIPlayerMainState InNewState); // Function Tiger.TigerLocalAIController.SetBBMainState // (Final|Native|Protected|BlueprintCallable) // @ game+0x148aa90
};

// Class Tiger.TigerLocalPlayer
// Size: 0x278 (Inherited: 0x258)
struct UTigerLocalPlayer : ULocalPlayer {
	char pad_258[0x20]; // 0x258(0x20)
};

// Class Tiger.TigerLocalThrallData
// Size: 0x60 (Inherited: 0x28)
struct UTigerLocalThrallData : UObject {
	struct UTigerBaseThrallData* BaseData; // 0x28(0x08)
	struct FTigerPersistentThrallData PersistentData; // 0x30(0x30)

	void SetStats(struct FTigerThrallStats InStats); // Function Tiger.TigerLocalThrallData.SetStats // (Final|Native|Public|BlueprintCallable) // @ game+0x148ad20
	void SetStat(enum class ETigerThrallStatId InType, int32_t InValue); // Function Tiger.TigerLocalThrallData.SetStat // (Final|Native|Public|BlueprintCallable) // @ game+0x148ac50
	void RemoveAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.RemoveAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x148aa10
	bool HasAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.HasAbility // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a520
	struct FTigerThrallUpgradeScreenInformation GetUpgradeScreenInfo(); // Function Tiger.TigerLocalThrallData.GetUpgradeScreenInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a4a0
	struct FTigerThrallStats GetThrallStats(); // Function Tiger.TigerLocalThrallData.GetThrallStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a410
	enum class ETigerThrallId GetThrallId(); // Function Tiger.TigerLocalThrallData.GetThrallId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a470
	struct FTigerThrallStats GetMutableThrallStats(); // Function Tiger.TigerLocalThrallData.GetMutableThrallStats // (Final|Native|Public|BlueprintCallable) // @ game+0x148a410
	struct FTigerThrallDetailsScreenInformation GetDetailsScreenInfo(); // Function Tiger.TigerLocalThrallData.GetDetailsScreenInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a260
	struct FTigerThrallCharacterCardInformation GetCharacterCardInfo(); // Function Tiger.TigerLocalThrallData.GetCharacterCardInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a070
	void DecreaseStatModifierTurnsByOne(); // Function Tiger.TigerLocalThrallData.DecreaseStatModifierTurnsByOne // (Final|Native|Public|BlueprintCallable) // @ game+0x148a030
	struct FTigerThrallStats CalculateTrueStats(); // Function Tiger.TigerLocalThrallData.CalculateTrueStats // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1489fb0
	int32_t CalculateTotalInjuryLevel(); // Function Tiger.TigerLocalThrallData.CalculateTotalInjuryLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1489f80
	void AddStats(struct FTigerThrallStats InStatsToAdd); // Function Tiger.TigerLocalThrallData.AddStats // (Final|Native|Public|BlueprintCallable) // @ game+0x1489ea0
	void AddStat(enum class ETigerThrallStatId InType, int32_t InToAdd); // Function Tiger.TigerLocalThrallData.AddStat // (Final|Native|Public|BlueprintCallable) // @ game+0x1489dd0
	void AddAbility(enum class ETigerThrallAbilityId InAbility); // Function Tiger.TigerLocalThrallData.AddAbility // (Final|Native|Public|BlueprintCallable) // @ game+0x1489d50
};

// Class Tiger.TigerLocalThrallMissionData
// Size: 0x78 (Inherited: 0x28)
struct UTigerLocalThrallMissionData : UObject {
	struct FMulticastInlineDelegate OnMissionProgression; // 0x28(0x10)
	struct FMulticastInlineDelegate OnMissionComplete; // 0x38(0x10)
	struct UTigerThrallMission* BaseMissionData; // 0x48(0x08)
	struct UTigerThrallSystem* ThrallSystem; // 0x50(0x08)
	struct FTigerPersistentMissionData PersistentMissionData; // 0x58(0x20)

	void OnMissionTurnProgression__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData); // DelegateFunction Tiger.TigerLocalThrallMissionData.OnMissionTurnProgression__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnMissionComplete__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData, enum class ETigerMissionSuccessRating SuccessRating); // DelegateFunction Tiger.TigerLocalThrallMissionData.OnMissionComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void IncrementMissionByOneTurn(); // Function Tiger.TigerLocalThrallMissionData.IncrementMissionByOneTurn // (Final|Native|Public|BlueprintCallable) // @ game+0x148a5e0
};

// Class Tiger.TigerLockOnCameraBehavior
// Size: 0x128 (Inherited: 0x128)
struct UTigerLockOnCameraBehavior : UTigerActiveCameraBehavior {
};

// Class Tiger.TigerLoginQueueService
// Size: 0xc0 (Inherited: 0x28)
struct UTigerLoginQueueService : UObject {
	char pad_28[0x98]; // 0x28(0x98)
};

// Class Tiger.TigerLootSpawner
// Size: 0x278 (Inherited: 0x228)
struct ATigerLootSpawner : AActor {
	struct UTigerItemLootTable* LootTable; // 0x228(0x08)
	char GameTypeFilter; // 0x230(0x01)
	bool bShouldReceiveItemsFromLootLocation; // 0x231(0x01)
	char pad_232[0x16]; // 0x232(0x16)
	struct TArray<struct FTigerRandomizedLootResult> AssignedLoot; // 0x248(0x10)
	struct USphereComponent* LootLocationCollider; // 0x258(0x08)
	struct ATigerLootLocation* AssignedLootLocation; // 0x260(0x08)
	struct TArray<struct ATigerItemWorldRepresentation*> SpawnedItems; // 0x268(0x10)

	bool IsValidForCurrentGameType(); // Function Tiger.TigerLootSpawner.IsValidForCurrentGameType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a630
	int32_t GetCurrentItemCount(); // Function Tiger.TigerLootSpawner.GetCurrentItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a240
};

// Class Tiger.TigerLootBoxSpawner
// Size: 0x290 (Inherited: 0x278)
struct ATigerLootBoxSpawner : ATigerLootSpawner {
	struct ATigerLootBox* LootBoxClass; // 0x278(0x08)
	int32_t MinimumNumberOfItems; // 0x280(0x04)
	int32_t MaximumNumberOfItems; // 0x284(0x04)
	char pad_288[0x4]; // 0x288(0x04)
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0x28c(0x01)
	char pad_28D[0x3]; // 0x28d(0x03)
};

// Class Tiger.TigerLootableVehicleDoorSpawner
// Size: 0x298 (Inherited: 0x290)
struct ATigerLootableVehicleDoorSpawner : ATigerLootBoxSpawner {
	struct ATigerVehicle* VehicleBody; // 0x290(0x08)
};

// Class Tiger.TigerLootBox
// Size: 0x310 (Inherited: 0x2a0)
struct ATigerLootBox : ATigerInteractiveObject {
	char pad_2A0[0x8]; // 0x2a0(0x08)
	struct ATigerItemWorldRepresentation* PickupItemClass; // 0x2a8(0x08)
	struct UAkAudioEvent* StartInteractSound; // 0x2b0(0x08)
	struct UAkAudioEvent* StopInteractSound; // 0x2b8(0x08)
	enum class ETigerItemRarity CurrentHighestRarity; // 0x2c0(0x01)
	char pad_2C1[0x7]; // 0x2c1(0x07)
	struct TArray<struct FTigerItemData> ItemList; // 0x2c8(0x10)
	bool bWasSpawnedOnPlayerDeath; // 0x2d8(0x01)
	bool bHasBeenPreviouslyOpened; // 0x2d9(0x01)
	char pad_2DA[0x2]; // 0x2da(0x02)
	struct TWeakObjectPtr<struct ATigerPlayerController> CurrentInteractingPlayerController; // 0x2dc(0x08)
	char pad_2E4[0x4]; // 0x2e4(0x04)
	struct UBoxComponent* CancelInteractionVolume; // 0x2e8(0x08)
	char pad_2F0[0x18]; // 0x2f0(0x18)
	enum class ETigerTelemetryItemSourceID TelemetrySourceID; // 0x308(0x01)
	char pad_309[0x7]; // 0x309(0x07)

	void SetTelemetrySourceID(enum class ETigerTelemetryItemSourceID InSourceID); // Function Tiger.TigerLootBox.SetTelemetrySourceID // (Final|Native|Public|BlueprintCallable) // @ game+0x148aed0
	void OnReset(); // Function Tiger.TigerLootBox.OnReset // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnRep_OpenedState(); // Function Tiger.TigerLootBox.OnRep_OpenedState // (Final|Native|Protected) // @ game+0x148a9f0
	void OnRep_HighestRarityUpdated(enum class ETigerItemRarity OldRarity); // Function Tiger.TigerLootBox.OnRep_HighestRarityUpdated // (Final|Native|Public) // @ game+0x148a950
	void OnOpenedStateReplicated(enum class EInteractiveObjectState State); // Function Tiger.TigerLootBox.OnOpenedStateReplicated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnOpened(); // Function Tiger.TigerLootBox.OnOpened // (Final|Native|Protected|BlueprintCallable) // @ game+0x148a930
	void OnOpenBoxAnimation(); // Function Tiger.TigerLootBox.OnOpenBoxAnimation // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnLocalPlayerInteractionCancelled(); // Function Tiger.TigerLootBox.OnLocalPlayerInteractionCancelled // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnListUpdated(struct TArray<struct FTigerItemData>& NewItemList); // Function Tiger.TigerLootBox.OnListUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnHighestRarityUpdated(enum class ETigerItemRarity NewHighestRarity); // Function Tiger.TigerLootBox.OnHighestRarityUpdated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Multicast_SetInteractionStateForNonInteractingPlayer(enum class EInteractiveObjectState NewState); // Function Tiger.TigerLootBox.Multicast_SetInteractionStateForNonInteractingPlayer // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x148a710
	void Multicast_OpenBoxAnimation(); // Function Tiger.TigerLootBox.Multicast_OpenBoxAnimation // (Net|NetReliableNative|Event|NetMulticast|Protected|BlueprintCallable) // @ game+0xccd070
	void Multicast_Enable(); // Function Tiger.TigerLootBox.Multicast_Enable // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0xccd1b0
	bool IsOpened(); // Function Tiger.TigerLootBox.IsOpened // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a600
	bool HasLoot(); // Function Tiger.TigerLootBox.HasLoot // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x148a5b0
	struct FText GetDescriptionText(); // Function Tiger.TigerLootBox.GetDescriptionText // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x18b4070
	void DisableLootBox(); // Function Tiger.TigerLootBox.DisableLootBox // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x148a050
	void ClientCloseLid(); // Function Tiger.TigerLootBox.ClientCloseLid // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void ClientCloseBoxGUI(); // Function Tiger.TigerLootBox.ClientCloseBoxGUI // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerLootBundleSpawner
// Size: 0x230 (Inherited: 0x228)
struct ATigerLootBundleSpawner : AActor {
	bool bLooted; // 0x228(0x01)
	char pad_229[0x7]; // 0x229(0x07)

	void OnRep_LootedValueChanged(); // Function Tiger.TigerLootBundleSpawner.OnRep_LootedValueChanged // (Final|Native|Private) // @ game+0x148a9d0
	void OnItemSpawned(); // Function Tiger.TigerLootBundleSpawner.OnItemSpawned // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnAllItemsLooted(); // Function Tiger.TigerLootBundleSpawner.OnAllItemsLooted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerLootContainer
// Size: 0x2b8 (Inherited: 0x2a0)
struct ATigerLootContainer : ATigerInteractiveObject {
	char pad_2A0[0x8]; // 0x2a0(0x08)
	bool bDoorIsOpen; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct UTigerBlueprintLootComponent* LootSpawnerComponent; // 0x2b0(0x08)

	void OnStoppedBeingClosestLootContainerInHeightenedSenses(); // Function Tiger.TigerLootContainer.OnStoppedBeingClosestLootContainerInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnBecameClosestLootContainerInHeightenedSenses(); // Function Tiger.TigerLootContainer.OnBecameClosestLootContainerInHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerLootDropComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerLootDropComponent : UActorComponent {
	int32_t DropChance; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct TArray<struct FTigerLootItemType> LootAssets; // 0xb8(0x10)
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
};

// Class Tiger.TigerLootLocationConfiguration
// Size: 0x40 (Inherited: 0x30)
struct UTigerLootLocationConfiguration : UDataAsset {
	struct TArray<struct FTigerLootLocationEntry> LocationEntries; // 0x30(0x10)
};

// Class Tiger.TigerLootLocation
// Size: 0x2d0 (Inherited: 0x260)
struct ATigerLootLocation : AVolume {
	struct UTigerLootLocationConfiguration* Configuration; // 0x260(0x08)
	struct FText EnteringAreaMainText; // 0x268(0x18)
	struct FText EnteringAreaSubText; // 0x280(0x18)
	struct UTexture2D* EnteringAreaTextBackground; // 0x298(0x08)
	struct TArray<struct ATigerLootSpawner*> OverlappingLootSpawners; // 0x2a0(0x10)
	struct TArray<struct ATigerLootSpawner*> AlwaysOverlappingLootSpawner; // 0x2b0(0x10)
	char GameTypeFilter; // 0x2c0(0x01)
	char pad_2C1[0xb]; // 0x2c1(0x0b)
	float EnteringPromptCooldown; // 0x2cc(0x04)

	void OnEndOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerLootLocation.OnEndOverlap // (Final|Native|Private) // @ game+0x148a860
	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerLootLocation.OnBeginOverlap // (Final|Native|Private) // @ game+0x148a790
};

// Class Tiger.TigerItemLootTable
// Size: 0xc0 (Inherited: 0x30)
struct UTigerItemLootTable : UDataAsset {
	struct TArray<struct FTigerItemLootEntry> Items; // 0x30(0x10)
	struct TArray<struct FTigerSubItemLootTable> SubLootTables; // 0x40(0x10)
	struct TMap<struct FTigerLootTableKey, struct FTigerGeneratedLootTable> GeneratedSubsets; // 0x50(0x50)
	struct FTigerGeneratedLootTable EntireLootTable; // 0xa0(0x18)
	char pad_B8[0x1]; // 0xb8(0x01)
	bool bIsLootBuilt; // 0xb9(0x01)
	char pad_BA[0x6]; // 0xba(0x06)

	void DebugChances(); // Function Tiger.TigerItemLootTable.DebugChances // (Final|Native|Public) // @ game+0xb64580
};

// Class Tiger.TigerMapGameData
// Size: 0xb0 (Inherited: 0x28)
struct UTigerMapGameData : UObject {
	struct FMulticastInlineDelegate OnMapMarkerAdded; // 0x28(0x10)
	struct FMulticastInlineDelegate OnMapMarkerRemoved; // 0x38(0x10)
	struct TArray<struct UTigerMapMarkerProxy*> MapMarkerProxies; // 0x48(0x10)
	struct UTigerMapInfoDataAsset* MapInfoAsset; // 0x58(0x08)
	char pad_60[0x50]; // 0x60(0x50)

	void SetCurrentMinimapSize(struct FVector2D InMinimapSize); // Function Tiger.TigerMapGameData.SetCurrentMinimapSize // (Final|Native|Public|HasDefaults|BlueprintCallable|Const) // @ game+0x148f9c0
	void RemoveMapMarker(struct UTigerMapMarkerProxy* Marker); // Function Tiger.TigerMapGameData.RemoveMapMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x148f670
	bool HasAnyMapInfo(); // Function Tiger.TigerMapGameData.HasAnyMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f4d0
	struct FVector2D GetPositionZeroToOne(struct FVector2D& InPositionOnTexture); // Function Tiger.TigerMapGameData.GetPositionZeroToOne // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f310
	struct FVector2D GetPositionOnMap(struct FVector& InLocation); // Function Tiger.TigerMapGameData.GetPositionOnMap // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x148f260
	struct FVector2D GetPositionInWorld(struct FVector2D& MapPosition); // Function Tiger.TigerMapGameData.GetPositionInWorld // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x148f1c0
	struct FTigerMapInfo GetCurrentMapInfo(); // Function Tiger.TigerMapGameData.GetCurrentMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f0a0
	struct UTigerMapMarkerProxy* AddMapMarkerBP(struct UUserWidget* MapMarker); // Function Tiger.TigerMapGameData.AddMapMarkerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x148ee90
};

// Class Tiger.TigerMapIncenseLine
// Size: 0x280 (Inherited: 0x260)
struct UTigerMapIncenseLine : UUserWidget {
	struct FName LineLengthParam; // 0x260(0x08)
	char pad_268[0x18]; // 0x268(0x18)

	void UpdateLinePosition(struct UMaterialInstanceDynamic* InDynamicMaterial); // Function Tiger.TigerMapIncenseLine.UpdateLinePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x1490020
	void SetStartPos(struct FVector2D InPos); // Function Tiger.TigerMapIncenseLine.SetStartPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x148fda0
	void SetEndPos(struct FVector2D InPos); // Function Tiger.TigerMapIncenseLine.SetEndPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x148fa40
	void SetActualEndPos(float InLineLengthCutoff, float InInterpSpeed, float InDeltaTime); // Function Tiger.TigerMapIncenseLine.SetActualEndPos // (Final|Native|Public|BlueprintCallable) // @ game+0x148f790
	void ResetLinePosition(struct UMaterialInstanceDynamic* InLineMaterial); // Function Tiger.TigerMapIncenseLine.ResetLinePosition // (Final|Native|Public|BlueprintCallable) // @ game+0x148f700
	struct FVector2D GetStartPos(); // Function Tiger.TigerMapIncenseLine.GetStartPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f3d0
	struct FVector2D GetEndPos(); // Function Tiger.TigerMapIncenseLine.GetEndPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f0e0
	void ExternalUpdateLinePosition(); // Function Tiger.TigerMapIncenseLine.ExternalUpdateLinePosition // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void ExternalResetLinePosition(); // Function Tiger.TigerMapIncenseLine.ExternalResetLinePosition // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMapInfoDataAsset
// Size: 0x100 (Inherited: 0x30)
struct UTigerMapInfoDataAsset : UDataAsset {
	struct TArray<struct FTigerMapInfo> MapInfoList; // 0x30(0x10)
	struct FTigerMapInfo DefaultMapInfo; // 0x40(0xb8)
	struct UUserWidget* PointOfInterestWidgetType; // 0xf8(0x08)
};

// Class Tiger.TigerMapMarkerOverlay
// Size: 0x298 (Inherited: 0x280)
struct UTigerMapMarkerOverlay : UTigerWidget {
	struct FMulticastInlineDelegate OnPlayerMarkerAdded; // 0x280(0x10)
	struct UTigerPlayerMarkerWidget* PlayerMarkerPtr; // 0x290(0x08)

	void SetPlayerMarkerWidget(struct UTigerPlayerMarkerWidget* InPlayerMarkerWidget); // Function Tiger.TigerMapMarkerOverlay.SetPlayerMarkerWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x148fc80
	struct UTigerPlayerMarkerWidget* GetPlayerMarkerWidget(); // Function Tiger.TigerMapMarkerOverlay.GetPlayerMarkerWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1401d90
};

// Class Tiger.TigerMapMarkerWidget
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerMapMarkerWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnMarkerUpdated; // 0x280(0x10)
	bool bIsDynamic; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	int32_t CustomZOrder; // 0x298(0x04)
	int32_t MarkerId; // 0x29c(0x04)
	char pad_2A0[0x11]; // 0x2a0(0x11)
	bool bIsOnMinimap; // 0x2b1(0x01)
	bool bShouldUseCustomZOrder; // 0x2b2(0x01)
	bool bStartHidden; // 0x2b3(0x01)
	struct TWeakObjectPtr<struct UTigerMapMarkerProxy> MapMarkerProxy; // 0x2b4(0x08)
	float CurrentOpacity; // 0x2bc(0x04)
	float FadeSpeed; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)

	void Update(); // Function Tiger.TigerMapMarkerWidget.Update // (Native|Public|BlueprintCallable) // @ game+0x1435fb0
	struct FVector2D ToCanvasSpace(struct FVector2D ZeroToOneSpace); // Function Tiger.TigerMapMarkerWidget.ToCanvasSpace // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x148fef0
	void SetMapMarkerProxy(struct UTigerMapMarkerProxy* Proxy); // Function Tiger.TigerMapMarkerWidget.SetMapMarkerProxy // (Final|Native|Public|BlueprintCallable) // @ game+0x148fbf0
	void SetIsOnMinimap(bool bInIsOnMinimap); // Function Tiger.TigerMapMarkerWidget.SetIsOnMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x148fac0
	void SetCanvasSize(struct FVector2D ParentCanvasSize); // Function Tiger.TigerMapMarkerWidget.SetCanvasSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x148f940
	void OnUpdated(); // Function Tiger.TigerMapMarkerWidget.OnUpdated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnIsOnMinimapIsSet(bool bInIsOnMinimap); // Function Tiger.TigerMapMarkerWidget.OnIsOnMinimapIsSet // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void HandleGameplaySettingsChanged(struct FTigerGameplaySettings& InGameplaySettings); // Function Tiger.TigerMapMarkerWidget.HandleGameplaySettingsChanged // (Final|Native|Protected|HasOutParms) // @ game+0x148f430
	struct UTigerMapGameData* GetMapGameData(); // Function Tiger.TigerMapMarkerWidget.GetMapGameData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f150
	void FadeIn(float InDurationInSeconds); // Function Tiger.TigerMapMarkerWidget.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x148eff0
	void CollapseUnseenIcons(); // Function Tiger.TigerMapMarkerWidget.CollapseUnseenIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x148efd0
};

// Class Tiger.TigerMapSubMenu
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerMapSubMenu : UTigerIngameSubmenuWidget {

	void ShowMatchTimer(); // Function Tiger.TigerMapSubMenu.ShowMatchTimer // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnQuestCompleted(struct FString InQuestId); // Function Tiger.TigerMapSubMenu.OnQuestCompleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMapUi
// Size: 0x2a0 (Inherited: 0x280)
struct UTigerMapUi : UTigerWidget {
	struct FName GasOverlayWorldTimeSeconds; // 0x280(0x08)
	struct FName GasOverlayWaveRevealTime; // 0x288(0x08)
	struct UTigerMapMarkerOverlay* MapMarkerOverlay; // 0x290(0x08)
	char pad_298[0x8]; // 0x298(0x08)

	void UpdateMapIncenseLine(struct UTigerMapIncenseLine* InMapIncenceLineWidget, struct UCanvasPanel* InMapCanvas, struct UTigerMapMarkerOverlay* InMapMarkerOverlay); // Function Tiger.TigerMapUi.UpdateMapIncenseLine // (Final|Native|Public|BlueprintCallable) // @ game+0x14900b0
	void UpdateGasOverlay(struct UImage* InGasOverlayImage); // Function Tiger.TigerMapUi.UpdateGasOverlay // (Final|Native|Public|BlueprintCallable) // @ game+0x148ff90
	void OnPlayerStateCreated(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerMapUi.OnPlayerStateCreated // (Final|Native|Private) // @ game+0x148f5e0
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerMapUi.OnMasqueradeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct FTigerMapInfo GetMapInfo(); // Function Tiger.TigerMapUi.GetMapInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f180
};

// Class Tiger.TigerMasqueradeActionResponse
// Size: 0x40 (Inherited: 0x28)
struct UTigerMasqueradeActionResponse : UObject {
	float MinFearScaleDistance; // 0x28(0x04)
	float MinFearScaleValue; // 0x2c(0x04)
	float MinMasqueradeScaleDistance; // 0x30(0x04)
	float MinMasqueradeScaleValue; // 0x34(0x04)
	bool bIsDummy; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)

	enum class ETigerAIMasqueradeState OnReactToPlayerAction(struct ATigerAIController* TigerAIController, struct ATigerPlayer* TigerPlayer, struct FTigerAIPlayerAction& PlayerAction, enum class ETigerAIMasqueradeState CurrentState, float& FearValue); // Function Tiger.TigerMasqueradeActionResponse.OnReactToPlayerAction // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnJudgeReaction(struct ATigerAiJudgeController* JudgeAIC, struct ATigerPlayer* Player, struct FTigerAIPlayerAction& PlayerAction); // Function Tiger.TigerMasqueradeActionResponse.OnJudgeReaction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	bool IsActionDisciplineRelated(enum class ETigerAIPlayerAction Action); // Function Tiger.TigerMasqueradeActionResponse.IsActionDisciplineRelated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x148f530
	float GetPlayerMasqueradePointsForAction(struct ATigerNPC* InNpc, struct ATigerPlayer* InTigerPlayer, struct FTigerAIPlayerAction& InPlayerAction); // Function Tiger.TigerMasqueradeActionResponse.GetPlayerMasqueradePointsForAction // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMasqueradeCoordinator
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerMasqueradeCoordinator : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class Tiger.TigerMasqueradeMarker
// Size: 0x2d0 (Inherited: 0x2c8)
struct UTigerMasqueradeMarker : UTigerMapMarkerWidget {
	float MarkerRadius; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)

	void EventScaleToCurrentMap(); // Function Tiger.TigerMasqueradeMarker.EventScaleToCurrentMap // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMasqueradeMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerMasqueradeMarkerProxy : UTigerMapMarkerProxy {
	bool bIsMarkingFriendlyOrLocalPlayer; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	float MarkerRadius; // 0x6c(0x04)
};

// Class Tiger.TigerResourceBarUI
// Size: 0x398 (Inherited: 0x280)
struct UTigerResourceBarUI : UTigerWidget {
	struct FMulticastInlineDelegate OnHealthChanged; // 0x280(0x10)
	struct ATigerCharacter* TigerCharacterOwner; // 0x290(0x08)
	enum class ETigerResourceBarType BarType; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)
	struct TArray<struct UTigerResourceBarSegmentUI*> HealthBarSegments; // 0x2a0(0x10)
	struct FLinearColor FilledColor; // 0x2b0(0x10)
	struct FLinearColor IsDownedFilledColor; // 0x2c0(0x10)
	struct FLinearColor EmptyColor; // 0x2d0(0x10)
	struct FLinearColor LockedColor; // 0x2e0(0x10)
	int32_t NumberOfSegments; // 0x2f0(0x04)
	bool bShouldShowLostHealth; // 0x2f4(0x01)
	bool bForceRefresh; // 0x2f5(0x01)
	char pad_2F6[0x2]; // 0x2f6(0x02)
	float LostHealthDelay; // 0x2f8(0x04)
	float LostHealthBarSpeed; // 0x2fc(0x04)
	float LostHealthPercentage; // 0x300(0x04)
	bool bShouldShowGainedResources; // 0x304(0x01)
	char pad_305[0x3]; // 0x305(0x03)
	float GainedResourceDelay; // 0x308(0x04)
	float GainedResourceBarSpeed; // 0x30c(0x04)
	float GainedResourcePercentage; // 0x310(0x04)
	float TheoreticalMaxResources; // 0x314(0x04)
	float WidthBetweenSegments; // 0x318(0x04)
	char pad_31C[0x7c]; // 0x31c(0x7c)

	void TigerDelegateHealthChanged__DelegateSignature(float InNewHealth, float InNewHealthPercentage); // DelegateFunction Tiger.TigerResourceBarUI.TigerDelegateHealthChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void SetOwner(struct ATigerCharacter* TigerCharacter); // Function Tiger.TigerResourceBarUI.SetOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x15149f0
	void ResetCurrentResourceNameIndex(); // Function Tiger.TigerResourceBarUI.ResetCurrentResourceNameIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x15146d0
	void OnSegmentFilled(float InProgress); // Function Tiger.TigerResourceBarUI.OnSegmentFilled // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnSegmentEmptied(float HorizontalProgress); // Function Tiger.TigerResourceBarUI.OnSegmentEmptied // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnHealthLost(); // Function Tiger.TigerResourceBarUI.OnHealthLost // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	float GetRecentResourcesLost(); // Function Tiger.TigerResourceBarUI.GetRecentResourcesLost // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1513f10
	float GetMaxResources(); // Function Tiger.TigerResourceBarUI.GetMaxResources // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1513ea0
	struct FLinearColor GetLockedColor(); // Function Tiger.TigerResourceBarUI.GetLockedColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1513e60
	struct FLinearColor GetFilledColor(); // Function Tiger.TigerResourceBarUI.GetFilledColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1513dc0
	struct FLinearColor GetEmptyColor(); // Function Tiger.TigerResourceBarUI.GetEmptyColor // (Native|Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1513d80
	float GetCurrentResources(); // Function Tiger.TigerResourceBarUI.GetCurrentResources // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1513d40
};

// Class Tiger.TigerMasqueradeStatusWidget
// Size: 0x3a0 (Inherited: 0x398)
struct UTigerMasqueradeStatusWidget : UTigerResourceBarUI {
	char PlayerVisibilityToNPC; // 0x398(0x01)
	bool bIsHunted; // 0x399(0x01)
	char pad_39A[0x6]; // 0x39a(0x06)

	void OnNpcLostSightOfPlayer(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.OnNpcLostSightOfPlayer // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnNpcGainedSightOfPlayer(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.OnNpcGainedSightOfPlayer // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnMasqueradeRestored(); // Function Tiger.TigerMasqueradeStatusWidget.OnMasqueradeRestored // (Native|Event|Public|BlueprintEvent) // @ game+0x1435f90
	void OnMasqueradeBreached(); // Function Tiger.TigerMasqueradeStatusWidget.OnMasqueradeBreached // (Native|Event|Public|BlueprintEvent) // @ game+0x1435f70
	void AddNpcDirectionalIndicator(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerMasqueradeStatusWidget.AddNpcDirectionalIndicator // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMasterChallengesConfigAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerMasterChallengesConfigAsset : UDataAsset {
	struct FTigerMasteryChallengesConfig Config; // 0x30(0x10)
};

// Class Tiger.TigerMatchGameMode
// Size: 0xcd8 (Inherited: 0x9f8)
struct ATigerMatchGameMode : ATigerGameMode {
	struct FMulticastInlineDelegate OnPlayerDeathEvent; // 0x9f8(0x10)
	struct FMulticastInlineDelegate OnMatchSettingsSetEvent; // 0xa08(0x10)
	char pad_A18[0x50]; // 0xa18(0x50)
	struct UTigerSHPBCoordinator* SHPBCoordinator; // 0xa68(0x08)
	struct UTigerHeatmapCollector* HeatmapCollector; // 0xa70(0x08)
	struct UTigerConsequenceBroadcastCoordinator* ConsequenceBroadcastCoordinator; // 0xa78(0x08)
	struct TArray<struct FTigerReadyToPlayState> ReadyToPlayStates; // 0xa80(0x10)
	char pad_A90[0x48]; // 0xa90(0x48)
	struct UTigerMatchStateComponent* MatchStateManager; // 0xad8(0x08)
	struct UTigerMatchWinConditionComponent* WinConditionComponent; // 0xae0(0x08)
	struct UTigerMatchPlacementStrategy* PlacementStrategy; // 0xae8(0x08)
	struct UTigerMatchGameModeReporter* MatchReporter; // 0xaf0(0x08)
	struct UTigerBuffShieldBase* DefaultShieldBuff; // 0xaf8(0x08)
	char pad_B00[0x1d8]; // 0xb00(0x1d8)

	void StartReturnToElysiumSequence(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerMatchGameMode.StartReturnToElysiumSequence // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ShowEndScreenOnClients(); // Function Tiger.TigerMatchGameMode.ShowEndScreenOnClients // (Final|Native|Public|BlueprintCallable) // @ game+0x1493d80
	void ShowDeathScreenOnClient(struct ATigerPlayerController* InTigerPlayerController, int32_t InInstigatorStateId, enum class ETigerKillerType InKillerType); // Function Tiger.TigerMatchGameMode.ShowDeathScreenOnClient // (Final|Native|Public|BlueprintCallable) // @ game+0x1493c70
	void ReportMatchResults(struct FDelegate& Delegate); // Function Tiger.TigerMatchGameMode.ReportMatchResults // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1493ac0
	void PlayerLeavingMatch(struct ATigerPlayerController* InTigerPlayerController); // Function Tiger.TigerMatchGameMode.PlayerLeavingMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x1493a30
	void OnRegisterPlayerPlacement__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerMatchGameMode.OnRegisterPlayerPlacement__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlayerDeathEvent__DelegateSignature(struct ATigerPlayer* InDeadPlayer, struct AActor* InInstigator, bool bInWillRespawn); // DelegateFunction Tiger.TigerMatchGameMode.OnPlayerDeathEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnMatchStatsReceivedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameMode.OnMatchStatsReceivedDelegate__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void OnMatchSettingsSetEvent__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameMode.OnMatchSettingsSetEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	struct FTigerMatchStats GenerateMatchStatsForPlayer(struct ATigerPlayerController* Player); // Function Tiger.TigerMatchGameMode.GenerateMatchStatsForPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1492ee0
	void ApplyGameModeSettings(); // Function Tiger.TigerMatchGameMode.ApplyGameModeSettings // (Final|Native|Private) // @ game+0x1492ec0
};

// Class Tiger.TigerMatchGameModeSettings
// Size: 0x1c8 (Inherited: 0x38)
struct UTigerMatchGameModeSettings : USharkLocalDeveloperSettings {
	struct TSoftObjectPtr<UDataTable> RangedWeaponsDatatable; // 0x38(0x28)
	float HighPotenceBloodTransferTime; // 0x60(0x04)
	int32_t SpawnCountdownTime; // 0x64(0x04)
	int32_t MatchStartTimeOutSeconds; // 0x68(0x04)
	int32_t PlayerConnectionTimeOutSeconds; // 0x6c(0x04)
	int32_t PlayerConnectionMinimumWaitTimeSeconds; // 0x70(0x04)
	int32_t SecondsOfNetworkInactivityAllowedBeforeForcingReady; // 0x74(0x04)
	int32_t MinPlayersToStartMatch; // 0x78(0x04)
	bool bEnableSpawnCountdown; // 0x7c(0x01)
	bool bEnableWinningCondition; // 0x7d(0x01)
	bool bReturnPlayersToElysiumOnFinish; // 0x7e(0x01)
	bool bRebootServerOnFinish; // 0x7f(0x01)
	bool bEnableAssaults; // 0x80(0x01)
	bool bEnableGroupFill; // 0x81(0x01)
	bool bLogTickRate; // 0x82(0x01)
	bool bAutoSpectateOnDeath; // 0x83(0x01)
	bool bAllowSpectateNonTeamMembersInGroupMode; // 0x84(0x01)
	char pad_85[0x3]; // 0x85(0x03)
	struct FTigerEntityCheckpointsSettings EntityCheckpointsSettings[0x2]; // 0x88(0x20)
	struct FTigerRatSpawnpointSettings RatSpawnpointSettings[0x2]; // 0xa8(0x10)
	struct FTigerSHPBSettings SHPBSettings[0x2]; // 0xb8(0x38)
	struct FTigerHavenCapturePointSettings CapturePointSettings[0x2]; // 0xf0(0x40)
	struct FTigerBattleRoyalePlayerSpawnSettings BattleRoyalePlayerSpawnSettings; // 0x130(0x08)
	struct FTigerPreSpawnSettings PreSpawnSettings; // 0x138(0x28)
	struct FTigerHighTierLootSettings HighTierLootSettings; // 0x160(0x30)
	struct FTigerWinConditions DefaultWinConditions; // 0x190(0x10)
	struct FPrimaryAssetId DefaultPlacementStrategy; // 0x1a0(0x10)
	float DownedRegenDuration[0x2]; // 0x1b0(0x08)
	int32_t AssistDamageTreshold; // 0x1b8(0x04)
	float AssistDuration; // 0x1bc(0x04)
	float EnvironmentalKillStealDuration; // 0x1c0(0x04)
	char pad_1C4[0x4]; // 0x1c4(0x04)

	bool ShouldReturnPlayersToElysiumOnFinish(); // Function Tiger.TigerMatchGameModeSettings.ShouldReturnPlayersToElysiumOnFinish // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1493c40
	bool ShouldRebootServerOnFinish(); // Function Tiger.TigerMatchGameModeSettings.ShouldRebootServerOnFinish // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1493c10
	struct FTigerSHPBSettings GetSHPBSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetSHPBSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1493450
	struct FTigerRatSpawnpointSettings GetRatSpawnpointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetRatSpawnpointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14933d0
	struct UDataTable* GetRangedWeaponsDatatable(); // Function Tiger.TigerMatchGameModeSettings.GetRangedWeaponsDatatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14933a0
	struct FTigerPreSpawnSettings GetPreSpawnSettings(); // Function Tiger.TigerMatchGameModeSettings.GetPreSpawnSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1493360
	struct FTigerEntityCheckpointsSettings GetEntityCheckpointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetEntityCheckpointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1493260
	float GetDownedRegenDuration(enum class EMatchBalanceMode InBalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetDownedRegenDuration // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14931e0
	struct FTigerHavenCapturePointSettings GetCapturePointSettings(enum class EMatchBalanceMode BalanceMode); // Function Tiger.TigerMatchGameModeSettings.GetCapturePointSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1493020
	struct FTigerBattleRoyalePlayerSpawnSettings GetBattleRoyalePlayerSpawnSettings(); // Function Tiger.TigerMatchGameModeSettings.GetBattleRoyalePlayerSpawnSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1492ff0
};

// Class Tiger.TigerMatchGameModeReporter
// Size: 0x1c0 (Inherited: 0xb0)
struct UTigerMatchGameModeReporter : UActorComponent {
	char pad_B0[0x110]; // 0xb0(0x110)
};

// Class Tiger.TigerMatchGameSession
// Size: 0x298 (Inherited: 0x298)
struct ATigerMatchGameSession : ATigerGameSession {
};

// Class Tiger.TigerMatchGameState
// Size: 0x6d0 (Inherited: 0x390)
struct ATigerMatchGameState : ATigerGameState {
	struct FMulticastInlineDelegate OnPreMatchStateChanged; // 0x390(0x10)
	struct FMulticastInlineDelegate OnMatchStateChanged; // 0x3a0(0x10)
	struct FMulticastInlineDelegate HighTierLootLocationsChanged; // 0x3b0(0x10)
	struct FMulticastInlineDelegate OnNumberOfConnectedPlayersChanged; // 0x3c0(0x10)
	struct FMulticastInlineDelegate OnNumberOfAlivePlayersChanged; // 0x3d0(0x10)
	struct FMulticastInlineDelegate OnPlayerScoreChanged; // 0x3e0(0x10)
	struct FMulticastInlineDelegate OnDynamicComponentInitalized; // 0x3f0(0x10)
	char pad_400[0x18]; // 0x400(0x18)
	struct FMulticastInlineDelegate OnMatchSettingsReceived; // 0x418(0x10)
	float NextWaveRevealGameTime; // 0x428(0x04)
	float MatchTimePassed; // 0x42c(0x04)
	float ReplicatedMatchTimePassed; // 0x430(0x04)
	int32_t NumPlayersAlive; // 0x434(0x04)
	int32_t NumGroupsAlive; // 0x438(0x04)
	int32_t GroupSize; // 0x43c(0x04)
	int32_t NumPlayersConnected; // 0x440(0x04)
	int32_t RandomizedWeatherValue; // 0x444(0x04)
	struct FTigerPreMatchStateInfo PreMatchState; // 0x448(0x08)
	enum class ETigerMatchState TigerMatchState; // 0x450(0x01)
	enum class EMatchBalanceMode BalanceMode; // 0x451(0x01)
	char pad_452[0x6]; // 0x452(0x06)
	struct FTigerMatchSettings MatchSettings; // 0x458(0x1e0)
	struct ATigerWorldMarker* EntityCheckpointMarkerClass; // 0x638(0x08)
	struct FMulticastInlineDelegate OnSpawnMechanicReceived; // 0x640(0x10)
	struct UTigerSpawnMechanic* SpawnMechanicClass; // 0x650(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> ActiveHighTierLootGroups; // 0x658(0x10)
	struct FText JudgeSlainText; // 0x668(0x18)
	enum class ETigerMatchType MatchType; // 0x680(0x01)
	char pad_681[0x7]; // 0x681(0x07)
	struct TArray<struct FVector2D> EntityCheckpointLocations; // 0x688(0x10)
	struct TArray<struct ATigerWorldMarker*> EntityCheckpointMarkers; // 0x698(0x10)
	char pad_6A8[0x10]; // 0x6a8(0x10)
	struct TArray<struct UTigerWidget*> WinConditionWidgets; // 0x6b8(0x10)
	char pad_6C8[0x4]; // 0x6c8(0x04)
	bool bMatchSettingsSet; // 0x6cc(0x01)
	char pad_6CD[0x1]; // 0x6cd(0x01)
	enum class ETigerMatchMode MatchMode; // 0x6ce(0x01)
	bool bHasRequestedLeaveSession; // 0x6cf(0x01)

	void TigerOnSpawnMechanicReceived__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameState.TigerOnSpawnMechanicReceived__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void SetMatchState(enum class ETigerMatchState MatchState); // Function Tiger.TigerMatchGameState.SetMatchState // (Final|Native|Public|BlueprintCallable) // @ game+0x1493b90
	void SetHasRequestedLeaveSession(); // Function Tiger.TigerMatchGameState.SetHasRequestedLeaveSession // (Final|Native|Public|BlueprintCallable) // @ game+0x1493b70
	void OnTigerNumberOfConnectedPlayersChanged__DelegateSignature(int32_t InNumberOfConnectedPlayers); // DelegateFunction Tiger.TigerMatchGameState.OnTigerNumberOfConnectedPlayersChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnTigerNumberOfAlivePlayersChanged__DelegateSignature(int32_t InNumberOfAlivePlayers); // DelegateFunction Tiger.TigerMatchGameState.OnTigerNumberOfAlivePlayersChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRep_TigerMatchState(enum class ETigerMatchState OldMatchState); // Function Tiger.TigerMatchGameState.OnRep_TigerMatchState // (Final|Native|Private) // @ game+0x14939b0
	void OnRep_TigerBalanceMode(enum class EMatchBalanceMode InOldBalanceMode); // Function Tiger.TigerMatchGameState.OnRep_TigerBalanceMode // (Final|Native|Private) // @ game+0x1493930
	void OnRep_SpawnMechanicClass(); // Function Tiger.TigerMatchGameState.OnRep_SpawnMechanicClass // (Final|Native|Private) // @ game+0x1493910
	void OnRep_MatchSettings(); // Function Tiger.TigerMatchGameState.OnRep_MatchSettings // (Final|Native|Private) // @ game+0x14938f0
	void OnRep_EntityCheckpointLocations(); // Function Tiger.TigerMatchGameState.OnRep_EntityCheckpointLocations // (Final|Native|Private) // @ game+0x14938d0
	void OnPreMatchStateChanged__DelegateSignature(struct FTigerPreMatchStateInfo PreMatchState); // DelegateFunction Tiger.TigerMatchGameState.OnPreMatchStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlayerScoreChanged__DelegateSignature(struct ATigerPlayerState* InPlayerState, int32_t InPlayerScoreDelta); // DelegateFunction Tiger.TigerMatchGameState.OnPlayerScoreChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnMatchStateChanged__DelegateSignature(enum class ETigerMatchState OldState, enum class ETigerMatchState NewState); // DelegateFunction Tiger.TigerMatchGameState.OnMatchStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnMatchSettingsSetEvent__DelegateSignature(); // DelegateFunction Tiger.TigerMatchGameState.OnMatchSettingsSetEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnHighTierLootLocationsChanged__DelegateSignature(struct TArray<struct TSoftClassPtr<UObject>>& InActiveHighTierLootGroups); // DelegateFunction Tiger.TigerMatchGameState.OnHighTierLootLocationsChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnDynamicComponentInitialized__DelegateSignature(struct UActorComponent* InActorComponent); // DelegateFunction Tiger.TigerMatchGameState.OnDynamicComponentInitialized__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Multicast_UpdatePreMatchState(struct FTigerPreMatchStateInfo NewPreMatchState); // Function Tiger.TigerMatchGameState.Multicast_UpdatePreMatchState // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1493840
	void Multicast_SetEnitityCheckpointLocations(struct TArray<struct FVector2D> CheckpointLocations); // Function Tiger.TigerMatchGameState.Multicast_SetEnitityCheckpointLocations // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14937a0
	void Multicast_JudgeSpawned(); // Function Tiger.TigerMatchGameState.Multicast_JudgeSpawned // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1493780
	void Multicast_JudgeSlain(struct APlayerState* InInstigatorPlayer); // Function Tiger.TigerMatchGameState.Multicast_JudgeSlain // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14936f0
	void Multicast_DestroyResurrectAltar(struct ATigerResurrectAltar* InAltar); // Function Tiger.TigerMatchGameState.Multicast_DestroyResurrectAltar // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1493660
	void Multicast_ChangeNumPlayersAlive(int32_t InNewNumPlayersAlive, int32_t InNewNumPlayersConnected); // Function Tiger.TigerMatchGameState.Multicast_ChangeNumPlayersAlive // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1493590
	bool IsMatchSettingsSet(); // Function Tiger.TigerMatchGameState.IsMatchSettingsSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1493570
	void HandleOnRestartPlayer(struct AController* NewPlayer); // Function Tiger.TigerMatchGameState.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x14934e0
	enum class ETigerMatchState GetMatchState(); // Function Tiger.TigerMatchGameState.GetMatchState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1493330
	struct FTigerMatchSettings GetMatchSettings(); // Function Tiger.TigerMatchGameState.GetMatchSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1493300
	enum class ETigerMatchMode GetMatchMode(); // Function Tiger.TigerMatchGameState.GetMatchMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14932e0
	bool GetClosestLocationOnNextWaveWall(struct FVector2D& Location, struct FVector2D& ClosestLocation, bool& bIsOutsidePlayableArea); // Function Tiger.TigerMatchGameState.GetClosestLocationOnNextWaveWall // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14930b0
};

// Class Tiger.TigerMatchHUD
// Size: 0x570 (Inherited: 0x428)
struct ATigerMatchHUD : ATigerHUD {
	struct UTigerPromptCollectionWidget* PromptCollection; // 0x428(0x08)
	struct ATigerMusicManager* MusicManager; // 0x430(0x08)
	struct UTigerCompassUI* CompassUI; // 0x438(0x08)
	struct UTigerMasqueradeStatusWidget* MasqueradeStatus; // 0x440(0x08)
	struct UTigerWidget* ChallengeList; // 0x448(0x08)
	struct UTigerWidget* BloodResonanceUi; // 0x450(0x08)
	struct UTigerRevivingStatusUI* RevivingStatusUI; // 0x458(0x08)
	struct UTigerConsumableWheelWidget* ConsumableWheel; // 0x460(0x08)
	struct UTigerWidget* ClimbPrompt; // 0x468(0x08)
	struct UTigerWidget* LevelOverlay; // 0x470(0x08)
	struct UTigerWidget* YouAreDownedPrompt; // 0x478(0x08)
	struct UTigerWidget* Minimap; // 0x480(0x08)
	struct UTigerWidget* StatusMessage; // 0x488(0x08)
	struct UTigerWidget* InputTray; // 0x490(0x08)
	struct FMulticastInlineDelegate OnDropItemAction; // 0x498(0x10)
	struct UTigerDisciplinesUi* Disciplines; // 0x4a8(0x08)
	struct UTigerCapturePointProgressUI* CapturePointProgressUI; // 0x4b0(0x08)
	struct UTigerWeaponAmmoWidget* WeaponAmmo; // 0x4b8(0x08)
	struct UTigerPingWheelWidget* PingWheelWidget; // 0x4c0(0x08)
	struct UTigerWidget* Watermark; // 0x4c8(0x08)
	struct UTigerSpawnPointSelectionUi* SpawnSelectionUi; // 0x4d0(0x08)
	struct UTigerArchetypeSelectPragueUI* ArchetypeSelectUi; // 0x4d8(0x08)
	struct UTigerWidget* PreMatchMapWidget; // 0x4e0(0x08)
	struct UTigerDeathScreen* DeathScreenClass; // 0x4e8(0x08)
	struct UTigerDeathScreen* DeathScreen; // 0x4f0(0x08)
	struct UTigerInventoryUI* InventoryUi; // 0x4f8(0x08)
	struct UTigerMapSubMenu* MapUi; // 0x500(0x08)
	struct UTigerInputMenuUI* SettingsMenuUi; // 0x508(0x08)
	struct UTigerTeamMenuUI* TeamMenuUi; // 0x510(0x08)
	struct UTigerReportMenuUI* ReportMenuUi; // 0x518(0x08)
	struct UTigerWidget* WinScreen; // 0x520(0x08)
	struct UTigerWidget* HealthBar; // 0x528(0x08)
	struct TArray<struct TSoftClassPtr<UObject>> PreMatchUiClasses; // 0x530(0x10)
	char pad_540[0x10]; // 0x540(0x10)
	struct TArray<struct UTigerWidget*> PreMatchWidgets; // 0x550(0x10)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComponent; // 0x560(0x08)
	char pad_568[0x8]; // 0x568(0x08)

	void ToggleTeamMenu(); // Function Tiger.TigerMatchHUD.ToggleTeamMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1497fa0
	void ToggleSettingsMenu(); // Function Tiger.TigerMatchHUD.ToggleSettingsMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1497f80
	void ToggleReportMenu(); // Function Tiger.TigerMatchHUD.ToggleReportMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1497f60
	void ToggleMap(); // Function Tiger.TigerMatchHUD.ToggleMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1497f40
	void ToggleInventory(); // Function Tiger.TigerMatchHUD.ToggleInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1497f20
	void ToggleInputMenu(); // Function Tiger.TigerMatchHUD.ToggleInputMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1497f00
	void ToggleCharacterMenu(); // Function Tiger.TigerMatchHUD.ToggleCharacterMenu // (Final|Native|Public|BlueprintCallable) // @ game+0xb64580
	void ShowWinScreen(struct UTigerWidget* InWinScreenClass, int32_t InZValue); // Function Tiger.TigerMatchHUD.ShowWinScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1497e30
	void ShowIntroPrompt(float InDelayAfterMatchStart); // Function Tiger.TigerMatchHUD.ShowIntroPrompt // (Final|Native|Protected|BlueprintCallable) // @ game+0x1497db0
	void ShowInteractionPrompt(struct UTigerSimpleTextPrompt* Prompt); // Function Tiger.TigerMatchHUD.ShowInteractionPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x1497d20
	void ShowDeathScreen(int32_t InPlayerPlacement, int32_t InNumGroupsAtStart, int32_t InPlayerStateId, enum class ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose); // Function Tiger.TigerMatchHUD.ShowDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1497b80
	void ReleasePreMatchAssets(); // Function Tiger.TigerMatchHUD.ReleasePreMatchAssets // (Final|Native|Protected) // @ game+0x1497b60
	void RefreshEquippedWeapon(); // Function Tiger.TigerMatchHUD.RefreshEquippedWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1497b40
	void RaiseOnDropItemAction(); // Function Tiger.TigerMatchHUD.RaiseOnDropItemAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1497b20
	void PreparePreMatchMapForMatchStart(float InMatchStartTimeStamp); // Function Tiger.TigerMatchHUD.PreparePreMatchMapForMatchStart // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void PreMatchStateChanged(struct FTigerPreMatchStateInfo& InNewPreMatchState); // Function Tiger.TigerMatchHUD.PreMatchStateChanged // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OpenPreMatchMap(float InPreMatchMapEndTimeStamp); // Function Tiger.TigerMatchHUD.OpenPreMatchMap // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnTookDamage(struct FTigerDamageSource& DamageSource); // Function Tiger.TigerMatchHUD.OnTookDamage // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnStartMatchAssetsLoaded(); // Function Tiger.TigerMatchHUD.OnStartMatchAssetsLoaded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPreMatchWidgetClassesLoaded(); // Function Tiger.TigerMatchHUD.OnPreMatchWidgetClassesLoaded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPersistentPlayerStateInitialized(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerMatchHUD.OnPersistentPlayerStateInitialized // (Final|Native|Protected) // @ game+0x1497a90
	void OnGainedSeasonExperience(enum class ETigerPlayerEvent InEvent, int32_t InReceivedExperience, int32_t InExperienceGained, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerMatchHUD.OnGainedSeasonExperience // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnEndedSpectator(); // Function Tiger.TigerMatchHUD.OnEndedSpectator // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnBecameSpectator(); // Function Tiger.TigerMatchHUD.OnBecameSpectator // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsPreSpawnBackgroundOpen(); // Function Tiger.TigerMatchHUD.IsPreSpawnBackgroundOpen // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
	bool IsPreMatchAssetsLoaded(); // Function Tiger.TigerMatchHUD.IsPreMatchAssetsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1497a60
	bool IsAllowedToOpenMainMenu(); // Function Tiger.TigerMatchHUD.IsAllowedToOpenMainMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1497a30
	void HideMap(bool bInShowMinimap); // Function Tiger.TigerMatchHUD.HideMap // (Final|Native|Public|BlueprintCallable) // @ game+0x14979a0
	void HideInteractionPrompt(struct UTigerSimpleTextPrompt* Prompt); // Function Tiger.TigerMatchHUD.HideInteractionPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x1497910
	void HandleGameStateSet(struct ATigerGameState* InGameState); // Function Tiger.TigerMatchHUD.HandleGameStateSet // (Final|Native|Protected) // @ game+0x1497770
	struct UTigerWidget* GetPreSpawnWidget(struct UTigerWidget* InCppClass); // Function Tiger.TigerMatchHUD.GetPreSpawnWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14976d0
	struct UTigerMapSubMenu* GetMapUi(); // Function Tiger.TigerMatchHUD.GetMapUi // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14976a0
	struct UTigerInventoryUI* GetInventoryUI(); // Function Tiger.TigerMatchHUD.GetInventoryUI // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1497670
	void EndPreMatch(); // Function Tiger.TigerMatchHUD.EndPreMatch // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void CloseWinScreen(); // Function Tiger.TigerMatchHUD.CloseWinScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1497180
	void CloseDeathScreen(); // Function Tiger.TigerMatchHUD.CloseDeathScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1497160
};

// Class Tiger.TigerMatchPlacementStrategy
// Size: 0x30 (Inherited: 0x30)
struct UTigerMatchPlacementStrategy : UTigerGameModeFeature {
};

// Class Tiger.TigerMatchPlacementStrategyBundle
// Size: 0xc8 (Inherited: 0x68)
struct UTigerMatchPlacementStrategyBundle : UTigerGameModeFeatureBundle {
	struct FTigerGameModeFeatureWidget WinScreenWidgetClass; // 0x68(0x30)
	struct FTigerGameModeFeatureWidget PlacementWidgetClass; // 0x98(0x30)
};

// Class Tiger.TigerMatchPlacementStrategy_ExtendedGroupScore
// Size: 0x38 (Inherited: 0x30)
struct UTigerMatchPlacementStrategy_ExtendedGroupScore : UTigerMatchPlacementStrategy {
	struct UTigerExtendedGroupScoreComponent* ScoreComponent; // 0x30(0x08)
};

// Class Tiger.TigerMatchPlacementStrategy_LastManStanding
// Size: 0x40 (Inherited: 0x30)
struct UTigerMatchPlacementStrategy_LastManStanding : UTigerMatchPlacementStrategy {
	struct TArray<struct ATigerPlayerState*> PlayersAtCapturePoint; // 0x30(0x10)

	void HandlePlayerDeath(struct ATigerPlayer* InDeadPlayer, struct AActor* InInstigator, bool bInWillRespawn); // Function Tiger.TigerMatchPlacementStrategy_LastManStanding.HandlePlayerDeath // (Final|Native|Protected) // @ game+0x1497800
};

// Class Tiger.TigerPlayerNetSubscriberComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerPlayerNetSubscriberComponent : UActorComponent {
	char pad_B0[0x20]; // 0xb0(0x20)

	void Unsubscribe(struct ATigerPlayerState* InPlayerState, struct FTigerPlayerNetSubscriptionMask& InMask); // Function Tiger.TigerPlayerNetSubscriberComponent.Unsubscribe // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f6e50
	void Subscribe(struct ATigerPlayerState* InPlayerState, struct FTigerPlayerNetSubscriptionMask& InMask); // Function Tiger.TigerPlayerNetSubscriberComponent.Subscribe // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14f6d70
	void Server_UnsubscribePlayer(struct ATigerPlayerState* InPlayerState, struct FTigerPlayerNetSubscriptionMask InMask); // Function Tiger.TigerPlayerNetSubscriberComponent.Server_UnsubscribePlayer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x14f6940
	void Server_SubscribePlayer(struct ATigerPlayerState* InPlayerState, struct FTigerPlayerNetSubscriptionMask InMask); // Function Tiger.TigerPlayerNetSubscriberComponent.Server_SubscribePlayer // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x14f6870
	struct FTigerPlayerNetSubscriptionMask GetMask(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPlayerNetSubscriberComponent.GetMask // (Final|Native|Public|BlueprintCallable) // @ game+0x14f57a0
};

// Class Tiger.TigerMatchRecapComponent
// Size: 0x2c8 (Inherited: 0xd0)
struct UTigerMatchRecapComponent : UTigerPlayerNetSubscriberComponent {
	struct FMulticastInlineDelegate OnSyncDelegate; // 0xd0(0x10)
	struct FTigerRecapData Data; // 0xe0(0xf0)
	struct FTigerRecapData LastSyncData; // 0x1d0(0xf0)
	char pad_2C0[0x8]; // 0x2c0(0x08)

	void GetHitsFromItem(struct FTigerRecapWeapon& InItem, float InStartTime, float InEndTime, struct TArray<struct FTigerRecapHit>& OutHits); // Function Tiger.TigerMatchRecapComponent.GetHitsFromItem // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14974d0
	int32_t GetEliminationCount(); // Function Tiger.TigerMatchRecapComponent.GetEliminationCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14974a0
	int32_t GetDeathCount(); // Function Tiger.TigerMatchRecapComponent.GetDeathCount // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1497470
	struct FTigerRecapData GetData(); // Function Tiger.TigerMatchRecapComponent.GetData // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1497410
	struct FTigerRecapDamage GetDamageByUserRef(struct ATigerPlayer* InUserReference, bool bInReceived); // Function Tiger.TigerMatchRecapComponent.GetDamageByUserRef // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14972f0
	struct FTigerRecapDamage GetDamageByType(enum class ETigerDamageCauser InDamageType, bool bInReceived); // Function Tiger.TigerMatchRecapComponent.GetDamageByType // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14971d0
	int32_t GetAssistCount(); // Function Tiger.TigerMatchRecapComponent.GetAssistCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14971a0
	void Client_SyncData(struct ATigerPlayerState* InSyncPlayer, struct FTigerRecapData InSyncData, bool bInIsFullSync, struct FTigerPlayerNetSubscriptionMask InMask); // Function Tiger.TigerMatchRecapComponent.Client_SyncData // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1496e10
};

// Class Tiger.TigerMatchStateComponent
// Size: 0x108 (Inherited: 0xb0)
struct UTigerMatchStateComponent : UActorComponent {
	struct ATigerMatchGameMode* MatchGameMode; // 0xb0(0x08)
	struct ATigerMatchGameState* MatchGameState; // 0xb8(0x08)
	struct UTigerMatchWinConditionComponent* WinConditionComponent; // 0xc0(0x08)
	char pad_C8[0x40]; // 0xc8(0x40)

	void OnBalanceModeSet(); // Function Tiger.TigerMatchStateComponent.OnBalanceModeSet // (Final|Native|Private) // @ game+0x149db40
};

// Class Tiger.TigerMatchWinCondition
// Size: 0x38 (Inherited: 0x30)
struct UTigerMatchWinCondition : UTigerGameModeFeature {
	char pad_30[0x8]; // 0x30(0x08)
};

// Class Tiger.TigerMatchWinCondition_LastManStanding
// Size: 0x38 (Inherited: 0x38)
struct UTigerMatchWinCondition_LastManStanding : UTigerMatchWinCondition {

	void HandleNumberOfPlayersChanged(int32_t InNumPlayersAlive); // Function Tiger.TigerMatchWinCondition_LastManStanding.HandleNumberOfPlayersChanged // (Final|Native|Protected) // @ game+0x149cd70
};

// Class Tiger.TigerExtendedGroupScoreComponent
// Size: 0xe0 (Inherited: 0xb0)
struct UTigerExtendedGroupScoreComponent : UActorComponent {
	struct FMulticastInlineDelegate OnScoreChanged; // 0xb0(0x10)
	struct TArray<struct FTigerExtendedGroupScore> ExtendedGroupScores; // 0xc0(0x10)
	char pad_D0[0x10]; // 0xd0(0x10)

	void UpdatePlayerScoresForExtendedGroups(enum class ETigerRelativeExtendedGroup InRelativeExtendedGroup, struct FDelegate& InDelegate); // Function Tiger.TigerExtendedGroupScoreComponent.UpdatePlayerScoresForExtendedGroups // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x149e740
	void OnRep_ScoreChanged(); // Function Tiger.TigerExtendedGroupScoreComponent.OnRep_ScoreChanged // (Final|Native|Protected) // @ game+0x149dc80
	void Multicast_SetFinalGroupScores(struct TArray<struct FTigerExtendedGroupScore> InFinalGroupScores); // Function Tiger.TigerExtendedGroupScoreComponent.Multicast_SetFinalGroupScores // (Net|Native|Event|NetMulticast|Public) // @ game+0x149d980
	void HandlePlayerRecapDataUpdated(struct UTigerMatchRecapComponent* InMatchRecapComponent, struct FTigerRecapData& InSyncData, struct FTigerRecapData& InData); // Function Tiger.TigerExtendedGroupScoreComponent.HandlePlayerRecapDataUpdated // (Final|Native|Protected|HasOutParms) // @ game+0x149ce90
	int32_t GetScoreOfRelativeExtendedGroup(enum class ETigerRelativeExtendedGroup InRelativeExtendedGroup); // Function Tiger.TigerExtendedGroupScoreComponent.GetScoreOfRelativeExtendedGroup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149cb00
	int32_t GetIndexOfGroupBelongingToPlayer(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerExtendedGroupScoreComponent.GetIndexOfGroupBelongingToPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149c8a0
};

// Class Tiger.TigerMatchWinCondition_ScoreTarget
// Size: 0x48 (Inherited: 0x38)
struct UTigerMatchWinCondition_ScoreTarget : UTigerMatchWinCondition {
	char pad_38[0x4]; // 0x38(0x04)
	struct TWeakObjectPtr<struct UTigerExtendedGroupScoreComponent> ScoreComponent; // 0x3c(0x08)
	char pad_44[0x4]; // 0x44(0x04)

	void HandlePreMatchStateChanged(struct FTigerPreMatchStateInfo InPreMatchState); // Function Tiger.TigerMatchWinCondition_ScoreTarget.HandlePreMatchStateChanged // (Final|Native|Protected) // @ game+0x149d4b0
	void HandlePlayerScoreChanged(struct ATigerPlayerState* InPlayerState, int32_t InPlayerScoreDelta); // Function Tiger.TigerMatchWinCondition_ScoreTarget.HandlePlayerScoreChanged // (Final|Native|Protected) // @ game+0x149d3e0
	void HandleNumberOfPlayersChanged(int32_t InNumPlayersAlive); // Function Tiger.TigerMatchWinCondition_ScoreTarget.HandleNumberOfPlayersChanged // (Final|Native|Protected) // @ game+0x149ce00
	void HandleMatchStateChanged(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerMatchWinCondition_ScoreTarget.HandleMatchStateChanged // (Final|Native|Protected) // @ game+0x149cca0
};

// Class Tiger.TigerMatchWinCondition_TimeLimit
// Size: 0x40 (Inherited: 0x38)
struct UTigerMatchWinCondition_TimeLimit : UTigerMatchWinCondition {
	char pad_38[0x8]; // 0x38(0x08)
};

// Class Tiger.TigerMatchWinConditionComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerMatchWinConditionComponent : UActorComponent {
	struct TArray<struct UTigerMatchWinCondition*> ActiveWinConditions; // 0xb0(0x10)
};

// Class Tiger.TigerWeaponCrosshairWidget
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerWeaponCrosshairWidget : UTigerWidget {
	float WeaponSpread; // 0x280(0x04)
	struct FVector PlayerMovementVelocity; // 0x284(0x0c)
	bool bIsAiming; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float PreviewWeaponSpread; // 0x294(0x04)
	struct TArray<struct FTigerWeaponCrosshairSlot> CrosshairImages; // 0x298(0x10)
	struct TArray<struct FTigerWeaponScalingCrosshairSlot> CrosshairScalingImages; // 0x2a8(0x10)

	void OnWeaponFired(); // Function Tiger.TigerWeaponCrosshairWidget.OnWeaponFired // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	float GetScreenSpaceSpread(float InFov); // Function Tiger.TigerWeaponCrosshairWidget.GetScreenSpaceSpread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1561990
};

// Class Tiger.TigerMeleeCrosshairWidget
// Size: 0x2c8 (Inherited: 0x2b8)
struct UTigerMeleeCrosshairWidget : UTigerWeaponCrosshairWidget {
	struct UTigerMeleeWeaponComponent* OwnerMelee; // 0x2b8(0x08)
	struct UImage* CrosshairImage; // 0x2c0(0x08)
};

// Class Tiger.TigerMeleeWeaponComponent
// Size: 0x2d0 (Inherited: 0xb0)
struct UTigerMeleeWeaponComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct FMulticastInlineDelegate OnAttack; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnQuickAttack; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnAttackHit; // 0xd8(0x10)
	char pad_E8[0x10]; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnSuccessfulBlock; // 0xf8(0x10)
	struct FMulticastInlineDelegate OnHeavyAttackChargeBegin; // 0x108(0x10)
	struct FMulticastInlineDelegate OnHeavyAttackChargeEnd; // 0x118(0x10)
	float DebugDrawTime; // 0x128(0x04)
	char pad_12C[0x24]; // 0x12c(0x24)
	struct UTigerSwingCollisionData* SwingCollisionData; // 0x150(0x08)
	struct FMulticastInlineDelegate OnHeavyAttackReachedMinimumCharge; // 0x158(0x10)
	struct FMulticastInlineDelegate OnMeleeWeaponEquipped; // 0x168(0x10)
	bool bHeavyAttackEnabled; // 0x178(0x01)
	bool bBlockingEnabled; // 0x179(0x01)
	bool bAttackingViaQuickAttackEnabled; // 0x17a(0x01)
	struct FTigerMeleeWeaponAttackIdentifier CurrentAttackIdentifier; // 0x17b(0x02)
	char pad_17D[0xb]; // 0x17d(0x0b)
	struct UDataTable* MeleeAttacksDatabase; // 0x188(0x08)
	struct UTigerMeleeWeapon* EquippedWeaponType; // 0x190(0x08)
	struct UTigerMeleeAimAssistBehavior* CurrentAimAssistBehavior; // 0x198(0x08)
	float BlockCooldown; // 0x1a0(0x04)
	float MaxBlockAttackAngle; // 0x1a4(0x04)
	float AttackQueueCooldown; // 0x1a8(0x04)
	float AirAttackRequiredDistanceToGround; // 0x1ac(0x04)
	float HitEffectRadiusOffset; // 0x1b0(0x04)
	float HitEffectHeightOffset; // 0x1b4(0x04)
	float RootMotionAnimationHeightThreshold; // 0x1b8(0x04)
	char pad_1BC[0x4]; // 0x1bc(0x04)
	struct UTigerBuff* BlockBuffOnAttacker; // 0x1c0(0x08)
	float DiminishingReturnCooldown; // 0x1c8(0x04)
	float DiminishingReturnMultiplierRegenerationRate; // 0x1cc(0x04)
	char pad_1D0[0x38]; // 0x1d0(0x38)
	bool bCanMoveDuringMeleeAttacks; // 0x208(0x01)
	char pad_209[0xf]; // 0x209(0x0f)
	struct TArray<struct ATigerCharacter*> HitFeedbackTargets; // 0x218(0x10)
	char pad_228[0x68]; // 0x228(0x68)
	struct TArray<struct AActor*> HitCharactersOnCurrentSwing; // 0x290(0x10)
	struct TArray<struct AActor*> HitWorldStaticsOnCurrentSwing; // 0x2a0(0x10)
	char pad_2B0[0x8]; // 0x2b0(0x08)
	struct UAnimMontage* CurrentSwingAnimation; // 0x2b8(0x08)
	struct AActor* LockOnTarget; // 0x2c0(0x08)
	float MaxLockOnDistance; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)

	void TigerOnMeleeWeaponEquipped__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerOnMeleeWeaponEquipped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerHeavyAttackChargeEnd__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerHeavyAttackChargeEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerHeavyAttackChargeBegin__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerHeavyAttackChargeBegin__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateSwingState__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateSwingState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateSuccessfullyBlocked__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateSuccessfullyBlocked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateQuickAttacked__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateQuickAttacked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateHeavyAttackReachedMinimumCharge__DelegateSignature(); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateHeavyAttackReachedMinimumCharge__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateAttackHit__DelegateSignature(enum class ETigerWeaponMeleeAttackType InAttackType); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateAttackHit__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerDelegateAttacked__DelegateSignature(bool bWasHeavyAttack); // DelegateFunction Tiger.TigerMeleeWeaponComponent.TigerDelegateAttacked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Server_SwingWeapon(struct FTigerMeleeAttackNetData InAttackIdentifier, bool bInDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Server_SwingWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x149e330
	void Server_SetClientSideHitDetectionMelee(bool bEnableClientSideHits); // Function Tiger.TigerMeleeWeaponComponent.Server_SetClientSideHitDetectionMelee // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x149e270
	void Server_OnSuccessfulClientAttack(struct TArray<struct FTigerCharacterClientHit> CharacterHits); // Function Tiger.TigerMeleeWeaponComponent.Server_OnSuccessfulClientAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x149e1b0
	void Server_OnDeflectedAttack(struct FVector_NetQuantize DeflectLocation, struct ATigerCharacter* DeflectingChar); // Function Tiger.TigerMeleeWeaponComponent.Server_OnDeflectedAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x149e0b0
	void Server_DisableRecoveryRootMotion(float InDisableTimeInAnimation); // Function Tiger.TigerMeleeWeaponComponent.Server_DisableRecoveryRootMotion // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x143a660
	void OnMontageStartedDuringSwing(struct UAnimMontage* Montage); // Function Tiger.TigerMeleeWeaponComponent.OnMontageStartedDuringSwing // (Final|Native|Private) // @ game+0x149dbf0
	void OnMontageStartedDuringBlockStance(struct UAnimMontage* Montage); // Function Tiger.TigerMeleeWeaponComponent.OnMontageStartedDuringBlockStance // (Final|Native|Private) // @ game+0x149db60
	void Multicast_StopBlocking(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StopBlocking // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x149db20
	void Multicast_StartHeavySwing(bool bDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StartHeavySwing // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x149da90
	void Multicast_StartBlocking(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_StartBlocking // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1435f90
	void Multicast_SetClientSideHitDetectionMelee(bool bEnableClientSideHits); // Function Tiger.TigerMeleeWeaponComponent.Multicast_SetClientSideHitDetectionMelee // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x14130e0
	void Multicast_OnSwingWeapon(struct FTigerMeleeAttackNetData AttackIdentifier, bool bInDisabledRootMotion); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnSwingWeapon // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x149d890
	void Multicast_OnAttackSuccessful(struct TArray<struct FTigerCharacterServerHit> InCharacterHits, enum class ETigerWeaponMeleeAttackType InAttackType); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnAttackSuccessful // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x149d7a0
	void Multicast_OnAttackBlocked(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_OnAttackBlocked // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x149d780
	void Multicast_DisableRecoveryRootMotion(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_DisableRecoveryRootMotion // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x143a640
	void Multicast_DeflectAttack(struct ATigerCharacter* Attacker); // Function Tiger.TigerMeleeWeaponComponent.Multicast_DeflectAttack // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x149d6f0
	void Multicast_AbortCurrentAttack(); // Function Tiger.TigerMeleeWeaponComponent.Multicast_AbortCurrentAttack // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x149d6d0
	bool IsInMeleeSwing(); // Function Tiger.TigerMeleeWeaponComponent.IsInMeleeSwing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149d5c0
	bool IsChargingHeavyAttack(); // Function Tiger.TigerMeleeWeaponComponent.IsChargingHeavyAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149d5a0
	bool IsBlocking(); // Function Tiger.TigerMeleeWeaponComponent.IsBlocking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149d570
	bool HasLockOnTarget(); // Function Tiger.TigerMeleeWeaponComponent.HasLockOnTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149d540
	float GetTimeSinceLastAttack(); // Function Tiger.TigerMeleeWeaponComponent.GetTimeSinceLastAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149cb90
	void Client_OnHit(struct FTigerCharacterServerHit ServerHit); // Function Tiger.TigerMeleeWeaponComponent.Client_OnHit // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x149c490
	void Client_OnAttackBlocked(struct FVector_NetQuantize BlockedAtLocation, struct UTigerMeleeWeaponComponent* BlockingMelee); // Function Tiger.TigerMeleeWeaponComponent.Client_OnAttackBlocked // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x149c3c0
	void Client_DeflectAttack(); // Function Tiger.TigerMeleeWeaponComponent.Client_DeflectAttack // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x149c3a0
	void Client_Debug_ShowServerSwingLocation(struct FVector Position, struct FQuat Rotation); // Function Tiger.TigerMeleeWeaponComponent.Client_Debug_ShowServerSwingLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x149c2e0
	void Client_AbortCurrentAttack(); // Function Tiger.TigerMeleeWeaponComponent.Client_AbortCurrentAttack // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1435f70
	void BroadcastHeavyAttackReleaseCallback(); // Function Tiger.TigerMeleeWeaponComponent.BroadcastHeavyAttackReleaseCallback // (Final|Native|Public) // @ game+0x149c290
};

// Class Tiger.TigerSwingCollisionData
// Size: 0x80 (Inherited: 0x30)
struct UTigerSwingCollisionData : UDataAsset {
	struct TMap<struct FName, struct FTigerSwingCollisionInfo> SwingCollisionInfos; // 0x30(0x50)
};

// Class Tiger.TigerMeleeAimAssistBehavior
// Size: 0x78 (Inherited: 0x28)
struct UTigerMeleeAimAssistBehavior : UObject {
	float AimAssistMinRadius; // 0x28(0x04)
	float AimAssistMaxRadius; // 0x2c(0x04)
	float MaxTargetHeightDiff; // 0x30(0x04)
	float DebugDrawTime; // 0x34(0x04)
	bool bPredictCandidateLocationsBeforeEvaluation; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct ATigerCharacter* TigerOwner; // 0x40(0x08)
	struct UTigerMeleeWeapon* EquippedWeapon; // 0x48(0x08)
	struct FVector TigerOwnerLocation; // 0x50(0x0c)
	struct TWeakObjectPtr<struct ATigerCharacter> FinalTargetCharacter; // 0x5c(0x08)
	struct FTigerMeleeWeaponAttackIdentifier FinalAttackIdentifier; // 0x64(0x02)
	char pad_66[0x2]; // 0x66(0x02)
	float AimAssistMinRadiusSquared; // 0x68(0x04)
	float AimAssistMaxRadiusSquared; // 0x6c(0x04)
	float AimAssistTravelTime; // 0x70(0x04)
	char pad_74[0x4]; // 0x74(0x04)

	void UpdateAimTarget(struct TArray<struct FTigerMeleeAimAssistCandidate>& InCandidates, struct FVector& InCameraForward, bool bInIsInAir, bool bInIsQuickAttack, struct FTigerMeleeWeaponAttackIdentifier& InPreviousAttackIdentifier, float InSecondsSincePreviousAttack, struct ATigerCharacter*& OutFinalTarget, struct FTigerMeleeWeaponAttackIdentifier& OutAttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.UpdateAimTarget // (Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void ShowDebugValue(struct FTigerMeleeAimAssistCandidate& Candidate, struct FString DebugLabel, struct FString DebugValue); // Function Tiger.TigerMeleeAimAssistBehavior.ShowDebugValue // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x149e5e0
	void ShowDebugAttackIdentifier(struct FTigerMeleeAimAssistCandidate& Candidate, struct FString DebugLabel, struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.ShowDebugAttackIdentifier // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x149e480
	bool ShouldRotatePlayer(); // Function Tiger.TigerMeleeAimAssistBehavior.ShouldRotatePlayer // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x149e450
	void PredictMultipleCharacterLocations(float PredictionTime, struct TArray<struct FTigerMeleeAimAssistCandidate>& Candidates); // Function Tiger.TigerMeleeAimAssistBehavior.PredictMultipleCharacterLocations // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x149dfc0
	void PredictCharacterLocation(float PredictionTime, struct FTigerMeleeAimAssistCandidate& Candidate); // Function Tiger.TigerMeleeAimAssistBehavior.PredictCharacterLocation // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x149ded0
	struct FVector PredictAimAssistTargetLocation(struct ATigerCharacter* AimTargetChar, float PredictionTime); // Function Tiger.TigerMeleeAimAssistBehavior.PredictAimAssistTargetLocation // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x149dde0
	void OnStartMeleeAttack(struct FVector& InTargetLocationOrDirection, bool bIsLocation, struct FTigerMeleeWeaponAttackIdentifier& InAttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.OnStartMeleeAttack // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x149dca0
	void OnAnimNotifyMelee(struct FName MeleeEventName); // Function Tiger.TigerMeleeAimAssistBehavior.OnAnimNotifyMelee // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void MoveCharacterToTargetLocation(struct FVector TargetLocation, float TravelTime); // Function Tiger.TigerMeleeAimAssistBehavior.MoveCharacterToTargetLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x149d5f0
	struct FTigerMeleeAimAssistData GetAimAssistData(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeAimAssistBehavior.GetAimAssistData // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x149c750
	struct FTigerMeleeAimAssistCandidate CreateCandidate(struct ATigerCharacter* AimTargetChar, struct FVector PredictedTargetLocation, struct FVector& CameraForwardDirection, struct FVector& CameraLocation, float HalfFOV); // Function Tiger.TigerMeleeAimAssistBehavior.CreateCandidate // (Native|Event|Protected|HasOutParms|HasDefaults|BlueprintEvent|Const) // @ game+0x149c540
	bool CanQueueMeleeAttack(); // Function Tiger.TigerMeleeAimAssistBehavior.CanQueueMeleeAttack // (Native|Event|Public|BlueprintEvent) // @ game+0x149c2b0
	void AddRelativeImpulse(struct FVector& ImpulseDirection, float ImpulseStrength); // Function Tiger.TigerMeleeAimAssistBehavior.AddRelativeImpulse // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x149c1b0
};

// Class Tiger.TigerMeleeWeaponTrailConfig
// Size: 0x48 (Inherited: 0x28)
struct UTigerMeleeWeaponTrailConfig : UObject {
	struct TArray<struct FScalarParameterValue> ScalarParameters; // 0x28(0x10)
	struct TArray<struct FVectorParameterValue> VectorParameters; // 0x38(0x10)
};

// Class Tiger.TigerWeapon
// Size: 0xb0 (Inherited: 0x28)
struct UTigerWeapon : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UMaterialInterface* RarityMaterial; // 0x30(0x08)
	enum class ETigerItemRarity Rarity; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct USkeletalMesh* SkeletalMesh; // 0x40(0x08)
	struct USkeletalMesh* OffhandSkeletalMesh; // 0x48(0x08)
	struct UAnimInstance* AnimClass; // 0x50(0x08)
	struct UTigerAimAssistSettings* AimAssist; // 0x58(0x08)
	struct UTigerWeaponCrosshairWidget* Crosshair; // 0x60(0x08)
	struct UTexture2D* HUDIcon; // 0x68(0x08)
	struct UCurveFloat* RarityDamageMultiplierCurve; // 0x70(0x08)
	struct FName WeaponUnequipAnimation; // 0x78(0x08)
	struct FName WeaponEquipAnimation; // 0x80(0x08)
	struct FName PrimaryAttachPoint; // 0x88(0x08)
	struct FName SecondaryAttachPoint; // 0x90(0x08)
	float FearValueMultiplier; // 0x98(0x04)
	float FearDistanceMultiplier; // 0x9c(0x04)
	bool bIsDualWeapon; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
	uint64_t PersistentTelemetryID; // 0xa8(0x08)
};

// Class Tiger.TigerMeleeWeapon
// Size: 0x1a0 (Inherited: 0xb0)
struct UTigerMeleeWeapon : UTigerWeapon {
	struct UCurveFloat* HorizontalFlinchCurve; // 0xb0(0x08)
	struct UCurveFloat* VerticalFlinchCurve; // 0xb8(0x08)
	float DamageMultiplier; // 0xc0(0x04)
	float RootMotionAttacksStopDistance; // 0xc4(0x04)
	float RootMotionAttacksStopDistanceAboveOrBelow; // 0xc8(0x04)
	bool bIsUnarmedWeapon; // 0xcc(0x01)
	char pad_CD[0x3]; // 0xcd(0x03)
	struct UTigerMeleeAimAssistBehavior* AimAssistBehavior; // 0xd0(0x08)
	float AimAssistPredictionTime; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct TArray<struct FTigerMeleeAttack> Attacks; // 0xe0(0x10)
	struct FName HeavyAttackChargeUpMontageName; // 0xf0(0x08)
	enum class ETigerDisciplinesEnum WeaponAbility; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)
	struct UAkAudioEvent* HitAkEvent; // 0x100(0x08)
	struct UAkAudioEvent* HeavyHitAkEvent; // 0x108(0x08)
	struct UParticleSystem* HitEffect; // 0x110(0x08)
	struct AActor* HitEffectClass; // 0x118(0x08)
	struct UForceFeedbackEffect* TargetHitForceFeedback; // 0x120(0x08)
	struct UForceFeedbackEffect* AttackBlockedForceFeedback; // 0x128(0x08)
	struct UForceFeedbackEffect* SuccesfullyBlockedForceFeedback; // 0x130(0x08)
	struct FName BlockBlendSpaceName; // 0x138(0x08)
	struct UAkAudioEvent* BlockStanceActivatedAkEvent; // 0x140(0x08)
	float StartBlockingTransitionTime; // 0x148(0x04)
	float BlockMovementMultiplier; // 0x14c(0x04)
	float BlockStunTime; // 0x150(0x04)
	float DiminishingReturnBlockStunMultiplierReduction; // 0x154(0x04)
	struct UAkAudioEvent* BlockHitAkEvent; // 0x158(0x08)
	struct UParticleSystem* BlockEffect; // 0x160(0x08)
	struct FName BlockHitMontageName; // 0x168(0x08)
	struct FName BlockKnockbackMontageName; // 0x170(0x08)
	float BlockImpulseStrength; // 0x178(0x04)
	float BlockMoveDistance; // 0x17c(0x04)
	float BlockMoveDuration; // 0x180(0x04)
	float BlockMoveExitVelocityScale; // 0x184(0x04)
	float BlockAttackDamageMultiplier; // 0x188(0x04)
	float BlockHeavyAttackDamageMultiplier; // 0x18c(0x04)
	struct UTigerMeleeWeaponTrailConfig* WeaponTrailConfigClass; // 0x190(0x08)
	float MasqueradeNoiseEventRadius; // 0x198(0x04)
	enum class ETigerMeleeWeaponIdentifier MeleeWeaponIdentifier; // 0x19c(0x01)
	char pad_19D[0x3]; // 0x19d(0x03)

	void OnWorldObjectHit(struct ATigerCharacter* InInstigator, struct FHitResult& InWorldObjectHitResult, struct FVector& InSwingDirection); // Function Tiger.TigerMeleeWeapon.OnWorldObjectHit // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnHit(struct ATigerCharacter* Instigator, struct ATigerCharacter* Target, enum class ETigerWeaponMeleeAttackType AttackType, float Damage); // Function Tiger.TigerMeleeWeapon.OnHit // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct FName GetWeaponOverrideHitReactionMontage(struct ATigerCharacter* Attacker, enum class ESharkFourWayDirection HitFromFourWayDirection); // Function Tiger.TigerMeleeWeapon.GetWeaponOverrideHitReactionMontage // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x149cbc0
	char GetRandomAttackFromNextGroup(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeWeapon.GetRandomAttackFromNextGroup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x149ca50
	char GetRandomAttackFromGroup(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier, char AttackGroup); // Function Tiger.TigerMeleeWeapon.GetRandomAttackFromGroup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x149c960
	enum class ETigerMeleeWeaponIdentifier GetMeleeWeaponIdentifier(); // Function Tiger.TigerMeleeWeapon.GetMeleeWeaponIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149c940
	char GetAttackGroupFromAttackIdentifier(struct FTigerMeleeWeaponAttackIdentifier& AttackIdentifier); // Function Tiger.TigerMeleeWeapon.GetAttackGroupFromAttackIdentifier // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x149c7f0
};

// Class Tiger.TigerMenuTransition
// Size: 0x290 (Inherited: 0x280)
struct UTigerMenuTransition : UTigerWidget {
	char pad_280[0x10]; // 0x280(0x10)

	void Transition(struct FDelegate InDelegate); // Function Tiger.TigerMenuTransition.Transition // (Final|Native|Public|BlueprintCallable) // @ game+0x14a3830
	void StopTransition(); // Function Tiger.TigerMenuTransition.StopTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x14a3810
	void StartTransitionAnimation(); // Function Tiger.TigerMenuTransition.StartTransitionAnimation // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void PerformTransition(); // Function Tiger.TigerMenuTransition.PerformTransition // (Final|Native|Protected|BlueprintCallable) // @ game+0x14a37d0
	void OnPerformTransition(); // Function Tiger.TigerMenuTransition.OnPerformTransition // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMetaStoreUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerMetaStoreUtilityBFL : UBlueprintFunctionLibrary {

	struct FString GetTotalPriceAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetTotalPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a3450
	void GetTotalPayloadPriceAsString(struct UTigerVendorComponent* InVendorComponent, struct TArray<struct FTigerMetaStoreBuyPayloadElement>& InStoreBuyPayloadElements, struct FString& OutPrice, bool& bOutCouldGetTotalPrice); // Function Tiger.TigerMetaStoreUtilityBFL.GetTotalPayloadPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a32b0
	struct FString GetStoreEntryIdAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetStoreEntryIdAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a31a0
	struct FString GetQuantityAsString(struct FTigerMetaStoreEntryItem& InStoreEntryItem); // Function Tiger.TigerMetaStoreUtilityBFL.GetQuantityAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a30c0
	struct FString GetPremiumPriceAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetPremiumPriceAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a2e30
	int32_t GetNumBoughtItems(struct FTigerBuyStoreEntryResponsePayload& InBuyResponse); // Function Tiger.TigerMetaStoreUtilityBFL.GetNumBoughtItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a2d70
	struct FString GetDiscountAsString(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerMetaStoreUtilityBFL.GetDiscountAsString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a2c60
	bool GetBoughtItemInfo(struct FTigerBuyStoreEntryResponsePayload& InBuyResponse, int32_t InItemIndex, struct FTigerItemId& OutItemId, struct FString& OutItemQuantity); // Function Tiger.TigerMetaStoreUtilityBFL.GetBoughtItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14a2910
	struct FTigerMetaStoreBuyPayloadElement CreateStoreEntryBuyElement(struct FTigerMetaStoreEntry& InStoreEntry, int32_t InQuantity); // Function Tiger.TigerMetaStoreUtilityBFL.CreateStoreEntryBuyElement // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14a27e0
};

// Class Tiger.TigerMiniMap
// Size: 0x2c8 (Inherited: 0x280)
struct UTigerMiniMap : UTigerWidget {
	struct UTigerMapUi* MapUnderlay; // 0x280(0x08)
	struct UTigerMapUi* MapOverlay; // 0x288(0x08)
	char pad_290[0x8]; // 0x290(0x08)
	struct TArray<struct UWidget*> UnrotatedWidgets; // 0x298(0x10)
	struct TArray<struct UTigerMapMarkerWidget*> VisibleMarkersThisFrame; // 0x2a8(0x10)
	struct UWidget* MinimapRootNative; // 0x2b8(0x08)
	struct UUserWidget* GroupMemberWidgetClass; // 0x2c0(0x08)

	void UpdatePlayerMarkerAlignmentAndMinimapSize(); // Function Tiger.TigerMiniMap.UpdatePlayerMarkerAlignmentAndMinimapSize // (Final|Native|Public|BlueprintCallable) // @ game+0x14a3a30
	void SetupMarkerUpdates(); // Function Tiger.TigerMiniMap.SetupMarkerUpdates // (Final|Native|Protected|BlueprintCallable) // @ game+0x14a37f0
	void OnPlayerStateCreated(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerMiniMap.OnPlayerStateCreated // (Final|Native|Protected) // @ game+0x14a3720
	void OnMasqueradeStateChanged(bool InIsMasqueradeBreached, enum class ETigerAIPlayerAction InPlayerAction); // Function Tiger.TigerMiniMap.OnMasqueradeStateChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void HandleGameplaySettingsChanged(struct FTigerGameplaySettings& InGameplaySettings); // Function Tiger.TigerMiniMap.HandleGameplaySettingsChanged // (Final|Native|Protected|HasOutParms) // @ game+0x14a3560
};

// Class Tiger.TigerModelViewerItem
// Size: 0x238 (Inherited: 0x228)
struct ATigerModelViewerItem : AActor {
	struct UStaticMeshComponent* Mesh; // 0x228(0x08)
	float DesiredScreenSize; // 0x230(0x04)
	float CurrentScreenSize; // 0x234(0x04)

	float GetCurrentScreenSize(struct FVector& InOrigin, float InDistance, struct FVector& InViewOrigin, struct FMatrix& InProjectionMatrix); // Function Tiger.TigerModelViewerItem.GetCurrentScreenSize // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14a2ac0
};

// Class Tiger.TigerModularList
// Size: 0x280 (Inherited: 0x280)
struct UTigerModularList : UTigerWidget {
};

// Class Tiger.TigerMultiplayAgent
// Size: 0xf8 (Inherited: 0x50)
struct UTigerMultiplayAgent : UTigerDsBackendAgent {
	char pad_50[0xa8]; // 0x50(0xa8)
};

// Class Tiger.TigerMultiplayRegionCache
// Size: 0x140 (Inherited: 0x30)
struct UTigerMultiplayRegionCache : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)
	float RefreshRegionsIntervalSeconds; // 0x40(0x04)
	float MaxWaitTimeSecondsAfterRegionDetermination; // 0x44(0x04)
	struct FTigerRegionPingerSettings PingerSettings; // 0x48(0x14)
	char pad_5C[0x2c]; // 0x5c(0x2c)
	float MinimumMeasurementTime; // 0x88(0x04)
	int32_t DesiredMeasuredRegions; // 0x8c(0x04)
	char pad_90[0xb0]; // 0x90(0xb0)
};

// Class Tiger.TigerMusicAsset
// Size: 0x38 (Inherited: 0x30)
struct UTigerMusicAsset : UDataAsset {
	struct USoundCue* SoundCue; // 0x30(0x08)
};

// Class Tiger.TigerMusicVolume
// Size: 0x268 (Inherited: 0x260)
struct ATigerMusicVolume : AVolume {
	struct UTigerMusicAsset* MusicAsset; // 0x260(0x08)
};

// Class Tiger.TigerMusicManager
// Size: 0x230 (Inherited: 0x228)
struct ATigerMusicManager : AActor {
	struct UAudioComponent* AudioComponent; // 0x228(0x08)
};

// Class Tiger.TigerNearbySoundCueComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerNearbySoundCueComponent : UActorComponent {
	float DistanceToPlaySoundOnSquared; // 0xb0(0x04)
	float DistanceToStopSoundOnSquared; // 0xb4(0x04)
	struct UAkAudioEvent* PlayEvent; // 0xb8(0x08)
	struct UAkAudioEvent* StopEvent; // 0xc0(0x08)
	bool bDisableOcclusion; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct ATigerCharacter* CharacterOwner; // 0xd0(0x08)
	struct UAkComponent* AkComponent; // 0xd8(0x08)
	char pad_E0[0x10]; // 0xe0(0x10)
};

// Class Tiger.TigerNearCameraFadeMaterialDb
// Size: 0xd0 (Inherited: 0x30)
struct UTigerNearCameraFadeMaterialDb : UDataAsset {
	struct TMap<struct TSoftObjectPtr<UMaterialInterface>, struct TSoftObjectPtr<UMaterialInterface>> OriginalMaterialToFadingMaterialLut; // 0x30(0x50)
	struct TMap<struct TSoftObjectPtr<UMaterialInterface>, struct TSoftObjectPtr<UMaterialInterface>> FadingMaterialToOriginalMaterialLut; // 0x80(0x50)
};

// Class Tiger.TigerNearCameraFadeSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerNearCameraFadeSettings : UDeveloperSettings {
	bool bEnableNearCameraFade; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TMap<struct FName, struct FName> CollisionProfileChangesWhenTogglingFade; // 0x40(0x50)
	struct UTigerNearCameraFadeMaterialDb* MaterialDatabase; // 0x90(0x08)
	float FadeLength; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct TArray<struct FTigerNearCameraFadeMaterialMasterData> MasterMaterialDatas; // 0xa0(0x10)
	struct FTigerNearCameraFadeDebugData DebugData; // 0xb0(0x28)
};

// Class Tiger.TigerNetInfoSubSystem
// Size: 0x50 (Inherited: 0x30)
struct UTigerNetInfoSubSystem : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)

	bool IsPublicIpv6Set(); // Function Tiger.TigerNetInfoSubSystem.IsPublicIpv6Set // (Final|Native|Public|BlueprintCallable) // @ game+0x14a3660
	bool IsPublicIpv4Set(); // Function Tiger.TigerNetInfoSubSystem.IsPublicIpv4Set // (Final|Native|Public|BlueprintCallable) // @ game+0x14a3630
	struct FString GetPublicIpv6(); // Function Tiger.TigerNetInfoSubSystem.GetPublicIpv6 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a3000
	struct FString GetPublicIpv4(); // Function Tiger.TigerNetInfoSubSystem.GetPublicIpv4 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a2f40
};

// Class Tiger.TigerNetworkGraphDelegates
// Size: 0x78 (Inherited: 0x28)
struct UTigerNetworkGraphDelegates : UObject {
	struct FMulticastInlineDelegate ServerPerformance; // 0x28(0x10)
	struct FMulticastInlineDelegate FramesPerSecond; // 0x38(0x10)
	struct FMulticastInlineDelegate PacketLoss; // 0x48(0x10)
	struct FMulticastInlineDelegate Latency; // 0x58(0x10)
	struct FMulticastInlineDelegate LatencyVariation; // 0x68(0x10)

	void GetServerID(struct UObject* InWorldContextObject, struct FText& OutServerID); // Function Tiger.TigerNetworkGraphDelegates.GetServerID // (Final|BlueprintCosmetic|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a7270
};

// Class Tiger.TigerBestialTrailPart
// Size: 0x580 (Inherited: 0x580)
struct UTigerBestialTrailPart : USplineMeshComponent {
};

// Class Tiger.TigerBestialTrailVisualizer
// Size: 0x240 (Inherited: 0x228)
struct ATigerBestialTrailVisualizer : AActor {
	struct TArray<struct FTigerPlayerSavedLocation> LocationHistory; // 0x228(0x10)
	struct ATigerGameState* GameState; // 0x238(0x08)

	float SecondsUntilTimeStamp(float Timestamp); // Function Tiger.TigerBestialTrailVisualizer.SecondsUntilTimeStamp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a7d70
	float SecondsSinceTimeStamp(float Timestamp); // Function Tiger.TigerBestialTrailVisualizer.SecondsSinceTimeStamp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a7cd0
	void ReceiveNewTrackingPoint(struct FTigerPlayerSavedLocation& NewLocation); // Function Tiger.TigerBestialTrailVisualizer.ReceiveNewTrackingPoint // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void ReceiveInitialTrackingPoints(struct TArray<struct FTigerPlayerSavedLocation>& Locations, struct ATigerPlayer* TrackedPlayer); // Function Tiger.TigerBestialTrailVisualizer.ReceiveInitialTrackingPoints // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void BeginEndTracking(); // Function Tiger.TigerBestialTrailVisualizer.BeginEndTracking // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerTrackedBuffInstance
// Size: 0x88 (Inherited: 0x88)
struct UTigerTrackedBuffInstance : UTigerBuffInstance {
};

// Class Tiger.TigerTrackedBuff
// Size: 0x268 (Inherited: 0x268)
struct UTigerTrackedBuff : UTigerBuff {
};

// Class Tiger.TigerNosferatuPassiveBestialConfig
// Size: 0x170 (Inherited: 0x140)
struct UTigerNosferatuPassiveBestialConfig : UTigerPassiveConfig {
	struct ATigerBestialTrailVisualizer* TrailVisualizationActor; // 0x140(0x08)
	struct UTigerTrackedBuff* TrackedBuffType; // 0x148(0x08)
	float RevealDistanceSquared; // 0x150(0x04)
	float LoseDistanceSquared; // 0x154(0x04)
	struct TArray<float> RevealHealthThreshold; // 0x158(0x10)
	float TrackingTimeSeconds; // 0x168(0x04)
	bool bEnableTrackingFeedback; // 0x16c(0x01)
	char pad_16D[0x3]; // 0x16d(0x03)
};

// Class Tiger.TigerPassiveArchetypeLogic
// Size: 0x178 (Inherited: 0xc8)
struct UTigerPassiveArchetypeLogic : UTigerPassiveComponent {
	struct FTigerCharacterStatModification PowerLevelStatChanges; // 0xc8(0xa8)
	char pad_170[0x8]; // 0x170(0x08)

	void OnPowerLevelIncreased(); // Function Tiger.TigerPassiveArchetypeLogic.OnPowerLevelIncreased // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	int32_t GetPowerLevel(); // Function Tiger.TigerPassiveArchetypeLogic.GetPowerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14bab10
};

// Class Tiger.TigerNosferatuPassiveBestialLogic
// Size: 0x1d0 (Inherited: 0x178)
struct UTigerNosferatuPassiveBestialLogic : UTigerPassiveArchetypeLogic {
	struct TMap<int32_t, struct FTigerTrackedPlayerData> RevealedPlayers; // 0x178(0x50)
	struct UTigerNosferatuPassiveBestialConfig* Config; // 0x1c8(0x08)

	void NewTrackedLocation(struct ATigerPlayer* InTrackedPlayer, struct FVector& InNewLocation, float InTimeStamp); // Function Tiger.TigerNosferatuPassiveBestialLogic.NewTrackedLocation // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x14a7af0
	bool CalculateIsWithinDistanceToTrail(float InDistance); // Function Tiger.TigerNosferatuPassiveBestialLogic.CalculateIsWithinDistanceToTrail // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a6f40
	float CalculateDistanceToTrail(); // Function Tiger.TigerNosferatuPassiveBestialLogic.CalculateDistanceToTrail // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a6f10
};

// Class Tiger.TigerNotificationsUI
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerNotificationsUI : UTigerWidget {
	float HolyIncenseImminentTime; // 0x280(0x04)
	char pad_284[0x34]; // 0x284(0x34)

	void OnReceivedReward(); // Function Tiger.TigerNotificationsUI.OnReceivedReward // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnQuestUnlocked(struct UTigerQuest* InNewQuest); // Function Tiger.TigerNotificationsUI.OnQuestUnlocked // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnQuestObjectiveUnlocked(struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerNotificationsUI.OnQuestObjectiveUnlocked // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnQuestObjectiveCompleted(struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerNotificationsUI.OnQuestObjectiveCompleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnQuestCompleted(struct UTigerQuest* InCompletedQuest); // Function Tiger.TigerNotificationsUI.OnQuestCompleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnPlayerHealed(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerNotificationsUI.OnPlayerHealed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnPlayerDeath(struct FTigerPlayerStateGameData& InKilledPlayerData, struct FTigerPlayerStateGameData& InInstigatorPlayerData, bool bIsPlayerInSameGroup); // Function Tiger.TigerNotificationsUI.OnPlayerDeath // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnOtherPlayerBrokeMasquerade(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerNotificationsUI.OnOtherPlayerBrokeMasquerade // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnMemberLeftGroup(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerNotificationsUI.OnMemberLeftGroup // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnMemberJoinedGroup(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerNotificationsUI.OnMemberJoinedGroup // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnHolyIncenseImminent(float Time); // Function Tiger.TigerNotificationsUI.OnHolyIncenseImminent // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGroupPingResponse(struct UTigerPingClientData* InPingData, struct ATigerPlayerState* InRespondingPlayer, bool bInIsInterested); // Function Tiger.TigerNotificationsUI.OnGroupPingResponse // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGroupPingCanceled(struct UTigerPingClientData* InPingData); // Function Tiger.TigerNotificationsUI.OnGroupPingCanceled // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGroupPing(struct FTigerPingNotificationNetData& PingData, struct ATigerPlayerState* InSendingPlayerState); // Function Tiger.TigerNotificationsUI.OnGroupPing // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnGroupInviteReceived(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnGroupInviteReceived // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGrimoireItemUnlocked(struct UTigerGrimoireEntry* InGrimoireEntry); // Function Tiger.TigerNotificationsUI.OnGrimoireItemUnlocked // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendRemoved(struct UTigerFriend* InLostFriend); // Function Tiger.TigerNotificationsUI.OnFriendRemoved // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendInviteSent(); // Function Tiger.TigerNotificationsUI.OnFriendInviteSent // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendInviteRejected(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnFriendInviteRejected // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendInviteReceived(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerNotificationsUI.OnFriendInviteReceived // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerNotificationsUI.OnFriendAdded // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnExperienceGained(struct UTigerExperienceEvent* ExperienceEvent, int32_t GainedExperience); // Function Tiger.TigerNotificationsUI.OnExperienceGained // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnCollectibleFound(struct UTigerCollectibleData* InCollectible); // Function Tiger.TigerNotificationsUI.OnCollectibleFound // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnChallengeTierCompleted(struct UTigerChallenge* InChallenge); // Function Tiger.TigerNotificationsUI.OnChallengeTierCompleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnChallengeCompleted(struct UTigerChallenge* InCompletedChallenge); // Function Tiger.TigerNotificationsUI.OnChallengeCompleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnAcceptGroupInviteFailed(struct FTigerInviteId& InInviteId); // Function Tiger.TigerNotificationsUI.OnAcceptGroupInviteFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void ItemReceived(struct FTigerItemNotification& ItemNotification); // Function Tiger.TigerNotificationsUI.ItemReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerNotificationsUIStacker
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerNotificationsUIStacker : UTigerWidget {
	struct TArray<struct FDisplayedItemWidget> ShownItemWidgets; // 0x280(0x10)
	int32_t MaxDisplayedItems; // 0x290(0x04)
	float ItemMargin; // 0x294(0x04)
	float ItemDisplayTime; // 0x298(0x04)
	float ItemMoveTime; // 0x29c(0x04)
	float ItemFadeOffsetX; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TArray<struct UUserWidget*> WaitingItems; // 0x2a8(0x10)
	struct UUserWidget* ItemWidgetFadingIn; // 0x2b8(0x08)
	struct UUserWidget* ItemWidgetFadingOut; // 0x2c0(0x08)
	struct UCanvasPanel* ItemCanvasWidget; // 0x2c8(0x08)
	char pad_2D0[0x10]; // 0x2d0(0x10)

	void EnqueueItem(struct UUserWidget* ItemWidget); // Function Tiger.TigerNotificationsUIStacker.EnqueueItem // (Final|Native|Public|BlueprintCallable) // @ game+0x14a71b0
};

// Class Tiger.TigerNPC
// Size: 0xb20 (Inherited: 0x9c0)
struct ATigerNPC : ATigerBaseNPC {
	struct FMulticastInlineDelegate OnAnimationModeChanged; // 0x9c0(0x10)
	struct UTigerAICommandComponent* AICommandComponent; // 0x9d0(0x08)
	struct UTigerNpcAccuracyComponent* AccuracyComponent; // 0x9d8(0x08)
	struct UTigerEntityCombatComponent* EntityCombatComponent; // 0x9e0(0x08)
	struct UParticleSystemComponent* NpcAwarenessComponent; // 0x9e8(0x08)
	struct TWeakObjectPtr<struct ATigerCharacter> CurrentTarget; // 0x9f0(0x08)
	struct FVector_NetQuantize CurrentTargetLocation; // 0x9f8(0x0c)
	char pad_A04[0x4]; // 0xa04(0x04)
	struct ATigerCharacter* TargetToShoot; // 0xa08(0x08)
	enum class ETigerAIAnimationMode AnimationMode; // 0xa10(0x01)
	enum class ETigerCivilianEmotionalState EmotionalState; // 0xa11(0x01)
	char pad_A12[0x2]; // 0xa12(0x02)
	int32_t EmotionalStateRandomPot[0x6]; // 0xa14(0x18)
	char pad_A2C[0x4]; // 0xa2c(0x04)
	struct UAnimMontage* LuredCancelAnim; // 0xa30(0x08)
	struct UTigerNpcPropComponent* NpcPropComponent; // 0xa38(0x08)
	char pad_A40[0x20]; // 0xa40(0x20)
	float BumpTimeInterval; // 0xa60(0x04)
	float HighPotenceBloodChange; // 0xa64(0x04)
	float EarliestHighPotenceBloodTime; // 0xa68(0x04)
	float LastHighPotenceBloodTime; // 0xa6c(0x04)
	float PreferedMinimumDistanceBetweenPotent; // 0xa70(0x04)
	struct FVector_NetQuantize RagdollImpulse; // 0xa74(0x0c)
	struct FTigerNpcReactionData ReactionData; // 0xa80(0x0c)
	char pad_A8C[0x4]; // 0xa8c(0x04)
	float MaxYawAngleToShoot; // 0xa90(0x04)
	float MinTargetIsInfrontDotAngle; // 0xa94(0x04)
	struct FSharkRandomDeviation DownedStateDuration; // 0xa98(0x08)
	struct FName HeartRateParam; // 0xaa0(0x08)
	struct FName BloodAmountParam; // 0xaa8(0x08)
	struct FName HeartSocketName; // 0xab0(0x08)
	struct FName HeartLocationParam; // 0xab8(0x08)
	float HeartLocationUpdateTime; // 0xac0(0x04)
	char pad_AC4[0x5c]; // 0xac4(0x5c)

	void TriggerNpcReactionEvent(struct FTigerNpcReactionEvent& ReactionEvent); // Function Tiger.TigerNPC.TriggerNpcReactionEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14a7fc0
	void TigerDelegateNpcAnimationModeChanged__DelegateSignature(enum class ETigerAIAnimationMode NewAnimationMode); // DelegateFunction Tiger.TigerNPC.TigerDelegateNpcAnimationModeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void StopFireWeapon(); // Function Tiger.TigerNPC.StopFireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x14a7fa0
	bool StartFireWeapon(struct ATigerCharacter* InTigerChar); // Function Tiger.TigerNPC.StartFireWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x14a7f00
	void Server_SetCharacterMeshes(struct FTigerMeshCollection MeshCollection); // Function Tiger.TigerNPC.Server_SetCharacterMeshes // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14a7e10
	void OnRep_RagdollImpulseSet(); // Function Tiger.TigerNPC.OnRep_RagdollImpulseSet // (Final|Native|Protected) // @ game+0x14a7cb0
	void OnRep_AnimationModeChanged(enum class ETigerAIAnimationMode LastMode); // Function Tiger.TigerNPC.OnRep_AnimationModeChanged // (Final|Native|Protected) // @ game+0x14a7c30
	void OnFeedingStart(int32_t FeedingTicksLeft, int32_t MaxFeedingTicks); // Function Tiger.TigerNPC.OnFeedingStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnFeedingEnd(); // Function Tiger.TigerNPC.OnFeedingEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnBurstCompleted(); // Function Tiger.TigerNPC.OnBurstCompleted // (Final|Native|Private) // @ game+0x14a7c10
	void Multicast_PlayReactionFromMontage(struct UAnimMontage* InMontage, float InPlayBackSpeed, bool bInCanMoveDuringReaction); // Function Tiger.TigerNPC.Multicast_PlayReactionFromMontage // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a79e0
	void Multicast_PlayReactionFromBlendSpace(struct UBlendSpaceBase* InBlendSpace, struct FVector InSamplePoint, float InPlayBackSpeed, bool bInCanMoveDuringReaction, float InBlendOutTime); // Function Tiger.TigerNPC.Multicast_PlayReactionFromBlendSpace // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x14a7830
	void Multicast_PlayMontageFromBlendSpace(struct UBlendSpaceBase* BlendSpace, struct FVector SamplePoint, float PlayBackSpeed, bool bFreezeAtEnd); // Function Tiger.TigerNPC.Multicast_PlayMontageFromBlendSpace // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x14a76e0
	void Multicast_PlayDeathMontage(struct FVector SamplePoint, float PlayBackSpeed); // Function Tiger.TigerNPC.Multicast_PlayDeathMontage // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x14a7610
	void Multicast_PlayAnimationWithContextIdle(struct UAnimMontage* InMontage, struct FName InContextIdle); // Function Tiger.TigerNPC.Multicast_PlayAnimationWithContextIdle // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a7540
	void Multicast_InterruptCap(enum class ETigerDetachMethod InDetachMethod); // Function Tiger.TigerNPC.Multicast_InterruptCap // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a74c0
	void Multicast_DeactivateLure(); // Function Tiger.TigerNPC.Multicast_DeactivateLure // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a74a0
	void Multicast_AuthorityPlayAkEvent(struct UAkAudioEvent* VoiceEvent); // Function Tiger.TigerNPC.Multicast_AuthorityPlayAkEvent // (Net|Native|Event|NetMulticast|Public) // @ game+0x14a7410
	bool IsReacting(); // Function Tiger.TigerNPC.IsReacting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a73e0
	bool IsInControl(); // Function Tiger.TigerNPC.IsInControl // (Final|Native|Public|BlueprintCallable) // @ game+0x14a73b0
	bool HasShootingTarget(); // Function Tiger.TigerNPC.HasShootingTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a7380
	struct FVector GetHeardRoarPosition(); // Function Tiger.TigerNPC.GetHeardRoarPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a7240
	struct ATigerAIController* GetAIController(); // Function Tiger.TigerNPC.GetAIController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13e7a90
	void CollideWithOtherCharacter(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerNPC.CollideWithOtherCharacter // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x14a6fd0
	void AuthorityPlayReactionFromMontage(struct UAnimMontage* InMontage, bool bInCanMoveDuringReaction); // Function Tiger.TigerNPC.AuthorityPlayReactionFromMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x14a6e40
	void AuthorityPlayReactionFromBlendSpace(struct UBlendSpaceBase* InBlendSpace, struct FVector& InSamplePoint, bool bInCanMoveDuringReaction, float InBlendOutTime); // Function Tiger.TigerNPC.AuthorityPlayReactionFromBlendSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14a6cc0
	void AuthorityPlayMontageFromBlendSpace(struct UBlendSpaceBase* BlendSpace, struct FVector& SamplePoint, bool bFreezeAtEnd); // Function Tiger.TigerNPC.AuthorityPlayMontageFromBlendSpace // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14a6ba0
	void AuthorityPlayDeathMontage(struct FVector& SamplePoint); // Function Tiger.TigerNPC.AuthorityPlayDeathMontage // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14a6b10
	void AuthorityPlayAkEvent(struct UAkAudioEvent* VoiceEvent); // Function Tiger.TigerNPC.AuthorityPlayAkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x14a6a80
};

// Class Tiger.TigerNpcAccuracyComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UTigerNpcAccuracyComponent : UActorComponent {
	float TimeToReachMaxAccuracy; // 0xb0(0x04)
	float TimeToReachMaxInaccuracy; // 0xb4(0x04)
	float MaxAccuracyConeRadius; // 0xb8(0x04)
	float MinAccuracyConeRadius; // 0xbc(0x04)
	float AccuracyDistance; // 0xc0(0x04)
	float MovingTargetAccuracyPenaltyPercentage; // 0xc4(0x04)
	float MinSwooshByAccuracyConeRadius; // 0xc8(0x04)
	float MaxSwooshByAccuracyConeRadius; // 0xcc(0x04)
	float MinSwooshByAccuracyDistance; // 0xd0(0x04)
	bool bShouldKeepAccuracyWhenSwitchingToTargetsAlly; // 0xd4(0x01)
	bool bShouldDebugDraw; // 0xd5(0x01)
	bool bShouldMissEveryBurst; // 0xd6(0x01)
	char pad_D7[0x9]; // 0xd7(0x09)
	struct ATigerNPC* Owner; // 0xe0(0x08)
	char pad_E8[0x8]; // 0xe8(0x08)

	void OnBurstCompleted(); // Function Tiger.TigerNpcAccuracyComponent.OnBurstCompleted // (Final|Native|Private) // @ game+0x14abc60
};

// Class Tiger.TigerNpcAnimInstance
// Size: 0x430 (Inherited: 0x3c0)
struct UTigerNpcAnimInstance : UTigerAnimInstance {
	enum class ETigerAIAnimationMode AnimationMode; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct ATigerPropDummy* PropDummyClass; // 0x3c8(0x08)
	bool bIsReadyToFireWeapon; // 0x3d0(0x01)
	char pad_3D1[0x3]; // 0x3d1(0x03)
	float TimeAnimModeChanged; // 0x3d4(0x04)
	bool bIsBurstFiring; // 0x3d8(0x01)
	bool bIsBeingFedOn; // 0x3d9(0x01)
	bool bCanSeeLocalPlayer; // 0x3da(0x01)
	bool bIsLookingAtLocalPlayer; // 0x3db(0x01)
	struct FVector AimDirection; // 0x3dc(0x0c)
	struct FVector StrafeDirection; // 0x3e8(0x0c)
	float LocalPlayerLookAtPitch; // 0x3f4(0x04)
	float LocalPlayerLookAtYaw; // 0x3f8(0x04)
	float LocalPlayerLookAtDistance; // 0x3fc(0x04)
	float LocalPlayerLookAtActivationDistance; // 0x400(0x04)
	float LocalPlayerLookAtDeactivationDistance; // 0x404(0x04)
	struct FSharkRandomDeviation LocalPlayerLookAtDuration; // 0x408(0x08)
	struct FSharkRandomDeviation LocalPlayerLookAtAgainCooldown; // 0x410(0x08)
	float DeathDirection; // 0x418(0x04)
	float ReactionCooldown; // 0x41c(0x04)
	float TurnCooldownTime; // 0x420(0x04)
	char pad_424[0xc]; // 0x424(0x0c)

	void UpdateSpeed(); // Function Tiger.TigerNpcAnimInstance.UpdateSpeed // (Final|Native|Protected|BlueprintCallable) // @ game+0x14ac010
	void OnVisualAssetReceived(struct UTigerNPCVisualAsset* VisualAsset); // Function Tiger.TigerNpcAnimInstance.OnVisualAssetReceived // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnPropAssetReceivedEvent(); // Function Tiger.TigerNpcAnimInstance.OnPropAssetReceivedEvent // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnNpcThreatStateChangedEvent(enum class ETigerAIMasqueradeState OldThreatState, enum class ETigerAIMasqueradeState NewThreatState); // Function Tiger.TigerNpcAnimInstance.OnNpcThreatStateChangedEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnNpcReactionEvent(struct FTigerNpcReactionEvent& ReactionEvent); // Function Tiger.TigerNpcAnimInstance.OnNpcReactionEvent // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnEntityEvent(enum class ETigerEntityEvent EntityEvent); // Function Tiger.TigerNpcAnimInstance.OnEntityEvent // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnBumpedByPlayerEvent(struct ATigerPlayer* InPlayer, struct FVector& InDirectionToPlayer); // Function Tiger.TigerNpcAnimInstance.OnBumpedByPlayerEvent // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnAnimationModeChanged(enum class ETigerAIAnimationMode LastAnimationMode); // Function Tiger.TigerNpcAnimInstance.OnAnimationModeChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsReactionOnCooldown(); // Function Tiger.TigerNpcAnimInstance.IsReactionOnCooldown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14abb20
	bool IsFootIKEnabled(); // Function Tiger.TigerNpcAnimInstance.IsFootIKEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14abaf0
	struct ATigerAIController* GetTigerAIController(); // Function Tiger.TigerNpcAnimInstance.GetTigerAIController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ab8a0
	struct ATigerNPC* GetOwningNpc(); // Function Tiger.TigerNpcAnimInstance.GetOwningNpc // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ab7d0
	void DetachProps(); // Function Tiger.TigerNpcAnimInstance.DetachProps // (Final|Native|Public|BlueprintCallable) // @ game+0x14ab7b0
	void AttachProps(); // Function Tiger.TigerNpcAnimInstance.AttachProps // (Final|Native|Public|BlueprintCallable) // @ game+0x14ab510
};

// Class Tiger.TigerNpcCapSpawner
// Size: 0x278 (Inherited: 0x270)
struct ATigerNpcCapSpawner : ATigerNPCSpawningBase {
	struct ATigerAiSpawningCap* OwningSpawningCap; // 0x270(0x08)
};

// Class Tiger.TigerDroppedPropTrackerComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UTigerDroppedPropTrackerComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
};

// Class Tiger.TigerNPCDetachedProp
// Size: 0x240 (Inherited: 0x238)
struct ATigerNPCDetachedProp : AStaticMeshActor {
	char pad_238[0x8]; // 0x238(0x08)
};

// Class Tiger.TigerDialogueCondition
// Size: 0x30 (Inherited: 0x28)
struct UTigerDialogueCondition : UObject {
	bool bFalseCondition; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Tiger.TigerDialogueCondition_Clan
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_Clan : UTigerDialogueCondition {
	enum class ETigerDialogueClanRequirementSpecifier ClanEquality; // 0x30(0x01)
	enum class ETigerClan ClanRequirement; // 0x31(0x01)
	char pad_32[0x6]; // 0x32(0x06)
};

// Class Tiger.TigerDialogueCondition_DialogueRead
// Size: 0x50 (Inherited: 0x30)
struct UTigerDialogueCondition_DialogueRead : UTigerDialogueCondition {
	struct FString ListId; // 0x30(0x10)
	struct FString DialogueId; // 0x40(0x10)
};

// Class Tiger.TigerDialogueCondition_FinishedCertainGame
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_FinishedCertainGame : UTigerDialogueCondition {
	enum class ETigerGroupingMode ModeFinished; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerDialogueCondition_GrimoireEntry
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_GrimoireEntry : UTigerDialogueCondition {
	struct UTigerGrimoireEntry* RequiredEntry; // 0x30(0x08)
};

// Class Tiger.TigerDialogueCondition_MatchCount
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_MatchCount : UTigerDialogueCondition {
	int32_t RequiredMatches; // 0x30(0x04)
	enum class ETigerDialogueEqualitySpecifier MatchEquality; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Tiger.TigerDialogueCondition_MatchStats
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_MatchStats : UTigerDialogueCondition {
	enum class ETigerSeasonMatchStatType StatType; // 0x30(0x01)
	enum class ETigerDialogueEqualitySpecifier StatEquality; // 0x31(0x01)
	char pad_32[0x2]; // 0x32(0x02)
	int32_t StatValue; // 0x34(0x04)
};

// Class Tiger.TigerDialogueCondition_Outfit
// Size: 0x48 (Inherited: 0x30)
struct UTigerDialogueCondition_Outfit : UTigerDialogueCondition {
	enum class ETigerDialogueOutfitRequirementSpecifier OutfitRequirement; // 0x30(0x01)
	enum class ETigerClan Clan; // 0x31(0x01)
	enum class ETigerGender Gender; // 0x32(0x01)
	char pad_33[0x5]; // 0x33(0x05)
	struct FString OutfitAssetName; // 0x38(0x10)
};

// Class Tiger.TigerDialogueCondition_Quest
// Size: 0x88 (Inherited: 0x30)
struct UTigerDialogueCondition_Quest : UTigerDialogueCondition {
	enum class ETigerDialogueQuestRequirementSpecifier Requirement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FTigerQuestIdentifier questIdToCheck; // 0x38(0x40)
	bool bTestSpecificObjective; // 0x78(0x01)
	char pad_79[0x3]; // 0x79(0x03)
	int32_t ObjectiveSetIdToCheck; // 0x7c(0x04)
	int32_t ObjectiveIdToCheck; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
};

// Class Tiger.TigerDialogueCondition_SeasonLevel
// Size: 0x38 (Inherited: 0x30)
struct UTigerDialogueCondition_SeasonLevel : UTigerDialogueCondition {
	int32_t RequiredSeasonLevel; // 0x30(0x04)
	enum class ETigerDialogueEqualitySpecifier SeasonEquality; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
};

// Class Tiger.TigerNpcMovementRestrictionBoundsData
// Size: 0x48 (Inherited: 0x28)
struct UTigerNpcMovementRestrictionBoundsData : UObject {
	char pad_28[0x20]; // 0x28(0x20)
};

// Class Tiger.TigerNpcMovementRestrictionBounds
// Size: 0x248 (Inherited: 0x228)
struct ATigerNpcMovementRestrictionBounds : AActor {
	struct USplineComponent* InnerSpline; // 0x228(0x08)
	struct USplineComponent* OuterSpline; // 0x230(0x08)
	char pad_238[0x10]; // 0x238(0x10)
};

// Class Tiger.TigerNpcPropComponent
// Size: 0xd8 (Inherited: 0xb0)
struct UTigerNpcPropComponent : UActorComponent {
	struct USkeletalMeshComponent* OwnerMeshComp; // 0xb0(0x08)
	struct TArray<struct FTigerPropAttachment> AttachedProps; // 0xb8(0x10)
	struct TArray<struct TScriptInterface<ITigerPropCompInterface>> FreeProps; // 0xc8(0x10)

	bool HasProp(struct FName AttachmentIdentifier); // Function Tiger.TigerNpcPropComponent.HasProp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14aba50
	bool HasAnyProp(struct TArray<struct FName>& AttachmentIdentifiers); // Function Tiger.TigerNpcPropComponent.HasAnyProp // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ab990
	bool HasAllProps(struct TArray<struct FName>& AttachmentIdentifiers); // Function Tiger.TigerNpcPropComponent.HasAllProps // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ab8d0
	struct UMeshComponent* GetPropComponent(struct FName Identifier); // Function Tiger.TigerNpcPropComponent.GetPropComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ab800
	void DetachPropWithSetImpulse(struct FName AttachmentIdentifier, struct FVector Impulse, float AngularImpulseStrength); // Function Tiger.TigerNpcPropComponent.DetachPropWithSetImpulse // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x14ab680
	void DetachProp(struct FName AttachmentIdentifier, enum class ETigerDetachMethod DetachMethod); // Function Tiger.TigerNpcPropComponent.DetachProp // (Final|Native|Public|BlueprintCallable) // @ game+0x14ab5b0
	void ClearProps(enum class ETigerDetachMethod DetachMethod); // Function Tiger.TigerNpcPropComponent.ClearProps // (Final|Native|Public|BlueprintCallable) // @ game+0x14ab530
	struct UMeshComponent* AttachProp(struct FTigerPropAttachmentInfo& Attachment); // Function Tiger.TigerNpcPropComponent.AttachProp // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14ab410
};

// Class Tiger.TigerNPCSpawningCoordinator
// Size: 0x150 (Inherited: 0xb0)
struct UTigerNPCSpawningCoordinator : UActorComponent {
	struct UTigerNPCAsset* JudgeNpcAsset; // 0xb0(0x08)
	struct UDataTable* NpcSpawningGroupBudget; // 0xb8(0x08)
	float JudgeSpawnTime; // 0xc0(0x04)
	bool bShouldSpawnJudge; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	float NpcSpawnFrameBudgetInSeconds; // 0xc8(0x04)
	char pad_CC[0x84]; // 0xcc(0x84)

	void TrySpawnNpcs(); // Function Tiger.TigerNPCSpawningCoordinator.TrySpawnNpcs // (Final|Native|Public|BlueprintCallable) // @ game+0x14abff0
	void SpawnNpcs(); // Function Tiger.TigerNPCSpawningCoordinator.SpawnNpcs // (Final|Native|Protected) // @ game+0x14abfd0
	void OnSpawnerEndPlay(struct AActor* InActor, enum class EEndPlayReason InEndPlayReason); // Function Tiger.TigerNPCSpawningCoordinator.OnSpawnerEndPlay // (Final|Native|Public) // @ game+0x14abd70
	void OnMatchStateChanged(enum class ETigerMatchState OldState, enum class ETigerMatchState NewState); // Function Tiger.TigerNPCSpawningCoordinator.OnMatchStateChanged // (Final|Native|Public) // @ game+0x14abca0
	void OnMatchSettingsSet(); // Function Tiger.TigerNPCSpawningCoordinator.OnMatchSettingsSet // (Final|Native|Public) // @ game+0x14abc80
};

// Class Tiger.TigerNPCSpawningSpline
// Size: 0x330 (Inherited: 0x270)
struct ATigerNPCSpawningSpline : ATigerNPCSpawningBase {
	struct USplineComponent* Spline; // 0x270(0x08)
	struct UTigerNPCAsset* NPCAsset; // 0x278(0x08)
	struct FTigerAISplinePathData PathData; // 0x280(0xa0)
	char pad_320[0x10]; // 0x320(0x10)
};

// Class Tiger.TigerOneWayExpandableArea
// Size: 0x338 (Inherited: 0x338)
struct UTigerOneWayExpandableArea : UExpandableArea {

	void CloseArea(); // Function Tiger.TigerOneWayExpandableArea.CloseArea // (Final|Native|Public|BlueprintCallable) // @ game+0x14af090
};

// Class Tiger.TigerOnlineBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTigerOnlineBlueprintLibrary : UBlueprintFunctionLibrary {

	struct FString PartyIdToUserString(struct FTigerPartyId& InID); // Function Tiger.TigerOnlineBlueprintLibrary.PartyIdToUserString // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x14af8d0
	struct FString InviteIdToUserString(struct FTigerInviteId& InID); // Function Tiger.TigerOnlineBlueprintLibrary.InviteIdToUserString // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x14af8d0
	int32_t GetMinimumAccountCreationAge(); // Function Tiger.TigerOnlineBlueprintLibrary.GetMinimumAccountCreationAge // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x14af650
	struct FString GetAccountRecoverUrl(); // Function Tiger.TigerOnlineBlueprintLibrary.GetAccountRecoverUrl // (Final|Native|Static|Private|BlueprintCallable|BlueprintPure) // @ game+0x14af490
};

// Class Tiger.TigerOnlineError
// Size: 0x78 (Inherited: 0x28)
struct UTigerOnlineError : UObject {
	struct FText Message; // 0x28(0x18)
	struct FText Title; // 0x40(0x18)
	struct FString ErrorCodeString; // 0x58(0x10)
	struct FTigerOnlineErrorCode ErrorCode; // 0x68(0x0c)
	char pad_74[0x4]; // 0x74(0x04)

	bool WasKicked(); // Function Tiger.TigerOnlineError.WasKicked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b0a60
	bool WasBanned(); // Function Tiger.TigerOnlineError.WasBanned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b0a30
};

// Class Tiger.TigerOnlineSettings
// Size: 0x120 (Inherited: 0x38)
struct UTigerOnlineSettings : UDeveloperSettings {
	bool bResetPlayerDataInEditor; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FString PlayerDataServiceUri; // 0x40(0x10)
	struct FString SessionServiceUri; // 0x50(0x10)
	struct FString PushServiceUri; // 0x60(0x10)
	struct FString PartyServiceUri; // 0x70(0x10)
	struct FString FriendServiceUri; // 0x80(0x10)
	struct FString PresenceServiceUri; // 0x90(0x10)
	struct FString LoginQueueServiceUri; // 0xa0(0x10)
	struct FString StoreServiceUri; // 0xb0(0x10)
	struct FString ConsoleServiceUri; // 0xc0(0x10)
	struct FString ConfigServiceUri; // 0xd0(0x10)
	struct FString TelemetryServiceUri; // 0xe0(0x10)
	uint32_t EntitlementTokenTimeoutSeconds; // 0xf0(0x04)
	uint32_t EntitlementTokenRetryTimeoutSeconds; // 0xf4(0x04)
	uint32_t GameModesConfigTimerIntervalSeconds; // 0xf8(0x04)
	uint32_t GameModesConfigRetryTimeoutSeconds; // 0xfc(0x04)
	struct FString GameModesConfigBranchName; // 0x100(0x10)
	struct FString GameModesConfigDebugFileName; // 0x110(0x10)
};

// Class Tiger.TigerOnlineStatusMessages
// Size: 0xe8 (Inherited: 0x28)
struct UTigerOnlineStatusMessages : UObject {
	struct FText DefaultMessage; // 0x28(0x18)
	struct FText DefaultAccountMessage; // 0x40(0x18)
	struct FText DefaultSystemMessage; // 0x58(0x18)
	struct FText DefaultServerMessage; // 0x70(0x18)
	struct TArray<struct FTigerOnlineStatusMessageEntry> Messages; // 0x88(0x10)
	struct TMap<enum class ETigerOnlineErrorCategory, struct FText> ErrorCategoryTitles; // 0x98(0x50)

	struct FText GetTitleForCategory(enum class ETigerOnlineErrorCategory InErrorCategory); // Function Tiger.TigerOnlineStatusMessages.GetTitleForCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14af790
	struct FText GetMessageForError(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerOnlineStatusMessages.GetMessageForError // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14af540
};

// Class Tiger.TigerOnlineStatusSubsystem
// Size: 0xd8 (Inherited: 0x30)
struct UTigerOnlineStatusSubsystem : UGameInstanceSubsystem {
	char pad_30[0x10]; // 0x30(0x10)
	struct UTigerOnlineStatusMessages* OnlineStatusMessages; // 0x40(0x08)
	char pad_48[0x90]; // 0x48(0x90)

	void TigerTestOnlineError(enum class ETigerOnlineErrorCategory InCategory, int32_t InID); // Function Tiger.TigerOnlineStatusSubsystem.TigerTestOnlineError // (Final|Exec|Native|Public) // @ game+0x14b0960
	void TigerCauseNetworkError(int32_t InID); // Function Tiger.TigerOnlineStatusSubsystem.TigerCauseNetworkError // (Final|Exec|Native|Public|Const) // @ game+0x1413700
	void SetOnlineErrorAndGoToTitle(struct FTigerOnlineErrorCode InErrorCode, struct FString InDebugReason); // Function Tiger.TigerOnlineStatusSubsystem.SetOnlineErrorAndGoToTitle // (Final|Native|Public|BlueprintCallable) // @ game+0x14b0590
	void SetOnlineError(struct FTigerOnlineErrorCode InErrorCode, struct FString InDebugReason); // Function Tiger.TigerOnlineStatusSubsystem.SetOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x14b0490
	bool IsStatusOk(); // Function Tiger.TigerOnlineStatusSubsystem.IsStatusOk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14afa90
	float GetRetryDelaySeconds(); // Function Tiger.TigerOnlineStatusSubsystem.GetRetryDelaySeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af6b0
	struct UTigerOnlineError* GetOnlineError(); // Function Tiger.TigerOnlineStatusSubsystem.GetOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x14af680
	void ClearOnlineError(); // Function Tiger.TigerOnlineStatusSubsystem.ClearOnlineError // (Final|Native|Public|BlueprintCallable) // @ game+0x14af070
};

// Class Tiger.TigerOutfitVendorUI
// Size: 0x3d8 (Inherited: 0x3c0)
struct UTigerOutfitVendorUI : UTigerSceneBackgroundUI {
	struct UTigerVendorComponent* VendorComponent; // 0x3c0(0x08)
	struct UTigerVendorStoreCategory* CurrentCategory; // 0x3c8(0x08)
	char pad_3D0[0x8]; // 0x3d0(0x08)

	void OnCategoryItemsReceived(enum class ETigerPersistentStoreCategory CategoryType, struct TArray<struct FTigerVendorStoreCategoryItem>& CategoryItems); // Function Tiger.TigerOutfitVendorUI.OnCategoryItemsReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnBuyItemResponseBP(struct TSoftClassPtr<UObject>& ItemClassPath, struct FString ErrorMessage, int32_t InventoryCount); // Function Tiger.TigerOutfitVendorUI.OnBuyItemResponseBP // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnBuyItemResponse(bool bInSuccess, struct FTigerItemId& InItemId, struct FString InErrorMessage); // Function Tiger.TigerOutfitVendorUI.OnBuyItemResponse // (Final|Native|Protected|HasOutParms) // @ game+0x14afac0
	void GetStoreCategoriesResponse(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerOutfitVendorUI.GetStoreCategoriesResponse // (Final|Native|Protected) // @ game+0x14af6e0
	void FetchCategoryItems(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerOutfitVendorUI.FetchCategoryItems // (Final|Native|Public|BlueprintCallable) // @ game+0x14af410
	struct FTigerVendorStoreCategoryItem CreateStoreCategoryItemFromStoreEntry(struct FTigerMetaStoreEntry& InStoreEntry); // Function Tiger.TigerOutfitVendorUI.CreateStoreCategoryItemFromStoreEntry // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af0b0
	void BuyItem(struct FTigerItemId& InItemId, struct FTigerItemId InSoftCurrencyId); // Function Tiger.TigerOutfitVendorUI.BuyItem // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14aeef0
};

// Class Tiger.TigerOutlineComponent
// Size: 0x100 (Inherited: 0xb0)
struct UTigerOutlineComponent : UActorComponent {
	enum class ETigerOutlineMode CurrentMode; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	int32_t StencilValue; // 0xb4(0x04)
	int32_t LocalPlayerStencilValue; // 0xb8(0x04)
	char pad_BC[0x4]; // 0xbc(0x04)
	struct FMulticastInlineDelegate OnOutlineModeRefreshed; // 0xc0(0x10)
	enum class EVisibilityBasedAnimTickOption MinCullOption; // 0xd0(0x01)
	enum class EVisibilityBasedAnimTickOption AnimCullOption[0xc]; // 0xd1(0x0c)
	char pad_DD[0x3]; // 0xdd(0x03)
	struct TArray<struct TWeakObjectPtr<struct UMeshComponent>> OutlineMeshes; // 0xe0(0x10)
	uint16_t OutlinesToPauseWhenHidden; // 0xf0(0x02)
	uint16_t OutlinesToPauseWhenBehindTrapGas; // 0xf2(0x02)
	char pad_F4[0xc]; // 0xf4(0x0c)

	void SetShouldUseCustomDepth(bool bInShouldUseCustomDepth); // Function Tiger.TigerOutlineComponent.SetShouldUseCustomDepth // (Final|Native|Public|BlueprintCallable) // @ game+0x14b0720
	void SetMinAnimTickOption(enum class EVisibilityBasedAnimTickOption InMinOption); // Function Tiger.TigerOutlineComponent.SetMinAnimTickOption // (Final|Native|Public|BlueprintCallable) // @ game+0x14b0410
	void RegisterOutlineMesh(struct UMeshComponent* InMesh); // Function Tiger.TigerOutlineComponent.RegisterOutlineMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x14afc10
	void OnOutlineModeRefreshed__DelegateSignature(enum class ETigerOutlineMode HighestPrioOutline); // DelegateFunction Tiger.TigerOutlineComponent.OnOutlineModeRefreshed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool IsOutlineActivated(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.IsOutlineActivated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af9f0
	bool IsHidden(); // Function Tiger.TigerOutlineComponent.IsHidden // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af9d0
	bool IsBehindTrapGas(); // Function Tiger.TigerOutlineComponent.IsBehindTrapGas // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af9b0
	bool HasOutline(); // Function Tiger.TigerOutlineComponent.HasOutline // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af880
	void DeactivateOutline(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.DeactivateOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x14af2c0
	void ActivateOutline(enum class ETigerOutlineMode InMode); // Function Tiger.TigerOutlineComponent.ActivateOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x14aed40
};

// Class Tiger.TigerPaperDoll
// Size: 0x648 (Inherited: 0x228)
struct ATigerPaperDoll : AActor {
	struct UTigerCharacterMeshManager* MeshManager; // 0x228(0x08)
	struct TWeakObjectPtr<struct ATigerPlayerState> TigerPlayerState; // 0x230(0x08)
	struct UTigerNpcPropComponent* PropComponent; // 0x238(0x08)
	struct USceneComponent* PlayerAttachment; // 0x240(0x08)
	struct USkeletalMeshComponent* BodySkelMesh; // 0x248(0x08)
	struct USkeletalMeshComponent* HeadSkelMesh; // 0x250(0x08)
	struct USkeletalMeshComponent* HoodieSkelMesh; // 0x258(0x08)
	struct USkeletalMeshComponent* HairSkelMesh; // 0x260(0x08)
	struct USkeletalMeshComponent* HeadgearMesh; // 0x268(0x08)
	struct USkeletalMeshComponent* EyewearMesh; // 0x270(0x08)
	struct USkeletalMeshComponent* BeardSkelMesh; // 0x278(0x08)
	struct USkeletalMeshComponent* BodyAdditionalMesh; // 0x280(0x08)
	struct FTigerPreviewerData StartupAppearance; // 0x288(0x2d8)
	bool bRegisterWithPlayerController; // 0x560(0x01)
	char pad_561[0x7]; // 0x561(0x07)
	struct UTigerCharCustomizationComponent* CharacterCustomization; // 0x568(0x08)
	struct UTigerPlayerClanData* PlayerClan; // 0x570(0x08)
	struct UCameraComponent* CameraComponent; // 0x578(0x08)
	struct UAnimInstance* PlayerAnimInstanceClass; // 0x580(0x08)
	struct USceneCaptureComponent2D* SceneCapture; // 0x588(0x08)
	struct ATigerPlayerCameraManager* CameraManager; // 0x590(0x08)
	bool bUseFreeCam; // 0x598(0x01)
	char pad_599[0x3]; // 0x599(0x03)
	float DefaultCameraLerpSpeed; // 0x59c(0x04)
	struct FVector CamerasOffset[0xb]; // 0x5a0(0x84)
	struct FVector CameraTargetOffset; // 0x624(0x0c)
	struct FMulticastInlineDelegate OnStartupAppearanceApplied; // 0x630(0x10)
	char pad_640[0x8]; // 0x640(0x08)

	void ShowPaperdollFromCharacter(struct ATigerCharacter* Character); // Function Tiger.TigerPaperDoll.ShowPaperdollFromCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x14b08d0
	void ShowPaperDoll(); // Function Tiger.TigerPaperDoll.ShowPaperDoll // (Final|Native|Public|BlueprintCallable) // @ game+0x14b08b0
	void ShowCharacter(struct FTigerPersistentPlayerCharacter& Character); // Function Tiger.TigerPaperDoll.ShowCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14b07b0
	void SetPlayerState(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPaperDoll.SetPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x14b0690
	void SetCameraTargetOffset(struct FVector& InCameraTargetOffset, bool bAnimateCamera); // Function Tiger.TigerPaperDoll.SetCameraTargetOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14b0330
	void SetCameraFocus(enum class ETigerCustomizePart CustomizePart, bool bAnimateCamera); // Function Tiger.TigerPaperDoll.SetCameraFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x14b0260
	void SetAppearanceFromPlayerState(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPaperDoll.SetAppearanceFromPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x14b01d0
	void SetAppearanceDataWithItemOverride(struct FTigerPreviewerData& InPreviewAppearance, enum class ETigerClan InClanType, struct TSoftClassPtr<UObject> InItemOverrideClass); // Function Tiger.TigerPaperDoll.SetAppearanceDataWithItemOverride // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14afff0
	void SetAppearanceAndOutfit(struct FTigerPreviewerData InAppearance, struct TSoftClassPtr<UObject>& InOutfitClassPath); // Function Tiger.TigerPaperDoll.SetAppearanceAndOutfit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14afeb0
	void SetAppearanceAndClan(struct FTigerPreviewerData& InAppearance, struct UTigerPlayerClanData* InClanData, struct FDelegate InDelegate); // Function Tiger.TigerPaperDoll.SetAppearanceAndClan // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14afd50
	void SetAppearance(struct FTigerPreviewerData& InAppearance); // Function Tiger.TigerPaperDoll.SetAppearance // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14afca0
	void PreNewCharacterSelected(); // Function Tiger.TigerPaperDoll.PreNewCharacterSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void PostNewCharacterSelected(); // Function Tiger.TigerPaperDoll.PostNewCharacterSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnStartupAppearanceApplied__DelegateSignature(); // DelegateFunction Tiger.TigerPaperDoll.OnStartupAppearanceApplied__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnDynamicAppearanceLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPaperDoll.OnDynamicAppearanceLoaded__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void HidePaperdoll(); // Function Tiger.TigerPaperDoll.HidePaperdoll // (Final|Native|Public|BlueprintCallable) // @ game+0x14af8b0
	struct UTigerAnimInstance* GetTigerAnimInstance(); // Function Tiger.TigerPaperDoll.GetTigerAnimInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af760
	enum class ETigerGender GetBodyType(); // Function Tiger.TigerPaperDoll.GetBodyType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14af510
	void ApplyStartupAppearance(struct UTigerCharCustomizationComponent* InCustomizationComponent); // Function Tiger.TigerPaperDoll.ApplyStartupAppearance // (Final|Native|Protected|BlueprintCallable) // @ game+0x14aee60
	bool ApplyEditorAppearance(struct UTigerCharCustomizationComponent* CustomizationComponent); // Function Tiger.TigerPaperDoll.ApplyEditorAppearance // (Final|Native|Protected|BlueprintCallable) // @ game+0x14aedc0
};

// Class Tiger.TigerPaperDollAnimInstance
// Size: 0x3d0 (Inherited: 0x3c0)
struct UTigerPaperDollAnimInstance : UTigerAnimInstance {
	struct FName DefaultSequenceName; // 0x3c0(0x08)
	char pad_3C8[0x8]; // 0x3c8(0x08)
};

// Class Tiger.TigerParticleStrategyChooseSystem
// Size: 0x28 (Inherited: 0x28)
struct UTigerParticleStrategyChooseSystem : UTigerParticleStrategy {

	struct UParticleSystem* ChooseSpawningSystem(struct ATigerCharacter* InParticleInstigator); // Function Tiger.TigerParticleStrategyChooseSystem.ChooseSpawningSystem // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x14aefd0
};

// Class Tiger.TigerPartyInvite
// Size: 0x88 (Inherited: 0x28)
struct UTigerPartyInvite : UObject {
	struct FTigerInviteId ID; // 0x28(0x10)
	struct FTigerPersistentPlayerID HostId; // 0x38(0x10)
	enum class EShAccountChannel HostChannel; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct FString HostDisplayName; // 0x50(0x10)
	char pad_60[0x28]; // 0x60(0x28)
};

// Class Tiger.TigerPartyManager
// Size: 0x2d0 (Inherited: 0x28)
struct UTigerPartyManager : UObject {
	struct FMulticastInlineDelegate OnInviteReceived; // 0x28(0x10)
	struct FMulticastInlineDelegate OnInviteRemoved; // 0x38(0x10)
	struct FMulticastInlineDelegate OnJoinedParty; // 0x48(0x10)
	struct FMulticastInlineDelegate OnJoinedPartyFailed; // 0x58(0x10)
	struct FMulticastInlineDelegate OnLeftParty; // 0x68(0x10)
	struct FMulticastInlineDelegate OnMemberJoinedParty; // 0x78(0x10)
	struct FMulticastInlineDelegate OnMemberLeftParty; // 0x88(0x10)
	struct FMulticastInlineDelegate OnLeaderChanged; // 0x98(0x10)
	struct FMulticastInlineDelegate OnInviteAccepted; // 0xa8(0x10)
	struct FMulticastInlineDelegate OnInviteDeclined; // 0xb8(0x10)
	struct FMulticastInlineDelegate OnPartyUpdated; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnInviteFailed; // 0xd8(0x10)
	struct FMulticastInlineDelegate OnAcceptInviteFailed; // 0xe8(0x10)
	struct FMulticastInlineDelegate OnSessionAvailable; // 0xf8(0x10)
	struct FMulticastInlineDelegate OnCreateGameSessionFailed; // 0x108(0x10)
	struct FMulticastInlineDelegate OnPartyMaxMemberSizeUpdated; // 0x118(0x10)
	struct FMulticastInlineDelegate OnPartyPlayerStateAdded; // 0x128(0x10)
	char pad_138[0x20]; // 0x138(0x20)
	struct TWeakObjectPtr<struct UTigerGameInstance> GameInstance; // 0x158(0x08)
	struct TArray<struct UTigerUser*> PartyMembers; // 0x160(0x10)
	struct TArray<struct UTigerPartyInvite*> Invites; // 0x170(0x10)
	float TravelTimeoutSeconds; // 0x180(0x04)
	float MaxInviteAgeSeconds; // 0x184(0x04)
	int32_t MaxInvites; // 0x188(0x04)
	char pad_18C[0x2c]; // 0x18c(0x2c)
	struct UTigerPartyService* PartyService; // 0x1b8(0x08)
	char pad_1C0[0x98]; // 0x1c0(0x98)
	struct TMap<struct FString, double> LatestInviteAttemptTimestamps; // 0x258(0x50)
	char pad_2A8[0x10]; // 0x2a8(0x10)
	float DefaultInviteCooldown; // 0x2b8(0x04)
	float DeclinedInviteCooldown; // 0x2bc(0x04)
	char pad_2C0[0x10]; // 0x2c0(0x10)

	bool TravelToPartyElysium(); // Function Tiger.TigerPartyManager.TravelToPartyElysium // (Final|Native|Public|BlueprintCallable) // @ game+0x14b4920
	void TigerPartyPlatformInvite(struct FString InPlayerId, enum class EShAccountChannel InPlayerChannel); // Function Tiger.TigerPartyManager.TigerPartyPlatformInvite // (Final|Exec|Native|Public) // @ game+0x14b47f0
	void TigerPartyInvite(struct FString InPlayerId, enum class EShAccountChannel InPlayerChannel); // Function Tiger.TigerPartyManager.TigerPartyInvite // (Final|Exec|Native|Public) // @ game+0x14b47f0
	void TigerPartyFailJoinParty(); // Function Tiger.TigerPartyManager.TigerPartyFailJoinParty // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerPartyDump(); // Function Tiger.TigerPartyManager.TigerPartyDump // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerPartyBindPlatformTest(); // Function Tiger.TigerPartyManager.TigerPartyBindPlatformTest // (Final|Exec|Native|Public) // @ game+0xb64580
	void SetLastPlayedMatchGameModeForAllMembers(int32_t InGameModeIndex, struct FString InGameModeId); // Function Tiger.TigerPartyManager.SetLastPlayedMatchGameModeForAllMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x14b4680
	void RequestPartyUpdate(); // Function Tiger.TigerPartyManager.RequestPartyUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x14b4610
	void RequestPartyCheck(); // Function Tiger.TigerPartyManager.RequestPartyCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x14b45f0
	void RemoveInvitesOfPlayer(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerPartyManager.RemoveInvitesOfPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14b4540
	void RemoveExpiredInvites(); // Function Tiger.TigerPartyManager.RemoveExpiredInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x14b4520
	bool PartyHasSelectedElysium(); // Function Tiger.TigerPartyManager.PartyHasSelectedElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14b44f0
	void OnSessionAvailableDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnSessionAvailableDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlayerStateAdded__DelegateSignature(struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerPartyManager.OnPlayerStateAdded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPartyUpdatedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnPartyUpdatedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPartyMaxMemberSizeUpdatedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnPartyMaxMemberSizeUpdatedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnMemberLeftDelegate__DelegateSignature(struct FTigerPartyId& InPartyId, struct FString InDepartingPlayerId); // DelegateFunction Tiger.TigerPartyManager.OnMemberLeftDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnMemberJoinedDelegate__DelegateSignature(struct FTigerPartyId& InPartyId, struct FString InJoiningPlayerId); // DelegateFunction Tiger.TigerPartyManager.OnMemberJoinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnLeftPartyDueToBlockedPlayerDelegate__DelegateSignature(struct UTigerPartyManager* InPartyManager); // DelegateFunction Tiger.TigerPartyManager.OnLeftPartyDueToBlockedPlayerDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnLeftPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerPartyManager.OnLeftPartyDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnLeaderChangedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnLeaderChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnJoinPartyFailedDelegate__DelegateSignature(enum class ETigerJoinedPartyFailedReason InJoinedPartyFailedReason); // DelegateFunction Tiger.TigerPartyManager.OnJoinPartyFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnJoinedPartyDelegate__DelegateSignature(struct FTigerParty& InParty); // DelegateFunction Tiger.TigerPartyManager.OnJoinedPartyDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnInviteFailedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnInviteFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInviteDeclinedDelegate__DelegateSignature(struct FTigerInviteId& InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnInviteDeclinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnInviteActionDelegate__DelegateSignature(struct UTigerPartyInvite* InInvite); // DelegateFunction Tiger.TigerPartyManager.OnInviteActionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInviteAcceptedDelegate__DelegateSignature(struct FTigerInviteId& InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnInviteAcceptedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnCreateGameSessionFailedDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPartyManager.OnCreateGameSessionFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnAcceptInviteFailedDelegate__DelegateSignature(struct FTigerInviteId& InInviteId); // DelegateFunction Tiger.TigerPartyManager.OnAcceptInviteFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void LeaveParty(); // Function Tiger.TigerPartyManager.LeaveParty // (Final|Native|Public|BlueprintCallable) // @ game+0x14b4490
	bool IsPartyFull(); // Function Tiger.TigerPartyManager.IsPartyFull // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b4430
	bool IsLeader(struct FString InPlayerId); // Function Tiger.TigerPartyManager.IsLeader // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b4380
	bool IsJoiningParty(); // Function Tiger.TigerPartyManager.IsJoiningParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b4350
	bool IsJoiningOrInParty(); // Function Tiger.TigerPartyManager.IsJoiningOrInParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b42f0
	bool IsInParty(); // Function Tiger.TigerPartyManager.IsInParty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b42c0
	void InviteByPlayerIdWithUserData(struct FTigerPersistentPlayerID& InPlayerId, enum class EShAccountChannel InAccountChannel, struct FString InUserData); // Function Tiger.TigerPartyManager.InviteByPlayerIdWithUserData // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14b4170
	void InviteByPlayerId(struct FTigerPersistentPlayerID& InPlayerId, enum class EShAccountChannel InPlayerChannel); // Function Tiger.TigerPartyManager.InviteByPlayerId // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14b4070
	void Invite(struct UTigerUser* InUser); // Function Tiger.TigerPartyManager.Invite // (Final|Native|Public|BlueprintCallable) // @ game+0x14b3fe0
	bool InMaintenanceMode(); // Function Tiger.TigerPartyManager.InMaintenanceMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b3fc0
	void HandlePlayerStateAdded(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPartyManager.HandlePlayerStateAdded // (Final|Native|Public) // @ game+0x14b3f30
	struct FTigerPartyId GetPartyId(); // Function Tiger.TigerPartyManager.GetPartyId // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14b3ec0
	int32_t GetMaxPartyMembers(); // Function Tiger.TigerPartyManager.GetMaxPartyMembers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14b3ea0
	float GetInvitePlayerCooldown(struct FTigerPersistentPlayerID& InPlayerId); // Function Tiger.TigerPartyManager.GetInvitePlayerCooldown // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14b3de0
	void DeclineInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerPartyManager.DeclineInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x14b3d50
	void CreateGameSession(struct FTigerBpFindSessionSelectedSession& InGameSession); // Function Tiger.TigerPartyManager.CreateGameSession // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14b3b10
	void AcceptInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerPartyManager.AcceptInvite // (Final|Native|Public|BlueprintCallable) // @ game+0x14b3a80
};

// Class Tiger.TigerPartyService
// Size: 0x40 (Inherited: 0x28)
struct UTigerPartyService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerPassionProjectile
// Size: 0x288 (Inherited: 0x228)
struct ATigerPassionProjectile : AActor {
	struct FVector TargetLocation; // 0x228(0x0c)
	struct FVector Velocity; // 0x234(0x0c)
	float ScaledSpeedValue; // 0x240(0x04)
	float BuffDuration; // 0x244(0x04)
	float BuffStrength; // 0x248(0x04)
	float TimeUntilParticleFadeTiemout; // 0x24c(0x04)
	struct FTimerHandle TimerHandle; // 0x250(0x08)
	char Effect; // 0x258(0x01)
	bool bIsMoving; // 0x259(0x01)
	bool bTurnOnCollision; // 0x25a(0x01)
	char pad_25B[0x5]; // 0x25b(0x05)
	struct ATigerCharacter* TigerCharacterOwner; // 0x260(0x08)
	struct UTigerDisciplinePassion* PassionDiscipline; // 0x268(0x08)
	struct UTigerPassionConfig* ConfigType; // 0x270(0x08)
	struct UBoxComponent* Box; // 0x278(0x08)
	struct UParticleSystemComponent* ParticleComp; // 0x280(0x08)

	void Server_DestroyProjectile(); // Function Tiger.TigerPassionProjectile.Server_DestroyProjectile // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14b4630
	void OnRep_TargetLocation(); // Function Tiger.TigerPassionProjectile.OnRep_TargetLocation // (Final|Native|Private) // @ game+0x14b44d0
	void OnRep_Effect(); // Function Tiger.TigerPassionProjectile.OnRep_Effect // (Final|Native|Private) // @ game+0x14b44b0
};

// Class Tiger.TigerPassiveOverpower
// Size: 0x140 (Inherited: 0x140)
struct UTigerPassiveOverpower : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveAdrenalineRushConfig
// Size: 0x150 (Inherited: 0x140)
struct UTigerPassiveAdrenalineRushConfig : UTigerPassiveConfig {
	struct UTigerBuffAdrenalineRush* OnEnemyWithinRadiusBuff; // 0x140(0x08)
	float RadiusInUnits; // 0x148(0x04)
	char pad_14C[0x4]; // 0x14c(0x04)
};

// Class Tiger.TigerPassiveAdrenalineRushLogicComponent
// Size: 0x198 (Inherited: 0x178)
struct UTigerPassiveAdrenalineRushLogicComponent : UTigerPassiveArchetypeLogic {
	struct UTigerPassiveAdrenalineRushConfig* PassiveConfig; // 0x178(0x08)
	char pad_180[0x18]; // 0x180(0x18)
};

// Class Tiger.TigerPassiveAHuntForPleasure
// Size: 0x148 (Inherited: 0x140)
struct UTigerPassiveAHuntForPleasure : UTigerPassiveConfig {
	float MinEffectDistance; // 0x140(0x04)
	float MaxEffectDistance; // 0x144(0x04)
};

// Class Tiger.TigerPassiveCollectorConfig
// Size: 0x148 (Inherited: 0x140)
struct UTigerPassiveCollectorConfig : UTigerPassiveConfig {
	float CarryCapacityMultiplier; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
};

// Class Tiger.TigerPassiveColossalStrength
// Size: 0x148 (Inherited: 0x140)
struct UTigerPassiveColossalStrength : UTigerPassiveConfig {
	float UnarmedDamageMultiplier; // 0x140(0x04)
	char pad_144[0x4]; // 0x144(0x04)
};

// Class Tiger.TigerPassiveEnragedConfig
// Size: 0x178 (Inherited: 0x140)
struct UTigerPassiveEnragedConfig : UTigerPassiveConfig {
	struct UAnimMontage* ActivationMontage; // 0x140(0x08)
	struct ATigerEnragedEffectActor* EffectActor; // 0x148(0x08)
	float EffectActorDestructionDelay; // 0x150(0x04)
	char pad_154[0x4]; // 0x154(0x04)
	struct UTigerBuff* OnHitBuff; // 0x158(0x08)
	float DisciplineDamageMultiplier; // 0x160(0x04)
	float RegenSpeed; // 0x164(0x04)
	float RegenDelay; // 0x168(0x04)
	float HealthPercentThreshold; // 0x16c(0x04)
	bool bUseBaseHealthPercent; // 0x170(0x01)
	bool bDamageMultiplierOneTimeUse; // 0x171(0x01)
	char pad_172[0x6]; // 0x172(0x06)
};

// Class Tiger.TigerPassiveEnragedLogic
// Size: 0xe0 (Inherited: 0xc8)
struct UTigerPassiveEnragedLogic : UTigerPassiveComponent {
	struct UTigerPassiveEnragedConfig* Config; // 0xc8(0x08)
	struct ATigerEnragedEffectActor* EffectActor; // 0xd0(0x08)
	char pad_D8[0x8]; // 0xd8(0x08)

	bool IsEnraged(); // Function Tiger.TigerPassiveEnragedLogic.IsEnraged // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14bad70
};

// Class Tiger.TigerPassiveFinalActConfig
// Size: 0x140 (Inherited: 0x140)
struct UTigerPassiveFinalActConfig : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveFinalActLogic
// Size: 0xc8 (Inherited: 0xc8)
struct UTigerPassiveFinalActLogic : UTigerPassiveComponent {
};

// Class Tiger.TigerPassiveHideousConfig
// Size: 0x150 (Inherited: 0x140)
struct UTigerPassiveHideousConfig : UTigerPassiveConfig {
	float TimeUntilMasqueradeTicks; // 0x140(0x04)
	float HideousReachDistance; // 0x144(0x04)
	struct UCurveFloat* ScaleCurve; // 0x148(0x08)
};

// Class Tiger.TigerPassiveHideousLogic
// Size: 0x128 (Inherited: 0xc8)
struct UTigerPassiveHideousLogic : UTigerPassiveComponent {
	struct UTigerPassiveHideousConfig* Config; // 0xc8(0x08)
	struct TMap<struct ATigerBaseNPC*, struct FHideousTimingData> TimingData; // 0xd0(0x50)
	struct ATigerPlayer* Player; // 0x120(0x08)
};

// Class Tiger.TigerPassiveKindredCharmConfig
// Size: 0x198 (Inherited: 0x140)
struct UTigerPassiveKindredCharmConfig : UTigerPassiveConfig {
	struct ATigerKindredCharmEffectActor* EffectActor; // 0x140(0x08)
	struct FName EffectSocketR; // 0x148(0x08)
	struct FName EffectSocketL; // 0x150(0x08)
	struct TArray<float> CharmCountCooldownSpeed; // 0x158(0x10)
	int32_t MaxCharmedCharacterCount; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct UTigerBuffKindredCharm* CharmBuff; // 0x170(0x08)
	float PlayerPulseRange; // 0x178(0x04)
	float PlayerPulseInterval; // 0x17c(0x04)
	float BuffDuration; // 0x180(0x04)
	float NpcDamageBreakCharmRadius; // 0x184(0x04)
	float NpcDamageBreakCharmThreshold; // 0x188(0x04)
	float NpcDamageBreakCharmImmunityTime; // 0x18c(0x04)
	float CharmedFeedingSpeedMultiplier; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
};

// Class Tiger.TigerPassiveKindredCharmLogic
// Size: 0xf0 (Inherited: 0xc8)
struct UTigerPassiveKindredCharmLogic : UTigerPassiveComponent {
	struct UTigerPassiveKindredCharmConfig* Config; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	struct ATigerKindredCharmEffectActor* EffectActorR; // 0xd8(0x08)
	struct ATigerKindredCharmEffectActor* EffectActorL; // 0xe0(0x08)
	char pad_E8[0x8]; // 0xe8(0x08)

	int32_t GetKindredCharmCount(); // Function Tiger.TigerPassiveKindredCharmLogic.GetKindredCharmCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1419340
};

// Class Tiger.TigerPassiveMomentum
// Size: 0x140 (Inherited: 0x140)
struct UTigerPassiveMomentum : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveMomentumLogicComponent
// Size: 0xe0 (Inherited: 0xc8)
struct UTigerPassiveMomentumLogicComponent : UTigerPassiveComponent {
	float CoolDownReduction; // 0xc8(0x04)
	float PassiveCoolDown; // 0xcc(0x04)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	float EndTime; // 0xd8(0x04)
	bool bIsInCooldown; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
};

// Class Tiger.TigerPassiveNightstalkerConfig
// Size: 0x178 (Inherited: 0x140)
struct UTigerPassiveNightstalkerConfig : UTigerPassiveConfig {
	float CrouchedTimeUntilUnseen; // 0x140(0x04)
	float CrouchedTimePerAdditionalPowerLevel; // 0x144(0x04)
	struct TArray<struct UTigerBuffUnseenPresence*> InvisibilityBuff; // 0x148(0x10)
	struct FTigerSightConfigProperties OverrideSightProperties; // 0x158(0x1c)
	char pad_174[0x4]; // 0x174(0x04)
};

// Class Tiger.TigerPassiveNightstalkerLogic
// Size: 0x1a0 (Inherited: 0x178)
struct UTigerPassiveNightstalkerLogic : UTigerPassiveArchetypeLogic {
	struct UTigerPassiveNightstalkerConfig* Config; // 0x178(0x08)
	char pad_180[0x20]; // 0x180(0x20)

	void OnCharacterAction(enum class ETigerCharacterAction Action); // Function Tiger.TigerPassiveNightstalkerLogic.OnCharacterAction // (Final|Native|Public) // @ game+0x14bafe0
	void OnBuffRemoved(struct UTigerBuff* BuffType, int32_t ID, float Duration); // Function Tiger.TigerPassiveNightstalkerLogic.OnBuffRemoved // (Final|Native|Public) // @ game+0x14baec0
	void OnBuffAdded(struct UTigerBuff* BuffType, int32_t ID, float Duration); // Function Tiger.TigerPassiveNightstalkerLogic.OnBuffAdded // (Final|Native|Public) // @ game+0x14bada0
};

// Class Tiger.TigerPassivePerkNosferatuConfig
// Size: 0x150 (Inherited: 0x140)
struct UTigerPassivePerkNosferatuConfig : UTigerPassiveConfig {
	struct UTigerBuff* VanishBuffOverride; // 0x140(0x08)
	float DurationOverride; // 0x148(0x04)
	float AttackDelayAfterBuffModifier; // 0x14c(0x04)
};

// Class Tiger.TigerPassivePerkAnimalistConfig
// Size: 0x168 (Inherited: 0x150)
struct UTigerPassivePerkAnimalistConfig : UTigerPassivePerkNosferatuConfig {
	struct UTigerFamiliarScoutPassive* PassiveClassOverride; // 0x150(0x08)
	float ScoutLifetimeOverride; // 0x158(0x04)
	float RevealDurationMultiplier; // 0x15c(0x04)
	float ActiveScanRadiusMultiplier; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
};

// Class Tiger.TigerPassivePerkCrouchedConfig
// Size: 0x1e8 (Inherited: 0x140)
struct UTigerPassivePerkCrouchedConfig : UTigerPassiveConfig {
	struct FTigerCharacterStatModification CrouchedStatModification; // 0x140(0xa8)
};

// Class Tiger.TigerPassivePerkCrouchedLogic
// Size: 0xd8 (Inherited: 0xc8)
struct UTigerPassivePerkCrouchedLogic : UTigerPassiveComponent {
	struct UTigerPassivePerkCrouchedConfig* PassiveConfig; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)

	void OnCrouchStateUpdated(bool bInIsCrouched); // Function Tiger.TigerPassivePerkCrouchedLogic.OnCrouchStateUpdated // (Final|Native|Public) // @ game+0x14bb060
};

// Class Tiger.TigerPassivePerkTechnocratConfig
// Size: 0x168 (Inherited: 0x150)
struct UTigerPassivePerkTechnocratConfig : UTigerPassivePerkNosferatuConfig {
	struct UTigerBuffUnseenPresence* InvisibilityBuffOverride; // 0x150(0x08)
	float CrouchedTimeUntilUnseenMultiplier; // 0x158(0x04)
	float ExplosionDamageMultiplier; // 0x15c(0x04)
	bool bDisableAreaTrigger; // 0x160(0x01)
	char pad_161[0x7]; // 0x161(0x07)
};

// Class Tiger.TigerPassivePerkToreadorConfig
// Size: 0x148 (Inherited: 0x140)
struct UTigerPassivePerkToreadorConfig : UTigerPassiveConfig {
	float ProjectionSpeedMultiplier; // 0x140(0x04)
	float ProjectionStoppedLifetimeMultiplier; // 0x144(0x04)
};

// Class Tiger.TigerPassivePerkVentrueConfig
// Size: 0x148 (Inherited: 0x140)
struct UTigerPassivePerkVentrueConfig : UTigerPassiveConfig {
	struct UTigerBuff* BuffOverride; // 0x140(0x08)
};

// Class Tiger.TigerPassiveUnbridledRageConfig
// Size: 0x148 (Inherited: 0x140)
struct UTigerPassiveUnbridledRageConfig : UTigerPassiveConfig {
	float MinimumLoudnessMultiplier; // 0x140(0x04)
	float MaximumLoudnessMultiplier; // 0x144(0x04)
};

// Class Tiger.TigerPassiveUnbridledRageLogic
// Size: 0x180 (Inherited: 0xc8)
struct UTigerPassiveUnbridledRageLogic : UTigerPassiveComponent {
	struct UTigerPassiveUnbridledRageConfig* Config; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	char pad_D8[0xa8]; // 0xd8(0xa8)
};

// Class Tiger.TigerBuffUnseenPresenceInstance
// Size: 0x98 (Inherited: 0x88)
struct UTigerBuffUnseenPresenceInstance : UTigerBuffInstance {
	char pad_88[0x10]; // 0x88(0x10)

	void UpdateInvisibilityMaterial(float DeltaTime, struct ATigerPlayer* Player, struct UMaterialInstanceDynamic* MaterialInstance); // Function Tiger.TigerBuffUnseenPresenceInstance.UpdateInvisibilityMaterial // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerBuffUnseenPresence
// Size: 0x280 (Inherited: 0x268)
struct UTigerBuffUnseenPresence : UTigerBuff {
	struct UTigerBuffUnseenPresenceInstance* BuffInstanceClass; // 0x268(0x08)
	struct UAkAudioEvent* NearbySound; // 0x270(0x08)
	float NearbySoundPlayDistanceSquared; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
};

// Class Tiger.TigerPassiveVentrueOneConfig
// Size: 0x158 (Inherited: 0x140)
struct UTigerPassiveVentrueOneConfig : UTigerPassiveConfig {
	struct UTigerBuff* Debuff; // 0x140(0x08)
	float DebuffCylinderRadius; // 0x148(0x04)
	float DebuffCooldown; // 0x14c(0x04)
	bool bOnlyRemoveDebuffWhenOutsideRange; // 0x150(0x01)
	char pad_151[0x7]; // 0x151(0x07)
};

// Class Tiger.TigerPassiveVentrueOneLogic
// Size: 0x150 (Inherited: 0xc8)
struct UTigerPassiveVentrueOneLogic : UTigerPassiveComponent {
	struct UTigerPassiveVentrueOneConfig* Config; // 0xc8(0x08)
	struct ATigerPlayer* Player; // 0xd0(0x08)
	struct UTigerGameModeFeatureRespawn* RespawnFeature; // 0xd8(0x08)
	struct UCapsuleComponent* DebuffRadiusComponent; // 0xe0(0x08)
	struct TArray<struct ATigerCharacter*> CharactersInDebuffRange; // 0xe8(0x10)
	struct TMap<struct ATigerCharacter*, float> CharacterDebuffCooldown; // 0xf8(0x50)
	char pad_148[0x8]; // 0x148(0x08)

	void OnRespawnFinished(); // Function Tiger.TigerPassiveVentrueOneLogic.OnRespawnFinished // (Final|Native|Protected) // @ game+0x14bb170
	void OnPlayerLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerPassiveVentrueOneLogic.OnPlayerLifeStatusChanged // (Final|Native|Protected) // @ game+0x14bb0f0
	void EndDebuffOverlappedRange(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex); // Function Tiger.TigerPassiveVentrueOneLogic.EndDebuffOverlappedRange // (Final|Native|Protected) // @ game+0x14ba7d0
	void BeginDebuffOverlappedRange(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerPassiveVentrueOneLogic.BeginDebuffOverlappedRange // (Final|Native|Protected|HasOutParms) // @ game+0x14ba2e0
};

// Class Tiger.TigerPassiveVoiceOfInspirationConfig
// Size: 0x140 (Inherited: 0x140)
struct UTigerPassiveVoiceOfInspirationConfig : UTigerPassiveConfig {
};

// Class Tiger.TigerPassiveVoiceOfInspirationLogic
// Size: 0x180 (Inherited: 0x178)
struct UTigerPassiveVoiceOfInspirationLogic : UTigerPassiveArchetypeLogic {
	struct UTigerBuff* ActiveBuff; // 0x178(0x08)
};

// Class Tiger.TigerPathFollowingComponent
// Size: 0x298 (Inherited: 0x298)
struct UTigerPathFollowingComponent : UCrowdFollowingComponent {
};

// Class Tiger.TigerPerformanceIndicatorSettings
// Size: 0xa0 (Inherited: 0x38)
struct UTigerPerformanceIndicatorSettings : UDeveloperSettings {
	bool bEnablePerformanceIndicators; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	struct FTigerPerformanceIndicatorValues FPS; // 0x3c(0x10)
	struct FTigerPerformanceIndicatorValues ServerFPS; // 0x4c(0x10)
	struct FTigerPerformanceIndicatorValues Latency; // 0x5c(0x10)
	struct FTigerPerformanceIndicatorValues LatencyVariation; // 0x6c(0x10)
	struct FTigerPerformanceIndicatorValues PacketLoss; // 0x7c(0x10)
	struct FTigerPerformanceIndicatorValues PsoCompilation; // 0x8c(0x10)
	char pad_9C[0x4]; // 0x9c(0x04)
};

// Class Tiger.TigerCharacterSlotExpansion
// Size: 0x130 (Inherited: 0x130)
struct UTigerCharacterSlotExpansion : UTigerInventoryItemBase {
};

// Class Tiger.TigerConsumableInventoryItemBase
// Size: 0x138 (Inherited: 0x130)
struct UTigerConsumableInventoryItemBase : UTigerInventoryItemBase {
	int32_t Count; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
};

// Class Tiger.TigerPremiumCurrencyPack
// Size: 0x138 (Inherited: 0x138)
struct UTigerPremiumCurrencyPack : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerSeasonExpPack
// Size: 0x138 (Inherited: 0x138)
struct UTigerSeasonExpPack : UTigerConsumableInventoryItemBase {

	int32_t GetExpRewardAmount(); // Function Tiger.TigerSeasonExpPack.GetExpRewardAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14ba930
};

// Class Tiger.TigerSeasonPlacementExpBoostPercentage
// Size: 0x138 (Inherited: 0x138)
struct UTigerSeasonPlacementExpBoostPercentage : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerSeasonRankSkip
// Size: 0x138 (Inherited: 0x138)
struct UTigerSeasonRankSkip : UTigerConsumableInventoryItemBase {
};

// Class Tiger.TigerBattlepassItem
// Size: 0x138 (Inherited: 0x130)
struct UTigerBattlepassItem : UTigerInventoryItemBase {
	int32_t SeasonId; // 0x130(0x04)
	char pad_134[0x4]; // 0x134(0x04)
};

// Class Tiger.TigerSoftCurrency
// Size: 0x130 (Inherited: 0x130)
struct UTigerSoftCurrency : UTigerInventoryItemBase {
};

// Class Tiger.TigerInventoryItemPack
// Size: 0x140 (Inherited: 0x138)
struct UTigerInventoryItemPack : UTigerConsumableInventoryItemBase {
	struct FTigerItemId ItemId; // 0x138(0x08)
};

// Class Tiger.TigerPerkItem
// Size: 0x138 (Inherited: 0x130)
struct UTigerPerkItem : UTigerInventoryItemBase {
	struct UTigerPassiveConfig* PerkPassive; // 0x130(0x08)
};

// Class Tiger.TigerServerCallbacks
// Size: 0x28 (Inherited: 0x28)
struct UTigerServerCallbacks : UInterface {

	void OnLoginSucceeded(struct TArray<struct FTigerPersistentPlayerCharacter>& AvailableCharacters); // Function Tiger.TigerServerCallbacks.OnLoginSucceeded // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnLoginFailed(struct FTigerLoginFailedInfo& InLoginFailedInfo); // Function Tiger.TigerServerCallbacks.OnLoginFailed // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnLegalDocumentAcceptanceResult(struct TArray<enum class ETigerLegalDocumentType>& InDocumentTypes); // Function Tiger.TigerServerCallbacks.OnLegalDocumentAcceptanceResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnGetValidGameVersionResult(enum class ETigerVersionIsValidResult Result); // Function Tiger.TigerServerCallbacks.OnGetValidGameVersionResult // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGetUserPrivileges(); // Function Tiger.TigerServerCallbacks.OnGetUserPrivileges // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnCreateCharacterResult(struct FTigerPersistentCharacterID& CharacterId, bool bWasCharacterCreated); // Function Tiger.TigerServerCallbacks.OnCreateCharacterResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnCharacterSelected(); // Function Tiger.TigerServerCallbacks.OnCharacterSelected // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerPersistentPlayerState
// Size: 0x728 (Inherited: 0xb0)
struct UTigerPersistentPlayerState : UActorComponent {
	char pad_B0[0x58]; // 0xb0(0x58)
	struct FMulticastInlineDelegate OnDailyChallengesInitializedEvent; // 0x108(0x10)
	struct FMulticastInlineDelegate OnRewardsLoaded; // 0x118(0x10)
	struct FMulticastInlineDelegate OnClientTransactionalPlayerDataChangedEvent; // 0x128(0x10)
	struct FMulticastInlineDelegate OnClientPlayerInventoryChanged; // 0x138(0x10)
	struct FMulticastInlineDelegate OnSelectedCharacterChanged; // 0x148(0x10)
	struct FMulticastInlineDelegate OnChallengeProgressUpdated; // 0x158(0x10)
	struct FMulticastInlineDelegate OnQuestsRemoved; // 0x168(0x10)
	char pad_178[0x48]; // 0x178(0x48)
	struct FMulticastInlineDelegate OnSeasonLevelGained; // 0x1c0(0x10)
	char pad_1D0[0x10]; // 0x1d0(0x10)
	struct FMulticastInlineDelegate OnplayerDataUpdatedForRequeue; // 0x1e0(0x10)
	struct UTigerThrallSystem* PlayerThrallSystem; // 0x1f0(0x08)
	struct UTigerCollectibleSystem* PlayerCollectibleSystem; // 0x1f8(0x08)
	char pad_200[0x10]; // 0x200(0x10)
	struct UObject* ServerCallbacks; // 0x210(0x08)
	char pad_218[0x120]; // 0x218(0x120)
	struct FSharkUserId SharkmobUserId; // 0x338(0x10)
	struct FTigerPersistentPlayerID PersistentPlayerID; // 0x348(0x10)
	char pad_358[0x40]; // 0x358(0x40)
	enum class EShAccountChannel AccountChannel; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	int32_t RankPoints; // 0x39c(0x04)
	char pad_3A0[0x158]; // 0x3a0(0x158)
	struct TArray<struct FTigerPersistentPlayerCharacter> CachedPlayerCharacters; // 0x4f8(0x10)
	struct TMap<struct FString, struct UTigerQuestline*> ActiveQuests; // 0x508(0x50)
	struct TMap<struct FString, struct UTigerQuestline*> CompletedQuests; // 0x558(0x50)
	struct TMap<struct FString, float> LocationTimeHistory; // 0x5a8(0x50)
	char pad_5F8[0xb0]; // 0x5f8(0xb0)
	struct TMap<enum class ETigerChallengeCategory, struct FTigerChallengeCategoryMap> Challenges; // 0x6a8(0x50)
	char pad_6F8[0x20]; // 0x6f8(0x20)
	struct FString CachedPlatformEntitlementsToken; // 0x718(0x10)

	void UnlockNextSubEntryOfEntry(struct FString InGrimoireEntryId, bool bInRandomize, bool bInForce); // Function Tiger.TigerPersistentPlayerState.UnlockNextSubEntryOfEntry // (Final|Native|Public|BlueprintCallable) // @ game+0x14c46c0
	void TryLoginAutomatically(struct FTigerLoginQueueToken& InLoginQueueToken, struct UObject* InCallbacks); // Function Tiger.TigerPersistentPlayerState.TryLoginAutomatically // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c45c0
	bool TryGetSelectedCharacter(struct FTigerPersistentPlayerCharacter& OutSelectedCharacter); // Function Tiger.TigerPersistentPlayerState.TryGetSelectedCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c44a0
	void TransactionalPlayerDataChanged__DelegateSignature(struct FTigerPersistentPlayerTransactionalData& TransactionalPlayerData); // DelegateFunction Tiger.TigerPersistentPlayerState.TransactionalPlayerDataChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void TigerDelegateChallengeProgressUpdated__DelegateSignature(bool bInNewDefinitions); // DelegateFunction Tiger.TigerPersistentPlayerState.TigerDelegateChallengeProgressUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void SwitchCharacter(struct FTigerPersistentCharacterID& InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.SwitchCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c4410
	bool SetCallbackObject(struct UObject* Callbacks); // Function Tiger.TigerPersistentPlayerState.SetCallbackObject // (Final|Native|Public|BlueprintCallable) // @ game+0x14c4370
	void Server_UpdatePlatformEntitlementToken(struct FString InPlatformEntitlementToken); // Function Tiger.TigerPersistentPlayerState.Server_UpdatePlatformEntitlementToken // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x14c42d0
	void Server_UpdatePersistentThralls(); // Function Tiger.TigerPersistentPlayerState.Server_UpdatePersistentThralls // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c4280
	void Server_UpdateOngoingCollectibles(); // Function Tiger.TigerPersistentPlayerState.Server_UpdateOngoingCollectibles // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c4230
	void Server_UpdateLocationHistory(struct FString InLocationName, float InTimeSpentAtLocation); // Function Tiger.TigerPersistentPlayerState.Server_UpdateLocationHistory // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c4120
	void Server_UpdateGrimoireSuggestedArticlesData(uint32_t InDay, struct TArray<struct FString> InEntryIds); // Function Tiger.TigerPersistentPlayerState.Server_UpdateGrimoireSuggestedArticlesData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3ff0
	void Server_UpdateActiveThrallMissions(); // Function Tiger.TigerPersistentPlayerState.Server_UpdateActiveThrallMissions // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3fa0
	void Server_SwitchCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Server_SwitchCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3ef0
	void Server_StartNewQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_StartNewQuest // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3dd0
	void Server_ResetReadDialogue(); // Function Tiger.TigerPersistentPlayerState.Server_ResetReadDialogue // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3d80
	void Server_ReinitializeDailyChallenges(); // Function Tiger.TigerPersistentPlayerState.Server_ReinitializeDailyChallenges // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14c3d60
	void Server_RegisterGrimoireEntryAsRead(uint32_t InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.Server_RegisterGrimoireEntryAsRead // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3c60
	void Server_RefreshPremiumCurrencyBalance(); // Function Tiger.TigerPersistentPlayerState.Server_RefreshPremiumCurrencyBalance // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14c3c10
	void Server_MatchPlayerDataUpdate(); // Function Tiger.TigerPersistentPlayerState.Server_MatchPlayerDataUpdate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3bc0
	void Server_MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory); // Function Tiger.TigerPersistentPlayerState.Server_MarkDialogueAsRead // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3a60
	void Server_ForceCompleteQuestActiveObjectiveSet(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_ForceCompleteQuestActiveObjectiveSet // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3940
	void Server_ForceCompleteQuest(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.Server_ForceCompleteQuest // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3820
	void Server_DeleteCharacter(struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Server_DeleteCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3770
	void Server_CreateCharacter(struct FTigerPersistentPlayerCharacter InCharacter); // Function Tiger.TigerPersistentPlayerState.Server_CreateCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c3660
	void Server_ClearQuests(); // Function Tiger.TigerPersistentPlayerState.Server_ClearQuests // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14c3610
	void Server_ClearQuestLine(struct FString InQuestlineId, bool bRemoveFromCompleteQuestsToo); // Function Tiger.TigerPersistentPlayerState.Server_ClearQuestLine // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14c34f0
	void Server_ClearQuest(struct FString InQuestlineId, struct FString InQuestId, bool bRemoveFromCompleteQuestsToo); // Function Tiger.TigerPersistentPlayerState.Server_ClearQuest // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14c3370
	void Server_ChangeOutfit(uint64_t InOutfitId); // Function Tiger.TigerPersistentPlayerState.Server_ChangeOutfit // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14c32b0
	void Server_BuyStoreEntries(struct FTigerMetaStoreBuyPayload InMetaStoreBuyPayload, struct FString InPlatformEntitlementsToken, int32_t InClientPurchaseId); // Function Tiger.TigerPersistentPlayerState.Server_BuyStoreEntries // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14c3140
	void Server_BuyItem(struct FTigerItemId InItemId, struct FTigerItemId InSoftCurrencyId, int32_t InPurchaseId); // Function Tiger.TigerPersistentPlayerState.Server_BuyItem // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14c2ff0
	void SelectCharacter(struct FTigerPersistentCharacterID& InCharacterId); // Function Tiger.TigerPersistentPlayerState.SelectCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c2f60
	void RegisterUnlockedGrimoireSubEntriesAsRead(struct FString InGrimoireParentEntryId); // Function Tiger.TigerPersistentPlayerState.RegisterUnlockedGrimoireSubEntriesAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x14c2e70
	void RegisterGrimoireEntryAsUnlocked(struct FString InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.RegisterGrimoireEntryAsUnlocked // (Final|Native|Public|BlueprintCallable) // @ game+0x14c2d40
	void RegisterGrimoireEntryAsRead(struct FString InGrimoireEntryId, bool bInForce); // Function Tiger.TigerPersistentPlayerState.RegisterGrimoireEntryAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x14c2c10
	void PlayerInventoryChanged__DelegateSignature(struct UTigerPersistentPlayerState* InPersistentPlayerState); // DelegateFunction Tiger.TigerPersistentPlayerState.PlayerInventoryChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void PlayerCharacterChanged__DelegateSignature(struct UTigerPersistentPlayerState* InPersistentPlayerState); // DelegateFunction Tiger.TigerPersistentPlayerState.PlayerCharacterChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OverridePlayerArchetypeForBenchmark(enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerPersistentPlayerState.OverridePlayerArchetypeForBenchmark // (Final|Native|Public|BlueprintCallable) // @ game+0x14c2b90
	void OnWeeklyChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnWeeklyChallengeValueChanged // (Final|Native|Private) // @ game+0x14518f0
	void OnTestChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnTestChallengeValueChanged // (Final|Native|Private) // @ game+0x14518f0
	void OnSeasonLevelGained__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnSeasonLevelGained__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRewardsLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnRewardsLoaded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRep_RankPoints(); // Function Tiger.TigerPersistentPlayerState.OnRep_RankPoints // (Final|Native|Private|Const) // @ game+0x14c2b30
	void OnRep_PlayerId(); // Function Tiger.TigerPersistentPlayerState.OnRep_PlayerId // (Final|Native|Private) // @ game+0x14c2b70
	void OnRep_DailyChallenges(); // Function Tiger.TigerPersistentPlayerState.OnRep_DailyChallenges // (Final|Native|Private) // @ game+0x14c2b50
	void OnRep_AccountChannel(); // Function Tiger.TigerPersistentPlayerState.OnRep_AccountChannel // (Final|Native|Private|Const) // @ game+0x14c2b30
	void OnQuestsRemoved__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnQuestsRemoved__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlayerStateReplicatedToPlayerController(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPersistentPlayerState.OnPlayerStateReplicatedToPlayerController // (Final|Native|Private) // @ game+0x14c2aa0
	void OnPlayerDataUpdatedForRequeue__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnPlayerDataUpdatedForRequeue__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlayerDataUpdated__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnPlayerDataUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPlatformLoginResultReceived(struct FSharkLoginResult InLoginResult); // Function Tiger.TigerPersistentPlayerState.OnPlatformLoginResultReceived // (Final|Native|Private) // @ game+0x14c2730
	void OnMutedStatusChanged__DelegateSignature(struct FTigerMuteInfo& InMuteInfo); // DelegateFunction Tiger.TigerPersistentPlayerState.OnMutedStatusChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnMasteryChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnMasteryChallengeValueChanged // (Final|Native|Private) // @ game+0x14518f0
	void OnLegalDocumentAccepted(enum class ETigerLegalDocumentType InDocumentType); // Function Tiger.TigerPersistentPlayerState.OnLegalDocumentAccepted // (Final|Native|Public|BlueprintCallable) // @ game+0x14c26b0
	void OnInitialised__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnInitialised__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnGetPlayerCharactersMulti__DelegateSignature(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.OnGetPlayerCharactersMulti__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnGetPlayerCharacters__DelegateSignature(struct TArray<struct FTigerPersistentPlayerCharacter>& InCharacters, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.OnGetPlayerCharacters__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnDailyChallengeValueChanged(struct UTigerChallenge* InChallenge); // Function Tiger.TigerPersistentPlayerState.OnDailyChallengeValueChanged // (Final|Native|Private) // @ game+0x14518f0
	void OnDailyChallengesInitialized__DelegateSignature(); // DelegateFunction Tiger.TigerPersistentPlayerState.OnDailyChallengesInitialized__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnAllLegalDocumentsAccepted(); // Function Tiger.TigerPersistentPlayerState.OnAllLegalDocumentsAccepted // (Final|Native|Public|BlueprintCallable) // @ game+0x14c2690
	void LoginWithSharkmobAccount(struct UObject* InCallbacks, struct FTigerLoginQueueToken& InLoginQueueToken, struct FSharkLoginResult& InLoginDetails); // Function Tiger.TigerPersistentPlayerState.LoginWithSharkmobAccount // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c2490
	bool IsQuestComplete(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.IsQuestComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c2390
	bool IsQuestActive(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.IsQuestActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c2290
	bool IsItemInPlayerInventory(struct TSoftClassPtr<UObject>& ItemClassPath); // Function Tiger.TigerPersistentPlayerState.IsItemInPlayerInventory // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c21c0
	bool HasReachedSeasonMaxLevel(); // Function Tiger.TigerPersistentPlayerState.HasReachedSeasonMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c2190
	bool HasReachedPlayerMaxLevel(); // Function Tiger.TigerPersistentPlayerState.HasReachedPlayerMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c2160
	bool HasLoadedChallenges(); // Function Tiger.TigerPersistentPlayerState.HasLoadedChallenges // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14c2130
	bool HasLoadedChallengeOfCategory(enum class ETigerChallengeCategory InCategory); // Function Tiger.TigerPersistentPlayerState.HasLoadedChallengeOfCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1fd0
	bool HasCurrentSeasonBattlepass(); // Function Tiger.TigerPersistentPlayerState.HasCurrentSeasonBattlepass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1fa0
	bool HasCompletedInitialisation(); // Function Tiger.TigerPersistentPlayerState.HasCompletedInitialisation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1f70
	void HandlePlatformAccountUpsell(struct UObject* InWorldContextObject, struct FLatentActionInfo InLatentInfo); // Function Tiger.TigerPersistentPlayerState.HandlePlatformAccountUpsell // (Final|Native|Public|BlueprintCallable) // @ game+0x14c1e80
	bool GrimoireEntryHasState(struct FString InGrimoireEntryId, enum class ETigerGrimoireEntryState InState); // Function Tiger.TigerPersistentPlayerState.GrimoireEntryHasState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1d90
	enum class ETigerVersionCheckStatus GetVersionCheckStatus(); // Function Tiger.TigerPersistentPlayerState.GetVersionCheckStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x14c1d70
	struct FTigerPersistentPlayerTransactionalData GetTransactionalPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetTransactionalPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1920
	struct FSharkUserId GetSharkmobUserId(); // Function Tiger.TigerPersistentPlayerState.GetSharkmobUserId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1d40
	struct FTigerPersistentPlayerCharacter GetSelectedCharacter(); // Function Tiger.TigerPersistentPlayerState.GetSelectedCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1d10
	struct TArray<struct UTigerQuest*> GetQuestsFromQuestlineOrdered(struct FString InQuestlineId, bool InReverseCompletedQuests); // Function Tiger.TigerPersistentPlayerState.GetQuestsFromQuestlineOrdered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1bd0
	struct UTigerQuestline* GetQuestlineFromId(struct FString InQuestlineId); // Function Tiger.TigerPersistentPlayerState.GetQuestlineFromId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1ad0
	struct FTigerPersistentPlayerID GetPlayerId(); // Function Tiger.TigerPersistentPlayerState.GetPlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1aa0
	struct FTigerPersistentPlayerData GetPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1a70
	void GetPlayerCharacters(struct FDelegate& InDelegate); // Function Tiger.TigerPersistentPlayerState.GetPlayerCharacters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c19c0
	enum class EShAccountChannel GetPlayerChannel(); // Function Tiger.TigerPersistentPlayerState.GetPlayerChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c19a0
	enum class ETigerOnlinePrivilegeCheckStatus GetOnlinePrivilegeCheckStatus(); // Function Tiger.TigerPersistentPlayerState.GetOnlinePrivilegeCheckStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x14c1980
	char GetNumCharacterSlots(); // Function Tiger.TigerPersistentPlayerState.GetNumCharacterSlots // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1950
	struct FTigerPersistentPlayerTransactionalData GetMutableTransactionalPlayerData(); // Function Tiger.TigerPersistentPlayerState.GetMutableTransactionalPlayerData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14c1920
	enum class ETigerLoginStatus GetLoginStatus(); // Function Tiger.TigerPersistentPlayerState.GetLoginStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x14c1900
	int32_t GetInventoryItemCount(struct TSoftClassPtr<UObject>& ItemClassPath); // Function Tiger.TigerPersistentPlayerState.GetInventoryItemCount // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1830
	struct FTigerSuggestedArticlesData GetGrimoireSuggestedArticlesData(); // Function Tiger.TigerPersistentPlayerState.GetGrimoireSuggestedArticlesData // (Final|Native|Public|BlueprintCallable) // @ game+0x14c1740
	enum class ETigerGrimoireEntryState GetGrimoireEntryState(struct FString InGrimoireEntryId); // Function Tiger.TigerPersistentPlayerState.GetGrimoireEntryState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1690
	struct TArray<struct FTigerGrimoireEntryStatusStruct> GetGrimoireEntries(); // Function Tiger.TigerPersistentPlayerState.GetGrimoireEntries // (Final|Native|Public|BlueprintCallable) // @ game+0x14c1610
	void GetCurrentSeasonLevelExperience(float& OutLevelCurrentExperience, float& OutExperienceRequiredBetweenLevels); // Function Tiger.TigerPersistentPlayerState.GetCurrentSeasonLevelExperience // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1530
	int32_t GetCurrentSeasonLevel(); // Function Tiger.TigerPersistentPlayerState.GetCurrentSeasonLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1500
	void GetCurrentPlayerLevelExperience(float& OutLevelCurrentExperience, float& OutExperienceRequiredBetweenLevels); // Function Tiger.TigerPersistentPlayerState.GetCurrentPlayerLevelExperience // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1420
	int32_t GetCurrentPlayerLevel(); // Function Tiger.TigerPersistentPlayerState.GetCurrentPlayerLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c13f0
	int32_t GetCurrentArchetypeLevel(); // Function Tiger.TigerPersistentPlayerState.GetCurrentArchetypeLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c13c0
	struct TArray<struct UTigerChallenge*> GetClosestChallengesToComplete(int32_t InNrOfChallenges); // Function Tiger.TigerPersistentPlayerState.GetClosestChallengesToComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c12e0
	enum class ETigerPowerKitType GetArchetypeType(); // Function Tiger.TigerPersistentPlayerState.GetArchetypeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c12b0
	int32_t GetArchetypeLevelByType(enum class ETigerPowerKitType InType); // Function Tiger.TigerPersistentPlayerState.GetArchetypeLevelByType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1220
	struct FTigerPersistentArchetypeTransactionalData GetArchetypeDataForCharacterId(struct FTigerPersistentCharacterID& InCharacterId); // Function Tiger.TigerPersistentPlayerState.GetArchetypeDataForCharacterId // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c1170
	struct TArray<struct FString> GetAllQuestlineIdsOrdered(); // Function Tiger.TigerPersistentPlayerState.GetAllQuestlineIdsOrdered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c10f0
	struct UTigerQuest* GetActiveQuestWithId(struct FString InQuestlineId, struct FString InQuestId); // Function Tiger.TigerPersistentPlayerState.GetActiveQuestWithId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c0f70
	void GetActiveQuestIds(struct TArray<struct FTigerQuestIdentifier>& InOutActiveQuests); // Function Tiger.TigerPersistentPlayerState.GetActiveQuestIds // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c0e50
	bool FindOutfitSetup(struct TSoftClassPtr<UObject>& OutfitClassPath, struct FTigerPersistentOutfitSetup& OutfitSetup); // Function Tiger.TigerPersistentPlayerState.FindOutfitSetup // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14c0cf0
	void DeleteCharacter(struct FTigerPersistentCharacterID& InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.DeleteCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c0c60
	void CreateCharacter(struct FTigerPersistentPlayerCharacter& InCharacter); // Function Tiger.TigerPersistentPlayerState.CreateCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14c0b60
	void Client_UpdateSeasonConfig(struct FTigerSeasonConfig InSeasonConfig, struct FDateTime InServerTime, bool bInDefer); // Function Tiger.TigerPersistentPlayerState.Client_UpdateSeasonConfig // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x14c0a10
	void Client_UpdateRankConfig(struct UTigerRankConfigAsset* InRankConfig); // Function Tiger.TigerPersistentPlayerState.Client_UpdateRankConfig // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14c0980
	void Client_UpdateEventConfigStates(struct FTigerEventConfigClientState InEventConfig); // Function Tiger.TigerPersistentPlayerState.Client_UpdateEventConfigStates // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14c0840
	void Client_UpdateEventConfigData(struct FTigerEventConfigClientVisibleData InEventData); // Function Tiger.TigerPersistentPlayerState.Client_UpdateEventConfigData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14c0720
	void Client_UpdateChallengeOfCategory(enum class ETigerChallengeCategory InCategory, struct FTigerChallengeTypeID InChallengeStorageID, int32_t InNewValue); // Function Tiger.TigerPersistentPlayerState.Client_UpdateChallengeOfCategory // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14c0610
	void Client_SetMuteStatus(struct FTigerMuteInfo InMuteInfo); // Function Tiger.TigerPersistentPlayerState.Client_SetMuteStatus // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14c0560
	void Client_SeasonLevelGained(); // Function Tiger.TigerPersistentPlayerState.Client_SeasonLevelGained // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x14c0510
	void Client_RefreshPremiumCurrencyBalanceResponse(bool bInSuccess, uint64_t InBalance); // Function Tiger.TigerPersistentPlayerState.Client_RefreshPremiumCurrencyBalanceResponse // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14c0440
	void Client_PostUpdateChallenge(int32_t InNewValue, struct UTigerChallenge* InChallenge, enum class ETigerChallengeCategory InCategory); // Function Tiger.TigerPersistentPlayerState.Client_PostUpdateChallenge // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14c0330
	void Client_OnTransactionalPlayerDataUpdated(struct FTigerPersistentPlayerTransactionalData TransactionalData); // Function Tiger.TigerPersistentPlayerState.Client_OnTransactionalPlayerDataUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14c01c0
	void Client_OnSeasonProgressUpdated(struct FTigerPersistentPlayerTransactionalData InTransactionalData); // Function Tiger.TigerPersistentPlayerState.Client_OnSeasonProgressUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14c0050
	void Client_OnPlayerDataUpdated(struct FTigerPersistentPlayerData InPlayerData, struct FTigerPersistentPlayerCardData InUpdatedPlayerCardData, char InEnqueueFlags); // Function Tiger.TigerPersistentPlayerState.Client_OnPlayerDataUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14bfef0
	void Client_OnInitialPlayerDataReceived(); // Function Tiger.TigerPersistentPlayerState.Client_OnInitialPlayerDataReceived // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14bfed0
	void Client_OnCharacterUpdated(struct FTigerPersistentPlayerCharacter CharacterInfo); // Function Tiger.TigerPersistentPlayerState.Client_OnCharacterUpdated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14bfde0
	void Client_OnBuyStoreEntriesResponse(int32_t InClientPurchaseId, struct FTigerBuyStoreEntryResponsePayload InBuyResponse, struct FDateTime InSeasonStartDate); // Function Tiger.TigerPersistentPlayerState.Client_OnBuyStoreEntriesResponse // (Final|Net|NetReliableNative|Event|Private|HasDefaults|NetClient) // @ game+0x14bfca0
	void Client_NewQuestStarted(struct FString InQuestlineId); // Function Tiger.TigerPersistentPlayerState.Client_NewQuestStarted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14bfc00
	void Client_NewItemRecievedInInventory(struct TArray<struct FTigerItemId> InPersistentItemIds); // Function Tiger.TigerPersistentPlayerState.Client_NewItemRecievedInInventory // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14bfb60
	void Client_NewGrimoireEntryViewed(uint32_t InGrimoireEntryId); // Function Tiger.TigerPersistentPlayerState.Client_NewGrimoireEntryViewed // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14bfad0
	void Client_DeleteCharacterResponse(bool bInCharacterWasDeleted, struct FTigerPersistentCharacterID InCharacterSlot); // Function Tiger.TigerPersistentPlayerState.Client_DeleteCharacterResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14bfa00
	void Client_CreateCharacterResponse(bool bInCharacterWasCreated, struct FTigerPersistentPlayerCharacter InCharacter); // Function Tiger.TigerPersistentPlayerState.Client_CreateCharacterResponse // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14bf8b0
	void Client_BuyItemResponse(bool bInSuccess, struct FTigerItemId InItemId, struct FString InErrorString, int32_t InPurchaseId); // Function Tiger.TigerPersistentPlayerState.Client_BuyItemResponse // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14bf730
	void CheckVersionValidity(struct UObject* Callbacks); // Function Tiger.TigerPersistentPlayerState.CheckVersionValidity // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf6a0
	void CheckOnlinePrivileges(struct UObject* InCallbacks); // Function Tiger.TigerPersistentPlayerState.CheckOnlinePrivileges // (Final|Native|Public|BlueprintCallable) // @ game+0x14bf610
	void BuyStoreEntries(struct TArray<struct FTigerMetaStoreBuyPayloadElement>& InEntriesToBuy, struct FDelegate& InBuyDelegate); // Function Tiger.TigerPersistentPlayerState.BuyStoreEntries // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14bf4f0
	void BuyItemResultDelegate__DelegateSignature(bool bSuccess, struct FTigerItemId& InItemId, struct FString InErrorString); // DelegateFunction Tiger.TigerPersistentPlayerState.BuyItemResultDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void BuyItem(struct FTigerItemId& InItemId, struct FTigerItemId& InSoftCurrencyId, struct FDelegate& InDelegate); // Function Tiger.TigerPersistentPlayerState.BuyItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14bf390
};

// Class Tiger.TigerPingClientData
// Size: 0x90 (Inherited: 0x30)
struct UTigerPingClientData : UDataAsset {
	char pad_30[0x8]; // 0x30(0x08)
	struct UTigerPingBase* PingClass; // 0x38(0x08)
	struct ATigerPlayerState* OwningPlayerState; // 0x40(0x08)
	struct FTigerPingContext Context; // 0x48(0x10)
	char pad_58[0xc]; // 0x58(0x0c)
	struct FVector WorldLocation; // 0x64(0x0c)
	bool bIsLocalPlayerInterested; // 0x70(0x01)
	char pad_71[0x1f]; // 0x71(0x1f)

	bool IsPlayerInterested(char InPlayerGroupIndex); // Function Tiger.TigerPingClientData.IsPlayerInterested // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14c9a10
};

// Class Tiger.TigerPingBase
// Size: 0xf0 (Inherited: 0x30)
struct UTigerPingBase : UDataAsset {
	int32_t MaxConcurrentPings; // 0x30(0x04)
	bool bBecomesPermanentOnInterest; // 0x34(0x01)
	bool bInstanceSupportsHover; // 0x35(0x01)
	char pad_36[0x2]; // 0x36(0x02)
	float LifeTimeInSeconds; // 0x38(0x04)
	float MaxDistance; // 0x3c(0x04)
	float MaxActorDistanceFromMarker; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct UTigerPingWorldInstanceUI* WidgetClass; // 0x48(0x08)
	struct TArray<struct UTigerPingBase*> ExclusiveWithPingClasses; // 0x50(0x10)
	struct UTexture2D* Icon; // 0x60(0x08)
	struct UTexture2D* InterestedResponseIcon; // 0x68(0x08)
	struct UTexture2D* NotInterestedResponseIcon; // 0x70(0x08)
	struct FText Name; // 0x78(0x18)
	struct FText Description; // 0x90(0x18)
	struct FText InterestedResponse; // 0xa8(0x18)
	struct FText NotInterestedResponse; // 0xc0(0x18)
	struct UAkAudioEvent* NotificationAudioEvent; // 0xd8(0x08)
	struct UAkAudioEvent* VoiceAudioEvent; // 0xe0(0x08)
	bool bCanBeInCluster; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)

	bool ShouldRemovePing(struct AActor* InContextActor); // Function Tiger.TigerPingBase.ShouldRemovePing // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x14c9aa0
	struct FText GetTooltipName(struct FTigerPingContext& InContext); // Function Tiger.TigerPingBase.GetTooltipName // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14c9900
	struct FTigerPingNotificationUIData GetResponseText(struct FTigerPingContext& InContext, bool bInIsInterested); // Function Tiger.TigerPingBase.GetResponseText // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	struct FTigerPingNotificationUIData GetNotificationUIData(struct FTigerPingContext& InContext); // Function Tiger.TigerPingBase.GetNotificationUIData // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	struct FTigerPingIconData GetIconData(struct FTigerPingContext& InContext); // Function Tiger.TigerPingBase.GetIconData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x14c9840
	bool EvaluateWorldActor(struct ATigerPlayerState* InPlayerState, struct FHitResult& InHitResult, struct FTigerPingWorldNetData& OutPingData, struct AActor*& OutOverrideActor); // Function Tiger.TigerPingBase.EvaluateWorldActor // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerPingMarkerProxy
// Size: 0x70 (Inherited: 0x68)
struct UTigerPingMarkerProxy : UTigerMapMarkerProxy {
	struct UTigerPingClientData* PingData; // 0x68(0x08)
};

// Class Tiger.TigerPingSetupAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerPingSetupAsset : UDataAsset {
	struct UUserWidget* MapMarkerClass; // 0x30(0x08)
	struct UTigerPingWorldInstanceUI* WidgetClass; // 0x38(0x08)
	struct TArray<struct UTigerPingBase*> WorldPingTypes; // 0x40(0x10)
	struct UTigerPingBase* DoublePressPingClass; // 0x50(0x08)
	struct UTigerPingBase* DistanceFallbackPingClass; // 0x58(0x08)
	struct TArray<struct UTigerPingBase*> InGamePingTypes; // 0x60(0x10)
	struct TArray<struct UTigerPingBase*> PingBarkTypes; // 0x70(0x10)
	struct UTigerPingBase* PingBarkDowned; // 0x80(0x08)
	struct UTigerPingBase* PingBarkFullHealth; // 0x88(0x08)
	struct UTigerPingBase* PingBarkNeedHealing; // 0x90(0x08)
	struct UTigerPingBase* PingBarkMasquerade; // 0x98(0x08)
	struct UTigerPingBase* PingInventoryWantsMeleeWeapon; // 0xa0(0x08)
	struct UTigerPingBase* PingInventoryWantsRangedWeapon; // 0xa8(0x08)
	struct UTigerPingBase* PingInventoryWantsItem; // 0xb0(0x08)
	struct UTigerPingBase* PingLocation; // 0xb8(0x08)
	struct UTigerPingBase* PingEnemy; // 0xc0(0x08)
	struct UTigerPingBase* ClosestActorOverrides; // 0xc8(0x08)
};

// Class Tiger.TigerPingControllerComponent
// Size: 0x250 (Inherited: 0xb0)
struct UTigerPingControllerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnPingUsedInTutorial; // 0xb0(0x10)
	float MaxTraceLength; // 0xc0(0x04)
	float WheelHoldTime; // 0xc4(0x04)
	float DoublePressTimeout; // 0xc8(0x04)
	float PingHeightOffset; // 0xcc(0x04)
	float PingSpamPreventionTime; // 0xd0(0x04)
	struct FSharkTokenBucket InventoryPingBucket; // 0xd4(0x0c)
	struct ATigerPlayerController* OwningController; // 0xe0(0x08)
	struct UTigerPingCoordinator* PingCoordinator; // 0xe8(0x08)
	struct UTigerInWorldIconController* WorldIconController; // 0xf0(0x08)
	struct TArray<struct FTigerPingWrapper> ActivePings; // 0xf8(0x10)
	struct TArray<struct FTigerPingWrapper> ReusablePings; // 0x108(0x10)
	struct TArray<struct UTigerPingClientData*> UnresolvedActors; // 0x118(0x10)
	struct UTigerPingSetupAsset* PingSetup; // 0x128(0x08)
	struct TSoftObjectPtr<UTigerPingSetupAsset> SoftPingSetupPtr; // 0x130(0x28)
	char pad_158[0xe9]; // 0x158(0xe9)
	bool bEnablePingsInTutorial; // 0x241(0x01)
	char pad_242[0x2]; // 0x242(0x02)
	float HitItemSphereRadius; // 0x244(0x04)
	float VehicleHitForwardDot; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)

	bool TryExecuteFocusPingAction(); // Function Tiger.TigerPingControllerComponent.TryExecuteFocusPingAction // (Final|Native|Public|BlueprintCallable) // @ game+0x14d4980
	void SpawnLocalPing(struct FVector InWorldOffset, struct FTigerPingWorldNetData& InPing); // Function Tiger.TigerPingControllerComponent.SpawnLocalPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14d47b0
	void Server_SpawnWorldPing(struct FTigerPingWorldNetData InPing); // Function Tiger.TigerPingControllerComponent.Server_SpawnWorldPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d4530
	void Server_SpawnMapPing(struct UTigerPingBase* InPingClass, struct FVector_NetQuantize InWorldLocation); // Function Tiger.TigerPingControllerComponent.Server_SpawnMapPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d4400
	void Server_SpawnLootBoxItemPing(struct FTigerPingWorldNetData InPingData); // Function Tiger.TigerPingControllerComponent.Server_SpawnLootBoxItemPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d4330
	void Server_RespondToPing(struct FTigerUniquePingId InPingId, bool bInIsInterested); // Function Tiger.TigerPingControllerComponent.Server_RespondToPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3fe0
	void Server_PingClosestActorOfType(enum class ETigerClosestActorType InActorType); // Function Tiger.TigerPingControllerComponent.Server_PingClosestActorOfType // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3f30
	void Server_NotificationOnlyPing(struct FTigerPingNotificationNetData InPing); // Function Tiger.TigerPingControllerComponent.Server_NotificationOnlyPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3d70
	void Server_CancelPing(struct FTigerUniquePingId InPingId, bool InShouldDisplayNotification); // Function Tiger.TigerPingControllerComponent.Server_CancelPing // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3950
	void SendWorldPing(struct FTigerPingWorldNetData& InPingData); // Function Tiger.TigerPingControllerComponent.SendWorldPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14d3860
	void SendPingTypeFromCameraLocation(struct UTigerPingBase* InPingClass, bool InCancelInFocusPing); // Function Tiger.TigerPingControllerComponent.SendPingTypeFromCameraLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x14d3790
	void SendNotificationPing(struct FTigerPingNotificationNetData& InPingData); // Function Tiger.TigerPingControllerComponent.SendNotificationPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14d36f0
	void SendMapPing(struct UTigerPingBase* InPingClass, struct FVector& InWorldLocation); // Function Tiger.TigerPingControllerComponent.SendMapPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14d3620
	void SendLootBoxItemPing(struct FTigerPingWorldNetData InItemPingData, struct ATigerLootBox* InLootbox); // Function Tiger.TigerPingControllerComponent.SendLootBoxItemPing // (Final|Native|Public|BlueprintCallable) // @ game+0x14d3500
	void PingClosestActorOfType(enum class ETigerClosestActorType InActorType); // Function Tiger.TigerPingControllerComponent.PingClosestActorOfType // (Final|Native|Public|BlueprintCallable) // @ game+0x14d3270
	void OnTigerPingUsedInTutorial__DelegateSignature(); // DelegateFunction Tiger.TigerPingControllerComponent.OnTigerPingUsedInTutorial__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	struct TArray<struct FPointOfInterest> GetPointsOfInterestedByDistance(int32_t InMaxCount); // Function Tiger.TigerPingControllerComponent.GetPointsOfInterestedByDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1cb0
	void GetPingWheelItems(struct ATigerPlayerState* InPlayerState, struct TArray<struct FHitResult>& InHitResults, struct TArray<struct FTigerPingWorldNetData>& OutPingWheelItems); // Function Tiger.TigerPingControllerComponent.GetPingWheelItems // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	bool GetPingInfoFromActor(struct FHitResult& InHitResult, struct FTigerPingWorldNetData& OutPingData); // Function Tiger.TigerPingControllerComponent.GetPingInfoFromActor // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14d1b50
	void Client_SpawnWorldPing(struct FTigerUniquePingId InPingId, struct FTigerPingWorldNetData InPing); // Function Tiger.TigerPingControllerComponent.Client_SpawnWorldPing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d0f10
	void Client_SilentlyRemovePing(struct FTigerUniquePingId InPingId); // Function Tiger.TigerPingControllerComponent.Client_SilentlyRemovePing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d0e80
	void Client_RespondToPing(struct FTigerUniquePingId InPingId, struct FTigerPingResponse InResponse); // Function Tiger.TigerPingControllerComponent.Client_RespondToPing // (Net|Native|Event|Protected|NetClient) // @ game+0x14d0af0
	void Client_NotificationOnlyPing(struct FTigerPingNotificationNetData InPing, char InPlayerGroupIndex); // Function Tiger.TigerPingControllerComponent.Client_NotificationOnlyPing // (Net|Native|Event|Protected|NetClient) // @ game+0x14d0620
	void Client_CancelPing(struct FTigerUniquePingId InPingId, bool InShouldDisplayNotification); // Function Tiger.TigerPingControllerComponent.Client_CancelPing // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d0360
	void ClearAllPings(); // Function Tiger.TigerPingControllerComponent.ClearAllPings // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0250
	bool CanSendPings(); // Function Tiger.TigerPingControllerComponent.CanSendPings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d00b0
	void CancelPingAtIndex(int32_t InExistingPingIndex, bool InShouldDisplayCancelNotification); // Function Tiger.TigerPingControllerComponent.CancelPingAtIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x14d0180
};

// Class Tiger.TigerPingCoordinator
// Size: 0x48 (Inherited: 0x28)
struct UTigerPingCoordinator : UObject {
	struct TArray<struct FTigerPingCoordinatorEntry> ActivePings; // 0x28(0x10)
	struct TArray<struct UTigerPingControllerComponent*> GroupMemberPingControllers; // 0x38(0x10)
};

// Class Tiger.TigerPingWorldInstanceUI
// Size: 0x2d0 (Inherited: 0x2c8)
struct UTigerPingWorldInstanceUI : UTigerInWorldWidget {
	struct UTigerPingClientData* PingData; // 0x2c8(0x08)

	void OnPlayerResponse(struct FTigerPingResponse& InResponse); // Function Tiger.TigerPingWorldInstanceUI.OnPlayerResponse // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnPingDataUpdated(struct UTigerPingClientData* InPingData); // Function Tiger.TigerPingWorldInstanceUI.OnPingDataUpdated // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void ApplyIconDataToImage(struct UImage* InImageWidget, struct UTigerUIColorSet* InColorSet); // Function Tiger.TigerPingWorldInstanceUI.ApplyIconDataToImage // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfda0
};

// Class Tiger.TigerPingWheelWidget
// Size: 0x2c8 (Inherited: 0x2a8)
struct UTigerPingWheelWidget : UTigerWheelWidget {
	struct TArray<struct FTigerPingWorldNetData> CurrentPingTypeItems; // 0x2a8(0x10)
	struct UTigerPingClientData* CurrentPingResponseData; // 0x2b8(0x08)
	struct UTigerPingControllerComponent* PingController; // 0x2c0(0x08)
};

// Class Tiger.TigerPlatformEntitlementsManager
// Size: 0x70 (Inherited: 0x28)
struct UTigerPlatformEntitlementsManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UTigerConsoleService* ConsoleService; // 0x38(0x08)
	char pad_40[0x30]; // 0x40(0x30)

	void HandleOnEntitlementUpdateEvent(); // Function Tiger.TigerPlatformEntitlementsManager.HandleOnEntitlementUpdateEvent // (Final|Native|Private) // @ game+0x14d1ff0
};

// Class Tiger.TigerPlayer
// Size: 0x1000 (Inherited: 0x860)
struct ATigerPlayer : ATigerCharacter {
	char pad_860[0x8]; // 0x860(0x08)
	char PlayerVisibilityToNPC; // 0x868(0x01)
	enum class ETigerTraversalState CurrentTraversalState; // 0x869(0x01)
	char pad_86A[0x2]; // 0x86a(0x02)
	struct FVector GunOffset; // 0x86c(0x0c)
	struct UTigerSpringArmComponent* SpringArm; // 0x878(0x08)
	struct UTigerInventoryComponent* InventoryComponent; // 0x880(0x08)
	struct UTigerConsumablesComponent* ConsumablesComponent; // 0x888(0x08)
	struct UTigerAudioVisualizationSpawnerComponent* AudioVisualizationComponent; // 0x890(0x08)
	char pad_898[0x18]; // 0x898(0x18)
	struct UShapeComponent* InteractionVolumeComponent; // 0x8b0(0x08)
	struct UShapeComponent* TriggerVolumeComponent; // 0x8b8(0x08)
	struct UPostProcessComponent* FullscreenPostProcessComponent; // 0x8c0(0x08)
	struct UTigerDistrictComponent* DistrictComponent; // 0x8c8(0x08)
	struct UTigerCrowdAgentComponent* CrowdAgentComponent; // 0x8d0(0x08)
	struct UTigerBloodResonanceComponent* BloodResonanceComponent; // 0x8d8(0x08)
	struct UTigerEmotePlayerComponent* EmotePlayerComponent; // 0x8e0(0x08)
	struct UTigerUtilityPowerHSenseComponent* HSenseComponent; // 0x8e8(0x08)
	struct UTigerUtilityPowerHSenseComponent* HSenseClass; // 0x8f0(0x08)
	struct UTigerUtilityPowerBaseComponent* UtilityPowerComp; // 0x8f8(0x08)
	struct UTigerDisciplineComponent* DisciplineComponent; // 0x900(0x08)
	struct UTigerCharCustomizationComponent* CharacterCustomizationComponent; // 0x908(0x08)
	struct UTigerPlayerClanData* PlayerClan; // 0x910(0x08)
	struct TArray<struct UTigerPassiveConfig*> SelectedPerks; // 0x918(0x10)
	struct TMap<struct ATigerProjectile*, int8_t> InitialProjectileReserveCount; // 0x928(0x50)
	int8_t DefaultReservedProjectileCount; // 0x978(0x01)
	char pad_979[0x3]; // 0x979(0x03)
	float LastAirStartTime; // 0x97c(0x04)
	float LastAirEndTime; // 0x980(0x04)
	char pad_984[0x4]; // 0x984(0x04)
	struct FMulticastInlineDelegate OnGasDamageTaken; // 0x988(0x10)
	struct FMulticastInlineDelegate OnSelfReviveBlockedByRedGas; // 0x998(0x10)
	struct FMulticastInlineDelegate OnShieldBroken; // 0x9a8(0x10)
	char pad_9B8[0x18]; // 0x9b8(0x18)
	struct FMulticastInlineDelegate OnSilencedChanged; // 0x9d0(0x10)
	struct FMulticastInlineDelegate OnDiablerizeStateChanged; // 0x9e0(0x10)
	struct FMulticastInlineDelegate OnReviveStateChanged; // 0x9f0(0x10)
	struct FMulticastInlineDelegate OnPlayerEvent; // 0xa00(0x10)
	struct FMulticastInlineDelegate OnDamageDealt; // 0xa10(0x10)
	struct FMulticastInlineDelegate OnHealthChanged; // 0xa20(0x10)
	struct FMulticastInlineDelegate OnTraversalAction; // 0xa30(0x10)
	struct FMulticastInlineDelegate OnLifeStatusChanged; // 0xa40(0x10)
	char pad_A50[0x30]; // 0xa50(0x30)
	struct FMulticastInlineDelegate OnUpdateArchetypePassiveActiveState; // 0xa80(0x10)
	struct FMulticastInlineDelegate OnBeginPlay; // 0xa90(0x10)
	struct FMulticastInlineDelegate OnGroupMemberDied; // 0xaa0(0x10)
	struct FMulticastInlineDelegate OnSelectedPerksUpdated; // 0xab0(0x10)
	bool bExposePlayersInHeightenedSense; // 0xac0(0x01)
	char pad_AC1[0x7]; // 0xac1(0x07)
	struct UTigerPhysicalInteraction* DiablerizeInteractionClass; // 0xac8(0x08)
	struct UTigerPhysicalInteraction* ReviveInteractionClass; // 0xad0(0x08)
	struct FName LoopSectionName; // 0xad8(0x08)
	struct FName EndSectionName; // 0xae0(0x08)
	struct FName InterruptedSectionName; // 0xae8(0x08)
	struct FMulticastInlineDelegate SavedLocationAdded; // 0xaf0(0x10)
	struct FMulticastInlineDelegate OnKilledBy; // 0xb00(0x10)
	struct UAkAudioEvent* JumpAudioEvent; // 0xb10(0x08)
	float LeaveGameDestroyDelay; // 0xb18(0x04)
	bool bControllerDisconnected; // 0xb1c(0x01)
	char pad_B1D[0x1]; // 0xb1d(0x01)
	bool bAllowCollisionWithPlayersInElysium; // 0xb1e(0x01)
	char pad_B1F[0x1]; // 0xb1f(0x01)
	struct UTigerPowerKit* PowerKit; // 0xb20(0x08)
	float RecentDamageTaken; // 0xb28(0x04)
	char pad_B2C[0x4]; // 0xb2c(0x04)
	float RecentDamageDecayWaitDuration; // 0xb30(0x04)
	float RecentDamageDecayInitialWaitDuration; // 0xb34(0x04)
	float RecentDamageDecayRate; // 0xb38(0x04)
	char pad_B3C[0x8]; // 0xb3c(0x08)
	float InvulnerabilityDurationDowned; // 0xb44(0x04)
	float InvulnerabilityDurationRegenerated; // 0xb48(0x04)
	float InvulnerabilityDurationRevived; // 0xb4c(0x04)
	char pad_B50[0x10]; // 0xb50(0x10)
	float LocationHistorySaveDistanceSquared; // 0xb60(0x04)
	float LocationHistoryDurationSeconds; // 0xb64(0x04)
	bool bIsInvisibleByDodge; // 0xb68(0x01)
	bool bIsRecoveringFromDodge; // 0xb69(0x01)
	char pad_B6A[0x6]; // 0xb6a(0x06)
	struct USceneComponent* ProjectileSpawnRootRef; // 0xb70(0x08)
	struct UCameraComponent* Camera; // 0xb78(0x08)
	struct USkeletalMeshComponent* HolsteredWeaponMeshRef; // 0xb80(0x08)
	struct USkeletalMeshComponent* SecondaryHolsteredWeaponMeshRef; // 0xb88(0x08)
	char pad_B90[0x1]; // 0xb90(0x01)
	struct FTigerCompressedRotation CompressedCameraRotation; // 0xb91(0x02)
	char pad_B93[0xd]; // 0xb93(0x0d)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper> NpcThatCanSeePlayerServer; // 0xba0(0x10)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> NpcThatCanSeePlayerClient; // 0xbb0(0x10)
	struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> LastNpcsThatCantSeePlayerSent; // 0xbc0(0x10)
	char pad_BD0[0x8]; // 0xbd0(0x08)
	float LastNpcThatCanSeePlayerSyncTime; // 0xbd8(0x04)
	char pad_BDC[0x4]; // 0xbdc(0x04)
	struct UTigerPhysicalInteraction* PhysicalInteractionObject; // 0xbe0(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> OtherPhysicalInteractionPlayer; // 0xbe8(0x08)
	struct TArray<struct UTigerPassiveComponent*> PassiveComponents; // 0xbf0(0x10)
	struct TMap<struct UObject*, struct FTigerPassiveWithLogicArray> ClanPassivesMap; // 0xc00(0x50)
	struct FTigerCharacterStatModification CombinedPassiveStatChanges; // 0xc50(0xa8)
	struct UMaterialInterface* InvisibilityMaterial; // 0xcf8(0x08)
	struct UMaterialInstanceDynamic* InvisibilityMaterialInstance; // 0xd00(0x08)
	struct UTigerUIEnemyHealthBar* InWorldHealthBar; // 0xd08(0x08)
	float AirTimeRequiredForSuspiciousLanding; // 0xd10(0x04)
	struct FVector GroundBelowDeathLocation; // 0xd14(0x0c)
	bool bWasDiablerized; // 0xd20(0x01)
	char pad_D21[0x3]; // 0xd21(0x03)
	struct FName DiablerizeAnimationName; // 0xd24(0x08)
	struct FName GetDiablerizedAnimationName; // 0xd2c(0x08)
	struct FName ReviveTeammateAnimationName; // 0xd34(0x08)
	struct FName GettingRevivedAnimationName; // 0xd3c(0x08)
	char pad_D44[0x4]; // 0xd44(0x04)
	struct UParticleSystem* EnhancedReviveParticleEffect; // 0xd48(0x08)
	struct UParticleSystemComponent* RegenerateComponent; // 0xd50(0x08)
	struct FName RegenerateSpawnRateParam; // 0xd58(0x08)
	float RegenerateRemainingDownTimeMultiplier; // 0xd60(0x04)
	float EnhancedReviveParticleEffectLength; // 0xd64(0x04)
	char pad_D68[0x8]; // 0xd68(0x08)
	float TimeToGetInPositionForPhysicalInteraction; // 0xd70(0x04)
	float ReviveHealthPercentage; // 0xd74(0x04)
	float ReviveHealth; // 0xd78(0x04)
	bool bUsePercentReviveHealth; // 0xd7c(0x01)
	char pad_D7D[0x3]; // 0xd7d(0x03)
	float PhysicalInteractionTimeLeft; // 0xd80(0x04)
	char pad_D84[0x4]; // 0xd84(0x04)
	struct UAkAudioEvent* RevivedAudioEvent; // 0xd88(0x08)
	struct FName RegeneratingDoneAnimationName; // 0xd90(0x08)
	float DamageDurationForInterrupt; // 0xd98(0x04)
	float InterruptDamageLimits[0x2]; // 0xd9c(0x08)
	char EnabledInterruptDamageLimits; // 0xda4(0x01)
	char pad_DA5[0x3]; // 0xda5(0x03)
	float DownedRangedDamageTakenMultiplier; // 0xda8(0x04)
	float DownedMeleeDamageTakenMultiplier; // 0xdac(0x04)
	float DownedDisciplineDamageTakenMultiplier; // 0xdb0(0x04)
	float DownedRegenRatePerSecond; // 0xdb4(0x04)
	float DownedRegenRateReviveMultiplier; // 0xdb8(0x04)
	float DownedBaseHealth; // 0xdbc(0x04)
	float AuthDownedRegenValue; // 0xdc0(0x04)
	char pad_DC4[0x4]; // 0xdc4(0x04)
	float SyncedReviveEndTime; // 0xdc8(0x04)
	bool bDownedRegenShouldTickInsideHolyIncense; // 0xdcc(0x01)
	bool bCanRegenerateInsideHolyIncense; // 0xdcd(0x01)
	char pad_DCE[0x2]; // 0xdce(0x02)
	float EffectUpdateTimeAfterInsideHolyIncense; // 0xdd0(0x04)
	float HardLandingSpeed; // 0xdd4(0x04)
	int32_t OverlappingSuspiciousGuardVolumeCount; // 0xdd8(0x04)
	int32_t OverlappingThreatGuardVolumeCount; // 0xddc(0x04)
	int32_t PlayerStateId; // 0xde0(0x04)
	char pad_DE4[0x3c]; // 0xde4(0x3c)
	float IsInCloseQuartersCombatCooldownTime; // 0xe20(0x04)
	float EnemyOutlineDistanceSquared; // 0xe24(0x04)
	float EnemyOutlineCombatDistanceSquared; // 0xe28(0x04)
	float ApproximateDownedHeightOffset; // 0xe2c(0x04)
	char pad_E30[0x18]; // 0xe30(0x18)
	struct UAkAudioEvent* FallStartedAudioEvent; // 0xe48(0x08)
	struct UAkAudioEvent* FallEndedAudioEvent; // 0xe50(0x08)
	struct UAkAudioEvent* HitEnemyAudioEvent; // 0xe58(0x08)
	struct UAkAudioEvent* HitEnemyHeadAudioEvent; // 0xe60(0x08)
	struct UAkAudioEvent* ExtraHealthHitAudioEvent; // 0xe68(0x08)
	struct UAkAudioEvent* VentrueClanBuffHitAudioEvent; // 0xe70(0x08)
	struct UAkAudioEvent* PickUpRangedWeaponAudioEvent; // 0xe78(0x08)
	struct UAkAudioEvent* PickUpMeleeWeaponAudioEvent; // 0xe80(0x08)
	struct UAkAudioEvent* PickUpAmmoAudioEvent; // 0xe88(0x08)
	struct UAkAudioEvent* PickUpConsumableAudioEvent; // 0xe90(0x08)
	struct UAkAudioEvent* PickUpCollectibleAudioEvent; // 0xe98(0x08)
	struct UAkAudioEvent* StartCrouchAudioEvent; // 0xea0(0x08)
	struct UAkAudioEvent* EndCrouchAudioEvent; // 0xea8(0x08)
	struct UAkAudioEvent* HalfHealthBreakAudioEvent; // 0xeb0(0x08)
	struct UTigerPhysicalInteraction* PhysicalInteractionClass; // 0xeb8(0x08)
	struct TWeakObjectPtr<struct ATigerJudge> JudgeFeedTarget; // 0xec0(0x08)
	float JudgeFeedTimeSeconds; // 0xec8(0x04)
	char pad_ECC[0x4]; // 0xecc(0x04)
	struct TArray<struct FName> RangedHitMontageNames; // 0xed0(0x10)
	struct FName TransitionParameterName; // 0xee0(0x08)
	struct UStaticMeshComponent* TempProp; // 0xee8(0x08)
	struct TSet<struct ATigerCharacter*> CharmedCharacters; // 0xef0(0x50)
	bool bIsDowned; // 0xf40(0x01)
	char pad_F41[0x4f]; // 0xf41(0x4f)
	bool bIsInGhostMode; // 0xf90(0x01)
	char pad_F91[0x3f]; // 0xf91(0x3f)
	bool bIsScouted; // 0xfd0(0x01)
	bool bIsInAssaultedArea; // 0xfd1(0x01)
	char pad_FD2[0x17]; // 0xfd2(0x17)
	bool bShouldRestrictOffensiveActionsInElysium; // 0xfe9(0x01)
	char pad_FEA[0x16]; // 0xfea(0x16)

	float UpdateTimeSpentAtLocation(struct FString InLocationName, float InSecondsToAdd); // Function Tiger.TigerPlayer.UpdateTimeSpentAtLocation // (Final|Native|Public) // @ game+0x14d49b0
	void UpdateScoutedMeshVisiblity(float InVisibility); // Function Tiger.TigerPlayer.UpdateScoutedMeshVisiblity // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void UpdateHuntingKnifeEffectParameters(float StrengthFromDistance, float StrengthFromKillings); // Function Tiger.TigerPlayer.UpdateHuntingKnifeEffectParameters // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void UpdateHolyIncenseEffect(float InDeltaTime); // Function Tiger.TigerPlayer.UpdateHolyIncenseEffect // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x18b4070
	void UpdateHolyIncenseAudio(); // Function Tiger.TigerPlayer.UpdateHolyIncenseAudio // (BlueprintCosmetic|Event|Public|BlueprintEvent) // @ game+0x18b4070
	void UpdateArchetypePassiveActiveState(); // Function Tiger.TigerPlayer.UpdateArchetypePassiveActiveState // (Final|Native|Public|BlueprintCallable) // @ game+0x14d10e0
	void TriggerPlayerEvent(enum class ETigerPlayerEvent InEvent, struct ATigerCharacter* InEventTiedCharacter); // Function Tiger.TigerPlayer.TriggerPlayerEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x14d48b0
	void ShowUIFX(); // Function Tiger.TigerPlayer.ShowUIFX // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool ShouldUseFootIk(); // Function Tiger.TigerPlayer.ShouldUseFootIk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d4790
	bool ShouldShowRecentDamage(); // Function Tiger.TigerPlayer.ShouldShowRecentDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d4770
	void SetSelectedPerkInSlot(struct UTigerPerkItem* InPerkItem, int32_t InSlot); // Function Tiger.TigerPlayer.SetSelectedPerkInSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x14d46a0
	void SetDebugAppearanceItemById(struct FString InDatabaseId); // Function Tiger.TigerPlayer.SetDebugAppearanceItemById // (Final|Native|Public|BlueprintCallable) // @ game+0x1413530
	void SetDebugAppearance(struct FString AppearanceText); // Function Tiger.TigerPlayer.SetDebugAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x1413530
	void Server_UpdateCameraRotation(struct FTigerCompressedRotation CompressedRotation); // Function Tiger.TigerPlayer.Server_UpdateCameraRotation // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x14d4600
	void Server_SetSelectedPerkInSlot(uint64_t InPerkItemID, int32_t InSlot); // Function Tiger.TigerPlayer.Server_SetSelectedPerkInSlot // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14d4260
	void Server_SetDebugCharacterData(struct FString ClanText, int32_t PowerKitIndex, struct FString GenderText); // Function Tiger.TigerPlayer.Server_SetDebugCharacterData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14d4100
	void Server_PickUpItemFromCluster(struct ATigerItemCluster* InItemCluster, uint32_t InItemClusterUID); // Function Tiger.TigerPlayer.Server_PickUpItemFromCluster // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14d3e30
	void Server_GetItemFromLootUI(struct ATigerLootBox* LootBox, struct UTigerItemAsset* Item, int32_t Count, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerPlayer.Server_GetItemFromLootUI // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x14d3bd0
	void Server_Cheat_Walk(); // Function Tiger.TigerPlayer.Server_Cheat_Walk // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3b80
	void Server_Cheat_Ghost(bool bForce); // Function Tiger.TigerPlayer.Server_Cheat_Ghost // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3ac0
	void Server_Cheat_Fly(); // Function Tiger.TigerPlayer.Server_Cheat_Fly // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3a70
	void Server_AbortMeleeAnimation(); // Function Tiger.TigerPlayer.Server_AbortMeleeAnimation // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14d3900
	void SendDistanceAchievementData(); // Function Tiger.TigerPlayer.SendDistanceAchievementData // (Final|Native|Protected) // @ game+0x14d34e0
	void RemoveNPCThatLostSightOfPlayerFromList(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerPlayer.RemoveNPCThatLostSightOfPlayerFromList // (Final|Native|Public|BlueprintCallable) // @ game+0x14d3450
	void PlayVentrueClanBuffHitAudio(); // Function Tiger.TigerPlayer.PlayVentrueClanBuffHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x14d3430
	void PlayHitAudio(bool bInWasHeadshot, bool bInInEffectiveRange, struct ATigerCharacter* InHitCharacter); // Function Tiger.TigerPlayer.PlayHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x14d3310
	void PlayExtraHealthHitAudio(); // Function Tiger.TigerPlayer.PlayExtraHealthHitAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x14d32f0
	void OnWallJump(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnWallJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnWallGrindStarted(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnWallGrindStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnWallGrindEnded(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnWallGrindEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnTigerMovementModeChanged(enum class EMovementMode PrevMovementMode, enum class ETigerMovementMode PrevCustomMode, enum class EMovementMode NewMovementMode, enum class ETigerMovementMode NewCustomMode); // Function Tiger.TigerPlayer.OnTigerMovementModeChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnSuperIsReady(); // Function Tiger.TigerPlayer.OnSuperIsReady // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStoppedBeingGroupMember(); // Function Tiger.TigerPlayer.OnStoppedBeingGroupMember // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStoppedAimingCameraTransition(); // Function Tiger.TigerPlayer.OnStoppedAimingCameraTransition // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStartedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnStartedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStartedAimingCameraTransition(); // Function Tiger.TigerPlayer.OnStartedAimingCameraTransition // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnSlidingStarted(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnSlidingStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnSlidingEnded(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnSlidingEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnSlideJump(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnSlideJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnShieldDepleted(struct ATigerPlayer* InInstigator); // Function Tiger.TigerPlayer.OnShieldDepleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnRestart(); // Function Tiger.TigerPlayer.OnRestart // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnRep_TraversalState(); // Function Tiger.TigerPlayer.OnRep_TraversalState // (Final|Native|Public) // @ game+0x14d3250
	void OnRep_SyncedReviveEndTime(); // Function Tiger.TigerPlayer.OnRep_SyncedReviveEndTime // (Final|Native|Public) // @ game+0x14d3230
	void OnRep_PowerKit(); // Function Tiger.TigerPlayer.OnRep_PowerKit // (Native|Event|Public|BlueprintEvent) // @ game+0x14d3210
	void OnRep_PlayerClan(); // Function Tiger.TigerPlayer.OnRep_PlayerClan // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnRep_GotDowned(bool bWasDowned); // Function Tiger.TigerPlayer.OnRep_GotDowned // (Final|Native|Protected) // @ game+0x14d3180
	void OnRep_EnteredGhostMode(bool bWasInGhostMode); // Function Tiger.TigerPlayer.OnRep_EnteredGhostMode // (Final|Native|Protected) // @ game+0x13f3120
	void OnRainAmountSet(float RainAmount); // Function Tiger.TigerPlayer.OnRainAmountSet // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnNoLongerScouted(); // Function Tiger.TigerPlayer.OnNoLongerScouted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnModEquipped(); // Function Tiger.TigerPlayer.OnModEquipped // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnMatchStateChangedForLocalPlayerPawn(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerPlayer.OnMatchStateChangedForLocalPlayerPawn // (Final|Native|Public) // @ game+0x14d30b0
	void OnLocalSprintStarted(); // Function Tiger.TigerPlayer.OnLocalSprintStarted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnLocalSprintEnded(); // Function Tiger.TigerPlayer.OnLocalSprintEnded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnLocalExitedIndoor(); // Function Tiger.TigerPlayer.OnLocalExitedIndoor // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnLocalEnteredIndoor(); // Function Tiger.TigerPlayer.OnLocalEnteredIndoor // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnInterruptedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnInterruptedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnHardLanding(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnHardLanding // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnGotScouted(); // Function Tiger.TigerPlayer.OnGotScouted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnGotPlayerState(); // Function Tiger.TigerPlayer.OnGotPlayerState // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGotHitForAudio(struct FName& InSurfaceForAudio); // Function Tiger.TigerPlayer.OnGotHitForAudio // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnGoneBelowHalfHealth(); // Function Tiger.TigerPlayer.OnGoneBelowHalfHealth // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFinishedPhysicalInteraction(struct UTigerPhysicalInteraction* PhysInteractionClass, bool bIsTargetPlayer); // Function Tiger.TigerPlayer.OnFinishedPhysicalInteraction // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnExtraHealthDepleted(); // Function Tiger.TigerPlayer.OnExtraHealthDepleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnDoubleJump(struct FVector& Direction); // Function Tiger.TigerPlayer.OnDoubleJump // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnDodgeRecovery(bool IsControllingPlayer, struct FVector_NetQuantizeNormal& LaunchDirection, char DodgeStage); // Function Tiger.TigerPlayer.OnDodgeRecovery // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnDiablerizedFinished(); // Function Tiger.TigerPlayer.OnDiablerizedFinished // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDamageTaken(float DamageTaken, struct AActor* DamageInstigator); // Function Tiger.TigerPlayer.OnDamageTaken // (BlueprintCosmetic|Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnControllerDisconnected(); // Function Tiger.TigerPlayer.OnControllerDisconnected // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnClimbStarted(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnClimbStarted // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnClimbEnded(struct FVector& InVelocity); // Function Tiger.TigerPlayer.OnClimbEnded // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnBecameSpectator(); // Function Tiger.TigerPlayer.OnBecameSpectator // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnBecameGroupMember(); // Function Tiger.TigerPlayer.OnBecameGroupMember // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnAboutToBeHitByDisplacement(); // Function Tiger.TigerPlayer.OnAboutToBeHitByDisplacement // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Multicast_StopJudgeFeedAnimation(); // Function Tiger.TigerPlayer.Multicast_StopJudgeFeedAnimation // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14d3090
	void Multicast_ShieldDepleted(struct ATigerPlayer* InInstigator); // Function Tiger.TigerPlayer.Multicast_ShieldDepleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14d3000
	void Multicast_SetupForPhysicalInteraction(struct UTigerPhysicalInteraction* InSetupPhysicalInteractionClass, struct ATigerPlayer* InOtherPlayer); // Function Tiger.TigerPlayer.Multicast_SetupForPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14d2f30
	void Multicast_SetCharacterData(struct UTigerPlayerClanData* InNewClan, struct UTigerPowerKit* InNewPowerKit, struct TArray<struct UTigerPassiveConfig*> InNewPerks); // Function Tiger.TigerPlayer.Multicast_SetCharacterData // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14d2e00
	void Multicast_RespawnPlayerWithTransform(struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerPlayer.Multicast_RespawnPlayerWithTransform // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x14d2d20
	void Multicast_RespawnPlayer(); // Function Tiger.TigerPlayer.Multicast_RespawnPlayer // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14d2d00
	void Multicast_PlayJudgeFeedAnimation(); // Function Tiger.TigerPlayer.Multicast_PlayJudgeFeedAnimation // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14d2bc0
	void Multicast_PlayerDowned(char LastHitYawCompressed, char ActorYaw, bool bUseStaticDownEntryAnimation); // Function Tiger.TigerPlayer.Multicast_PlayerDowned // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14d2be0
	void Multicast_OnSuccessfulPhysicalInteraction(bool bWasTargetPlayer); // Function Tiger.TigerPlayer.Multicast_OnSuccessfulPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14d2b30
	void Multicast_OnRegenerationDone(); // Function Tiger.TigerPlayer.Multicast_OnRegenerationDone // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14d2b10
	void Multicast_OnItemPickedUp(struct UTigerItemAsset* InItemAsset); // Function Tiger.TigerPlayer.Multicast_OnItemPickedUp // (Net|Native|Event|NetMulticast|Public) // @ game+0x14d2a80
	void Multicast_OnDamageTaken(float DamageAmount, struct AActor* DamageInstigator); // Function Tiger.TigerPlayer.Multicast_OnDamageTaken // (Net|Native|Event|NetMulticast|Protected) // @ game+0x14d29b0
	void Multicast_InterruptPhysicalInteraction(); // Function Tiger.TigerPlayer.Multicast_InterruptPhysicalInteraction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14d2990
	void Multicast_GuardBreak(); // Function Tiger.TigerPlayer.Multicast_GuardBreak // (Net|Native|Event|NetMulticast|Public) // @ game+0x14d2970
	void Multicast_FastReplicationReceived(struct FTigerFastRepMovementData InRepMovement); // Function Tiger.TigerPlayer.Multicast_FastReplicationReceived // (Net|Native|Event|NetMulticast|Public) // @ game+0x14d28f0
	void Multicast_ExtraHealthDepleted(); // Function Tiger.TigerPlayer.Multicast_ExtraHealthDepleted // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14d28d0
	void Multicast_ApplyWeaponVisibility(struct UTigerWeapon* WeaponClassToShow); // Function Tiger.TigerPlayer.Multicast_ApplyWeaponVisibility // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x14d2840
	bool LocalValidateItemPickupFromLootUI(struct ATigerLootBox* LootBox, struct UTigerItemAsset* Item, int32_t Count); // Function Tiger.TigerPlayer.LocalValidateItemPickupFromLootUI // (Final|Native|Public|BlueprintCallable) // @ game+0x14d2730
	void LocalPlayerTick(float InDeltaSeconds); // Function Tiger.TigerPlayer.LocalPlayerTick // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsPlayingReviveAnim(bool bInIsTarget); // Function Tiger.TigerPlayer.IsPlayingReviveAnim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2690
	bool IsInPhysicalInteraction(); // Function Tiger.TigerPlayer.IsInPhysicalInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2640
	bool IsInInvulnerableState(); // Function Tiger.TigerPlayer.IsInInvulnerableState // (Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x14d2610
	bool IsInGhostMode(); // Function Tiger.TigerPlayer.IsInGhostMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d25f0
	bool IsIndoor(); // Function Tiger.TigerPlayer.IsIndoor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2670
	bool IsInDialogueInteraction(); // Function Tiger.TigerPlayer.IsInDialogueInteraction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d25c0
	bool IsGroupMember(struct ATigerPlayer* InOtherPlayer); // Function Tiger.TigerPlayer.IsGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2520
	bool IsGettingDiablerized(); // Function Tiger.TigerPlayer.IsGettingDiablerized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d24f0
	bool IsFeedingOnJudge(); // Function Tiger.TigerPlayer.IsFeedingOnJudge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d24c0
	bool IsExtendedGroupMember(struct ATigerPlayer* InOtherPlayer); // Function Tiger.TigerPlayer.IsExtendedGroupMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2420
	bool IsCharming(struct ATigerCharacter* Character); // Function Tiger.TigerPlayer.IsCharming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2380
	bool IsBeingRevived(); // Function Tiger.TigerPlayer.IsBeingRevived // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2350
	void IncrementShieldShaderCounter(); // Function Tiger.TigerPlayer.IncrementShieldShaderCounter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void HideUIFX(); // Function Tiger.TigerPlayer.HideUIFX // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool HaveEnhancedReviveSpeed(); // Function Tiger.TigerPlayer.HaveEnhancedReviveSpeed // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2320
	bool HasRecentlyLanded(float WithinSeconds, float MinimumAirTime); // Function Tiger.TigerPlayer.HasRecentlyLanded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2240
	bool HasPassiveByDataAsset(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.HasPassiveByDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d21a0
	bool HasPassive(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.HasPassive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d20d0
	bool HasMaxKindredCharmCount(); // Function Tiger.TigerPlayer.HasMaxKindredCharmCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d20a0
	bool HasBeenInAirFor(float MinimumAirTime); // Function Tiger.TigerPlayer.HasBeenInAirFor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d2010
	void HandleMatchSettingsReceived(); // Function Tiger.TigerPlayer.HandleMatchSettingsReceived // (Final|Native|Public) // @ game+0x14d1fd0
	void HandleAppearanceChange(); // Function Tiger.TigerPlayer.HandleAppearanceChange // (Final|Native|Protected) // @ game+0x14d1fb0
	void GroupMemberDied(); // Function Tiger.TigerPlayer.GroupMemberDied // (Final|Native|Public|BlueprintCallable) // @ game+0x14d1f90
	float GetTimeInAir(); // Function Tiger.TigerPlayer.GetTimeInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1f10
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerPlayer.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1ee0
	struct ATigerPlayerController* GetTigerPlayerController(); // Function Tiger.TigerPlayer.GetTigerPlayerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1eb0
	float GetRemainingDownedTime(); // Function Tiger.TigerPlayer.GetRemainingDownedTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1e80
	struct UActorComponent* GetPassiveLogicByDataAsset(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.GetPassiveLogicByDataAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1a70
	struct UActorComponent* GetPassiveLogic(struct UTigerPassiveConfig* InPassive); // Function Tiger.TigerPlayer.GetPassiveLogic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1960
	int32_t GetNumPerkSlots(); // Function Tiger.TigerPlayer.GetNumPerkSlots // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1930
	float GetJudgeFeedProgress(); // Function Tiger.TigerPlayer.GetJudgeFeedProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1900
	int8_t GetInitialProjectileReserveCountForClass(struct ATigerProjectile* InProjectileClass); // Function Tiger.TigerPlayer.GetInitialProjectileReserveCountForClass // (Final|Native|Public|Const) // @ game+0x14d1860
	struct FTigerInventoryStats GetCharacterInventoryStats(); // Function Tiger.TigerPlayer.GetCharacterInventoryStats // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1820
	void GetAllPerkDataForCurrentArchetype(struct TMap<struct UTigerPerkItem*, enum class ETigerArchetypePerkState>& OutPerkItems); // Function Tiger.TigerPlayer.GetAllPerkDataForCurrentArchetype // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d16e0
	void GetAllPerkDataForArchetype(enum class ETigerPowerKitType InPowerkitType, struct TMap<struct UTigerPerkItem*, enum class ETigerArchetypePerkState>& OutPerkItems); // Function Tiger.TigerPlayer.GetAllPerkDataForArchetype // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1560
	void EnableGhostMode(bool bGhostMode, bool bForce); // Function Tiger.TigerPlayer.EnableGhostMode // (Final|Native|Public|BlueprintCallable) // @ game+0x14d1490
	bool DownedRegenShouldTickInsideHolyIncense(); // Function Tiger.TigerPlayer.DownedRegenShouldTickInsideHolyIncense // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1470
	bool DiedHighAboveGround(); // Function Tiger.TigerPlayer.DiedHighAboveGround // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d1410
	void DecrementShieldShaderCounter(); // Function Tiger.TigerPlayer.DecrementShieldShaderCounter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void DebugSetSelectedPerkInSlot(struct FString InPerkItemName, int32_t InSlot); // Function Tiger.TigerPlayer.DebugSetSelectedPerkInSlot // (Final|Exec|Native|Public) // @ game+0x14d1290
	void Debug_Multicast_SendDummyData(struct TArray<int8_t> Data); // Function Tiger.TigerPlayer.Debug_Multicast_SendDummyData // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14d1370
	void DeactivateHeightenedSenses(); // Function Tiger.TigerPlayer.DeactivateHeightenedSenses // (Final|Native|Public|BlueprintCallable) // @ game+0x14d1270
	void Client_UpdateReviveEndTime(float InSyncedEndTime, bool bInIsInAssaultedArea); // Function Tiger.TigerPlayer.Client_UpdateReviveEndTime // (Net|Native|Event|Public|NetClient) // @ game+0x14d1190
	void Client_UpdateKindredCharmCount(int32_t InKindredCharmCount); // Function Tiger.TigerPlayer.Client_UpdateKindredCharmCount // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d1100
	void Client_UpdateArchetypePassiveActiveState(); // Function Tiger.TigerPlayer.Client_UpdateArchetypePassiveActiveState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d10e0
	void Client_SyncNpcsThatCanSeePlayer(struct TArray<struct FTigerNpcThatCanSeePlayerWrapper_Client> InNpcsThatCanSeePlayer, char InPlayerVisibilityToNpc); // Function Tiger.TigerPlayer.Client_SyncNpcsThatCanSeePlayer // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d1000
	void Client_SetVentrueOnePassiveActiveState(bool bInActive); // Function Tiger.TigerPlayer.Client_SetVentrueOnePassiveActiveState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0c50
	void Client_SetupForRevive(struct ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing); // Function Tiger.TigerPlayer.Client_SetupForRevive // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d0db0
	void Client_SetupForDiablerize(struct ATigerPlayer* OtherPlayer, uint16_t CompressedDesiredFacing); // Function Tiger.TigerPlayer.Client_SetupForDiablerize // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d0ce0
	void Client_SetAsScouted(float Time); // Function Tiger.TigerPlayer.Client_SetAsScouted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0bd0
	void Client_RemoveBestialTracking(struct APlayerState* Player); // Function Tiger.TigerPlayer.Client_RemoveBestialTracking // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0a60
	void Client_PostGunSound(struct UAkAudioEvent* InAudioEvent, struct FVector InSoundLocation); // Function Tiger.TigerPlayer.Client_PostGunSound // (Net|Native|Event|Public|HasDefaults|NetClient) // @ game+0x14d0990
	void Client_PlayerDowned(char LastHitYawCompressed, char ActorYaw, bool bUseStaticDownEntryAnimation); // Function Tiger.TigerPlayer.Client_PlayerDowned // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d0870
	void Client_OnTakeDamage(float NewHealth, float TotalDamageTaken, struct FDamageEvent DamageEvent, struct AActor* DamageCauser); // Function Tiger.TigerPlayer.Client_OnTakeDamage // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x14d0700
	void Client_KilledNpc(struct ATigerNPC* InNpc); // Function Tiger.TigerPlayer.Client_KilledNpc // (Net|Native|Event|Public|NetClient) // @ game+0x14d0590
	void Client_InterruptPhysicalInteraction(); // Function Tiger.TigerPlayer.Client_InterruptPhysicalInteraction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0570
	void Client_InitialBestialTrackingData(struct APlayerState* Player, struct TArray<struct FTigerPlayerSavedLocation> Locations); // Function Tiger.TigerPlayer.Client_InitialBestialTrackingData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0490
	void Client_HitPlayerGoneBelowHalfHealth(); // Function Tiger.TigerPlayer.Client_HitPlayerGoneBelowHalfHealth // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0470
	void Client_GuardBreak(); // Function Tiger.TigerPlayer.Client_GuardBreak // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0450
	void Client_GoneBelowHalfHealth(); // Function Tiger.TigerPlayer.Client_GoneBelowHalfHealth // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0430
	void Client_AddBestialTrackingData(struct APlayerState* Player, struct FTigerPlayerSavedLocation Location); // Function Tiger.TigerPlayer.Client_AddBestialTrackingData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0290
	void Client_AboutToBeHitByDisplacement(); // Function Tiger.TigerPlayer.Client_AboutToBeHitByDisplacement // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14d0270
	bool CanUseConsumable(struct UTigerConsumableAsset* InConsumable); // Function Tiger.TigerPlayer.CanUseConsumable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d00e0
	bool CanNPCSeePlayer(struct ATigerBaseNPC* TigerNPC, bool bIgnoreInvisibility); // Function Tiger.TigerPlayer.CanNPCSeePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x14cffe0
	bool CanEmote(); // Function Tiger.TigerPlayer.CanEmote // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cffb0
	bool CanBeRevivedBy(struct ATigerPlayer* InReviver); // Function Tiger.TigerPlayer.CanBeRevivedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cff10
	bool CanBeDiablerizedBy(struct ATigerPlayer* InDiablerist); // Function Tiger.TigerPlayer.CanBeDiablerizedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14cfe70
	void AddNPCThatSawPlayerToList(struct ATigerBaseNPC* InNpc); // Function Tiger.TigerPlayer.AddNPCThatSawPlayerToList // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfd10
	void ActivateHuntingKnifeEffect(bool bActivate); // Function Tiger.TigerPlayer.ActivateHuntingKnifeEffect // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void ActivateHeightenedSenses(); // Function Tiger.TigerPlayer.ActivateHeightenedSenses // (Final|Native|Public|BlueprintCallable) // @ game+0x14cfcf0
};

// Class Tiger.TigerActionBuffer
// Size: 0xb0 (Inherited: 0x28)
struct UTigerActionBuffer : UObject {
	float BufferTimes[0x11]; // 0x28(0x44)
	char MaxNumberOfBufferedActions; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct TArray<struct UTigerBufferedAction*> BufferedActions; // 0x70(0x10)
	struct TArray<struct UTigerBufferedAction*> QueuedActions; // 0x80(0x10)
	struct TWeakObjectPtr<struct ATigerPlayerController> Owner; // 0x90(0x08)
	char pad_98[0x18]; // 0x98(0x18)
};

// Class Tiger.TigerPlayerAnimInstance
// Size: 0x1170 (Inherited: 0x3c0)
struct UTigerPlayerAnimInstance : UTigerAnimInstance {
	struct UAnimMontage* CurrentDownedMontage; // 0x3c0(0x08)
	bool bSkipDownedTransition; // 0x3c8(0x01)
	char pad_3C9[0x3]; // 0x3c9(0x03)
	struct FTigerHandIkWallTraceData HandIkTraceDataWhenWallHanging; // 0x3cc(0x58)
	char pad_424[0x4]; // 0x424(0x04)
	struct TArray<struct FTigerAnimMetaData> CurrentMontageMetaData; // 0x428(0x10)
	struct TArray<struct UAnimMetaData*> CurrentAnimNodeMetaData; // 0x438(0x10)
	struct TArray<struct UAnimMetaData*> CurrentMetaDataFromProxy; // 0x448(0x10)
	struct UCurveFloat* CurrentTurnStartCurve; // 0x458(0x08)
	bool bIsEmoting; // 0x460(0x01)
	bool bIsJumping; // 0x461(0x01)
	bool bIsCrouching; // 0x462(0x01)
	bool bIsClimbing; // 0x463(0x01)
	bool bIsFalling; // 0x464(0x01)
	bool bIsSliding; // 0x465(0x01)
	bool bIsSprinting; // 0x466(0x01)
	bool bIsLedgeGrabbing; // 0x467(0x01)
	bool bWasSprintingWhenStartingJump; // 0x468(0x01)
	char pad_469[0x3]; // 0x469(0x03)
	float SprintMultiplier; // 0x46c(0x04)
	float ClimbPitch; // 0x470(0x04)
	bool bWasLastLandingHard; // 0x474(0x01)
	bool bMeleeSwingRecoveryHasDisabledRootMotion; // 0x475(0x01)
	bool bIsOnGroundDuringAerialAttack; // 0x476(0x01)
	char pad_477[0x1]; // 0x477(0x01)
	float Acceleration; // 0x478(0x04)
	float FloorHeightSensitivty; // 0x47c(0x04)
	char pad_480[0x4]; // 0x480(0x04)
	bool bIsProbablyTouchingFloor; // 0x484(0x01)
	bool bHasVanishBuff; // 0x485(0x01)
	bool bIsInCombat; // 0x486(0x01)
	bool bIsDowned; // 0x487(0x01)
	bool bIsInWallJump; // 0x488(0x01)
	bool bWallJumpIsAvailable; // 0x489(0x01)
	bool bWallJumpWasAvailable; // 0x48a(0x01)
	enum class ETigerDisciplinesEnum ActiveMontageDisciplineType; // 0x48b(0x01)
	bool bAllowRotationLerpDuringDisciplineMontage; // 0x48c(0x01)
	char pad_48D[0x3]; // 0x48d(0x03)
	int32_t CurrentJumpCount; // 0x490(0x04)
	struct FName DownedMontageNames[0x4]; // 0x494(0x20)
	struct FName StaticEntryToDownedMontageName; // 0x4b4(0x08)
	enum class ESharkFourWayDirection AirDashDirection; // 0x4bc(0x01)
	enum class ESharkFourWayDirection WallJumpDirection; // 0x4bd(0x01)
	enum class ESharkFourWayDirection WallJumpAnticipationDirection; // 0x4be(0x01)
	char pad_4BF[0x1]; // 0x4bf(0x01)
	float WallGrindRotationFromWallInDegrees; // 0x4c0(0x04)
	float CameraRelativeWallJumpCosineAngle; // 0x4c4(0x04)
	float WallJumpPlayerFacingYaw; // 0x4c8(0x04)
	float AirDashAngleInDegrees; // 0x4cc(0x04)
	enum class ETigerWallJumpAnimationState WallJumpAnimationState; // 0x4d0(0x01)
	bool bIsInTurnStart; // 0x4d1(0x01)
	bool bTurnStartIsOnCooldown; // 0x4d2(0x01)
	bool bAdjustClimbSpeedByAnimation; // 0x4d3(0x01)
	float SurfaceCompensationInterpSpeed; // 0x4d4(0x04)
	float SurfaceCompensationPitch; // 0x4d8(0x04)
	float SurfaceCompensationRoll; // 0x4dc(0x04)
	int32_t CurrentLodLevel; // 0x4e0(0x04)
	bool bIsFeeding; // 0x4e4(0x01)
	char pad_4E5[0x3]; // 0x4e5(0x03)
	float VelocityFrontBack; // 0x4e8(0x04)
	float VelocityLeftRight; // 0x4ec(0x04)
	float VelocityUpDown; // 0x4f0(0x04)
	float DirectionHor; // 0x4f4(0x04)
	float DirectionVer; // 0x4f8(0x04)
	bool bIsStandingOnGround; // 0x4fc(0x01)
	bool bIsMoving; // 0x4fd(0x01)
	bool bIsMovingOnGround; // 0x4fe(0x01)
	bool bIsInLowVault; // 0x4ff(0x01)
	bool bIsInTurnStartMetaData; // 0x500(0x01)
	bool bAllowSprintToRun; // 0x501(0x01)
	char pad_502[0x2]; // 0x502(0x02)
	float TimeSinceLastPlayerInput; // 0x504(0x04)
	float TimeSinceLastJump; // 0x508(0x04)
	float SmoothSpeed; // 0x50c(0x04)
	float SmoothSpeedSlow; // 0x510(0x04)
	struct FRotator CurrentCameraWorldRotation; // 0x514(0x0c)
	char pad_520[0xc]; // 0x520(0x0c)
	struct FRotator CameraDeltaRotation; // 0x52c(0x0c)
	float SlideAngle; // 0x538(0x04)
	float StartAngle; // 0x53c(0x04)
	float CameraYawDeltaSlideSlow; // 0x540(0x04)
	float RootBoneDeltaSmoother; // 0x544(0x04)
	float YawDelta; // 0x548(0x04)
	float YawDeltaSmooth; // 0x54c(0x04)
	char pad_550[0xc]; // 0x550(0x0c)
	float LeanIntensityStrength; // 0x55c(0x04)
	float LeanAngleMin; // 0x560(0x04)
	float LeanAngleMax; // 0x564(0x04)
	float ActivateVelocityLeanBlendFloat; // 0x568(0x04)
	struct FVector CurrentPlayerIntendedVelocity; // 0x56c(0x0c)
	char pad_578[0x18]; // 0x578(0x18)
	struct FVector StrafeLeanRootRotCurrent; // 0x590(0x0c)
	struct FVector StrafeLeanRootTransCurrent; // 0x59c(0x0c)
	struct FRotator StrafeLeanSpineCurrent; // 0x5a8(0x0c)
	struct FRotator StrafeLeanSpineCurrentThird; // 0x5b4(0x0c)
	struct FRotator StrafeLeanHeadCounterCurrent; // 0x5c0(0x0c)
	float SlidePitchInterpSpeed; // 0x5cc(0x04)
	float SlideSurfacePitch; // 0x5d0(0x04)
	bool bShouldUseFootIK; // 0x5d4(0x01)
	char pad_5D5[0x3]; // 0x5d5(0x03)
	struct FVector MinLimitsStanding; // 0x5d8(0x0c)
	struct FVector MinLimitsCrouching; // 0x5e4(0x0c)
	struct FVector MaxLimitsStanding; // 0x5f0(0x0c)
	struct FVector MaxLimitsCrouching; // 0x5fc(0x0c)
	char pad_608[0x30]; // 0x608(0x30)
	struct FName LeftFootBoneName; // 0x638(0x08)
	struct FName RightFootBoneName; // 0x640(0x08)
	float TraceLengthAboveFoot; // 0x648(0x04)
	float TraceLengthBelowFoot; // 0x64c(0x04)
	float TransformInterpSpeed; // 0x650(0x04)
	float RotationInterpSpeed; // 0x654(0x04)
	bool bShowTraces; // 0x658(0x01)
	char pad_659[0x3]; // 0x659(0x03)
	struct FVector LeftFootOffsetsTra; // 0x65c(0x0c)
	struct FRotator LeftFootOffsetsRot; // 0x668(0x0c)
	struct FVector RightFootOffsetsTra; // 0x674(0x0c)
	struct FRotator RightFootOffsetsRot; // 0x680(0x0c)
	struct FVector FootIKPelvisOffsetTra; // 0x68c(0x0c)
	int32_t MaxLOD; // 0x698(0x04)
	float LookAtIsInRangeThreshold; // 0x69c(0x04)
	float LookAtIsNotInRangeThreshold; // 0x6a0(0x04)
	float HorizontalLookAtLimit; // 0x6a4(0x04)
	bool bShouldUseLookAt; // 0x6a8(0x01)
	char pad_6A9[0x3]; // 0x6a9(0x03)
	float LookAtSpineOnOff; // 0x6ac(0x04)
	bool bLookAtInRange; // 0x6b0(0x01)
	bool bLookAtRightSide; // 0x6b1(0x01)
	char pad_6B2[0x2]; // 0x6b2(0x02)
	float LookAtVertical; // 0x6b4(0x04)
	float LookAtHorizontal; // 0x6b8(0x04)
	float LookAtHorizontalSlow; // 0x6bc(0x04)
	struct FRotator LookAtSpineRotator; // 0x6c0(0x0c)
	struct FRotator LookAtHeadRotator; // 0x6cc(0x0c)
	float LookAtHeadTiltAmount; // 0x6d8(0x04)
	bool bIsInMeleeSwing; // 0x6dc(0x01)
	bool bIsAimingWeapon; // 0x6dd(0x01)
	bool bIsHipFiring; // 0x6de(0x01)
	bool bIsUsingRangedWeapon; // 0x6df(0x01)
	bool bIsUsingMeleeWeapon; // 0x6e0(0x01)
	bool bAboutToCollideWithClimbableSurface; // 0x6e1(0x01)
	char pad_6E2[0x2]; // 0x6e2(0x02)
	float TimeUntilCollision; // 0x6e4(0x04)
	float WallCollisionAngle; // 0x6e8(0x04)
	struct FVector PlayerDesiredMovementDirection; // 0x6ec(0x0c)
	bool bHasMovementInput; // 0x6f8(0x01)
	char pad_6F9[0x3]; // 0x6f9(0x03)
	float TimeMoving; // 0x6fc(0x04)
	bool bNewStartAnimationAllowed; // 0x700(0x01)
	bool bNewStopAnimationAllowed; // 0x701(0x01)
	char pad_702[0x2]; // 0x702(0x02)
	struct FVector PlayerDesiredStartDirection; // 0x704(0x0c)
	float TurnStartAngle; // 0x710(0x04)
	struct FRotator StartCameraWorldRotation; // 0x714(0x0c)
	struct FVector PlayerDesiredStopDirection; // 0x720(0x0c)
	struct FVector LastPlayerDesiredMovementDirection; // 0x72c(0x0c)
	bool bShouldPlaySoftStop; // 0x738(0x01)
	bool bStopCrouchState; // 0x739(0x01)
	bool bShouldLeaveStart; // 0x73a(0x01)
	bool bStartCrouchState; // 0x73b(0x01)
	bool bIsStrafingBackwards; // 0x73c(0x01)
	char pad_73D[0x3]; // 0x73d(0x03)
	float StartAngleOffset; // 0x740(0x04)
	float PlayerDesiredStartDirectionWhole90; // 0x744(0x04)
	float PlayerDesiredStartDirectionRotOffsetDegree; // 0x748(0x04)
	struct FRotator PlayerDesiredStartDirectionRotOffset; // 0x74c(0x0c)
	struct FName StrafeHipRotationCurveName; // 0x758(0x08)
	float StrafeRotationOffset; // 0x760(0x04)
	float StrafeBackwardsDirectionSmooth; // 0x764(0x04)
	float StrafeForwardDirectionSmooth; // 0x768(0x04)
	float StrafeBackwardsDirection; // 0x76c(0x04)
	float StrafeForwardDirection; // 0x770(0x04)
	bool bLegCrossClearance; // 0x774(0x01)
	char pad_775[0x3]; // 0x775(0x03)
	float StrafeStepFrequencyMod; // 0x778(0x04)
	float ModifiedStrafePlayrate; // 0x77c(0x04)
	float StrafeWalkRunBlend; // 0x780(0x04)
	float WalkStrafePlayrate; // 0x784(0x04)
	float WalkStrafeScaled; // 0x788(0x04)
	float RunStrafePlayrate; // 0x78c(0x04)
	float RunStrafeScaled; // 0x790(0x04)
	float StepLengthModWalk; // 0x794(0x04)
	float StepLengthModRun; // 0x798(0x04)
	float StepLengthModWalkFwd; // 0x79c(0x04)
	float StepLengthModRunFwd; // 0x7a0(0x04)
	float StepLengthModWalkBwd; // 0x7a4(0x04)
	float StepLengthModRunBwd; // 0x7a8(0x04)
	bool bActivateNewStrafeScaler; // 0x7ac(0x01)
	char pad_7AD[0x3]; // 0x7ad(0x03)
	float WalkSpeed; // 0x7b0(0x04)
	float MinWalkSpeed; // 0x7b4(0x04)
	float MaxWalkSpeed; // 0x7b8(0x04)
	float RunSpeed; // 0x7bc(0x04)
	float MinRunSpeed; // 0x7c0(0x04)
	float MaxRunSpeed; // 0x7c4(0x04)
	struct FVector InAirLeaning; // 0x7c8(0x0c)
	float InAirLeaningHeightReverser; // 0x7d4(0x04)
	float InAirJumpLean; // 0x7d8(0x04)
	float FallVerticalValue; // 0x7dc(0x04)
	float SprintAngleWide; // 0x7e0(0x04)
	float SprintAngle; // 0x7e4(0x04)
	float SprintAngleSlow; // 0x7e8(0x04)
	float SprintAccelTimer; // 0x7ec(0x04)
	bool bSprintTime; // 0x7f0(0x01)
	char pad_7F1[0x3]; // 0x7f1(0x03)
	struct FVector FootIKPelvisOffsetTraCrouchSlope; // 0x7f4(0x0c)
	bool bFootIKPelvisOffsetTraCrouchSlopeActivate; // 0x800(0x01)
	char pad_801[0x3]; // 0x801(0x03)
	float CrouchSlopeHightOffset; // 0x804(0x04)
	bool bRecentlyChangedSet; // 0x808(0x01)
	bool bRecentlyChangedSetSingleFrameCheck; // 0x809(0x01)
	char pad_80A[0x2]; // 0x80a(0x02)
	float CharacterDeltaYawSmoothWallSlide; // 0x80c(0x04)
	bool bRotateL; // 0x810(0x01)
	bool bRotateR; // 0x811(0x01)
	char pad_812[0x2]; // 0x812(0x02)
	float RotateInPlaceAlpha; // 0x814(0x04)
	float RotateInPlacePlayRate; // 0x818(0x04)
	char pad_81C[0x4]; // 0x81c(0x04)
	struct TArray<enum class ETigerDisciplinesEnum> RotateInPlacePowersArray; // 0x820(0x10)
	char pad_830[0x8]; // 0x830(0x08)
	struct FVector SoaringLeapLeaningPelvisTrans; // 0x838(0x0c)
	struct FRotator SoaringLeapLeaningPelvisRot; // 0x844(0x0c)
	struct FRotator SoaringLeapLeaningSpineRot; // 0x850(0x0c)
	struct FRotator SoaringLeapLeaningHeadRot; // 0x85c(0x0c)
	bool bIsBlinded; // 0x868(0x01)
	char pad_869[0x3]; // 0x869(0x03)
	float IsBlindedWeight; // 0x86c(0x04)
	struct UObject* BlindingBuffClass; // 0x870(0x08)
	struct FName PowerAOAlphaCurveName; // 0x878(0x08)
	bool bIsAnyPowerActive; // 0x880(0x01)
	char pad_881[0x3]; // 0x881(0x03)
	float PowerAOAlpha; // 0x884(0x04)
	bool bShouldReturnToDownedIntro; // 0x888(0x01)
	char pad_889[0x4f]; // 0x889(0x4f)
	struct FName RotateinPlaceLeftSequenceName; // 0x8d8(0x08)
	struct FName RotateinPlaceRightSequenceName; // 0x8e0(0x08)
	struct FName ToDownedSequenceName; // 0x8e8(0x08)
	struct FName ToDownedFallSequenceName; // 0x8f0(0x08)
	struct FName DownedLandSequenceName; // 0x8f8(0x08)
	struct FName DownedHardLandSequenceName; // 0x900(0x08)
	struct FName DownedIdleSequenceName; // 0x908(0x08)
	struct FName AimSweepSequenceName; // 0x910(0x08)
	struct FName HipSweepSequenceName; // 0x918(0x08)
	struct FName SlideOutJumpAnimSequenceName; // 0x920(0x08)
	struct FName JumpAnimSequenceName; // 0x928(0x08)
	struct FName DoubleJumpAnimSequenceName; // 0x930(0x08)
	struct FName JumpLeftAnimSequenceName; // 0x938(0x08)
	struct FName CrouchIdleSequenceName; // 0x940(0x08)
	struct FName IdlePoseSequenceName; // 0x948(0x08)
	struct FName CrouchIdlePoseSequenceName; // 0x950(0x08)
	struct FName InBlindedSequenceName; // 0x958(0x08)
	struct FName IdleBlindedSequenceName; // 0x960(0x08)
	struct FName OutBlindedSequenceName; // 0x968(0x08)
	struct FName RunToSprintSequenceName; // 0x970(0x08)
	struct FName SprintSequenceName; // 0x978(0x08)
	struct FName WallJumpBackwardSequenceName; // 0x980(0x08)
	struct FName HardLandSequenceName; // 0x988(0x08)
	struct FName SlideSettleSequenceName; // 0x990(0x08)
	struct FName SlideNoiseSequenceName; // 0x998(0x08)
	struct FName WallSlideDetachFrontSequenceName; // 0x9a0(0x08)
	struct FName WallSlideDetachLeftSequenceName; // 0x9a8(0x08)
	struct FName WallSlideDetachRightSequenceName; // 0x9b0(0x08)
	struct FName IdleSequenceName; // 0x9b8(0x08)
	struct FName RecoilKickAdditiveSequenceName; // 0x9c0(0x08)
	struct FName RecoilKickHipRightAdditiveSequenceName; // 0x9c8(0x08)
	struct FName RecoilKickRightAdditiveSequenceName; // 0x9d0(0x08)
	struct FName RecoilKickHipLeftAdditiveSequenceName; // 0x9d8(0x08)
	struct FName RecoilKickLeftAdditiveSequqnceName; // 0x9e0(0x08)
	struct FName RecoilShakeAdditiveSequenceName; // 0x9e8(0x08)
	struct FName AimIdleADDSequenceName; // 0x9f0(0x08)
	struct FName AimFallADDSequenceName; // 0x9f8(0x08)
	struct FName AimLandAdditiveSequenceName; // 0xa00(0x08)
	struct FName LandAdditiveSequenceName; // 0xa08(0x08)
	struct FName LongFallLandAdditiveSequenceName; // 0xa10(0x08)
	struct FName DeathEndSequenceName; // 0xa18(0x08)
	struct FName DownedStopsBlendSpaceName; // 0xa20(0x08)
	struct FName DownedLocomotionBlendSpaceName; // 0xa28(0x08)
	struct FName StrafeAimAddForwardBlendSpaceName; // 0xa30(0x08)
	struct FName StrafeAimAddBackwardBlendSpaceName; // 0xa38(0x08)
	struct FName StrafeCrouchAimAddForwardBlendSpaceName; // 0xa40(0x08)
	struct FName StrafeCrouchAimAddBackwardBlendSpaceName; // 0xa48(0x08)
	struct FName StrafeStartsBlendSpaceName; // 0xa50(0x08)
	struct FName StrafeStartsCrouchedBlendSpaceName; // 0xa58(0x08)
	struct FName TurnStartsSet1BlendSpaceName; // 0xa60(0x08)
	struct FName TurnStartsSet2BlendSpaceName; // 0xa68(0x08)
	struct FName TurnStartsSet3BlendSpaceName; // 0xa70(0x08)
	struct FName TurnStartsSet4BlendSpaceName; // 0xa78(0x08)
	struct FName StrafeAddForwardBlendSpaceName; // 0xa80(0x08)
	struct FName StrafeBaseForwardBlendSpaceName; // 0xa88(0x08)
	struct FName StrafeAddBackwardBlendSpaceName; // 0xa90(0x08)
	struct FName StrafeBaseBackwardBlendSpaceName; // 0xa98(0x08)
	struct FName StrafeCrouchAddBackwardBlendSpaceName; // 0xaa0(0x08)
	struct FName StrafeCrouchBaseBackwardBlendSpaceName; // 0xaa8(0x08)
	struct FName StrafeCrouchAddForwardBlendSpaceName; // 0xab0(0x08)
	struct FName StrafeBaseCrouchForwardBlendSpaceName; // 0xab8(0x08)
	struct FName StrafeStopsBlendSpaceName; // 0xac0(0x08)
	struct FName FallLoopBlendSpaceName; // 0xac8(0x08)
	struct FName StrafeStopsCrouchBlendSpaceName; // 0xad0(0x08)
	struct FName ClimbBlendSpace1DName; // 0xad8(0x08)
	struct FName ClimbCurveBlendSpace1DName; // 0xae0(0x08)
	struct FName ClimbStartBlendSpace1DName; // 0xae8(0x08)
	struct FName ClimbStartCurveBlendSpace1DName; // 0xaf0(0x08)
	struct FName WallJumpLeftForwardBlendSpace1DName; // 0xaf8(0x08)
	struct FName WallJumpRightForwardBlendSpace1DName; // 0xb00(0x08)
	struct FName WallJumpLeftBackwardBlendSpace1DName; // 0xb08(0x08)
	struct FName WallJumpRightBackwardBlendSpace1DName; // 0xb10(0x08)
	struct FName SlideSweepBlendSpace1DName; // 0xb18(0x08)
	struct FName SlideSweepBackBlendSpace1DName; // 0xb20(0x08)
	struct FName WeaponHipOffsetBlendSpace1DName; // 0xb28(0x08)
	struct FName WeaponAimoffsetBlendSpace1DName; // 0xb30(0x08)
	struct FName StrafeStartForwardLeftFootBlendSpace1DName; // 0xb38(0x08)
	struct FName PowerAimOffsetBlendSpace1DName; // 0xb40(0x08)
	struct UBlendSpace1D* ClimbBlendSpace1D; // 0xb48(0x08)
	struct UBlendSpace1D* ClimbStartBlendSpace1D; // 0xb50(0x08)
	struct UBlendSpace1D* ClimbCurveBlendSpace1D; // 0xb58(0x08)
	struct UBlendSpace1D* SlideSweepBlendSpace1D; // 0xb60(0x08)
	struct UBlendSpace1D* SlideSweepBackBlendSpace1D; // 0xb68(0x08)
	struct UBlendSpace1D* ClimbStartCurveBlendSpace1D; // 0xb70(0x08)
	struct UBlendSpace1D* WallJumpRightForwardBlendSpace1D; // 0xb78(0x08)
	struct UBlendSpace1D* WallJumpRightBackwardBlendSpace1D; // 0xb80(0x08)
	struct UBlendSpace1D* WallJumpLeftBackwardBlendSpace1D; // 0xb88(0x08)
	struct UBlendSpace1D* WallJumpLeftForwardBlendSpace1D; // 0xb90(0x08)
	struct UBlendSpace1D* WeaponHipOffsetBlendSpace1D; // 0xb98(0x08)
	struct UBlendSpace1D* WeaponAimoffsetBlendSpace1D; // 0xba0(0x08)
	struct UBlendSpace1D* StrafeStartForwardLeftFootBlendSpace1D; // 0xba8(0x08)
	struct UBlendSpace1D* PowerAimOffsetBlendSpace1D; // 0xbb0(0x08)
	struct UBlendSpace* FallLoopBlendSpace; // 0xbb8(0x08)
	struct UBlendSpace* TurnStartsSet1BlendSpace; // 0xbc0(0x08)
	struct UBlendSpace* TurnStartsSet2BlendSpace; // 0xbc8(0x08)
	struct UBlendSpace* TurnStartsSet3BlendSpace; // 0xbd0(0x08)
	struct UBlendSpace* TurnStartsSet4BlendSpace; // 0xbd8(0x08)
	struct UBlendSpace* StrafeStartsBlendSpace; // 0xbe0(0x08)
	struct UBlendSpace* StrafeStopsBlendSpace; // 0xbe8(0x08)
	struct UBlendSpace* StrafeAddForwardBlendSpace; // 0xbf0(0x08)
	struct UBlendSpace* StrafeStopsCrouchBlendSpace; // 0xbf8(0x08)
	struct UBlendSpace* StrafeBaseForwardBlendSpace; // 0xc00(0x08)
	struct UBlendSpace* StrafeAddBackwardBlendSpace; // 0xc08(0x08)
	struct UBlendSpace* StrafeBaseBackwardBlendSpace; // 0xc10(0x08)
	struct UBlendSpace* StrafeAimAddForwardBlendSpace; // 0xc18(0x08)
	struct UBlendSpace* StrafeAimAddBackwardBlendSpace; // 0xc20(0x08)
	struct UBlendSpace* StrafeStartsCrouchedBlendSpace; // 0xc28(0x08)
	struct UBlendSpace* StrafeCrouchAddForwardBlendSpace; // 0xc30(0x08)
	struct UBlendSpace* StrafeBaseCrouchForwardBlendSpace; // 0xc38(0x08)
	struct UBlendSpace* StrafeCrouchAddBackwardBlendSpace; // 0xc40(0x08)
	struct UBlendSpace* StrafeCrouchBaseBackwardBlendSpace; // 0xc48(0x08)
	struct UBlendSpace* StrafeCrouchAimAddForwardBlendSpace; // 0xc50(0x08)
	struct UBlendSpace* StrafeCrouchAimAddBackwardBlendSpace; // 0xc58(0x08)
	struct UBlendSpace* DownedStopsBlendSpace; // 0xc60(0x08)
	struct UBlendSpace* DownedLocomotionStateBlendSpace; // 0xc68(0x08)
	struct UAnimSequence* HardLandSequence; // 0xc70(0x08)
	struct UAnimSequence* SlideSettleSequence; // 0xc78(0x08)
	struct UAnimSequence* SlideNoiseSequence; // 0xc80(0x08)
	struct UAnimSequence* DownedHardLandSequence; // 0xc88(0x08)
	struct UAnimSequence* DownedLandSequence; // 0xc90(0x08)
	struct UAnimSequence* ToDownedSequence; // 0xc98(0x08)
	struct UAnimSequence* DownedIdleSequence; // 0xca0(0x08)
	struct UAnimSequence* ToDownedFallSequence; // 0xca8(0x08)
	struct UAnimSequence* AimSweepSequence; // 0xcb0(0x08)
	struct UAnimSequence* HipSweepSequence; // 0xcb8(0x08)
	struct UAnimSequence* SlideOutJumpAnimSequence; // 0xcc0(0x08)
	struct UAnimSequence* JumpAnimSequence; // 0xcc8(0x08)
	struct UAnimSequence* DoubleJumpStateAnimSequence; // 0xcd0(0x08)
	struct UAnimSequence* JumpLeftAnimSequence; // 0xcd8(0x08)
	struct UAnimSequence* IdlePoseSequence; // 0xce0(0x08)
	struct UAnimSequence* CrouchIdleSequence; // 0xce8(0x08)
	struct UAnimSequence* CrouchIdlePoseSequence; // 0xcf0(0x08)
	struct UAnimSequence* InBlindedSequence; // 0xcf8(0x08)
	struct UAnimSequence* OutBlindedSequence; // 0xd00(0x08)
	struct UAnimSequence* IdleBlindedSequence; // 0xd08(0x08)
	struct UAnimSequence* SprintSequence; // 0xd10(0x08)
	struct UAnimSequence* RunToSprintSequence; // 0xd18(0x08)
	struct UAnimSequence* RotateInPlaceLeftSequence; // 0xd20(0x08)
	struct UAnimSequence* RotateInPlaceRightSequence; // 0xd28(0x08)
	struct UAnimSequence* WallJumpBackwardSequence; // 0xd30(0x08)
	struct UAnimSequence* WallSlideDetachFrontSequence; // 0xd38(0x08)
	struct UAnimSequence* WallSlideDetachRightSequence; // 0xd40(0x08)
	struct UAnimSequence* WallSlideDetachLeftSequence; // 0xd48(0x08)
	struct UAnimSequence* IdleSequence; // 0xd50(0x08)
	struct UAnimSequence* RecoilKickAdditiveSequence; // 0xd58(0x08)
	struct UAnimSequence* RecoilKickHipRightAdditiveSequence; // 0xd60(0x08)
	struct UAnimSequence* RecoilKickRightAdditiveSequence; // 0xd68(0x08)
	struct UAnimSequence* RecoilKickHipLeftAdditiveSequence; // 0xd70(0x08)
	struct UAnimSequence* RecoilKickLeftAdditiveSequqnce; // 0xd78(0x08)
	struct UAnimSequence* RecoilShakeAdditiveSequence; // 0xd80(0x08)
	struct UAnimSequence* AimIdleADDSequence; // 0xd88(0x08)
	struct UAnimSequence* AimFallADDSequence; // 0xd90(0x08)
	struct UAnimSequence* AimLandAdditiveSequence; // 0xd98(0x08)
	struct UAnimSequence* LandAdditiveSequence; // 0xda0(0x08)
	struct UAnimSequence* LongFallLandAdditiveSequence; // 0xda8(0x08)
	struct UAnimSequence* DeathEndSequence; // 0xdb0(0x08)
	struct ATigerPlayer* Player; // 0xdb8(0x08)
	struct USkeletalMeshComponent* SkeletalMesh; // 0xdc0(0x08)
	bool bIsDedicatedServer; // 0xdc8(0x01)
	bool bIsInElysium; // 0xdc9(0x01)
	bool bIsSimulatedProxy; // 0xdca(0x01)
	enum class ETigerGroundedStates GroundedStatus; // 0xdcb(0x01)
	enum class ETigerGroundedStates PreviousGroundedStatus; // 0xdcc(0x01)
	enum class ETigerWallSlideWallSide CurrentWallSlideWallSide; // 0xdcd(0x01)
	enum class ETigerWallSlideWallSide PreviousWallSlideWallSide; // 0xdce(0x01)
	char pad_DCF[0x1]; // 0xdcf(0x01)
	struct FVector RightHandIKHandLocation; // 0xdd0(0x0c)
	float RightHandIKToWallDistance; // 0xddc(0x04)
	bool bRightHandIKTraceSuccessful; // 0xde0(0x01)
	char pad_DE1[0x3]; // 0xde1(0x03)
	struct FVector LeftHandIKHandLocation; // 0xde4(0x0c)
	float LeftHandIKToWallDistance; // 0xdf0(0x04)
	bool bLeftHandIKTraceSuccessful; // 0xdf4(0x01)
	char pad_DF5[0x3]; // 0xdf5(0x03)
	struct UCurveFloat* WallGrindRemap; // 0xdf8(0x08)
	struct FTigerSlotAnimationAsDynamicMontageData AimAdditiveLandData; // 0xe00(0x28)
	struct FTigerSlotAnimationAsDynamicMontageData LandAdditiveData; // 0xe28(0x28)
	struct FTigerSlotAnimationAsDynamicMontageData LongFallLandAdditiveData; // 0xe50(0x28)
	struct FTigerWallSlideSideSpecificOffsets WallSlideRightHandIKZOffset; // 0xe78(0x0c)
	struct FTigerWallSlideSideSpecificOffsets WallSlideLeftHandIKZOffset; // 0xe84(0x0c)
	struct FTigerWallSlideSideSpecificOffsets WallLookAtUpperValues; // 0xe90(0x0c)
	struct FTigerWallSlideSideSpecificOffsets WallLookAtLowerValues; // 0xe9c(0x0c)
	struct FVector RightHandIKWallSoft; // 0xea8(0x0c)
	struct FVector LeftHandIKWallSoft; // 0xeb4(0x0c)
	struct FVector WallSlideIKOffsetRightHand; // 0xec0(0x0c)
	struct FVector WallSlideIKOffsetLeftHand; // 0xecc(0x0c)
	struct FVector WallSlideVelocity; // 0xed8(0x0c)
	struct FVector LookAtWallSlide; // 0xee4(0x0c)
	struct FVector DistanceToWallCompensation; // 0xef0(0x0c)
	struct FVector LeftHandWeaponTranslation; // 0xefc(0x0c)
	struct FVector LeftElbowWeaponTranslation; // 0xf08(0x0c)
	struct FVector RightHandWeaponTranslation; // 0xf14(0x0c)
	struct FVector RightElbowWeaponTranslation; // 0xf20(0x0c)
	struct FVector PelvisReloadOffset; // 0xf2c(0x0c)
	struct FVector WallSlideRightHandIKDefaultOffset; // 0xf38(0x0c)
	struct FVector WallSlideLeftHandIKDefaultOffset; // 0xf44(0x0c)
	struct FVector DistanceToWallCompensationRotationVector; // 0xf50(0x0c)
	struct FRotator WallSlideRotationOffsetRightHand; // 0xf5c(0x0c)
	struct FRotator WallSlideRotationOffsetLeftHand; // 0xf68(0x0c)
	struct FRotator LeftHandWeaponRotation; // 0xf74(0x0c)
	struct FRotator RightHandWeaponRotation; // 0xf80(0x0c)
	struct FVector2D WallSlideUpperMappingInputRange; // 0xf8c(0x08)
	struct FVector2D WallSlideUpperValueRangeMapping; // 0xf94(0x08)
	struct FVector2D WallSlideMappingRangeInputs; // 0xf9c(0x08)
	struct FVector2D WallSlideMappingRangeMapping; // 0xfa4(0x08)
	struct FVector2D WallSlideFromFrontLowerTransitionThresholds; // 0xfac(0x08)
	struct FVector2D WallSlideFromFrontUpperTransitionThresholds; // 0xfb4(0x08)
	struct FVector2D WallSlideFromLeftTransitionThresholds; // 0xfbc(0x08)
	struct FVector2D WallSlideFromRightTransitionThresholds; // 0xfc4(0x08)
	struct FVector2D WallSlideFromLeftUpperTransitionThresholds; // 0xfcc(0x08)
	struct FVector2D WallSlideFromRightLowerTransitionThresholds; // 0xfd4(0x08)
	struct FVector2D WallSlideLookAtInputRange; // 0xfdc(0x08)
	struct FVector2D WallSlideLookAtRangeMapping; // 0xfe4(0x08)
	struct FVector2D WallSlideLookAtZValueInputRange1; // 0xfec(0x08)
	struct FVector2D WallSlideLookAtZValueInputRange2; // 0xff4(0x08)
	struct FVector2D WallSlideTargetMultiplierInputRange; // 0xffc(0x08)
	struct FVector2D WallSlideTargetMultiplierRangeMapping; // 0x1004(0x08)
	struct FVector2D AimSweepInputRange; // 0x100c(0x08)
	struct FVector2D AimSweepRangeMapping; // 0x1014(0x08)
	struct FVector2D DynamicADDReloadAlphaRange; // 0x101c(0x08)
	struct FVector2D RangedWeaponCacheFalseBlendTimeRange; // 0x1024(0x08)
	struct FVector2D UpperBodyWeightTarget; // 0x102c(0x08)
	struct FName WeaponHipOffsetBlendSpaceName; // 0x1034(0x08)
	struct FName HipSweepBlendSpaceName; // 0x103c(0x08)
	struct FName WeaponAimOffsetBlendSpaceName; // 0x1044(0x08)
	struct FName AimSweepBlendSpaceName; // 0x104c(0x08)
	struct FName ReloadAdditiveOffsetCurveName; // 0x1054(0x08)
	struct FName LeftHandJointName; // 0x105c(0x08)
	struct FName LeftElbowJointName; // 0x1064(0x08)
	struct FName RightHandJointName; // 0x106c(0x08)
	struct FName RightElbowJointName; // 0x1074(0x08)
	struct FName FaceAnimSlotName00; // 0x107c(0x08)
	struct FName FaceAnimSlotName01; // 0x1084(0x08)
	struct FName FaceAnimSlotName02; // 0x108c(0x08)
	struct FName FaceAnimSlotName03; // 0x1094(0x08)
	char pad_109C[0x4]; // 0x109c(0x04)
	struct UAnimMetaData* TurnStartActiveClass; // 0x10a0(0x08)
	struct UAnimMetaData* StartIsActiveClass; // 0x10a8(0x08)
	struct UAnimMetaData* StopIsActiveClass; // 0x10b0(0x08)
	struct UAnimMetaData* WeaponIKClass; // 0x10b8(0x08)
	struct UAnimMetaData* PrimingMetaDataClass; // 0x10c0(0x08)
	float DynamicADDReloadAlpha; // 0x10c8(0x04)
	float TimeSinceWallSlideStateEntered; // 0x10cc(0x04)
	float WallSlideDirectionAttachInverser; // 0x10d0(0x04)
	float WallGrindAimOffset; // 0x10d4(0x04)
	float RangedWeaponCacheFalseBlendTime; // 0x10d8(0x04)
	float IsInReloadAlpha; // 0x10dc(0x04)
	float FireReadyTimeStamp; // 0x10e0(0x04)
	float RecoilShakeAlphaTarget; // 0x10e4(0x04)
	float RecoilPushBackAmount; // 0x10e8(0x04)
	float CrouchAimPelvisOffset; // 0x10ec(0x04)
	float UpperbodyWeight; // 0x10f0(0x04)
	float AimSweepFloat; // 0x10f4(0x04)
	float LeftHandIK; // 0x10f8(0x04)
	float RightHandIK; // 0x10fc(0x04)
	float ClimbAngle; // 0x1100(0x04)
	float ToClimbBlendTime; // 0x1104(0x04)
	float TimeFalling; // 0x1108(0x04)
	float TimeFallingForLongfallSlotAnimation; // 0x110c(0x04)
	float WasClimbingDelayTimer; // 0x1110(0x04)
	float ToClimbBlendTimeTarget; // 0x1114(0x04)
	float ToClimbBlendTimeInterSpeed; // 0x1118(0x04)
	float RightHandIKWallSoftInterSpeed; // 0x111c(0x04)
	float LeftHandIKWallSoftInterSpeed; // 0x1120(0x04)
	float WallSlideMappingRangeInputLowerValue; // 0x1124(0x04)
	float WallSlideMappingRangeMappingUpperValue; // 0x1128(0x04)
	float WallSlideVelocityInterpSpeed; // 0x112c(0x04)
	float WallSlideCharacterToWallRotationCutoff; // 0x1130(0x04)
	float LookAtWallSlideInterpSpeed; // 0x1134(0x04)
	float AdditiveLocomotionSpeedThreshold; // 0x1138(0x04)
	float AdditiveLocomotionLastInputThreshold; // 0x113c(0x04)
	float UpperbodyWeightInterpSpeed; // 0x1140(0x04)
	float ClampedDeltaTime; // 0x1144(0x04)
	bool bLowerBodyLayering; // 0x1148(0x01)
	bool bShouldUseADDLocomotion; // 0x1149(0x01)
	bool bIsInReload; // 0x114a(0x01)
	bool bRangedWeaponCacheBlend; // 0x114b(0x01)
	bool bActivateWallSlideDetach; // 0x114c(0x01)
	bool bCrouchSlidingReload; // 0x114d(0x01)
	bool bIsInPrimingAnimation; // 0x114e(0x01)
	bool bHasValidRangedAimOffsets; // 0x114f(0x01)
	bool bIsFiringWeapon; // 0x1150(0x01)
	bool bJumpGroupGate; // 0x1151(0x01)
	bool bStartIsActiveGate; // 0x1152(0x01)
	bool bStopIsActiveGate; // 0x1153(0x01)
	bool bLeftHandIKGate; // 0x1154(0x01)
	bool bRightHandIKGate; // 0x1155(0x01)
	bool bRecoilSystemGate; // 0x1156(0x01)
	bool bShouldUseAnimatedIK; // 0x1157(0x01)
	bool bWasClimbing; // 0x1158(0x01)
	bool bMovementStatusIsFalling; // 0x1159(0x01)
	char pad_115A[0x16]; // 0x115a(0x16)

	void UpdateYawDeltaSmoothVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateYawDeltaSmoothVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6f30
	void UpdateWasWallJumpAvailable(); // Function Tiger.TigerPlayerAnimInstance.UpdateWasWallJumpAvailable // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6f10
	void UpdateVelocityLeanVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateVelocityLeanVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6e90
	void UpdateStrafeVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateStrafeVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6e10
	void UpdateStartStopVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateStartStopVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6df0
	void UpdateSprintVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateSprintVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6d70
	void UpdateSoaringLeapVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateSoaringLeapVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6d50
	void UpdateSmoothSpeedVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateSmoothSpeedVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6cd0
	void UpdateSlideVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateSlideVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6c50
	void UpdateSingleFrameCheckVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateSingleFrameCheckVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6c30
	void UpdateRotateInPlace(float InDeltaTime); // Function Tiger.TigerPlayerAnimInstance.UpdateRotateInPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6bb0
	void UpdatePlayerVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdatePlayerVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6b30
	void UpdateMovementVariables(); // Function Tiger.TigerPlayerAnimInstance.UpdateMovementVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6b10
	void UpdateMeshCapsuleDiffForWallSlide(); // Function Tiger.TigerPlayerAnimInstance.UpdateMeshCapsuleDiffForWallSlide // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6af0
	void UpdateLookAtVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateLookAtVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6a70
	void UpdateLastPlayerInputVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateLastPlayerInputVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d69f0
	void UpdateIsAnyPowerActive(); // Function Tiger.TigerPlayerAnimInstance.UpdateIsAnyPowerActive // (Final|Native|Public|BlueprintCallable) // @ game+0x14d69d0
	void UpdateInAirVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateInAirVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6950
	void UpdateFootIKVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateFootIKVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d68d0
	void UpdateCrouchSlopePelivsOffsetVariables(float InDeltaSeconds); // Function Tiger.TigerPlayerAnimInstance.UpdateCrouchSlopePelivsOffsetVariables // (Final|Native|Public|BlueprintCallable) // @ game+0x14d6850
	void UpdateCheckIfBlinded(float InDeltaTime); // Function Tiger.TigerPlayerAnimInstance.UpdateCheckIfBlinded // (Final|Native|Public|BlueprintCallable) // @ game+0x14d67d0
	void OnWantsToStartRangedAttack(); // Function Tiger.TigerPlayerAnimInstance.OnWantsToStartRangedAttack // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsPlayingDisciplineMontage(); // Function Tiger.TigerPlayerAnimInstance.IsPlayingDisciplineMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d67a0
	bool IsAllowingRotationLerpDuringCurrentDisciplineMontage(); // Function Tiger.TigerPlayerAnimInstance.IsAllowingRotationLerpDuringCurrentDisciplineMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d6780
	void HandleWeaponIKMetaData(struct UAnimMetaData* InWeaponIKMetaData); // Function Tiger.TigerPlayerAnimInstance.HandleWeaponIKMetaData // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct FVector GetPlayerDesiredMovement(bool bShowDebug); // Function Tiger.TigerPlayerAnimInstance.GetPlayerDesiredMovement // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d66d0
	struct ATigerPlayer* GetPlayer(); // Function Tiger.TigerPlayerAnimInstance.GetPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14d66a0
	float GetBlendingInFirePoseTimeLeft(); // Function Tiger.TigerPlayerAnimInstance.GetBlendingInFirePoseTimeLeft // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x18b4070
	void GetAllActiveMetadata(struct TArray<struct UAnimMetaData*>& OutActiveMetaData); // Function Tiger.TigerPlayerAnimInstance.GetAllActiveMetadata // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14d65f0
	void ClearWallJumpAnimationState(); // Function Tiger.TigerPlayerAnimInstance.ClearWallJumpAnimationState // (Final|Native|Public|BlueprintCallable) // @ game+0x14d65d0
	void CalculateTurnInPlace(float InDeltaSeconds, float InAimYawDelta, bool bInCanEnterTurnInPlace, bool& bOutShouldTriggerTurnInPlace); // Function Tiger.TigerPlayerAnimInstance.CalculateTurnInPlace // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14d6460
	void CalculateFootOffsetTargets(struct FName& InFootBoneName, float InTraceLengthAboveFoot, float InTraceLengthBelowFoot, struct FVector& InMinLimits, struct FVector& InMaxLimits, enum class ETraceTypeQuery InTraceChannel, bool bInShowTraces, struct FRotator& OutFootRotation, struct FVector& OutFootOffset); // Function Tiger.TigerPlayerAnimInstance.CalculateFootOffsetTargets // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14d6180
};

// Class Tiger.TigerPlayerAppearanceCache
// Size: 0x290 (Inherited: 0x228)
struct ATigerPlayerAppearanceCache : AActor {
	struct UTigerCharCustomizationComponent* CharacterCustomizationComponent; // 0x228(0x08)
	struct UTigerCharacterMeshManager* MeshManager; // 0x230(0x08)
	struct USkeletalMeshComponent* MeshComponents[0xb]; // 0x238(0x58)
};

// Class Tiger.TigerPlayerBeingLoggedInToServer
// Size: 0xf8 (Inherited: 0x28)
struct UTigerPlayerBeingLoggedInToServer : UObject {
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x28(0x08)
	char pad_30[0xc8]; // 0x30(0xc8)
};

// Class Tiger.TigerPlayerBotsSubsystem
// Size: 0x80 (Inherited: 0x30)
struct UTigerPlayerBotsSubsystem : UGameInstanceSubsystem {
	char pad_30[0x50]; // 0x30(0x50)

	bool IsSpawningBot(); // Function Tiger.TigerPlayerBotsSubsystem.IsSpawningBot // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x14e1c20
};

// Class Tiger.TigerPlayerBotSubsystemSettings
// Size: 0xb0 (Inherited: 0x38)
struct UTigerPlayerBotSubsystemSettings : UDeveloperSettings {
	bool bUseSplitscreen; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float BotDifficulty; // 0x3c(0x04)
	float JumpingSpamDifficultyThresholdMin; // 0x40(0x04)
	float JumpingSpamDifficultyThresholdMax; // 0x44(0x04)
	float SlidingDifficultyThresholdMin; // 0x48(0x04)
	float SlidingDifficultyThresholdMax; // 0x4c(0x04)
	float ClanPowerDifficultyThresholdMin; // 0x50(0x04)
	float ClanPowerDifficultyThresholdMax; // 0x54(0x04)
	float ArchetypePowerDifficultyThresholdMin; // 0x58(0x04)
	float ArchetypePowerDifficultyThresholdMax; // 0x5c(0x04)
	float HealingDifficultyThreshold; // 0x60(0x04)
	float BotCombatTransitionDelayMin; // 0x64(0x04)
	float BotCombatTransitionDelayMax; // 0x68(0x04)
	float BotAccuracyMin; // 0x6c(0x04)
	float BotAccuracyMax; // 0x70(0x04)
	float MidHealFightOrFlightThreshold; // 0x74(0x04)
	float AttackedResponsePriorityDifficultyThresholdMax; // 0x78(0x04)
	float AttackedResponsePriorityDifficultyThresholdMin; // 0x7c(0x04)
	float TargetRandomnessDifficultyThresholdMax; // 0x80(0x04)
	float TargetRandomnessDifficultyThresholdMin; // 0x84(0x04)
	float CurrentTargetPriorityDifficultyThresholdMax; // 0x88(0x04)
	float CurrentTargetPriorityDifficultyThresholdMin; // 0x8c(0x04)
	float TargetingDiablerisersDifficultyThresholdMax; // 0x90(0x04)
	float TargetingDiablerisersDifficultyThresholdMin; // 0x94(0x04)
	float RangedWeaponThreatDifficultyThresholdMax; // 0x98(0x04)
	float RangedWeaponThreatDifficultyThresholdMin; // 0x9c(0x04)
	float RangedWeaponThreatStartFromDifficultyThreshold; // 0xa0(0x04)
	float MeleeWeaponThreatDifficultyThresholdMax; // 0xa4(0x04)
	float MeleeWeaponThreatDifficultyThresholdMin; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class Tiger.TigerBufferedActionBlock
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionBlock : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionCrouch
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionCrouch : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionDisciplineBase
// Size: 0x50 (Inherited: 0x48)
struct UTigerBufferedActionDisciplineBase : UTigerBufferedAction {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Tiger.TigerBufferedActionDisciplineArchetype
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineArchetype : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineArchetypeReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineArchetypeReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineClan
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineClan : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineClanReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineClanReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbility
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineWeaponAbility : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDisciplineWeaponAbilityReleased
// Size: 0x50 (Inherited: 0x50)
struct UTigerBufferedActionDisciplineWeaponAbilityReleased : UTigerBufferedActionDisciplineBase {
};

// Class Tiger.TigerBufferedActionDodge
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionDodge : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionJump
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionJump : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionMelee
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionMelee : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionRanged
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionRanged : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionReload
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionReload : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionSprint
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionSprint : UTigerBufferedAction {
};

// Class Tiger.TigerBufferedActionSwitchWeapon
// Size: 0x50 (Inherited: 0x48)
struct UTigerBufferedActionSwitchWeapon : UTigerBufferedAction {
	char pad_48[0x8]; // 0x48(0x08)
};

// Class Tiger.TigerBufferedActionToggleHSenses
// Size: 0x48 (Inherited: 0x48)
struct UTigerBufferedActionToggleHSenses : UTigerBufferedAction {
};

// Class Tiger.TigerPlayerCameraManager
// Size: 0x2940 (Inherited: 0x27c0)
struct ATigerPlayerCameraManager : APlayerCameraManager {
	float MinSpringArmLengthWhenLookingUp; // 0x27c0(0x04)
	float BaseTurnRate; // 0x27c4(0x04)
	float BaseLookUpRate; // 0x27c8(0x04)
	char pad_27CC[0x4]; // 0x27cc(0x04)
	struct UTigerCameraPreset* CameraPresetsAdditive[0x4]; // 0x27d0(0x20)
	struct UMatineeCameraShake* AdditiveCameraShakeInstances[0x4]; // 0x27f0(0x20)
	struct UMatineeCameraShake* CurrentPresetShakeBehaviour; // 0x2810(0x08)
	struct UTigerFullscreenFXManager* FullscreenFXManager; // 0x2818(0x08)
	struct UCurveFloat* RecoilResetCurve; // 0x2820(0x08)
	struct UCurveFloat* RecoilResetSpeedCurve; // 0x2828(0x08)
	float TimeBeforeRecoilReset; // 0x2830(0x04)
	float OverlapCheckInterval; // 0x2834(0x04)
	struct UCurveFloat* VerticalRecoilCurve; // 0x2838(0x08)
	struct UCurveFloat* HorizontalRecoilCurve; // 0x2840(0x08)
	struct ATigerPlayer* TigerPlayer; // 0x2848(0x08)
	struct ATigerPlayerController* TigerPlayerController; // 0x2850(0x08)
	char pad_2858[0x8]; // 0x2858(0x08)
	struct UCurveFloat* DefaultTransitionCurve; // 0x2860(0x08)
	struct UTigerCameraPreset* CameraPresetOverride; // 0x2868(0x08)
	struct UTigerCameraPreset* CameraPresetIndoorOverride; // 0x2870(0x08)
	struct UTigerSpringArmComponent* CurrentSpringArm; // 0x2878(0x08)
	struct UTigerCameraBehavior* CurrentCameraBehavior; // 0x2880(0x08)
	struct UTigerCameraPreset* PreviousCameraPreset; // 0x2888(0x08)
	char pad_2890[0x38]; // 0x2890(0x38)
	struct TArray<struct UTigerCameraBehavior*> CachedCameraBehaviors; // 0x28c8(0x10)
	struct TArray<struct UTigerAdditiveCameraBehavior*> AdditiveCameraBehaviors; // 0x28d8(0x10)
	char pad_28E8[0x58]; // 0x28e8(0x58)

	struct UCurveFloat* SelectPresetTransitionCurve(struct UTigerCameraPreset* InPreviousPreset, struct UTigerCameraPreset* InNewPreset); // Function Tiger.TigerPlayerCameraManager.SelectPresetTransitionCurve // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OverrideCameraPreset(struct UTigerCameraPreset* CameraPresetClass, float Duration, struct UTigerCameraPreset* CameraPresetClassIndoor); // Function Tiger.TigerPlayerCameraManager.OverrideCameraPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1f70
	void OnChangingCameraPreset(struct UTigerCameraPreset* InCurrentCameraPresetClass, struct UTigerCameraPreset* InNewCameraPresetClass); // Function Tiger.TigerPlayerCameraManager.OnChangingCameraPreset // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool HasActiveCameraAnimations(); // Function Tiger.TigerPlayerCameraManager.HasActiveCameraAnimations // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1770
	struct AActor* GetViewTargetBlueprint(); // Function Tiger.TigerPlayerCameraManager.GetViewTargetBlueprint // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1720
	void ForceFinishCurrentCameraTransition(); // Function Tiger.TigerPlayerCameraManager.ForceFinishCurrentCameraTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1370
	struct UTigerCameraPreset* EvaluateCameraPreset(); // Function Tiger.TigerPlayerCameraManager.EvaluateCameraPreset // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerPlayerClanData
// Size: 0x130 (Inherited: 0x30)
struct UTigerPlayerClanData : UDataAsset {
	struct FText DISPLAYNAME; // 0x30(0x18)
	enum class ETigerClan ClanType; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)
	struct UTexture2D* IconTexture; // 0x50(0x08)
	struct UTexture2D* LargeIconTexture; // 0x58(0x08)
	struct TSoftClassPtr<UObject> CharacterCreationStartingOutfitPath[0x2]; // 0x60(0x50)
	struct TArray<struct UTigerCharacterBodyTypeCustomization*> BodyTypeItems; // 0xb0(0x10)
	struct TArray<struct UTigerPowerKit*> PowerKits; // 0xc0(0x10)
	struct UTigerUtilityPowerBaseComponent* UtilityPower; // 0xd0(0x08)
	struct UTexture2D* UtilityPowerIcon; // 0xd8(0x08)
	struct USoundBase* StaggeredByAttackSound; // 0xe0(0x08)
	struct UMatineeCameraShake* FallShakeLowDrop; // 0xe8(0x08)
	struct UMatineeCameraShake* FallShakeHighDrop; // 0xf0(0x08)
	struct UTigerAnimationSetAsset* ClanAnimationSet[0x2]; // 0xf8(0x10)
	bool bBloodDropGlows; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float ClanSpecificDiablerizeOffsets[0x4]; // 0x10c(0x10)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct TArray<struct UTigerAnimationSetAsset*> AdditionalAnimationSets; // 0x120(0x10)
};

// Class Tiger.TigerItemCheatCommandsAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerItemCheatCommandsAsset : UDataAsset {
	struct TMap<struct FString, struct UTigerItemAsset*> Commands; // 0x30(0x50)
};

// Class Tiger.TigerPlayerController
// Size: 0xd00 (Inherited: 0x578)
struct ATigerPlayerController : APlayerController {
	struct FMulticastInlineDelegate OnPersistentPlayerInitialisedEvent; // 0x578(0x10)
	struct FMulticastInlineDelegate OnGhostModeSet; // 0x588(0x10)
	struct FMulticastInlineDelegate OnBeginPlay; // 0x598(0x10)
	struct FMulticastInlineDelegate OnPlayerStateCreated; // 0x5a8(0x10)
	struct FMulticastInlineDelegate OnClientDownedEnemyPlayer; // 0x5b8(0x10)
	struct FMulticastInlineDelegate OnCancelPsoCaching; // 0x5c8(0x10)
	struct FMulticastInlineDelegate OnShowClimbPrompt; // 0x5d8(0x10)
	struct FMulticastInlineDelegate OnHideClimbPrompt; // 0x5e8(0x10)
	struct FMulticastInlineDelegate OnClientChallengesCollectionCreated; // 0x5f8(0x10)
	char pad_608[0x60]; // 0x608(0x60)
	struct FMulticastInlineDelegate OnControllerConnectionChanged; // 0x668(0x10)
	struct FMulticastInlineDelegate OnCrossplaySettingLockChanged; // 0x678(0x10)
	struct ATigerLocalAIController* LocalAIController; // 0x688(0x08)
	struct ATigerLocalAIController* LocalAIControllerClass; // 0x690(0x08)
	struct ATigerLocalAIControllerBase* GameplayBenchmarkController; // 0x698(0x08)
	struct ATigerLocalAIControllerBase* GameplayBenchmarkControllerClass; // 0x6a0(0x08)
	char pad_6A8[0x18]; // 0x6a8(0x18)
	struct UTigerUserInputBinding* UserInputBindings; // 0x6c0(0x08)
	struct FMulticastInlineDelegate OnUseGamepadChanged; // 0x6c8(0x10)
	bool bSilentMusic; // 0x6d8(0x01)
	char pad_6D9[0x3]; // 0x6d9(0x03)
	int32_t RedGasAkEventID; // 0x6dc(0x04)
	int32_t CloseToRedGasAkEventID; // 0x6e0(0x04)
	char pad_6E4[0x4]; // 0x6e4(0x04)
	struct FMulticastInlineDelegate OnItemPickedUp; // 0x6e8(0x10)
	struct FMulticastInlineDelegate OnInventoryToggle; // 0x6f8(0x10)
	struct FMulticastInlineDelegate OnInitialLevelStreamingCompletedDelegate; // 0x708(0x10)
	char pad_718[0x8]; // 0x718(0x08)
	struct UTigerResurrectComponent* ResurrectComponent; // 0x720(0x08)
	struct ATigerClientInteractiveSpawner* ClientSpawner; // 0x728(0x08)
	struct FTigerPerformanceStates PerformanceStates; // 0x730(0x7c)
	char pad_7AC[0x4]; // 0x7ac(0x04)
	struct ASpectatorPawn* SpectatingClass; // 0x7b0(0x08)
	struct UTigerMapInfoDataAsset* MapInfoAsset; // 0x7b8(0x08)
	struct UUserWidget* PlayerMapMarkerClass; // 0x7c0(0x08)
	struct UTigerUserInputBinding* UserInputSettingsClass; // 0x7c8(0x08)
	struct UUserWidget* RevealedItemMapMarkerWidgetClass; // 0x7d0(0x08)
	struct UUserWidget* RevealedItemCompassObjectWidgetClass; // 0x7d8(0x08)
	struct ATigerWorldMarker* QuestMapMarkerClass; // 0x7e0(0x08)
	struct UTigerBuffDOT* CrossBowGasDamageForAchievement; // 0x7e8(0x08)
	float ControlRotationSpeedStandingStill; // 0x7f0(0x04)
	char pad_7F4[0x4]; // 0x7f4(0x04)
	struct UCurveFloat* ControlRotationSpeedMovingCurve; // 0x7f8(0x08)
	float ControlRotationSpeedMoving; // 0x800(0x04)
	float MinControlRotationSpeedMoving; // 0x804(0x04)
	float InstantControlRotationTimeThreshold; // 0x808(0x04)
	float CycleWeaponsHolsterHoldTime; // 0x80c(0x04)
	float SprintCancelTimeOnGamepad; // 0x810(0x04)
	float SprintGamepadInputLimit; // 0x814(0x04)
	float SprintGamepadInputAngle; // 0x818(0x04)
	char pad_81C[0x4]; // 0x81c(0x04)
	float RandomizedDamageScale; // 0x820(0x04)
	float MouseScrollWeaponChangeCooldown; // 0x824(0x04)
	char pad_828[0x4]; // 0x828(0x04)
	float TigerStuckTriggerZ; // 0x82c(0x04)
	float ClimbingInputZCutOff; // 0x830(0x04)
	float MinimumUpwardClimbAngle; // 0x834(0x04)
	float MaximumSidewaysClimbDeviation; // 0x838(0x04)
	float ClimbingOverHangZCutOff; // 0x83c(0x04)
	float ClimbingHalfAngleInputDifferenceAllowed; // 0x840(0x04)
	bool bOnlyStartClimbIfLookingAtWall; // 0x844(0x01)
	char pad_845[0x3]; // 0x845(0x03)
	struct UAkAudioEvent* TargetDownedAudioEvent; // 0x848(0x08)
	struct UAkAudioEvent* PlayerDownedAudioEvent; // 0x850(0x08)
	struct UAkAudioEvent* GuidingAudioEvent; // 0x858(0x08)
	struct UAkAudioEvent* DeathNotifierAkAudioEvent; // 0x860(0x08)
	float GuidingAudioCooldown; // 0x868(0x04)
	char pad_86C[0x4]; // 0x86c(0x04)
	struct UCurveFloat* GamepadCameraYawStrengthCurve; // 0x870(0x08)
	struct UCurveFloat* GamepadCameraPitchStrengthCurve; // 0x878(0x08)
	struct UCurveFloat* GamepadRangedCameraYawStrengthCurve; // 0x880(0x08)
	struct UCurveFloat* GamepadRangedCameraPitchStrengthCurve; // 0x888(0x08)
	struct UCurveFloat* GamepadAimingCameraYawStrengthCurve; // 0x890(0x08)
	struct UCurveFloat* GamepadAimingCameraPitchStrengthCurve; // 0x898(0x08)
	struct UCurveFloat* GamepadCameraYawAccelerationCurve; // 0x8a0(0x08)
	struct UCurveFloat* GamepadCameraPitchAccelerationCurve; // 0x8a8(0x08)
	struct UCurveFloat* GamepadRangedCameraYawAccelerationCurve; // 0x8b0(0x08)
	struct UCurveFloat* GamepadRangedCameraPitchAccelerationCurve; // 0x8b8(0x08)
	struct UCurveFloat* GamepadAimingCameraYawAccelerationCurve; // 0x8c0(0x08)
	struct UCurveFloat* GamepadAimingCameraPitchAccelerationCurve; // 0x8c8(0x08)
	struct UCurveFloat* CurrentGamepadInputCurve; // 0x8d0(0x08)
	struct UCurveFloat* GamepadInputCurveLinear; // 0x8d8(0x08)
	struct UCurveFloat* GamepadInputCurveExponential; // 0x8e0(0x08)
	struct UCurveFloat* GamepadInputCurveExponentialExtreme; // 0x8e8(0x08)
	struct UCurveFloat* GamepadInputCurveSCurve; // 0x8f0(0x08)
	struct UCurveFloat* GamepadInputCurveInvertedSCurve; // 0x8f8(0x08)
	float DisciplineWeaponAbilityTriggerWindow; // 0x900(0x04)
	float HeightenedSensesPadTriggerwindow; // 0x904(0x04)
	float ConsumableWheelTriggerWindow; // 0x908(0x04)
	char pad_90C[0x4]; // 0x90c(0x04)
	struct UForceFeedbackEffect* DamageTakenForceFeedback; // 0x910(0x08)
	float DamageTakenForceFeedbackCooldown; // 0x918(0x04)
	char pad_91C[0x4]; // 0x91c(0x04)
	struct UForceFeedbackEffect* DeathForceFeedback; // 0x920(0x08)
	struct UForceFeedbackEffect* DownedForceFeedback; // 0x928(0x08)
	struct UForceFeedbackEffect* SoftLandingForceFeedback; // 0x930(0x08)
	struct UForceFeedbackEffect* HeavyLandingForceFeedback; // 0x938(0x08)
	struct ATigerSpectatorPawn* TigerSpectatorPawn; // 0x940(0x08)
	float HeavyAttackTriggerTime; // 0x948(0x04)
	float HeavyAttackTriggerTimeGamepad; // 0x94c(0x04)
	enum class ETigerMusicAudioState MusicAudioState; // 0x950(0x01)
	enum class ETigerBlindedAudioState BlindedAudioState; // 0x951(0x01)
	enum class ETigerIndoorAudioState IndoorAudioState; // 0x952(0x01)
	enum class ETigerMainMenuAudioState MainMenuAudioState; // 0x953(0x01)
	enum class ETigerAmbienceAudioState AmbienceAudioState; // 0x954(0x01)
	enum class ETigerCombatAudioState CombatAudioState; // 0x955(0x01)
	enum class ETigerFeedingAudioState FeedingAudioState; // 0x956(0x01)
	enum class ETigerAimGlideAudioState AimGlideAudioState; // 0x957(0x01)
	enum class ETigerGameModeAudioState GameModeAudioState; // 0x958(0x01)
	char pad_959[0x3]; // 0x959(0x03)
	float AssaultBorderMusicDistance; // 0x95c(0x04)
	float RedGasLastWaveAssaultBorderMusicDistance; // 0x960(0x04)
	float RedGasLastStageAssaultBorderMusicDistance; // 0x964(0x04)
	float AmbientMusicTimer; // 0x968(0x04)
	float NoAmbientMusicTimer; // 0x96c(0x04)
	float NoAmbienceMusicTimerInterval; // 0x970(0x04)
	float AmbientMusicTimerInterval; // 0x974(0x04)
	struct TWeakObjectPtr<struct ATigerPaperDoll> PaperDoll; // 0x978(0x08)
	struct UTigerInteractionControllerComponent* InteractionControllerComponent; // 0x980(0x08)
	struct UTigerClientSeasonalRewardCollection* ClientSeasonalRewardCollection; // 0x988(0x08)
	struct UTigerClientChallengesCollection* ClientChallengesCollection; // 0x990(0x08)
	struct UTigerClientPlayerProgressionRewardCollection* ClientPlayerProgressionRewardCollection; // 0x998(0x08)
	struct UTigerThrallSystem* ThrallComponent; // 0x9a0(0x08)
	struct UTigerCollectibleSystem* CollectibleComponent; // 0x9a8(0x08)
	struct UTigerQuestSystem* QuestComponent; // 0x9b0(0x08)
	struct UTigerDamageFeedbackComponent* DamageFeedbackComponent; // 0x9b8(0x08)
	struct UTSSClientComponent* AntiCheatTssComponent; // 0x9c0(0x08)
	struct UTigerGameModeFeatureRespawn* RespawnFeature; // 0x9c8(0x08)
	struct UTigerNetworkGraphDelegates* NetworkGraphDelegates; // 0x9d0(0x08)
	enum class ETigerMusicAudioState OverrideMusicAudioState; // 0x9d8(0x01)
	char pad_9D9[0x7]; // 0x9d9(0x07)
	struct UTigerActionBuffer* ActionBufferClass; // 0x9e0(0x08)
	struct UTigerActionBuffer* ActionBuffer; // 0x9e8(0x08)
	char pad_9F0[0x10]; // 0x9f0(0x10)
	struct ATigerPlayer* TigerPlayerPawn; // 0xa00(0x08)
	char pad_A08[0x8]; // 0xa08(0x08)
	struct UTigerMapGameData* MapGameData; // 0xa10(0x08)
	struct UTigerInWorldIconController* InWorldIconController; // 0xa18(0x08)
	struct UTigerPingControllerComponent* PingControllerComponent; // 0xa20(0x08)
	struct UTigerContextualHelpComponent* ContextualHelpComponent; // 0xa28(0x08)
	struct UTigerEmoteControllerComponent* EmoteControllerComponent; // 0xa30(0x08)
	struct UTigerChatComponent* ChatComponent; // 0xa38(0x08)
	struct UTigerAimAssist* AimAssist; // 0xa40(0x08)
	struct UTigerGamepad* GamepadEffect; // 0xa48(0x08)
	char pad_A50[0x88]; // 0xa50(0x88)
	struct UTigerMapMarkerProxy* PlayerMapMarkerProxy; // 0xad8(0x08)
	char pad_AE0[0x8]; // 0xae0(0x08)
	struct UInputComponent* GhostInputComponent; // 0xae8(0x08)
	struct UInputComponent* SpectateInputComponent; // 0xaf0(0x08)
	struct UInputComponent* HUDInputComponent; // 0xaf8(0x08)
	struct ATigerWorldCompositionGrid* StreamingGrid; // 0xb00(0x08)
	char pad_B08[0x2]; // 0xb08(0x02)
	enum class ETigerWeaponSlot PreviouslyEquippedRangedSlot; // 0xb0a(0x01)
	char pad_B0B[0x41]; // 0xb0b(0x41)
	float MouseSidewaysSprintSafetyAngle; // 0xb4c(0x04)
	float PitchSensitivityModifier; // 0xb50(0x04)
	float YawSensitivityModifier; // 0xb54(0x04)
	float PitchAccelerationDeadZone; // 0xb58(0x04)
	float YawAccelerationDeadZone; // 0xb5c(0x04)
	float PitchRangedAccelerationDeadZone; // 0xb60(0x04)
	float YawRangedAccelerationDeadZone; // 0xb64(0x04)
	bool bUndoAccelerationInDeadZone; // 0xb68(0x01)
	char pad_B69[0xf]; // 0xb69(0x0f)
	struct TSoftObjectPtr<UTigerNPCCheatCommandsAsset> NPCCheatCommandsAsset; // 0xb78(0x28)
	struct UTigerNPCCheatCommandsAsset* NPCCheatCommands; // 0xba0(0x08)
	struct TSoftObjectPtr<UTigerItemCheatCommandsAsset> ItemCheatCommandsAsset; // 0xba8(0x28)
	struct UTigerItemCheatCommandsAsset* ItemCheatCommands; // 0xbd0(0x08)
	struct ATigerNPCInstantSpawner* NpcCheatSpawner; // 0xbd8(0x08)
	struct UTigerWheelWidget* CurrentWheelWidget; // 0xbe0(0x08)
	struct UTigerVendorComponent* ElysiumVendorComponent; // 0xbe8(0x08)
	char pad_BF0[0x60]; // 0xbf0(0x60)
	float ToggleAimBufferTime; // 0xc50(0x04)
	bool bPawnRotatesWithCameraWhileIdle; // 0xc54(0x01)
	bool bUseTurnInPlace; // 0xc55(0x01)
	bool bPrintRightGamepadAxis; // 0xc56(0x01)
	char pad_C57[0x19]; // 0xc57(0x19)
	struct FText KilledBloodHuntedPlayerText; // 0xc70(0x18)
	char pad_C88[0x14]; // 0xc88(0x14)
	float TimeUntilKeyIsHeld; // 0xc9c(0x04)
	float HoldTimeToOpenSettings; // 0xca0(0x04)
	char pad_CA4[0x14]; // 0xca4(0x14)
	struct TArray<struct TWeakObjectPtr<struct ATigerSHPBMarker>> DiscoveredSHPBMarkers; // 0xcb8(0x10)
	char pad_CC8[0x38]; // 0xcc8(0x38)

	void WaitForPersistantPlayerStateInitialisation(struct FDelegate OnLoaded); // Function Tiger.TigerPlayerController.WaitForPersistantPlayerStateInitialisation // (Final|Native|Protected|BlueprintCallable) // @ game+0x14e83a0
	void UseWeaponAbility(); // Function Tiger.TigerPlayerController.UseWeaponAbility // (Final|Native|Private|BlueprintCallable) // @ game+0x14e8380
	void TryReload(); // Function Tiger.TigerPlayerController.TryReload // (Final|Native|Private|BlueprintCallable) // @ game+0x14e8360
	void ToggleShowCombatStatus(); // Function Tiger.TigerPlayerController.ToggleShowCombatStatus // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerTrackLocomotionData(); // Function Tiger.TigerPlayerController.TigerTrackLocomotionData // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleServerGunSoundRpcs(); // Function Tiger.TigerPlayerController.TigerToggleServerGunSoundRpcs // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleOutlines(); // Function Tiger.TigerPlayerController.TigerToggleOutlines // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleElysiumMobility(); // Function Tiger.TigerPlayerController.TigerToggleElysiumMobility // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation); // Function Tiger.TigerPlayerController.TigerToggleDebugWallGrind // (Final|Exec|Native|Public) // @ game+0x14e81e0
	void TigerToggleCrosshairDebug(); // Function Tiger.TigerPlayerController.TigerToggleCrosshairDebug // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerToggleCharacterCard(); // Function Tiger.TigerPlayerController.TigerToggleCharacterCard // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerTestSpawnMechanic(); // Function Tiger.TigerPlayerController.TigerTestSpawnMechanic // (Final|Exec|Native|Public) // @ game+0x14e81c0
	void TigerTakeDamage(float DamageAmount); // Function Tiger.TigerPlayerController.TigerTakeDamage // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x14e8140
	void TigerSwitchCharacter(int32_t InCharacterSlot); // Function Tiger.TigerPlayerController.TigerSwitchCharacter // (Final|Exec|Native|Public) // @ game+0x14e80b0
	void TigerStuck(float DropHeightInMeters); // Function Tiger.TigerPlayerController.TigerStuck // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerStopServerProfiler(); // Function Tiger.TigerPlayerController.TigerStopServerProfiler // (Final|Exec|Native|Public) // @ game+0x14e8090
	void TigerStopServerNetworkProfiler(); // Function Tiger.TigerPlayerController.TigerStopServerNetworkProfiler // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerStartServerProfiler(float Duration); // Function Tiger.TigerPlayerController.TigerStartServerProfiler // (Final|Exec|Native|Public) // @ game+0x14e8010
	void TigerStartServerNetworkProfiler(float InDuration); // Function Tiger.TigerPlayerController.TigerStartServerNetworkProfiler // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerSpectate(); // Function Tiger.TigerPlayerController.TigerSpectate // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x14e7ff0
	void TigerSpawnBotsFromServer(uint32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.TigerSpawnBotsFromServer // (Final|Exec|Native|Public) // @ game+0x14e7f60
	void TigerSpawnBotsFromClient(uint32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.TigerSpawnBotsFromClient // (Final|Exec|Native|Public) // @ game+0x14e7ed0
	void TigerSkipSpawnCountdownTimer(); // Function Tiger.TigerPlayerController.TigerSkipSpawnCountdownTimer // (Final|Exec|Native|Public) // @ game+0x14e7eb0
	void TigerShowPlayers(int32_t InShowPlayers); // Function Tiger.TigerPlayerController.TigerShowPlayers // (Final|Exec|Native|Public) // @ game+0x14e7e20
	void TigerShowNPCToPlayerSightData(float InScreenDuration); // Function Tiger.TigerPlayerController.TigerShowNPCToPlayerSightData // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerShowJumpLength(float DebugDrawDuration); // Function Tiger.TigerPlayerController.TigerShowJumpLength // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413c00
	void TigerShowFreeRunningVolumes(); // Function Tiger.TigerPlayerController.TigerShowFreeRunningVolumes // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerShowDPS(); // Function Tiger.TigerPlayerController.TigerShowDPS // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerShowClimbPrompt__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerShowClimbPrompt__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerShowCAPs(float DebugDrawDuration); // Function Tiger.TigerPlayerController.TigerShowCAPs // (Final|Exec|Native|Public) // @ game+0x14e7da0
	void TigerSetServerRespawn(int32_t RespawnType); // Function Tiger.TigerPlayerController.TigerSetServerRespawn // (Final|Exec|Native|Public) // @ game+0x1413700
	void TigerSetSafeZoneMarginRelative(float InWidthRel, float InHeightRel); // Function Tiger.TigerPlayerController.TigerSetSafeZoneMarginRelative // (Final|Exec|Native|Public) // @ game+0x14e7cd0
	void TigerSetSafeZoneMarginPixel(float InWidthPix, float InHeightPix); // Function Tiger.TigerPlayerController.TigerSetSafeZoneMarginPixel // (Final|Exec|Native|Public) // @ game+0x14e7cd0
	void TigerSetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.TigerSetPlayerIsReadyToPlay // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerSetMuteAudio(bool bInShouldMute); // Function Tiger.TigerPlayerController.TigerSetMuteAudio // (Final|Exec|Native|Private) // @ game+0x14e7c40
	void TigerSetLocalTimeDilation(float InFactor); // Function Tiger.TigerPlayerController.TigerSetLocalTimeDilation // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerSetLocalPawnTimeDilation(float InFactor); // Function Tiger.TigerPlayerController.TigerSetLocalPawnTimeDilation // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerSetHolyIncenseSpeedMultiplier(float InSpeedMultiplier); // Function Tiger.TigerPlayerController.TigerSetHolyIncenseSpeedMultiplier // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerSetHolyIncenseElapsedTime(float InTotalElapsedTime); // Function Tiger.TigerPlayerController.TigerSetHolyIncenseElapsedTime // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerServerLogSignificance(); // Function Tiger.TigerPlayerController.TigerServerLogSignificance // (Final|Exec|Native|Public) // @ game+0x14e7c20
	void TigerServerConsoleExec(struct FString InExecString); // Function Tiger.TigerPlayerController.TigerServerConsoleExec // (Final|Exec|Native|Public) // @ game+0x1414560
	void TigerSendPlayerServerPose(float InInterval); // Function Tiger.TigerPlayerController.TigerSendPlayerServerPose // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerSavePlayerLocation(); // Function Tiger.TigerPlayerController.TigerSavePlayerLocation // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerRevive(); // Function Tiger.TigerPlayerController.TigerRevive // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerResurrectMember(float InOffsetX, float InOffsetY, float InOffsetZ); // Function Tiger.TigerPlayerController.TigerResurrectMember // (Final|Exec|Native|Public) // @ game+0x14e7b00
	void TigerRestoreMasquerade(); // Function Tiger.TigerPlayerController.TigerRestoreMasquerade // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerResetDialogues(); // Function Tiger.TigerPlayerController.TigerResetDialogues // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerResetDialogueCategories(); // Function Tiger.TigerPlayerController.TigerResetDialogueCategories // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerReinitializeDailyChallenges(); // Function Tiger.TigerPlayerController.TigerReinitializeDailyChallenges // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerRebindBoundConsoleCommand(struct FString NewConsoleCommand); // Function Tiger.TigerPlayerController.TigerRebindBoundConsoleCommand // (Final|Exec|Native|Public) // @ game+0x1414560
	void TigerPrintTraversalState(float InScreenTime); // Function Tiger.TigerPlayerController.TigerPrintTraversalState // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerPrintServerTickRate(); // Function Tiger.TigerPlayerController.TigerPrintServerTickRate // (Final|Exec|Native|Public) // @ game+0x14e7ae0
	void TigerPrintNumberOfPlayersInGame(); // Function Tiger.TigerPlayerController.TigerPrintNumberOfPlayersInGame // (Final|Exec|Native|Public) // @ game+0x14e7ac0
	void TigerPrintCurrentAnimationSetsUsed(float ScreenDuration); // Function Tiger.TigerPlayerController.TigerPrintCurrentAnimationSetsUsed // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerPlayerLocalBenchmarkEnable(bool bInNowEnabled); // Function Tiger.TigerPlayerController.TigerPlayerLocalBenchmarkEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x14e7a30
	void TigerPlayerLocalAIEnable(bool bInNowEnabled); // Function Tiger.TigerPlayerController.TigerPlayerLocalAIEnable // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x14e79a0
	void TigerOnTakenDamage__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerOnTakenDamage__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnCrossplaySettingLockChanged__DelegateSignature(bool bSettingIsLocked); // DelegateFunction Tiger.TigerPlayerController.TigerOnCrossplaySettingLockChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerNextSpawn(); // Function Tiger.TigerPlayerController.TigerNextSpawn // (Final|Exec|Native|Protected) // @ game+0xb64580
	void TigerLogState(bool bShouldLog); // Function Tiger.TigerPlayerController.TigerLogState // (Final|Exec|Native|Public) // @ game+0x13f3120
	void TigerLogAllSyncedMasqueradeInstances(float InScreenDuration); // Function Tiger.TigerPlayerController.TigerLogAllSyncedMasqueradeInstances // (Final|Exec|Native|Public) // @ game+0x1413c00
	void TigerLoadPlayerLocation(); // Function Tiger.TigerPlayerController.TigerLoadPlayerLocation // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerLoadLocalStoreConfig(enum class ETigerMetaStoreCategoryType InStoreCategoryType, struct FString InFilePath); // Function Tiger.TigerPlayerController.TigerLoadLocalStoreConfig // (Final|Exec|Native|Public) // @ game+0x14e78c0
	void TigerKickMe(); // Function Tiger.TigerPlayerController.TigerKickMe // (Final|Exec|Native|Public) // @ game+0x14e78a0
	void TigerHideClimbPrompt__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerHideClimbPrompt__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerGetNpcCount(); // Function Tiger.TigerPlayerController.TigerGetNpcCount // (Final|Exec|Native|Public) // @ game+0x14e7880
	void TigerGetMovingNpcCount(); // Function Tiger.TigerPlayerController.TigerGetMovingNpcCount // (Final|Exec|Native|Public) // @ game+0x14e7860
	void TigerFreeze(double InSeconds); // Function Tiger.TigerPlayerController.TigerFreeze // (Final|Exec|Native|Public) // @ game+0x14e77e0
	void TigerFakeMatchmakingReady(int32_t InGameModeIndex); // Function Tiger.TigerPlayerController.TigerFakeMatchmakingReady // (Final|Exec|Native|Public) // @ game+0x14e7750
	void TigerFakeLaunchActivity(struct FString InSoloOrGroup); // Function Tiger.TigerPlayerController.TigerFakeLaunchActivity // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerEndMatch(); // Function Tiger.TigerPlayerController.TigerEndMatch // (Final|Exec|Native|Public) // @ game+0x14e7730
	void TigerEnableServerAutoStats(); // Function Tiger.TigerPlayerController.TigerEnableServerAutoStats // (Final|Exec|Native|Public) // @ game+0x14e7710
	void TigerDumpLocomotionData(); // Function Tiger.TigerPlayerController.TigerDumpLocomotionData // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerDisableGamepad(); // Function Tiger.TigerPlayerController.TigerDisableGamepad // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerDeleteCharacterSlot(char InCharacterSlot); // Function Tiger.TigerPlayerController.TigerDeleteCharacterSlot // (Final|Exec|Native|Public) // @ game+0x14e7690
	void TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime); // Function Tiger.TigerPlayerController.TigerDebugTraversalStates // (Final|Exec|Native|Public) // @ game+0x14e7560
	void TigerDebugPrintRootMotionFlags(); // Function Tiger.TigerPlayerController.TigerDebugPrintRootMotionFlags // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerDebugPreMatchState(); // Function Tiger.TigerPlayerController.TigerDebugPreMatchState // (Final|Exec|Native|Public) // @ game+0x14e7540
	void TigerDebugPlayerProjectilePooling(int32_t InShouldShowPoolMovements); // Function Tiger.TigerPlayerController.TigerDebugPlayerProjectilePooling // (Final|Exec|Native|Public) // @ game+0x14e74b0
	void TigerDebugLoadingStates(); // Function Tiger.TigerPlayerController.TigerDebugLoadingStates // (Final|Exec|Native|Public) // @ game+0x14e7490
	void TigerDebugHolyIncense(); // Function Tiger.TigerPlayerController.TigerDebugHolyIncense // (Final|Exec|Native|Public) // @ game+0x14e7470
	void TigerDebugGameFlowStates(); // Function Tiger.TigerPlayerController.TigerDebugGameFlowStates // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime); // Function Tiger.TigerPlayerController.TigerDebugDrawNpcMovementRestrictionBounds // (Final|Exec|Native|Public) // @ game+0x14e73f0
	void TigerDebugCharacterSpeed(); // Function Tiger.TigerPlayerController.TigerDebugCharacterSpeed // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0xb64580
	void TigerDebugCharacterPath(float Duration); // Function Tiger.TigerPlayerController.TigerDebugCharacterPath // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1413c00
	void TigerDeactivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.TigerDeactivateMasqueradeConsequence // (Final|Exec|Native|Public) // @ game+0x1413530
	void TigerCancelPsoCaching__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.TigerCancelPsoCaching__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerCameraUrl(); // Function Tiger.TigerPlayerController.TigerCameraUrl // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerBuildVersion(); // Function Tiger.TigerPlayerController.TigerBuildVersion // (Final|Exec|Native|Public) // @ game+0x14e73d0
	void TigerBuildScreenshotMap(); // Function Tiger.TigerPlayerController.TigerBuildScreenshotMap // (Final|Exec|Native|Public) // @ game+0x14e73b0
	void TigerBotGodAll(bool InGod); // Function Tiger.TigerPlayerController.TigerBotGodAll // (Final|Exec|Native|Public) // @ game+0x14e7320
	void TigerBotGod(int32_t InBotIndex, bool InGod); // Function Tiger.TigerPlayerController.TigerBotGod // (Final|Exec|Native|Public) // @ game+0x14e7250
	void TigerBecomeBloodhunted(); // Function Tiger.TigerPlayerController.TigerBecomeBloodhunted // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerBackendUrl(); // Function Tiger.TigerPlayerController.TigerBackendUrl // (Final|Exec|Native|Public) // @ game+0x14e7230
	void TigerAllBecomeBloodhunted(); // Function Tiger.TigerPlayerController.TigerAllBecomeBloodhunted // (Final|Exec|Native|Public) // @ game+0xb64580
	void TigerAddItem(struct FString ItemName, int32_t Count); // Function Tiger.TigerPlayerController.TigerAddItem // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x14d1290
	void TigerActivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.TigerActivateMasqueradeConsequence // (Final|Exec|Native|Public) // @ game+0x1413530
	void StartAttackMouse(); // Function Tiger.TigerPlayerController.StartAttackMouse // (Final|Native|Private|BlueprintCallable) // @ game+0x14e7210
	void StartAttackGamepad(); // Function Tiger.TigerPlayerController.StartAttackGamepad // (Final|Native|Private|BlueprintCallable) // @ game+0x14e71f0
	void ShutdownServer(); // Function Tiger.TigerPlayerController.ShutdownServer // (Final|Exec|Native|Public) // @ game+0x14e71d0
	void ShowMouseCursor(bool bInShouldStopAlternateAction); // Function Tiger.TigerPlayerController.ShowMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x14e7140
	bool ShouldPlayForceFeedback(); // Function Tiger.TigerPlayerController.ShouldPlayForceFeedback // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb53540
	bool ShouldHoldJumpToClimb(); // Function Tiger.TigerPlayerController.ShouldHoldJumpToClimb // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e7110
	void SetupAsBot(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerPlayerController.SetupAsBot // (Final|Native|Protected) // @ game+0x14e7080
	void SetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.SetPlayerIsReadyToPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x14e7060
	void SetInCinematic(bool bCinematicState); // Function Tiger.TigerPlayerController.SetInCinematic // (Final|Native|Public|BlueprintCallable) // @ game+0x14e6fd0
	void SetHUDInputEnabled(bool bIsEnabled, bool bInShouldStopAlternateAction); // Function Tiger.TigerPlayerController.SetHUDInputEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x14e6f00
	void SetGamepadLightColor(struct FColor& InColor, bool bInShouldPulse, float InPulseTime); // Function Tiger.TigerPlayerController.SetGamepadLightColor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x14e6dd0
	void SetFogDensity(float Value); // Function Tiger.TigerPlayerController.SetFogDensity // (Final|Exec|Native|Public) // @ game+0x14e6d50
	void SetActiveFindSessionInstance(struct UTigerFindSessionAsync* FindSessionInstance); // Function Tiger.TigerPlayerController.SetActiveFindSessionInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x14e6cc0
	void Server_ToggleElysiumMobility(); // Function Tiger.TigerPlayerController.Server_ToggleElysiumMobility // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6c70
	void Server_TigerTrackLocomotionData(); // Function Tiger.TigerPlayerController.Server_TigerTrackLocomotionData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6c20
	void Server_TigerToggleServerGunSoundRpcs(); // Function Tiger.TigerPlayerController.Server_TigerToggleServerGunSoundRpcs // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6bd0
	void Server_TigerToggleDebugWallGrind(bool bInShouldPrintVelocity, bool bInShowVisualDebug, bool bInDebugVFX, bool bInShowSimulation); // Function Tiger.TigerPlayerController.Server_TigerToggleDebugWallGrind // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6a00
	void Server_TigerTestSpawnMechanic(); // Function Tiger.TigerPlayerController.Server_TigerTestSpawnMechanic // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e69b0
	void Server_TigerTeleportPlayer(struct FVector Location, struct FRotator Rotation); // Function Tiger.TigerPlayerController.Server_TigerTeleportPlayer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x14e68c0
	void Server_TigerTakeDamage(float DamageAmount); // Function Tiger.TigerPlayerController.Server_TigerTakeDamage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6800
	void Server_TigerStuck(float DropHeightInMeters); // Function Tiger.TigerPlayerController.Server_TigerStuck // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6740
	void Server_TigerStopServerProfiler(); // Function Tiger.TigerPlayerController.Server_TigerStopServerProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e66f0
	void Server_TigerStopServerNetworkProfiler(); // Function Tiger.TigerPlayerController.Server_TigerStopServerNetworkProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e66a0
	void Server_TigerStartServerProfiler(float Duration); // Function Tiger.TigerPlayerController.Server_TigerStartServerProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e65e0
	void Server_TigerStartServerNetworkProfiler(float InDuration); // Function Tiger.TigerPlayerController.Server_TigerStartServerNetworkProfiler // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6520
	void Server_TigerSkipSpawnCountdownTimer(); // Function Tiger.TigerPlayerController.Server_TigerSkipSpawnCountdownTimer // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e64d0
	void Server_TigerShowNPCToPlayerSightData(float InScreenDuration); // Function Tiger.TigerPlayerController.Server_TigerShowNPCToPlayerSightData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6410
	void Server_TigerShowCaps(float DebugDrawLength); // Function Tiger.TigerPlayerController.Server_TigerShowCaps // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6350
	void Server_TigerServerConsoleExec(struct FString InExecString); // Function Tiger.TigerPlayerController.Server_TigerServerConsoleExec // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6290
	void Server_TigerSendPlayerServerPose(float InInterval); // Function Tiger.TigerPlayerController.Server_TigerSendPlayerServerPose // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e61d0
	void Server_TigerRevive(); // Function Tiger.TigerPlayerController.Server_TigerRevive // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6180
	void Server_TigerRestoreMasquerade(); // Function Tiger.TigerPlayerController.Server_TigerRestoreMasquerade // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6130
	void Server_TigerPrintTraversalState(float InScreenTime); // Function Tiger.TigerPlayerController.Server_TigerPrintTraversalState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6070
	void Server_TigerPrintServerTickRate(); // Function Tiger.TigerPlayerController.Server_TigerPrintServerTickRate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e6020
	void Server_TigerPrintNumberOfPlayersInGame(); // Function Tiger.TigerPlayerController.Server_TigerPrintNumberOfPlayersInGame // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5fd0
	void Server_TigerNextSpawn(); // Function Tiger.TigerPlayerController.Server_TigerNextSpawn // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14e5f80
	void Server_TigerLogSignificance(); // Function Tiger.TigerPlayerController.Server_TigerLogSignificance // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5f30
	void Server_TigerLoadLocalStoreConfig(enum class ETigerMetaStoreCategoryType InStoreCategoryType, struct FString InFilePath); // Function Tiger.TigerPlayerController.Server_TigerLoadLocalStoreConfig // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x14e5e40
	void Server_TigerEndMatch(); // Function Tiger.TigerPlayerController.Server_TigerEndMatch // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5df0
	void Server_TigerDumpLocomotionData(); // Function Tiger.TigerPlayerController.Server_TigerDumpLocomotionData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5da0
	void Server_TigerDebugTraversalStates(bool bInEnableTraversalDebugging, bool bInPrintStatesToScreen, float InDebugLedgeGrabTime); // Function Tiger.TigerPlayerController.Server_TigerDebugTraversalStates // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5c50
	void Server_TigerDebugPrematchState(); // Function Tiger.TigerPlayerController.Server_TigerDebugPrematchState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5c00
	void Server_TigerDebugLoadingStates(); // Function Tiger.TigerPlayerController.Server_TigerDebugLoadingStates // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5bb0
	void Server_TigerDebugDrawPlayerGrid(float DebugDrawLifetime); // Function Tiger.TigerPlayerController.Server_TigerDebugDrawPlayerGrid // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5af0
	void Server_TigerDebugDrawNpcMovementRestrictionBounds(float InDebugDrawLifetime); // Function Tiger.TigerPlayerController.Server_TigerDebugDrawNpcMovementRestrictionBounds // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5a30
	void Server_TigerDebugCharacterPath(float Duration); // Function Tiger.TigerPlayerController.Server_TigerDebugCharacterPath // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5970
	void Server_TigerDeactivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.Server_TigerDeactivateMasqueradeConsequence // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e58b0
	void Server_TigerBecomeBloodhunted(bool bInAllPlayers); // Function Tiger.TigerPlayerController.Server_TigerBecomeBloodhunted // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e57f0
	void Server_TigerAddItem(struct UTigerItemAsset* ItemAsset, int32_t RequestedCount, enum class ETigerTelemetryItemSourceID InItemSourceID); // Function Tiger.TigerPlayerController.Server_TigerAddItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e56b0
	void Server_TigerActivateMasqueradeConsequence(struct FString InConsequenceName); // Function Tiger.TigerPlayerController.Server_TigerActivateMasqueradeConsequence // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e55f0
	void Server_TeleportToMapLocation(struct FVector2D Location); // Function Tiger.TigerPlayerController.Server_TeleportToMapLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable|NetValidate) // @ game+0x14e5540
	void Server_StopUsingConsumable(); // Function Tiger.TigerPlayerController.Server_StopUsingConsumable // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e54f0
	void Server_StopFireWeapon(); // Function Tiger.TigerPlayerController.Server_StopFireWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e54a0
	void Server_StopBlocking(); // Function Tiger.TigerPlayerController.Server_StopBlocking // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e5450
	void Server_StopAiming(); // Function Tiger.TigerPlayerController.Server_StopAiming // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e5400
	void Server_StartHeavySwing(bool bDisabledRootMotion); // Function Tiger.TigerPlayerController.Server_StartHeavySwing // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e5340
	void Server_StartBlocking(); // Function Tiger.TigerPlayerController.Server_StartBlocking // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e52f0
	void Server_StartAiming(); // Function Tiger.TigerPlayerController.Server_StartAiming // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e52a0
	void Server_Spectate(); // Function Tiger.TigerPlayerController.Server_Spectate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5250
	void Server_SpawnBots(int32_t InNumberOfBotsToSpawn); // Function Tiger.TigerPlayerController.Server_SpawnBots // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5190
	void Server_ShutdownServer(); // Function Tiger.TigerPlayerController.Server_ShutdownServer // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5140
	void Server_SetRespawn(int32_t RespawnType); // Function Tiger.TigerPlayerController.Server_SetRespawn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e5080
	void Server_SetPlayerIsReadyToPlay(); // Function Tiger.TigerPlayerController.Server_SetPlayerIsReadyToPlay // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e5030
	void Server_SetMatchmakingID(int32_t InMatchmakingID); // Function Tiger.TigerPlayerController.Server_SetMatchmakingID // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14e4fa0
	void Server_SetLastPlayedMatchGameMode(struct TArray<struct FString> InPlayerIds, int32_t InGameModeIndex, struct FString InGameModeId); // Function Tiger.TigerPlayerController.Server_SetLastPlayedMatchGameMode // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14e4e40
	void Server_ResetDialogues(); // Function Tiger.TigerPlayerController.Server_ResetDialogues // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e4df0
	void Server_RequestNewSpawnLocation(struct FVector InDesiredSpawnLocation); // Function Tiger.TigerPlayerController.Server_RequestNewSpawnLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x14e4d40
	void Server_ReloadWeapon(char InRequestId); // Function Tiger.TigerPlayerController.Server_ReloadWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e4c90
	void Server_MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory, struct ATigerBaseNPC* InteractingCharacter); // Function Tiger.TigerPlayerController.Server_MarkDialogueAsRead // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x14e4af0
	void Server_LeaveMatchAndRequestMatchStats(); // Function Tiger.TigerPlayerController.Server_LeaveMatchAndRequestMatchStats // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x14e4aa0
	void Server_KillSelf(); // Function Tiger.TigerPlayerController.Server_KillSelf // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e4a50
	void Server_KickMe(); // Function Tiger.TigerPlayerController.Server_KickMe // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e4a00
	void Server_Jump(); // Function Tiger.TigerPlayerController.Server_Jump // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e49b0
	void Server_GhostFollowPrevPlayer(); // Function Tiger.TigerPlayerController.Server_GhostFollowPrevPlayer // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e4960
	void Server_GhostFollowNextPlayer(); // Function Tiger.TigerPlayerController.Server_GhostFollowNextPlayer // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e4910
	void Server_GetNpcCount(); // Function Tiger.TigerPlayerController.Server_GetNpcCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e48c0
	void Server_GetMovingNpcCount(); // Function Tiger.TigerPlayerController.Server_GetMovingNpcCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e4870
	void Server_FireWeaponMulti(int32_t InFirstProjectileId, struct FVector_NetQuantize10 InPreviousCharacterLocation, struct TArray<struct FTigerFireProjectileDataInterpolated> InProjectiles); // Function Tiger.TigerPlayerController.Server_FireWeaponMulti // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e4720
	void Server_FireWeapon(int32_t InProjectileId, struct FVector_NetQuantize10 InPreviousCharacterLocation, struct FTigerFireProjectileData InProjectile); // Function Tiger.TigerPlayerController.Server_FireWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e45d0
	void Server_FakeMatchmakingReady(int32_t InGameModeIndex); // Function Tiger.TigerPlayerController.Server_FakeMatchmakingReady // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e4510
	void Server_EquipWeapon(enum class ETigerWeaponSlot WeaponSlot, bool bInstantSwitch, char RequestId); // Function Tiger.TigerPlayerController.Server_EquipWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e43c0
	void Server_EnableServerAutoStats(); // Function Tiger.TigerPlayerController.Server_EnableServerAutoStats // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x14e43a0
	void Server_EnableLootBox(struct ATigerLootBox* LootBox); // Function Tiger.TigerPlayerController.Server_EnableLootBox // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x14e42e0
	void Server_DiscoveredSHPB(struct ATigerSHPBMarker* DiscoveredMarker); // Function Tiger.TigerPlayerController.Server_DiscoveredSHPB // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e4220
	void Server_ClientReportRangedWeaponHits(struct TArray<struct FTigerRangedHitInfo> InHits); // Function Tiger.TigerPlayerController.Server_ClientReportRangedWeaponHits // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e4160
	void Server_ClientReportRangedWeaponHit(struct FTigerRangedHitInfo InHit); // Function Tiger.TigerPlayerController.Server_ClientReportRangedWeaponHit // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e40b0
	void Server_Cheat_UpdateSeasonProgress(int32_t InExpToAdd, int32_t InLevelsToAdd); // Function Tiger.TigerPlayerController.Server_Cheat_UpdateSeasonProgress // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3fb0
	void Server_Cheat_UnlockVanityItem(struct FString InItemName); // Function Tiger.TigerPlayerController.Server_Cheat_UnlockVanityItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3ef0
	void Server_Cheat_UnlockAllPerks(); // Function Tiger.TigerPlayerController.Server_Cheat_UnlockAllPerks // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3ea0
	void Server_Cheat_UnlockAllItemsInDatabase(); // Function Tiger.TigerPlayerController.Server_Cheat_UnlockAllItemsInDatabase // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3e50
	void Server_Cheat_ToggleNoAggro(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleNoAggro // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3e00
	void Server_Cheat_ToggleGod(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleGod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3db0
	void Server_Cheat_ToggleFreeReload(); // Function Tiger.TigerPlayerController.Server_Cheat_ToggleFreeReload // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3d60
	void Server_Cheat_TigerSetSessionProgressToBattlepassLevel(int32_t InLevel, bool bInShouldOwnBattlepass); // Function Tiger.TigerPlayerController.Server_Cheat_TigerSetSessionProgressToBattlepassLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3c60
	void Server_Cheat_TigerCompleteNextTierMastery(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextTierMastery // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3c10
	void Server_Cheat_TigerCompleteNextChallengeWeekly(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeWeekly // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3bc0
	void Server_Cheat_TigerCompleteNextChallengeMastery(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeMastery // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3b70
	void Server_Cheat_TigerCompleteNextChallengeDaily(); // Function Tiger.TigerPlayerController.Server_Cheat_TigerCompleteNextChallengeDaily // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3b20
	void Server_Cheat_SubmitChallengeProgress(); // Function Tiger.TigerPlayerController.Server_Cheat_SubmitChallengeProgress // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3ad0
	void Server_Cheat_SpawnNpcsInCircle(struct FName InNpcType, struct FVector InLocation, int32_t InCount); // Function Tiger.TigerPlayerController.Server_Cheat_SpawnNpcsInCircle // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x14e3980
	void Server_Cheat_SpawnNpc(struct FName NPCType, struct FVector Location, enum class ETigerBloodPotency InPotency, enum class ETigerBloodType InBloodType); // Function Tiger.TigerPlayerController.Server_Cheat_SpawnNpc // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x14e37f0
	void Server_Cheat_Slomo(float NewTimeDilation); // Function Tiger.TigerPlayerController.Server_Cheat_Slomo // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e3730
	void Server_Cheat_ShowArchetypeLevelExp(); // Function Tiger.TigerPlayerController.Server_Cheat_ShowArchetypeLevelExp // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e36e0
	void Server_Cheat_SetPlayerLevel(int32_t InPlayerLevel); // Function Tiger.TigerPlayerController.Server_Cheat_SetPlayerLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3620
	void Server_Cheat_SetMatchesPlayed(int32_t InNumberMatches); // Function Tiger.TigerPlayerController.Server_Cheat_SetMatchesPlayed // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3560
	void Server_Cheat_SetHolyIncenseElapsedTime(float InTotalElapsedTime, float InSpeedMultiplier); // Function Tiger.TigerPlayerController.Server_Cheat_SetHolyIncenseElapsedTime // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3460
	void Server_Cheat_SetBotGodAll(bool InGod); // Function Tiger.TigerPlayerController.Server_Cheat_SetBotGodAll // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e33a0
	void Server_Cheat_SetBotGod(int32_t InBotIndex, bool InGod); // Function Tiger.TigerPlayerController.Server_Cheat_SetBotGod // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e32a0
	void Server_Cheat_SetArchetypeLevel(int32_t InArchetypeLevel); // Function Tiger.TigerPlayerController.Server_Cheat_SetArchetypeLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e31e0
	void Server_Cheat_ResetDialogueCategories(); // Function Tiger.TigerPlayerController.Server_Cheat_ResetDialogueCategories // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3190
	void Server_Cheat_RemoveHolyIncense(); // Function Tiger.TigerPlayerController.Server_Cheat_RemoveHolyIncense // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3140
	void Server_Cheat_RegisterGrimoireEntryAsUnread(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsUnread // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e3080
	void Server_Cheat_RegisterGrimoireEntryAsUnlocked(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsUnlocked // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2fc0
	void Server_Cheat_RegisterGrimoireEntryAsLocked(uint32_t InGrimoireEntryId); // Function Tiger.TigerPlayerController.Server_Cheat_RegisterGrimoireEntryAsLocked // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2f00
	void Server_Cheat_MatchAddPlayerExp(int32_t InPlayerExp); // Function Tiger.TigerPlayerController.Server_Cheat_MatchAddPlayerExp // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2e40
	void Server_Cheat_MatchAddArchetypeExp(int32_t InArchetypeExp); // Function Tiger.TigerPlayerController.Server_Cheat_MatchAddArchetypeExp // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2d80
	void Server_Cheat_IncrementPremiumCurrency(uint64_t InAmountToAdd); // Function Tiger.TigerPlayerController.Server_Cheat_IncrementPremiumCurrency // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2cc0
	void Server_Cheat_ForceOnlineError(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerPlayerController.Server_Cheat_ForceOnlineError // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2bd0
	void Server_Cheat_DisableDisciplineCost(); // Function Tiger.TigerPlayerController.Server_Cheat_DisableDisciplineCost // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e2b80
	void Server_Cheat_DestroyNpcWithinRadius(float InRadius, bool bInExludeDebugTarget); // Function Tiger.TigerPlayerController.Server_Cheat_DestroyNpcWithinRadius // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2a70
	void Server_Cheat_DebugHolyIncense(); // Function Tiger.TigerPlayerController.Server_Cheat_DebugHolyIncense // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2a20
	void Server_Cheat_Crash(); // Function Tiger.TigerPlayerController.Server_Cheat_Crash // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e29d0
	void Server_Cheat_ChangeRespawnLifeTokens(int32_t InChange); // Function Tiger.TigerPlayerController.Server_Cheat_ChangeRespawnLifeTokens // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e2910
	void Server_Cheat_BringMeHome(); // Function Tiger.TigerPlayerController.Server_Cheat_BringMeHome // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e28c0
	void Server_Cheat_AddSoftCurrency(int32_t InAmount, uint64_t InCurrencyId); // Function Tiger.TigerPlayerController.Server_Cheat_AddSoftCurrency // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e27c0
	void Server_Cheat_ActivateEvent(uint32_t InEventid, bool InActivate); // Function Tiger.TigerPlayerController.Server_Cheat_ActivateEvent // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x14e26c0
	void Server_CancelHeavyAttack(); // Function Tiger.TigerPlayerController.Server_CancelHeavyAttack // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e2670
	void Server_ActivateCarAlarm(struct FTigerAIPlayerAction InPlayerAction); // Function Tiger.TigerPlayerController.Server_ActivateCarAlarm // (Final|Net|NetReliableNative|Event|Private|NetServer|BlueprintCallable|NetValidate) // @ game+0x14e2530
	void Server_AbortReloadWeapon(char InRequestId, bool bInClientDropped); // Function Tiger.TigerPlayerController.Server_AbortReloadWeapon // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x14e2430
	void Server_AbortChannelingDiscipline(enum class ETigerDisciplinesEnum DisciplineEnum); // Function Tiger.TigerPlayerController.Server_AbortChannelingDiscipline // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x14e2380
	void SavePendingRewardsToDisplay(); // Function Tiger.TigerPlayerController.SavePendingRewardsToDisplay // (Final|Native|Public) // @ game+0x14e2360
	void ResetInventoryKeyHoldTime(); // Function Tiger.TigerPlayerController.ResetInventoryKeyHoldTime // (Final|Native|Public|BlueprintCallable) // @ game+0x14e2340
	void ResetGamepadLightColor(); // Function Tiger.TigerPlayerController.ResetGamepadLightColor // (Final|Native|Public|BlueprintCallable) // @ game+0x14e2320
	void ResetActions(); // Function Tiger.TigerPlayerController.ResetActions // (Final|Native|Public|BlueprintCallable) // @ game+0x14e2300
	void ReleaseWeaponAbility(); // Function Tiger.TigerPlayerController.ReleaseWeaponAbility // (Final|Native|Private|BlueprintCallable) // @ game+0x14e22e0
	void RefreshEquippedWeapon(); // Function Tiger.TigerPlayerController.RefreshEquippedWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x14e22c0
	void RecordShockwaveWallAchievementProgress(int32_t InDamageBlocked, struct ATigerShockwaveWall* InShockwaveWall); // Function Tiger.TigerPlayerController.RecordShockwaveWallAchievementProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x14e21f0
	int32_t PostEventPersistent(struct UAkAudioEvent* InEvent); // Function Tiger.TigerPlayerController.PostEventPersistent // (Final|Native|Public|BlueprintCallable) // @ game+0x14e2150
	int32_t PostEventControllerSpeaker(struct UAkAudioEvent* InEvent); // Function Tiger.TigerPlayerController.PostEventControllerSpeaker // (Final|Native|Public|BlueprintCallable) // @ game+0x14e20b0
	void PingClosestResurrectAltar(); // Function Tiger.TigerPlayerController.PingClosestResurrectAltar // (Final|Native|Protected|BlueprintCallable) // @ game+0x14e2090
	void OnToggleMainMenu(); // Function Tiger.TigerPlayerController.OnToggleMainMenu // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnToggleInventory(); // Function Tiger.TigerPlayerController.OnToggleInventory // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPreMatchAssetsLoadedMulti__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnPreMatchAssetsLoadedMulti__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPreMatchAssetsLoaded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnPreMatchAssetsLoaded__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void OnPlayerStateCreated__DelegateSignature(struct ATigerPlayerState* TigerPlayerState); // DelegateFunction Tiger.TigerPlayerController.OnPlayerStateCreated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPersistentPlayerInitialisedSingle__DelegateSignature(struct ATigerPlayerController* PlayerController); // DelegateFunction Tiger.TigerPlayerController.OnPersistentPlayerInitialisedSingle__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void OnPersistentPlayerInitialised__DelegateSignature(struct ATigerPlayerController* PlayerController); // DelegateFunction Tiger.TigerPlayerController.OnPersistentPlayerInitialised__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPersistentPlayerInitialised(); // Function Tiger.TigerPlayerController.OnPersistentPlayerInitialised // (Native|Protected) // @ game+0x14e1f50
	void OnLastWaveFinished(); // Function Tiger.TigerPlayerController.OnLastWaveFinished // (Final|Native|Private) // @ game+0x14e1f30
	void OnItemPickedUp__DelegateSignature(struct UTigerItemAsset* Item, int32_t Count); // DelegateFunction Tiger.TigerPlayerController.OnItemPickedUp__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInventoryToggled__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnInventoryToggled__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInitialLevelStreamingCompleted__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnInitialLevelStreamingCompleted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnInGameMenuToggled(bool bIsOpen); // Function Tiger.TigerPlayerController.OnInGameMenuToggled // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnGhostModeSet__DelegateSignature(bool bIsGhostModeEnabled); // DelegateFunction Tiger.TigerPlayerController.OnGhostModeSet__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnDownedEnemyPlayer__DelegateSignature(struct ATigerPlayer* InPlayer); // DelegateFunction Tiger.TigerPlayerController.OnDownedEnemyPlayer__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnControllerConnectionChanged__DelegateSignature(bool InConnected, int32_t InControllerId); // DelegateFunction Tiger.TigerPlayerController.OnControllerConnectionChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnClientChallengesCollectionCreated__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnClientChallengesCollectionCreated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnClanLevelUpdated__DelegateSignature(uint32_t OldLevel, uint32_t NewLevel); // DelegateFunction Tiger.TigerPlayerController.OnClanLevelUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnBeginPlay__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerController.OnBeginPlay__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnApplicationFocusChanged(bool bIsFocused); // Function Tiger.TigerPlayerController.OnApplicationFocusChanged // (Final|Native|Private) // @ game+0x14e1ea0
	void OnAimUpdated(bool bIsAiming); // Function Tiger.TigerPlayerController.OnAimUpdated // (Final|Native|Private) // @ game+0x14e1e10
	void MarkDialogueAsRead(int32_t InDialogueId, struct FString InNpcIdentifier, char InCategory); // Function Tiger.TigerPlayerController.MarkDialogueAsRead // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1cf0
	struct UTigerSharedMouseCursor* MakeSharedMouseCursor(); // Function Tiger.TigerPlayerController.MakeSharedMouseCursor // (Final|Native|Public) // @ game+0x14e1cc0
	void KillSelf(); // Function Tiger.TigerPlayerController.KillSelf // (Final|Exec|Native|Public) // @ game+0x14e1ca0
	bool IsWheelUIOpen(); // Function Tiger.TigerPlayerController.IsWheelUIOpen // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1c70
	bool IsUsingCrosshairDebug(); // Function Tiger.TigerPlayerController.IsUsingCrosshairDebug // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1990
	bool IsSpectating(); // Function Tiger.TigerPlayerController.IsSpectating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1c40
	bool IsRespawnFeatureEnabled(); // Function Tiger.TigerPlayerController.IsRespawnFeatureEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1bf0
	bool IsProbablyUsingGamepadInput(); // Function Tiger.TigerPlayerController.IsProbablyUsingGamepadInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1bd0
	bool IsPreSpawnStreamingDone(); // Function Tiger.TigerPlayerController.IsPreSpawnStreamingDone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1ba0
	void IsPreMatchAssetsLoadedAsync(struct FDelegate& InDelegate); // Function Tiger.TigerPlayerController.IsPreMatchAssetsLoadedAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14e1af0
	bool IsLocalBot(); // Function Tiger.TigerPlayerController.IsLocalBot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1ad0
	bool IsInTutorial(); // Function Tiger.TigerPlayerController.IsInTutorial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1aa0
	bool IsInTransferFromMatch(); // Function Tiger.TigerPlayerController.IsInTransferFromMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1a70
	bool IsInMatch(); // Function Tiger.TigerPlayerController.IsInMatch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1a40
	bool IsInElysium(); // Function Tiger.TigerPlayerController.IsInElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1a10
	bool IsInCinematic(); // Function Tiger.TigerPlayerController.IsInCinematic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e19f0
	bool IsInBenchmark(); // Function Tiger.TigerPlayerController.IsInBenchmark // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e19c0
	bool IsGhostModeEnabled(); // Function Tiger.TigerPlayerController.IsGhostModeEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1990
	void InGameMenuToggled(bool bIsOpen); // Function Tiger.TigerPlayerController.InGameMenuToggled // (Final|Native|Public) // @ game+0x14e1900
	void HideMouseCursor(); // Function Tiger.TigerPlayerController.HideMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x14e18e0
	bool HasWeaponForSlot(enum class ETigerWeaponSlot Slot); // Function Tiger.TigerPlayerController.HasWeaponForSlot // (Final|Native|Private|BlueprintCallable) // @ game+0x14e1850
	bool HasRangedWeaponCurrentlyEquipped(); // Function Tiger.TigerPlayerController.HasRangedWeaponCurrentlyEquipped // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1820
	bool HasLocalPlayerSpawned(); // Function Tiger.TigerPlayerController.HasLocalPlayerSpawned // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1800
	bool HasLoadedRewards(); // Function Tiger.TigerPlayerController.HasLoadedRewards // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e17d0
	bool HasBegunPlay(); // Function Tiger.TigerPlayerController.HasBegunPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e17a0
	void HandlePreSpawnLoadingCheckTimerTick(); // Function Tiger.TigerPlayerController.HandlePreSpawnLoadingCheckTimerTick // (Final|Native|Private) // @ game+0x14e1750
	struct ATigerSpectatorPawn* GetTigerSpectatorPawn(); // Function Tiger.TigerPlayerController.GetTigerSpectatorPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e16f0
	struct ATigerPlayerState* GetTigerPlayerState(); // Function Tiger.TigerPlayerController.GetTigerPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x9545b0
	struct ATigerPlayer* GetTigerPlayer(); // Function Tiger.TigerPlayerController.GetTigerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e16d0
	struct UTigerPersistentPlayerState* GetTigerPersistentPlayerState(); // Function Tiger.TigerPlayerController.GetTigerPersistentPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e16a0
	struct ATigerMatchHUD* GetTigerMatchHUD(); // Function Tiger.TigerPlayerController.GetTigerMatchHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1670
	struct UTigerGameInstance* GetTigerGameInstance(); // Function Tiger.TigerPlayerController.GetTigerGameInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1640
	struct ATigerElysiumHUD* GetTigerElysiumHUD(); // Function Tiger.TigerPlayerController.GetTigerElysiumHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1610
	struct ATigerHUD* GetTigerBaseHUD(); // Function Tiger.TigerPlayerController.GetTigerBaseHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e15e0
	struct FVector2D GetRightStickAnalogValues(); // Function Tiger.TigerPlayerController.GetRightStickAnalogValues // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e15a0
	struct UTigerPromptCollectionWidget* GetPromptCollection(); // Function Tiger.TigerPlayerController.GetPromptCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1570
	struct UTigerMapGameData* GetMapGameData(); // Function Tiger.TigerPlayerController.GetMapGameData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1550
	struct FVector2D GetLeftStickAnalogValues(); // Function Tiger.TigerPlayerController.GetLeftStickAnalogValues // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1510
	bool GetHoldForInventory(); // Function Tiger.TigerPlayerController.GetHoldForInventory // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e14e0
	struct UTigerDisciplineComponent* GetDisciplineComponenet(); // Function Tiger.TigerPlayerController.GetDisciplineComponenet // (Final|Native|Public|BlueprintCallable) // @ game+0x14e14b0
	enum class ETigerWeaponSlot GetCurrentlyEquippedSlot(); // Function Tiger.TigerPlayerController.GetCurrentlyEquippedSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1480
	bool GetCrossPlaySettingLock(); // Function Tiger.TigerPlayerController.GetCrossPlaySettingLock // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1460
	struct UTigerClientSeasonalRewardCollection* GetClientSeasonalRewardCollection(); // Function Tiger.TigerPlayerController.GetClientSeasonalRewardCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1440
	struct UTigerClientPlayerProgressionRewardCollection* GetClientPlayerProgressionRewardCollection(); // Function Tiger.TigerPlayerController.GetClientPlayerProgressionRewardCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1420
	struct UTigerClientChallengesCollection* GetClientChallengesCollection(); // Function Tiger.TigerPlayerController.GetClientChallengesCollection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1400
	struct FVector2D GetAnalogueCursorDelta(); // Function Tiger.TigerPlayerController.GetAnalogueCursorDelta // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e13c0
	struct UTigerFindSessionAsync* GetActiveFindSessionInstance(); // Function Tiger.TigerPlayerController.GetActiveFindSessionInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1390
	void FlushSpecificInputValue(struct FName& InActionName, bool bInIsAxis); // Function Tiger.TigerPlayerController.FlushSpecificInputValue // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14e1290
	void FlushInputValues(); // Function Tiger.TigerPlayerController.FlushInputValues // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1270
	bool EquipWeaponForSlot(enum class ETigerWeaponSlot Slot, bool bInstantSwitch, bool bNotifyServer); // Function Tiger.TigerPlayerController.EquipWeaponForSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x14e1150
	void EnableGhostMode(); // Function Tiger.TigerPlayerController.EnableGhostMode // (Final|Native|Public|BlueprintCallable) // @ game+0xb64580
	bool DesiresAiming(); // Function Tiger.TigerPlayerController.DesiresAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14e1120
	void Debug_ShowCharacterCard(); // Function Tiger.TigerPlayerController.Debug_ShowCharacterCard // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Client_StopBlocking(); // Function Tiger.TigerPlayerController.Client_StopBlocking // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e1100
	void Client_ShowWinScreen(int8_t InPlayerPlacement); // Function Tiger.TigerPlayerController.Client_ShowWinScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e1080
	void Client_ShowDeathScreen(int8_t InPlayerPlacement, int8_t InNumGroupsAtStart, int32_t InPlayerStateId, enum class ETigerKillerType InKillerType, bool bInReturnToElysiumOnClose); // Function Tiger.TigerPlayerController.Client_ShowDeathScreen // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0ee0
	void Client_ShowArchetypeLevelExp(int64_t InLevel, int64_t InExp); // Function Tiger.TigerPlayerController.Client_ShowArchetypeLevelExp // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14e0e10
	void Client_SetPlayerSpawnLocation(struct FVector InSpawnLocation); // Function Tiger.TigerPlayerController.Client_SetPlayerSpawnLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x14e0d90
	void Client_SetMatchStats(struct FTigerMatchStats MatchStats); // Function Tiger.TigerPlayerController.Client_SetMatchStats // (Net|NetReliableNative|Event|Public|NetClient|BlueprintCallable) // @ game+0x14e0b40
	void Client_SetLastPlayedMatchGameMode(int32_t InGameModeIndex, struct FString InGameModeId); // Function Tiger.TigerPlayerController.Client_SetLastPlayedMatchGameMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0a60
	void Client_SetIsBenchmarkController(bool bInIsBenchmarkController); // Function Tiger.TigerPlayerController.Client_SetIsBenchmarkController // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e09d0
	void Client_SetCameraRotation(float InYaw, float InPitch); // Function Tiger.TigerPlayerController.Client_SetCameraRotation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0900
	void Client_SendMapSelectionInformation(struct TArray<struct FTigerClientSpawnLocationInfo> InSpawnInformation); // Function Tiger.TigerPlayerController.Client_SendMapSelectionInformation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0860
	void Client_RecordCachedAchievementProgress(struct FName InAchievementName, float InCachedGasDamage); // Function Tiger.TigerPlayerController.Client_RecordCachedAchievementProgress // (Net|Native|Event|Public|NetClient) // @ game+0x14e0780
	void Client_ReceiveLootBoxContentUpdate(struct ATigerLootBox* LootBox, struct TArray<struct FTigerItemData> ReceivedItemList); // Function Tiger.TigerPlayerController.Client_ReceiveLootBoxContentUpdate // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0690
	void Client_PrintString(struct FString InMessage, float InScreenDuration, bool bInWriteToLog, struct FColor InColor, bool bInNewerOntop); // Function Tiger.TigerPlayerController.Client_PrintString // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x14e04c0
	void Client_OnPlayerKicked(struct FTigerOnlineErrorCode InErrorCode); // Function Tiger.TigerPlayerController.Client_OnPlayerKicked // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0410
	void Client_OnPlayerDeath(int32_t InPlayerStateId, int32_t InInstigatorStateId, bool bIsPlayerInSameGroup); // Function Tiger.TigerPlayerController.Client_OnPlayerDeath // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0300
	void Client_OnEliminatedPlayer(int32_t InPlayerStateId, bool bInWasBloodHunted); // Function Tiger.TigerPlayerController.Client_OnEliminatedPlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0230
	void Client_OnDownedPlayer(struct ATigerPlayer* InDownedPlayer, bool bInBloodHunted, struct FTigerDamageContext InDamageContext); // Function Tiger.TigerPlayerController.Client_OnDownedPlayer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e00d0
	void Client_InvalidateReadyToPlayStateAndRequestRecheck(int32_t InNumExpectedPlayerStates); // Function Tiger.TigerPlayerController.Client_InvalidateReadyToPlayStateAndRequestRecheck // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14e0040
	void Client_HighlightItem(struct ATigerItemWorldRepresentation* Item); // Function Tiger.TigerPlayerController.Client_HighlightItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14dffb0
	void Client_HandleBenchmarkTestsStarted(struct FString InOutputFile); // Function Tiger.TigerPlayerController.Client_HandleBenchmarkTestsStarted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14dff10
	void Client_HandleBenchmarkTestsFinished(); // Function Tiger.TigerPlayerController.Client_HandleBenchmarkTestsFinished // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14dfef0
	void Client_GainedSeasonExperience(enum class ETigerPlayerEvent InEvent, int32_t InReceivedExperience, int32_t InExperienceGained, struct ATigerCharacter* InEventTiedCharacter, int32_t InPlayerStateId); // Function Tiger.TigerPlayerController.Client_GainedSeasonExperience // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14dfd50
	void Client_FinishReloadWeapon(char InRequestId, enum class ETigerWeaponSlot InSlot, uint16_t InAmmoInWeapon, uint16_t InAmmoInInventory); // Function Tiger.TigerPlayerController.Client_FinishReloadWeapon // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14dfc00
	void Client_EquipWeaponFailed(enum class ETigerWeaponSlot WeaponSlot, char RequestId); // Function Tiger.TigerPlayerController.Client_EquipWeaponFailed // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x14dfb30
	void Client_DebugDrawShapes(struct TArray<struct FTigerNetworkedDebugShape> Shapes); // Function Tiger.TigerPlayerController.Client_DebugDrawShapes // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14dfa10
	void Client_DebugDrawShape(struct FTigerNetworkedDebugShape Shape); // Function Tiger.TigerPlayerController.Client_DebugDrawShape // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14df980
	void Client_Debug_DrawServerProjectileSpawnLocation(struct FVector ProjectileSpawnLocation); // Function Tiger.TigerPlayerController.Client_Debug_DrawServerProjectileSpawnLocation // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x14dfab0
	void Client_AbortReloadWeapon(char InRequestId, enum class ETigerWeaponSlot InSlot, uint16_t InAmmoInWeapon, uint16_t InAmmoInInventory); // Function Tiger.TigerPlayerController.Client_AbortReloadWeapon // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14df830
	bool CheckShouldShowClimbPrompt(); // Function Tiger.TigerPlayerController.CheckShouldShowClimbPrompt // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x14df800
	void Cheat_ToggleUIVisibility(); // Function Tiger.TigerPlayerController.Cheat_ToggleUIVisibility // (Final|Exec|Native|Public) // @ game+0xb64580
	bool CanUpdateChallengesInElysium(); // Function Tiger.TigerPlayerController.CanUpdateChallengesInElysium // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xb53540
	void CancelFindSession(enum class ETigerTelemetryMatchmackingCancelReason InCancelReason); // Function Tiger.TigerPlayerController.CancelFindSession // (Final|Native|Public|BlueprintCallable) // @ game+0x14df780
	void CancelDesireAiming(); // Function Tiger.TigerPlayerController.CancelDesireAiming // (Final|Native|Public) // @ game+0x14df760
	void AttackRelease(); // Function Tiger.TigerPlayerController.AttackRelease // (Final|Native|Private|BlueprintCallable) // @ game+0x14df740
};

// Class Tiger.TigerPlayerDataService
// Size: 0x60 (Inherited: 0x28)
struct UTigerPlayerDataService : UObject {
	char pad_28[0x28]; // 0x28(0x28)
	struct UTigerRequestUtility* TigerRequestUtility; // 0x50(0x08)
	char pad_58[0x8]; // 0x58(0x08)
};

// Class Tiger.TigerMacroExperienceAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerMacroExperienceAsset : UDataAsset {
	struct TMap<enum class ETigerPlayerEvent, int32_t> EventMacroExperience; // 0x30(0x50)
};

// Class Tiger.TigerMatchStatMedalRequirements
// Size: 0x70 (Inherited: 0x30)
struct UTigerMatchStatMedalRequirements : UDataAsset {
	struct FTigerPlayerMedalTiers Eliminations; // 0x30(0x10)
	struct FTigerPlayerMedalTiers Assists; // 0x40(0x10)
	struct FTigerPlayerMedalTiers Diableries; // 0x50(0x10)
	struct FTigerPlayerMedalTiers DamageDealt; // 0x60(0x10)
};

// Class Tiger.TigerPlayerGrid
// Size: 0x268 (Inherited: 0x228)
struct ATigerPlayerGrid : AActor {
	struct TArray<struct FTigerPlayerGridCell> Cells; // 0x228(0x10)
	struct FVector2D GridSize; // 0x238(0x08)
	int32_t GridRows; // 0x240(0x04)
	int32_t GridColumns; // 0x244(0x04)
	int32_t CellDirectNeighborsToCheck; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UBoxComponent* GridBoxComponent; // 0x250(0x08)
	bool bShowGrid; // 0x258(0x01)
	char pad_259[0xf]; // 0x259(0x0f)
};

// Class Tiger.TigerPlayerGroup
// Size: 0xb8 (Inherited: 0x28)
struct UTigerPlayerGroup : UObject {
	char pad_28[0x50]; // 0x28(0x50)
	struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> Members; // 0x78(0x10)
	char pad_88[0x10]; // 0x88(0x10)
	struct TArray<struct TWeakObjectPtr<struct ATigerPlayerState>> Invitations; // 0x98(0x10)
	struct UTigerPingCoordinator* PingCoordinator; // 0xa8(0x08)
	char pad_B0[0x8]; // 0xb0(0x08)

	void TigerOnReservedGroupMemberJoinedDelegate__DelegateSignature(struct UTigerPlayerGroup* InPlayerGroup, struct ATigerPlayerState* InPlayerState); // DelegateFunction Tiger.TigerPlayerGroup.TigerOnReservedGroupMemberJoinedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	struct TArray<struct ATigerPlayerState*> GetMembersAsRawPointers(); // Function Tiger.TigerPlayerGroup.GetMembersAsRawPointers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f1fb0
};

// Class Tiger.TigerPlayerMarkerWidget
// Size: 0x2c8 (Inherited: 0x2c8)
struct UTigerPlayerMarkerWidget : UTigerMapMarkerWidget {

	void SetGroupPlayerIndex(char InPlayerIndex); // Function Tiger.TigerPlayerMarkerWidget.SetGroupPlayerIndex // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void HandleSpectateeChanged(struct ATigerPlayerState* InSpectatee, struct ATigerPlayerState* InPreviousSpectatee); // Function Tiger.TigerPlayerMarkerWidget.HandleSpectateeChanged // (Final|Native|Protected) // @ game+0x14f2150
	void HandlePlayerStateCreated(struct ATigerPlayerState* InPlayerState); // Function Tiger.TigerPlayerMarkerWidget.HandlePlayerStateCreated // (Final|Native|Protected) // @ game+0x14f20c0
	void HandlePlayerPawnChanged(struct APawn* InNewPawn); // Function Tiger.TigerPlayerMarkerWidget.HandlePlayerPawnChanged // (Final|Native|Protected) // @ game+0x14f2030
};

// Class Tiger.TigerPlayerMasqueradeComponent
// Size: 0x160 (Inherited: 0xb0)
struct UTigerPlayerMasqueradeComponent : UActorComponent {
	struct FMulticastInlineDelegate OnBloodHuntStateChanged; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnBloodHuntStateUpdated; // 0xc0(0x10)
	struct UAkAudioEvent* MasqueradeBrokenAkAudioEvent; // 0xd0(0x08)
	struct UAkAudioEvent* MasqueradeRestoredAkAudioEvent; // 0xd8(0x08)
	struct TArray<struct UTigerMasqueradeConsequence*> PossibleMasqueradeConsequences; // 0xe0(0x10)
	struct TArray<struct UTigerMasqueradeConsequenceSyncInstance*> SyncedMasqueradeConsequenceInstances; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnMasqueradeConsequenceInstancedAdded; // 0x100(0x10)
	struct FMulticastInlineDelegate OnMasqueradeConsequenceInstancedRemoved; // 0x110(0x10)
	float MinimumConsequenceUpdateInterval; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
	struct TArray<struct UTigerMasqueradeConsequence*> ActiveConsequences; // 0x128(0x10)
	struct TArray<struct FTigerConsequenceData> ReplicatedConsequences; // 0x138(0x10)
	char pad_148[0x18]; // 0x148(0x18)

	void OnRep_ConsequenceData(); // Function Tiger.TigerPlayerMasqueradeComponent.OnRep_ConsequenceData // (Final|Native|Public) // @ game+0x14f2780
	void OnMasqueradePointsAdded__DelegateSignature(); // DelegateFunction Tiger.TigerPlayerMasqueradeComponent.OnMasqueradePointsAdded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Multicast_UpdateConsequences(struct TArray<struct FTigerConsequenceUpdateData> InUpdateData); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_UpdateConsequences // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14f24a0
	void Multicast_RemoveConsequences(struct TArray<int32_t> InConsequenceIds, enum class ETigerMasqueradeConsequenceDeactivationReason InDeactivationReason); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_RemoveConsequences // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14f23b0
	void Multicast_RemoveConsequence(int32_t InConsequenceId, enum class ETigerMasqueradeConsequenceDeactivationReason InDeactivationReason); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_RemoveConsequence // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14f22e0
	void Multicast_AddConsequence(struct FTigerConsequenceData InMasqueradeConsequence); // Function Tiger.TigerPlayerMasqueradeComponent.Multicast_AddConsequence // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x14f2250
	bool IsBloodHunted(); // Function Tiger.TigerPlayerMasqueradeComponent.IsBloodHunted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f2220
	struct UTigerMasqueradeConsequenceSyncInstance* GetConsequenceInstance(struct UTigerMasqueradeConsequenceSyncInstance* InInstanceClass); // Function Tiger.TigerPlayerMasqueradeComponent.GetConsequenceInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f1ec0
	void Client_UpdateConsequenceLatestPlayerAction(int32_t InConsequenceId, enum class ETigerAIPlayerAction InAction); // Function Tiger.TigerPlayerMasqueradeComponent.Client_UpdateConsequenceLatestPlayerAction // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x14f1df0
	void AddMasqueradePointsCausedByNpcReacting(struct ATigerBaseNPC* InNpc, enum class ETigerAIPlayerAction InAction); // Function Tiger.TigerPlayerMasqueradeComponent.AddMasqueradePointsCausedByNpcReacting // (Final|Native|Public|BlueprintCallable) // @ game+0x14f1d20
};

// Class Tiger.TigerMasqueradeConsequenceSyncInstance
// Size: 0x58 (Inherited: 0x28)
struct UTigerMasqueradeConsequenceSyncInstance : UObject {
	bool bShouldBeActiveForAffectedPlayer; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct ATigerPlayerState* AffectedPlayerState; // 0x30(0x08)
	struct ATigerPlayerController* LocalPlayerController; // 0x38(0x08)
	char pad_40[0x18]; // 0x40(0x18)

	float GetExpectedTimeLeft(); // Function Tiger.TigerMasqueradeConsequenceSyncInstance.GetExpectedTimeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14f1f60
};

// Class Tiger.TigerMasqueradeConsequence
// Size: 0x60 (Inherited: 0x28)
struct UTigerMasqueradeConsequence : UObject {
	struct UTigerMasqueradeConsequenceSyncInstance* SyncInstanceClass; // 0x28(0x08)
	struct TArray<enum class ETigerAIPlayerAction> ActionsThatCanActivateConsequence; // 0x30(0x10)
	struct ATigerPlayer* PlayerOwner; // 0x40(0x08)
	struct FName ConsequenceName; // 0x48(0x08)
	float Duration; // 0x50(0x04)
	bool bShouldRefresh; // 0x54(0x01)
	char pad_55[0xb]; // 0x55(0x0b)
};

// Class Tiger.TigerMasqueradeActionMarker
// Size: 0x238 (Inherited: 0x228)
struct ATigerMasqueradeActionMarker : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	bool bOnlyVisibleInHeightenedSenses; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
};

// Class Tiger.TigerMasqueradeConsequenceActionWorldMaker
// Size: 0x68 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceActionWorldMaker : UTigerMasqueradeConsequence {
	struct ATigerMasqueradeActionMarker* MarkerClass; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceBloodHuntedSyncInstance
// Size: 0x80 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceBloodHuntedSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UUserWidget* MapMarkerClass; // 0x58(0x08)
	struct UTigerCompassMarkerWidget* CompassMarkerClass; // 0x60(0x08)
	struct UTexture2D* CompassMarkerTexture; // 0x68(0x08)
	struct FBloodHuntMarker Marker; // 0x70(0x10)
};

// Class Tiger.TigerMasqueradeConsequenceBloodHunted
// Size: 0x68 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceBloodHunted : UTigerMasqueradeConsequence {
	char pad_60[0x8]; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceCompassMarkerSyncInstance
// Size: 0x70 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceCompassMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UTigerCompassMarkerWidget* CompassMarkerClass; // 0x58(0x08)
	struct UTexture2D* CompassMarkerTexture; // 0x60(0x08)
	struct UTigerCompassMarkerWidget* CompassMarker; // 0x68(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceCompassMarker
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceCompassMarker : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance
// Size: 0x60 (Inherited: 0x58)
struct UTigerPlayerMasqueradeConsequenceHsRevealSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	bool bOnlyVisibleInHeightenedsSenses; // 0x58(0x01)
	bool bAffectedPlayerIsWithinLocalHsArea; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)

	void OnLeaveHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance.OnLeaveHsArea // (Final|Native|Public) // @ game+0x14f2660
	void OnEnterHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerPlayerMasqueradeConsequenceHsRevealSyncInstance.OnEnterHsArea // (Final|Native|Public) // @ game+0x14f2540
};

// Class Tiger.TigerPlayerMasqueradeConsequenceHsReveal
// Size: 0x60 (Inherited: 0x60)
struct UTigerPlayerMasqueradeConsequenceHsReveal : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarkerSyncInstance
// Size: 0x70 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceMapAreaMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UTigerMasqueradeMarker* AreaMarkerClass; // 0x58(0x08)
	float AreaRadius; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct UTigerMasqueradeMarkerProxy* MapMarkerProxy; // 0x68(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceMapAreaMarker
// Size: 0x70 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceMapAreaMarker : UTigerMasqueradeConsequence {
	char pad_60[0x10]; // 0x60(0x10)
};

// Class Tiger.TigerMasqueradeConsequenceMapMarkerSyncInstance
// Size: 0x68 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceMapMarkerSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	struct UUserWidget* MapMarkerClass; // 0x58(0x08)
	struct UTigerMapMarkerProxy* MapMarkerProxy; // 0x60(0x08)
};

// Class Tiger.TigerMasqueradeConsequenceMapMarker
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceMapMarker : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerMasqueradeConsequenceTrailSyncInstance
// Size: 0x60 (Inherited: 0x58)
struct UTigerMasqueradeConsequenceTrailSyncInstance : UTigerMasqueradeConsequenceSyncInstance {
	bool bOnlyVisibleInHeightenedsSenses; // 0x58(0x01)
	bool bAffectedPlayerIsWithinLocalHsArea; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)

	void OnTrailDeactivated(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnTrailDeactivated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnTrailActivated(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnTrailActivated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnLeaveHsArea_Native(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnLeaveHsArea_Native // (Final|Native|Public) // @ game+0x14f26f0
	void OnLeaveHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnLeaveHsArea // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnEnterHsArea_Native(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnEnterHsArea_Native // (Final|Native|Public) // @ game+0x14f25d0
	void OnEnterHsArea(struct ATigerPlayer* InPlayer); // Function Tiger.TigerMasqueradeConsequenceTrailSyncInstance.OnEnterHsArea // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMasqueradeConsequenceTrail
// Size: 0x60 (Inherited: 0x60)
struct UTigerMasqueradeConsequenceTrail : UTigerMasqueradeConsequence {
};

// Class Tiger.TigerPlayerMeshManager
// Size: 0x2f0 (Inherited: 0x1f0)
struct UTigerPlayerMeshManager : UTigerCharacterMeshManager {
	struct FTigerPlayerMeshMaterialData MaterialData[0xb]; // 0x1f0(0xb0)
	struct TArray<struct FTigerPlayerMeshMaterialData> StaticMeshMaterialData; // 0x2a0(0x10)
	struct TArray<struct FTigerPlayerMeshMaterialData> PoseableMeshMaterialData; // 0x2b0(0x10)
	struct UMaterialInterface* CurrentOverrideMaterial; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)
	struct TArray<struct FTigerPlayerMaterialOverrideCopyData> ScalarParametersToCopy; // 0x2d0(0x10)
	struct TArray<struct FTigerPlayerMaterialOverrideCopyData> VectorParametersToCopy; // 0x2e0(0x10)

	void ResetMaterials(); // Function Tiger.TigerPlayerMeshManager.ResetMaterials // (Final|Native|Public) // @ game+0x14f2870
	void OverrideMaterial(struct UMaterialInterface* InMaterial, float InTimeOutSeconds); // Function Tiger.TigerPlayerMeshManager.OverrideMaterial // (Final|Native|Public) // @ game+0x14f27a0
};

// Class Tiger.TigerClientPlayerProgressionRewardCollection
// Size: 0x38 (Inherited: 0x28)
struct UTigerClientPlayerProgressionRewardCollection : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerPlayerServerLoginProcess
// Size: 0x88 (Inherited: 0x28)
struct UTigerPlayerServerLoginProcess : UObject {
	struct TMap<struct FString, struct UTigerPlayerBeingLoggedInToServer*> playersBeingLoggedInToServerByUniqueLoginId; // 0x28(0x50)
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerPlayerStart
// Size: 0x260 (Inherited: 0x258)
struct ATigerPlayerStart : APlayerStart {
	char GameTypeSpawnFlags; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
};

// Class Tiger.TigerPlayerStateDataStatics
// Size: 0x28 (Inherited: 0x28)
struct UTigerPlayerStateDataStatics : UBlueprintFunctionLibrary {

	struct FTigerPlayerStateGameData MakePlayerStateGameData(struct FString InPlayerName, enum class ESharkPlatformType InPlatformType); // Function Tiger.TigerPlayerStateDataStatics.MakePlayerStateGameData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x14fbe50
	bool IsStateDataValid(struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerPlayerStateDataStatics.IsStateDataValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14fbd20
	bool IsInLocalPlayersGroup(struct UObject* InWorldContextObject, struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerPlayerStateDataStatics.IsInLocalPlayersGroup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14fbba0
	bool IsInLocalPlayersExtendedGroup(struct UObject* InWorldContextObject, struct FTigerPlayerStateGameData& InPlayerData); // Function Tiger.TigerPlayerStateDataStatics.IsInLocalPlayersExtendedGroup // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x14fba40
	void GetPlayerName(struct UObject* InWorldContextObject, struct FTigerPlayerStateGameData& InPlayerData, bool InIsInstigator, struct FText& OutPlayerName); // Function Tiger.TigerPlayerStateDataStatics.GetPlayerName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x14fb810
};

// Class Tiger.TigerPoiMarkerProxy
// Size: 0x108 (Inherited: 0x68)
struct UTigerPoiMarkerProxy : UTigerMapMarkerProxy {
	struct FPointOfInterest PointOfInterest; // 0x68(0xa0)
};

// Class Tiger.TigerPointOfInterestMapMarkerWidget
// Size: 0x2e0 (Inherited: 0x2c8)
struct UTigerPointOfInterestMapMarkerWidget : UTigerMapMarkerWidget {
	char pad_2C8[0x18]; // 0x2c8(0x18)

	void SetToHighTierLootLocation(struct TSoftClassPtr<UObject>& InHighTierLootGroup); // Function Tiger.TigerPointOfInterestMapMarkerWidget.SetToHighTierLootLocation // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnHighTierLootLocationsChanged(struct TArray<struct TSoftClassPtr<UObject>>& InActiveGroups); // Function Tiger.TigerPointOfInterestMapMarkerWidget.OnHighTierLootLocationsChanged // (Final|Native|Protected|HasOutParms) // @ game+0x14fc020
};

// Class Tiger.TigerPopUpLogWidget
// Size: 0x298 (Inherited: 0x280)
struct UTigerPopUpLogWidget : UTigerWidget {
	struct FString LogString; // 0x280(0x10)
	char pad_290[0x8]; // 0x290(0x08)

	void OnSetLogString(); // Function Tiger.TigerPopUpLogWidget.OnSetLogString // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerPostMatchScreenUI
// Size: 0x2e0 (Inherited: 0x2c8)
struct UTigerPostMatchScreenUI : UTigerLoadingScreenUI {
	struct FMulticastInlineDelegate OnReadyToTravel; // 0x2c8(0x10)
	char pad_2D8[0x8]; // 0x2d8(0x08)

	void ShowPlayerReviewDialog(); // Function Tiger.TigerPostMatchScreenUI.ShowPlayerReviewDialog // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x14fc530
	void ReadyToTravel(); // Function Tiger.TigerPostMatchScreenUI.ReadyToTravel // (Final|Native|Public|BlueprintCallable) // @ game+0x14fc170
	void OnWidgetClassLoaded__DelegateSignature(struct UTigerWidget* InWidgetClass); // DelegateFunction Tiger.TigerPostMatchScreenUI.OnWidgetClassLoaded__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void OnReadyToTravelDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerPostMatchScreenUI.OnReadyToTravelDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void GetPlayerData(); // Function Tiger.TigerPostMatchScreenUI.GetPlayerData // (Final|Native|Public|BlueprintCallable) // @ game+0x14fb7f0
	bool GetIsReadyToTravel(); // Function Tiger.TigerPostMatchScreenUI.GetIsReadyToTravel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb7d0
	bool CanShowPlayerReviewDialog(); // Function Tiger.TigerPostMatchScreenUI.CanShowPlayerReviewDialog // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb340
	void AsyncLoadPlacementWidget(struct FDelegate& InDelegate); // Function Tiger.TigerPostMatchScreenUI.AsyncLoadPlacementWidget // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14fb290
};

// Class Tiger.TigerPowerKit
// Size: 0x298 (Inherited: 0x30)
struct UTigerPowerKit : UDataAsset {
	enum class ETigerPowerKitType ArchetypeType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct FText DISPLAYNAME; // 0x38(0x18)
	struct FText ArchetypeKeywordsText; // 0x50(0x18)
	struct FText FormattedDescription; // 0x68(0x18)
	struct FColor ArchetypeColor; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct TSoftObjectPtr<UTexture2D> ArchetypeSelectTexture; // 0x88(0x28)
	struct TSoftObjectPtr<UMaterial> ArchetypeHighlightMaterial; // 0xb0(0x28)
	struct TSoftObjectPtr<UTexture2D> ArchetypeBackgroundTexture; // 0xd8(0x28)
	struct TSoftObjectPtr<UTexture2D> ArchetypeIcon; // 0x100(0x28)
	struct UMediaSource* ArchetypeSelectCinematic; // 0x128(0x08)
	struct TArray<struct UTigerPassiveConfig*> Passives; // 0x130(0x10)
	struct FTigerCharacterStatModification Stats; // 0x140(0xa8)
	struct FTigerItemId DefaultPerkId; // 0x1e8(0x08)
	enum class ETigerDisciplinesEnum LeftDiscipline; // 0x1f0(0x01)
	enum class ETigerDisciplinesEnum RightDiscipline; // 0x1f1(0x01)
	char pad_1F2[0x6]; // 0x1f2(0x06)
	struct TSoftObjectPtr<UTigerCharacterPreset> DefaultCharacterPreset; // 0x1f8(0x28)
	struct TSoftObjectPtr<UTigerCharacterPreset> FirstTimeCharacterPreset; // 0x220(0x28)
	struct TSoftObjectPtr<UTigerCharacterPreset> BotOutfitPresets[0x2]; // 0x248(0x50)

	struct TSoftObjectPtr<UTigerCharacterPreset> GetBotPresetByBodyType(enum class ETigerGender InGender); // Function Tiger.TigerPowerKit.GetBotPresetByBodyType // (Final|Native|Public|BlueprintCallable) // @ game+0x14fb6e0
};

// Class Tiger.TigerPreMatchPaperDollComponent
// Size: 0x150 (Inherited: 0xb0)
struct UTigerPreMatchPaperDollComponent : UActorComponent {
	struct TMap<struct FName, struct ATigerPaperDoll*> PaperDollByTagNames; // 0xb0(0x50)
	struct TMap<struct ATigerPaperDoll*, struct FTigerPaperDollHighlightComponents> PaperDollHighlightComponents; // 0x100(0x50)

	void EnablePaperDollHighlight(struct ATigerPaperDoll* InPaperDoll, bool bInEnable); // Function Tiger.TigerPreMatchPaperDollComponent.EnablePaperDollHighlight // (Final|Native|Public|BlueprintCallable) // @ game+0x14fb460
};

// Class Tiger.TigerPremiumCurrencyManager
// Size: 0x60 (Inherited: 0x28)
struct UTigerPremiumCurrencyManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct UTigerStoreService* StoreService; // 0x38(0x08)
	char pad_40[0x20]; // 0x40(0x20)
};

// Class Tiger.TigerPremiumCurrencyManagerNull
// Size: 0x60 (Inherited: 0x60)
struct UTigerPremiumCurrencyManagerNull : UTigerPremiumCurrencyManager {
};

// Class Tiger.TigerPremiumCurrencyManagerPS5
// Size: 0x80 (Inherited: 0x60)
struct UTigerPremiumCurrencyManagerPS5 : UTigerPremiumCurrencyManager {
	char pad_60[0x20]; // 0x60(0x20)
};

// Class Tiger.TigerPremiumCurrencyManagerWin64
// Size: 0x60 (Inherited: 0x60)
struct UTigerPremiumCurrencyManagerWin64 : UTigerPremiumCurrencyManager {
};

// Class Tiger.TigerPremiumCurrencyManagerSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerPremiumCurrencyManagerSettings : UDeveloperSettings {
	struct TArray<struct FString> OfferCategoryIds; // 0x38(0x10)
};

// Class Tiger.TigerPremiumCurrencyUiScreen
// Size: 0x2d8 (Inherited: 0x280)
struct UTigerPremiumCurrencyUiScreen : UTigerWidget {
	char pad_280[0x58]; // 0x280(0x58)

	void PurchaseResult(enum class EShPaymentResult InPurchaseResult); // Function Tiger.TigerPremiumCurrencyUiScreen.PurchaseResult // (Final|Native|Protected) // @ game+0x14fc0f0
	void OnPurchaseHandled(bool bInWasSuccesful, enum class EShPaymentResult InPurchaseResult); // Function Tiger.TigerPremiumCurrencyUiScreen.OnPurchaseHandled // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCurrencyPacksUpdateFailed(); // Function Tiger.TigerPremiumCurrencyUiScreen.OnCurrencyPacksUpdateFailed // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnCurrencyPacksUpdated(struct TArray<struct FTigerPremiumCurrencyPackData>& InPremiumCurrencyPacks); // Function Tiger.TigerPremiumCurrencyUiScreen.OnCurrencyPacksUpdated // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnCloseCurrencyStore(); // Function Tiger.TigerPremiumCurrencyUiScreen.OnCloseCurrencyStore // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void LoadCurrencyPacks(); // Function Tiger.TigerPremiumCurrencyUiScreen.LoadCurrencyPacks // (Final|Native|Public|BlueprintCallable) // @ game+0x14fbe30
	bool IsLoadingPremiumCurrencyPacks(); // Function Tiger.TigerPremiumCurrencyUiScreen.IsLoadingPremiumCurrencyPacks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fbd00
	void ConfirmPurchase(struct FTigerPremiumCurrencyPackData& InCurrencyPackData); // Function Tiger.TigerPremiumCurrencyUiScreen.ConfirmPurchase // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x14fb370
};

// Class Tiger.TigerPresenceService
// Size: 0x40 (Inherited: 0x28)
struct UTigerPresenceService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerPresenceSubsystem
// Size: 0xa8 (Inherited: 0x30)
struct UTigerPresenceSubsystem : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnPlayerPresenceChange; // 0x30(0x10)
	struct FMulticastInlineDelegate OnPlayersPresenceChange; // 0x40(0x10)
	struct UTigerPresenceService* PresenceService; // 0x50(0x08)
	int32_t HeartbeatIntervalInSeconds; // 0x58(0x04)
	char pad_5C[0x4c]; // 0x5c(0x4c)

	void TigerOnPlayersPresenceChange__DelegateSignature(struct TArray<struct FTigerPlayerPresenceInfo>& InPlayersPresenceInfo); // DelegateFunction Tiger.TigerPresenceSubsystem.TigerOnPlayersPresenceChange__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void TigerOnPlayerPresenceChange__DelegateSignature(struct FTigerPlayerPresenceInfo& InPlayerPresenceInfo); // DelegateFunction Tiger.TigerPresenceSubsystem.TigerOnPlayerPresenceChange__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x18b4070
	void SetPlayerInformation(struct FString InPlayerLevel, struct FString InPlayerCard); // Function Tiger.TigerPresenceSubsystem.SetPlayerInformation // (Final|Native|Public|BlueprintCallable) // @ game+0x14fc430
	void SetLocation(struct FString InLocation); // Function Tiger.TigerPresenceSubsystem.SetLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x14fc390
	void SetInterestedPlayers(struct TArray<struct FString>& InInterestedPlayerIds); // Function Tiger.TigerPresenceSubsystem.SetInterestedPlayers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14fc2c0
	void Register(struct FString InLocation, struct TArray<struct FString>& InInterestedPlayerIds); // Function Tiger.TigerPresenceSubsystem.Register // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x14fc190
	struct TArray<struct FTigerPlayerPresenceInfo> GetInterestedPlayers(); // Function Tiger.TigerPresenceSubsystem.GetInterestedPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb790
	void DeRegister(); // Function Tiger.TigerPresenceSubsystem.DeRegister // (Final|Native|Public|BlueprintCallable) // @ game+0x14fb440
};

// Class Tiger.TigerPreSpawnMapUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerPreSpawnMapUI : UTigerWidget {
};

// Class Tiger.TigerCharacterPreset
// Size: 0x308 (Inherited: 0x28)
struct UTigerCharacterPreset : UObject {
	struct FTigerPreviewerData PreviewerData; // 0x28(0x2d8)
	enum class ETigerGender BodyType; // 0x300(0x01)
	char pad_301[0x7]; // 0x301(0x07)

	enum class ETigerGender GetBodyTypeFromHead(); // Function Tiger.TigerCharacterPreset.GetBodyTypeFromHead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb6b0
	struct FTigerCharacterAppearance GetAppearance(); // Function Tiger.TigerCharacterPreset.GetAppearance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb530
};

// Class Tiger.TigerPrimogenNPC
// Size: 0xb40 (Inherited: 0xb20)
struct ATigerPrimogenNPC : ATigerNPC {
	struct FSoftObjectPath CharacterPresetPath; // 0xb20(0x18)
	char pad_B38[0x8]; // 0xb38(0x08)

	void OnRep_CharacterPresetPath(); // Function Tiger.TigerPrimogenNPC.OnRep_CharacterPresetPath // (Final|Native|Protected) // @ game+0x15015e0
};

// Class Tiger.TigerBodyPartProjectileDamageModifiersAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerBodyPartProjectileDamageModifiersAsset : UDataAsset {
	struct TMap<struct FName, enum class EBodyPart> BonesToBodyParts; // 0x30(0x50)
};

// Class Tiger.TigerProjectile
// Size: 0x2d0 (Inherited: 0x228)
struct ATigerProjectile : AActor {
	struct USphereComponent* CollisionComp; // 0x228(0x08)
	struct UProjectileMovementComponent* ProjectileMovement; // 0x230(0x08)
	struct UParticleSystemComponent* BulletTrail; // 0x238(0x08)
	struct UStaticMeshComponent* ProjectileMesh; // 0x240(0x08)
	struct UTigerRangedWeapon* RangedWeaponType; // 0x248(0x08)
	char pad_250[0x8]; // 0x250(0x08)
	enum class EHitAudio HitAudioEnum; // 0x258(0x01)
	bool bDoProjectileCollision; // 0x259(0x01)
	bool bIsKilled; // 0x25a(0x01)
	bool bWillBeReflected; // 0x25b(0x01)
	bool bIsReflected; // 0x25c(0x01)
	bool bWasHeadShot; // 0x25d(0x01)
	bool bIsPooled; // 0x25e(0x01)
	char pad_25F[0x1]; // 0x25f(0x01)
	struct FVector SpawnLocation; // 0x260(0x0c)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UTigerProjectilePool* HomeProjectilePool; // 0x270(0x08)
	char pad_278[0x28]; // 0x278(0x28)
	struct TArray<struct FTigerRangedHitInfo> PiercedCharacters; // 0x2a0(0x10)
	struct TArray<struct ATigerCharacter*> HitCharacters; // 0x2b0(0x10)
	char pad_2C0[0x10]; // 0x2c0(0x10)

	void TriggerValidatedHitEffects(struct FHitResult& Hit); // Function Tiger.TigerProjectile.TriggerValidatedHitEffects // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void TriggerInstantaneousHitEffects(struct FHitResult& Hit); // Function Tiger.TigerProjectile.TriggerInstantaneousHitEffects // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void TriggerHitEffects(struct FHitResult& Hit); // Function Tiger.TigerProjectile.TriggerHitEffects // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OverlappedActor(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerProjectile.OverlappedActor // (Final|Native|Public|HasOutParms) // @ game+0x1501850
	void OnReactivate(); // Function Tiger.TigerProjectile.OnReactivate // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void KillProjectile(); // Function Tiger.TigerProjectile.KillProjectile // (Final|Native|Public|BlueprintCallable) // @ game+0x1501530
	bool IsWithinRange(struct FVector& Location); // Function Tiger.TigerProjectile.IsWithinRange // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1501490
	bool IsFriendlyWith(struct ATigerPlayer* InOther); // Function Tiger.TigerProjectile.IsFriendlyWith // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15013f0
	void HitActor(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerProjectile.HitActor // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1501210
	void HideTrail(); // Function Tiger.TigerProjectile.HideTrail // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	float GetBulletDamage(); // Function Tiger.TigerProjectile.GetBulletDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15011e0
	void CreateProjectileParticleSystem(enum class ENetRole InLocalNetRole); // Function Tiger.TigerProjectile.CreateProjectileParticleSystem // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool CheckIsCharacterInHitResults(struct ATigerCharacter* InCharacter); // Function Tiger.TigerProjectile.CheckIsCharacterInHitResults // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1501090
};

// Class Tiger.TigerProjectilePool
// Size: 0x58 (Inherited: 0x28)
struct UTigerProjectilePool : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class Tiger.TigerProjectilePoolingSettings
// Size: 0x40 (Inherited: 0x38)
struct UTigerProjectilePoolingSettings : USharkLocalDeveloperSettings {
	bool bUsingProjectilePooling; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
};

// Class Tiger.TigerProjectilePoolManager
// Size: 0x130 (Inherited: 0x28)
struct UTigerProjectilePoolManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct UObject*> ProjectilePoolTypes; // 0x30(0x10)
	struct TMap<struct ATigerProjectile*, struct UTigerProjectilePool*> LocalPlayerProjectilePoolMap; // 0x40(0x50)
	struct TMap<struct ATigerProjectile*, struct UTigerProjectilePool*> RemotePlayersProjectilePoolMap; // 0x90(0x50)
	struct TMap<struct ATigerProjectile*, struct UTigerProjectilePool*> ServerPlayersProjectilePoolMap; // 0xe0(0x50)
};

// Class Tiger.ProjectilePoolReserveCountSettings
// Size: 0x120 (Inherited: 0x28)
struct UProjectilePoolReserveCountSettings : UObject {
	struct TMap<struct ATigerProjectile*, int8_t> InitialLocalPlayerProjectileReserveCount; // 0x28(0x50)
	struct TMap<struct ATigerProjectile*, int8_t> InitialRemotePlayersProjectileReserveCount; // 0x78(0x50)
	struct TMap<struct ATigerProjectile*, int8_t> InitialServerPlayersProjectileReserveCount; // 0xc8(0x50)
	int8_t DefaultReservedProjectileCount; // 0x118(0x01)
	char pad_119[0x7]; // 0x119(0x07)
};

// Class Tiger.TigerProjectionDashProjectile
// Size: 0x280 (Inherited: 0x228)
struct ATigerProjectionDashProjectile : AActor {
	float MovementSpeed; // 0x228(0x04)
	float Duration; // 0x22c(0x04)
	struct FVector TargetPosition; // 0x230(0x0c)
	struct FVector StartingPosition; // 0x23c(0x0c)
	char pad_248[0xc]; // 0x248(0x0c)
	struct FVector LastValidPosition; // 0x254(0x0c)
	char pad_260[0x8]; // 0x260(0x08)
	struct USphereComponent* SphereCollider; // 0x268(0x08)
	struct UTigerBuff* ThornsBuff; // 0x270(0x08)
	char pad_278[0x8]; // 0x278(0x08)

	void OverlapCharacter(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerProjectionDashProjectile.OverlapCharacter // (Final|Native|Public|HasOutParms) // @ game+0x1501620
	void OnProjectileStopped(); // Function Tiger.TigerProjectionDashProjectile.OnProjectileStopped // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnProjectileDeath(); // Function Tiger.TigerProjectionDashProjectile.OnProjectileDeath // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_OnStopped(); // Function Tiger.TigerProjectionDashProjectile.Multicast_OnStopped // (Net|Native|Event|NetMulticast|Protected) // @ game+0x1418f00
	void Multicast_OnDeath(); // Function Tiger.TigerProjectionDashProjectile.Multicast_OnDeath // (Net|Native|Event|NetMulticast|Protected) // @ game+0xbaaef0
};

// Class Tiger.TigerPromotionalUI
// Size: 0x308 (Inherited: 0x298)
struct UTigerPromotionalUI : UTigerMenuWidget {
	char pad_298[0x10]; // 0x298(0x10)
	bool bIsPreviewWidget; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	int32_t ZValue; // 0x2ac(0x04)
	struct TSoftObjectPtr<UTexture2D> FirstTimeWelcomeTexturePath; // 0x2b0(0x28)
	struct FText FirstTimeWelcomeTitleText; // 0x2d8(0x18)
	struct FText FirstTimeWelcomeDescriptionText; // 0x2f0(0x18)

	void RefreshConfig(); // Function Tiger.TigerPromotionalUI.RefreshConfig // (Final|Native|Protected|BlueprintCallable) // @ game+0xb64580
	void OverrideCulture(struct FString InCulture); // Function Tiger.TigerPromotionalUI.OverrideCulture // (Final|Native|Protected|BlueprintCallable) // @ game+0x1413530
	void OnTitleScreenClosed(); // Function Tiger.TigerPromotionalUI.OnTitleScreenClosed // (Final|Native|Protected) // @ game+0x1501600
	void OnShowFirstTimeEntry(); // Function Tiger.TigerPromotionalUI.OnShowFirstTimeEntry // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnShowEntry(struct FTigerPromotionalPopupConfigEntry& InEntry); // Function Tiger.TigerPromotionalUI.OnShowEntry // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnInitializeDone(bool bInSuccess); // Function Tiger.TigerPromotionalUI.OnInitializeDone // (Final|Native|Protected|BlueprintCallable) // @ game+0x1501550
};

// Class Tiger.TigerPromptCollectionWidget
// Size: 0x338 (Inherited: 0x280)
struct UTigerPromptCollectionWidget : UTigerWidget {
	struct UTigerSimpleTextPrompt* MasqueradeBreachedPrompt; // 0x280(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeBreachedByNpcKillPrompt; // 0x288(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeBreachedByNpcFeedingPrompt; // 0x290(0x08)
	struct UTigerSimpleTextPrompt* MasqueradeRestoredPrompt; // 0x298(0x08)
	struct UTigerSimpleTextPrompt* IntroPrompt; // 0x2a0(0x08)
	struct UTigerSimpleTextPrompt* FirstGasPrompt; // 0x2a8(0x08)
	struct UTigerSimpleTextPrompt* SubsequentGasPrompt; // 0x2b0(0x08)
	struct UTigerSimpleTextPrompt* GasStartedMovingPrompt; // 0x2b8(0x08)
	struct UTigerSimpleTextPrompt* JudgeSpawnedPrompt; // 0x2c0(0x08)
	struct UTigerSimpleTextPrompt* JudgeSlainPrompt; // 0x2c8(0x08)
	struct UTigerSimpleTextPrompt* SupplyDropPrompt; // 0x2d0(0x08)
	struct UTigerSimpleTextPrompt* SuperHighPotentNearbyPrompt; // 0x2d8(0x08)
	struct UTigerSimpleTextPrompt* GameModeInteractionPrompt; // 0x2e0(0x08)
	struct UTigerSimpleTextPrompt* EliminatedPlayerPrompt; // 0x2e8(0x08)
	struct UTigerSimpleTextPrompt* DownedPlayerPrompt; // 0x2f0(0x08)
	struct UTigerSimpleTextPrompt* AssistPrompt; // 0x2f8(0x08)
	struct UTigerEnteringNewAreaPrompt* EnteringNewAreaPrompt; // 0x300(0x08)
	struct UTigerSimpleTextPrompt* ArtifactPickedUpPrompt; // 0x308(0x08)
	struct UTigerSimpleTextPrompt* RespawnsDisabledPrompt; // 0x310(0x08)
	struct TArray<struct FTigerQueuedTextPrompt> TextPromptQueue; // 0x318(0x10)
	struct TArray<struct FTigerQueuedTextPromptPriorityEntry> Prompts; // 0x328(0x10)

	void EnqueueTextPrompt(struct UTigerSimpleTextPrompt* InTextPrompt); // Function Tiger.TigerPromptCollectionWidget.EnqueueTextPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x1501150
};

// Class Tiger.TigerStaticMeshPropComponent
// Size: 0x4f0 (Inherited: 0x4e0)
struct UTigerStaticMeshPropComponent : UStaticMeshComponent {
	char pad_4E0[0x10]; // 0x4e0(0x10)
};

// Class Tiger.TigerSkeletalMeshPropComponent
// Size: 0xf00 (Inherited: 0xef0)
struct UTigerSkeletalMeshPropComponent : USkeletalMeshComponent {
	char pad_EF0[0x10]; // 0xef0(0x10)
};

// Class Tiger.TigerPropEffectsComponent
// Size: 0x510 (Inherited: 0x4f0)
struct UTigerPropEffectsComponent : UTigerStaticMeshPropComponent {
	struct UParticleSystem* Particles; // 0x4e8(0x08)
	struct FName AttachPoint; // 0x4f0(0x08)
	struct UParticleSystemComponent* ParticlesSystemComponent; // 0x4f8(0x08)
	bool bActivateEffectOnAttach; // 0x500(0x01)
	char pad_509[0x7]; // 0x509(0x07)
};

// Class Tiger.TigerPropCompInterface
// Size: 0x28 (Inherited: 0x28)
struct UTigerPropCompInterface : UInterface {

	void OnDeactiveEffect(); // Function Tiger.TigerPropCompInterface.OnDeactiveEffect // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnActivateEffect(); // Function Tiger.TigerPropCompInterface.OnActivateEffect // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void DeactiveEffect(); // Function Tiger.TigerPropCompInterface.DeactiveEffect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1501130
	void ActivateEffect(); // Function Tiger.TigerPropCompInterface.ActivateEffect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1501050
};

// Class Tiger.TigerPropDummy
// Size: 0x4d0 (Inherited: 0x4c0)
struct ATigerPropDummy : ACharacter {
	struct UTigerNpcPropComponent* PropComponent; // 0x4b8(0x08)
	struct TArray<struct FTigerDummyPropAttachment> Attachments; // 0x4c0(0x10)
};

// Class Tiger.TigerPS5StoreIconWidget
// Size: 0x268 (Inherited: 0x260)
struct UTigerPS5StoreIconWidget : UUserWidget {
	char pad_260[0x8]; // 0x260(0x08)

	void ShowIcon(); // Function Tiger.TigerPS5StoreIconWidget.ShowIcon // (Final|Native|Public|BlueprintCallable) // @ game+0xb64580
	void HideIcon(); // Function Tiger.TigerPS5StoreIconWidget.HideIcon // (Final|Native|Public|BlueprintCallable) // @ game+0xb64580
};

// Class Tiger.TigerPsoCacheUI
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerPsoCacheUI : UTigerWidget {
	struct FMulticastInlineDelegate OnCachingDone; // 0x280(0x10)
	struct UTigerSharedMouseCursor* SharedMouseCursor; // 0x290(0x08)
	char pad_298[0x10]; // 0x298(0x10)

	void TigerOnCachingDone__DelegateSignature(); // DelegateFunction Tiger.TigerPsoCacheUI.TigerOnCachingDone__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool ShouldCacheDx12PsosAtBoot(); // Function Tiger.TigerPsoCacheUI.ShouldCacheDx12PsosAtBoot // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1501a80
	void OnProgressUpdated(float InPercentageCompleted); // Function Tiger.TigerPsoCacheUI.OnProgressUpdated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void CancelCaching(); // Function Tiger.TigerPsoCacheUI.CancelCaching // (Final|Native|Protected|BlueprintCallable) // @ game+0x1501070
};

// Class Tiger.TigerQuestAnimation
// Size: 0x38 (Inherited: 0x28)
struct UTigerQuestAnimation : UObject {
	struct UAnimMontage* QuestMontage; // 0x28(0x08)
	bool bStopsMovement; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
};

// Class Tiger.TigerQuestObjective
// Size: 0xa8 (Inherited: 0x28)
struct UTigerQuestObjective : UObject {
	struct FText Description; // 0x28(0x18)
	struct FText FlavourText; // 0x40(0x18)
	enum class ETigerMapType MapType; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct UTigerChallenge* Objective; // 0x60(0x08)
	bool bPlayAnimationOnInteract; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UAnimMontage* QuestMontage; // 0x70(0x08)
	bool bStopsMovement; // 0x78(0x01)
	bool bComplete; // 0x79(0x01)
	char pad_7A[0x2]; // 0x7a(0x02)
	struct FGuid ID; // 0x7c(0x10)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct UTigerQuest* ParentQuest; // 0x90(0x08)
	struct UTigerQuestObjectiveSet* ParentObjectiveSet; // 0x98(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0xa0(0x08)

	void OnObjectiveCompleted(struct UTigerChallenge* InTigerChallenge); // Function Tiger.TigerQuestObjective.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x1507c20
	bool IsAvailableOnMap(); // Function Tiger.TigerQuestObjective.IsAvailableOnMap // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15073a0
};

// Class Tiger.TigerQuestObjectiveSet
// Size: 0x50 (Inherited: 0x28)
struct UTigerQuestObjectiveSet : UObject {
	struct TArray<struct UTigerQuestObjective*> Objectives; // 0x28(0x10)
	bool bSetComplete; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct UTigerQuest* ParentQuest; // 0x40(0x08)
	struct ATigerPlayerController* OwningPlayerController; // 0x48(0x08)

	void OnQuestObjectiveSetComplete(); // Function Tiger.TigerQuestObjectiveSet.OnQuestObjectiveSetComplete // (Final|Native|Public) // @ game+0x1507f30
	void OnObjectiveCompleted(struct UTigerQuestObjective* InObjective); // Function Tiger.TigerQuestObjectiveSet.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x1507cb0
	int32_t GetNumberOfCompleteObjectives(); // Function Tiger.TigerQuestObjectiveSet.GetNumberOfCompleteObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506c20
};

// Class Tiger.TigerQuest
// Size: 0x158 (Inherited: 0x28)
struct UTigerQuest : UObject {
	struct FMulticastInlineDelegate OnProgressChangedEvent; // 0x28(0x10)
	struct FMulticastInlineDelegate OnQuestCompletedEvent; // 0x38(0x10)
	struct FMulticastInlineDelegate OnQuestObjectiveCompletedEvent; // 0x48(0x10)
	struct FMulticastInlineDelegate OnQuestObjectiveSetCompleteEvent; // 0x58(0x10)
	struct FText QuestName; // 0x68(0x18)
	struct FText QuestSubheading; // 0x80(0x18)
	struct FText FlavourText; // 0x98(0x18)
	struct TArray<struct UTigerQuestObjectiveSet*> ObjectiveSets; // 0xb0(0x10)
	struct TArray<struct FTigerItemId> RewardIds; // 0xc0(0x10)
	struct FTigerGrimoireUnlock GrimoireUnlock; // 0xd0(0x10)
	bool bAutoStart; // 0xe0(0x01)
	bool bStartsNextQuest; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)
	struct FString NextQuestLineId; // 0xe8(0x10)
	struct FString NextQuestId; // 0xf8(0x10)
	struct FTigerQuestIdentifier QuestLookupIdentifier; // 0x108(0x40)
	struct ATigerPlayerController* OwningPlayerController; // 0x148(0x08)
	char pad_150[0x8]; // 0x150(0x08)

	void OnQuestObjectiveSetCompletedEvent__DelegateSignature(struct UTigerQuest* Quest, struct UTigerQuestObjectiveSet* ObjectiveSet); // DelegateFunction Tiger.TigerQuest.OnQuestObjectiveSetCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnQuestObjectiveCompletedEvent__DelegateSignature(struct UTigerQuest* Quest, struct UTigerQuestObjective* Objective); // DelegateFunction Tiger.TigerQuest.OnQuestObjectiveCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnQuestCompletedEvent__DelegateSignature(struct UTigerQuest* Quest); // DelegateFunction Tiger.TigerQuest.OnQuestCompletedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnProgressChangedEvent__DelegateSignature(struct UTigerQuest* Quest); // DelegateFunction Tiger.TigerQuest.OnProgressChangedEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnObjectiveSetCompleted(struct UTigerQuestObjectiveSet* InTigerObjectiveSet); // Function Tiger.TigerQuest.OnObjectiveSetCompleted // (Final|Native|Public) // @ game+0x1507d40
	void OnObjectiveCompleted(struct UTigerQuestObjective* InTigerObjective); // Function Tiger.TigerQuest.OnObjectiveCompleted // (Final|Native|Public) // @ game+0x1507b90
	struct FTigerItemId GetRarestRewardAsItemId(); // Function Tiger.TigerQuest.GetRarestRewardAsItemId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507250
	struct UTigerInventoryItemBase* GetRarestRewardAsInventoryItem(); // Function Tiger.TigerQuest.GetRarestRewardAsInventoryItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507220
	struct FTigerQuestIdentifier GetQuestIdentifier(); // Function Tiger.TigerQuest.GetQuestIdentifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506e00
	int32_t GetNumberOfObjectives(); // Function Tiger.TigerQuest.GetNumberOfObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506c80
	int32_t GetNumberOfCompletedObjectives(); // Function Tiger.TigerQuest.GetNumberOfCompletedObjectives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506c50
	struct TArray<struct UTigerQuestObjective*> GetIncompleteObjectivesFromActiveSet(); // Function Tiger.TigerQuest.GetIncompleteObjectivesFromActiveSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506ae0
	struct TArray<struct UTigerQuestObjective*> GetCompleteObjectivesFromActiveSet(); // Function Tiger.TigerQuest.GetCompleteObjectivesFromActiveSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506550
	void GetAllIncompleteActiveAndCompleteObjectives(struct TArray<struct UTigerQuestObjective*>& OutIncompleteActiveObjectives, struct TArray<struct UTigerQuestObjective*>& OutCompleteObjectives); // Function Tiger.TigerQuest.GetAllIncompleteActiveAndCompleteObjectives // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15062d0
	struct UTigerQuestObjectiveSet* GetActiveObjectiveSet(); // Function Tiger.TigerQuest.GetActiveObjectiveSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506230
};

// Class Tiger.TigerQuestCollection
// Size: 0x80 (Inherited: 0x30)
struct UTigerQuestCollection : UDataAsset {
	struct TMap<struct FString, struct UTigerQuestline*> QuestLines; // 0x30(0x50)

	struct UTigerQuestline* GetQuestLineWithId(struct FString InQuestlineId); // Function Tiger.TigerQuestCollection.GetQuestLineWithId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506f80
	enum class ETigerQuestCategory GetQuestlineCategoryFromId(struct FString InQuestlineId); // Function Tiger.TigerQuestCollection.GetQuestlineCategoryFromId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507030
	void GetAllQuestlinesWithCategory(enum class ETigerQuestCategory InCategory, struct TArray<struct UTigerQuestline*> OutQuestlines); // Function Tiger.TigerQuestCollection.GetAllQuestlinesWithCategory // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x15063f0
};

// Class Tiger.TigerQuestSystem
// Size: 0x1c0 (Inherited: 0xb0)
struct UTigerQuestSystem : UActorComponent {
	char pad_B0[0x110]; // 0xb0(0x110)

	void Server_GatherQuestLocations(); // Function Tiger.TigerQuestSystem.Server_GatherQuestLocations // (Final|Net|NetReliableNative|Event|Private|NetServer) // @ game+0x13ecaa0
	void OnQuestObjectiveComplete(struct UTigerQuest* InQuest, struct UTigerQuestObjective* InCompleteObjective); // Function Tiger.TigerQuestSystem.OnQuestObjectiveComplete // (Final|Native|Protected) // @ game+0x1507e60
	void OnQuestComplete(struct UTigerQuest* InCompleteQuest); // Function Tiger.TigerQuestSystem.OnQuestComplete // (Final|Native|Protected) // @ game+0x1507dd0
	void Client_SetCachedQuestLocations(struct TArray<struct FTigerQuestItemLocationDetails> InCachedQuestMapLocations); // Function Tiger.TigerQuestSystem.Client_SetCachedQuestLocations // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1506070
	void Client_OnQuestStarted(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestStarted // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1505e30
	void Client_OnQuestObjectiveStarted(struct FTigerQuestIdentifier InIdentifier, bool bHasServerShownNotification); // Function Tiger.TigerQuestSystem.Client_OnQuestObjectiveStarted // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1505bb0
	void Client_OnQuestObjectiveComplete(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestObjectiveComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1505970
	void Client_OnQuestComplete(struct FTigerQuestIdentifier InIdentifier); // Function Tiger.TigerQuestSystem.Client_OnQuestComplete // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1505730
};

// Class Tiger.TigerQuestline
// Size: 0xd0 (Inherited: 0x28)
struct UTigerQuestline : UObject {
	enum class ETigerQuestCategory Category; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct FDateTime ExpiryDate; // 0x30(0x08)
	struct FText Title; // 0x38(0x18)
	struct TArray<struct FString> OrderedKeys; // 0x50(0x10)
	struct TMap<struct FString, struct UTigerQuest*> Quests; // 0x60(0x50)
	int32_t SeasonId; // 0xb0(0x04)
	bool bWhitelistedForUrgentDialogue; // 0xb4(0x01)
	bool bRemoveAfterLockDate; // 0xb5(0x01)
	char pad_B6[0x2]; // 0xb6(0x02)
	struct FDateTime LockDate; // 0xb8(0x08)
	struct FTigerItemId BattlePassItemId; // 0xc0(0x08)
	uint32_t EventId; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)

	bool HasExpiry(); // Function Tiger.TigerQuestline.HasExpiry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507350
	void GetQuestsAndIdsSeparated(struct TArray<struct FString>& OutIds, struct TArray<struct UTigerQuest*>& OutQuests); // Function Tiger.TigerQuestline.GetQuestsAndIdsSeparated // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15070e0
	struct UTigerQuest* GetQuestByKey(struct FString InKey); // Function Tiger.TigerQuestline.GetQuestByKey // (Final|Native|Public|BlueprintCallable) // @ game+0x1506d50
	struct UTigerQuest* GetQuestByIndex(int32_t InIndex); // Function Tiger.TigerQuestline.GetQuestByIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1506cb0
	int32_t GetNumOfCompletedQuests(); // Function Tiger.TigerQuestline.GetNumOfCompletedQuests // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506bf0
	void GetExpiryTime(struct UTigerEventSystem* InEventSystem, struct FDateTime& OutTime); // Function Tiger.TigerQuestline.GetExpiryTime // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x15069a0
	struct FString GetEventTitle(struct UTigerEventSystem* InEventSystem); // Function Tiger.TigerQuestline.GetEventTitle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15068c0
	struct FDateTime GetEventStartDate(struct UTigerEventSystem* InEventSystem); // Function Tiger.TigerQuestline.GetEventStartDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506830
	struct FDateTime GetEventEndDate(struct UTigerEventSystem* InEventSystem); // Function Tiger.TigerQuestline.GetEventEndDate // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x15067a0
};

// Class Tiger.TigerQueueForLogin
// Size: 0x88 (Inherited: 0x30)
struct UTigerQueueForLogin : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate ReadyForLogin; // 0x30(0x10)
	struct FMulticastInlineDelegate WaitTimeUpdated; // 0x40(0x10)
	struct FMulticastInlineDelegate Error; // 0x50(0x10)
	char pad_60[0x8]; // 0x60(0x08)
	struct UTigerLoginQueueService* LoginQueueService; // 0x68(0x08)
	char pad_70[0x18]; // 0x70(0x18)

	void QueueForLoginOutputPin__DelegateSignature(struct FTigerLoginQueueToken& LoginToken, struct FTimespan& EstimatedWaitTime, struct FString ErrorMessage); // DelegateFunction Tiger.TigerQueueForLogin.QueueForLoginOutputPin__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // @ game+0x18b4070
	struct UTigerQueueForLogin* QueueForLogin(struct UObject* InWorldContextObject); // Function Tiger.TigerQueueForLogin.QueueForLogin // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1507fe0
};

// Class Tiger.TigerRadarChart
// Size: 0x1d0 (Inherited: 0x108)
struct UTigerRadarChart : UWidget {
	struct FSlateBrush GraphImage; // 0x108(0x88)
	struct FColor FillColor; // 0x190(0x04)
	int32_t Points; // 0x194(0x04)
	float Radius; // 0x198(0x04)
	float Tilt; // 0x19c(0x04)
	struct FVector2D Offset; // 0x1a0(0x08)
	int32_t ValueMaximum; // 0x1a8(0x04)
	int32_t ValueMinimum; // 0x1ac(0x04)
	struct TArray<int32_t> Values; // 0x1b0(0x10)
	char pad_1C0[0x10]; // 0x1c0(0x10)

	void SetValue(int32_t InIndex, int32_t InValue); // Function Tiger.TigerRadarChart.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1508460
	void SetAllValues(struct TArray<int32_t> InValues, int32_t InDefaultValue); // Function Tiger.TigerRadarChart.SetAllValues // (Final|Native|Public|BlueprintCallable) // @ game+0x1508330
	void NullifyAllValues(); // Function Tiger.TigerRadarChart.NullifyAllValues // (Final|Native|Public|BlueprintCallable) // @ game+0x1507ae0
};

// Class Tiger.TigerRangedWeaponComponent
// Size: 0x2d0 (Inherited: 0xb0)
struct UTigerRangedWeaponComponent : UActorComponent {
	struct FMulticastInlineDelegate OnShowCrosshairAmmoState; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnReloadStart; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnReloadFinished; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnReloadAborted; // 0xe0(0x10)
	struct FMulticastInlineDelegate OnBurstCompleted; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnLowAmmo; // 0x100(0x10)
	struct FMulticastInlineDelegate OnRangedWeaponEquipped; // 0x110(0x10)
	struct FMulticastInlineDelegate OnAimChanged; // 0x120(0x10)
	struct UTigerBodyPartProjectileDamageModifiersAsset* BodyPartDamageModifiersAsset; // 0x130(0x08)
	char pad_138[0x10]; // 0x138(0x10)
	struct ATigerPlayer* TigerPlayer; // 0x148(0x08)
	struct UDataTable* RangedWeaponsDatatable; // 0x150(0x08)
	struct UStaticMesh* ImpactHelperMesh; // 0x158(0x08)
	struct UAkAudioEvent* FireModeSwitchEvent; // 0x160(0x08)
	struct UTigerRangedWeapon* EquippedWeaponType; // 0x168(0x08)
	struct UAnimMontage* LastFireAnimationMontage; // 0x170(0x08)
	char pad_178[0x20]; // 0x178(0x20)
	float CurrentFireRateMultiplier; // 0x198(0x04)
	char pad_19C[0xc]; // 0x19c(0x0c)
	enum class ETigerWeaponSlot CurrentSlotForFireSettingIndex; // 0x1a8(0x01)
	char pad_1A9[0x3]; // 0x1a9(0x03)
	int32_t CurrentFireSettingIndex; // 0x1ac(0x04)
	char pad_1B0[0x28]; // 0x1b0(0x28)
	struct FTimerHandle ReloadWeaponTimerHandle; // 0x1d8(0x08)
	char pad_1E0[0x2]; // 0x1e0(0x02)
	bool bIsFiring; // 0x1e2(0x01)
	bool bWantsToFire; // 0x1e3(0x01)
	bool bIsAiming; // 0x1e4(0x01)
	char pad_1E5[0x23]; // 0x1e5(0x23)
	struct UStaticMeshComponent* ImpactHelperMeshComp; // 0x208(0x08)
	char pad_210[0x38]; // 0x210(0x38)
	float CoolDownOutOfAmmoAudioEvent; // 0x248(0x04)
	char pad_24C[0x10]; // 0x24c(0x10)
	int32_t ProjectilesFiredSinceStartFire; // 0x25c(0x04)
	char pad_260[0x28]; // 0x260(0x28)
	struct UTigerAICoordinator* AICoordinator; // 0x288(0x08)
	char pad_290[0x30]; // 0x290(0x30)
	struct ATigerProjectile* LastFiredProjectile; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	bool WeaponUsesScope(); // Function Tiger.TigerRangedWeaponComponent.WeaponUsesScope // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15085b0
	bool WeaponCanSwitchFireMode(); // Function Tiger.TigerRangedWeaponComponent.WeaponCanSwitchFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1508580
	bool WantsToFire(); // Function Tiger.TigerRangedWeaponComponent.WantsToFire // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1508560
	void TigerOnShowCrosshairAmmoState__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnShowCrosshairAmmoState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnReloadStart__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadStart__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnReloadFinished__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnReloadAborted__DelegateSignature(bool bInWeaponDropped); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnReloadAborted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnRangedWeaponEquipped__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnRangedWeaponEquipped__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnLowAmmo__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnLowAmmo__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnBurstCompleted__DelegateSignature(); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnBurstCompleted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnAimChanged__DelegateSignature(bool bIsAiming); // DelegateFunction Tiger.TigerRangedWeaponComponent.TigerOnAimChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool ShouldUseAimingAnimation(); // Function Tiger.TigerRangedWeaponComponent.ShouldUseAimingAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1508530
	void Server_SwitchFireMode(); // Function Tiger.TigerRangedWeaponComponent.Server_SwitchFireMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x15082e0
	void Server_SetFireAudioState(enum class ETigerFireAudioState InAudioFireState); // Function Tiger.TigerRangedWeaponComponent.Server_SetFireAudioState // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1465e70
	void Server_SetClientSideHitDetectionRanged(bool bEnableClientSideHits); // Function Tiger.TigerRangedWeaponComponent.Server_SetClientSideHitDetectionRanged // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1508220
	void Server_DebugClientHit(int32_t InProjectileId, struct FVector InMeshOffset, float InLastCorrectionTime, float InDeltaTime); // Function Tiger.TigerRangedWeaponComponent.Server_DebugClientHit // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x1508070
	void OnRep_CurrentFireSettingIndexChanged(int32_t InPreviousFireSettingIndex); // Function Tiger.TigerRangedWeaponComponent.OnRep_CurrentFireSettingIndexChanged // (Final|Native|Protected) // @ game+0x1507f50
	void OnMontageStartedDuringReload(struct UAnimMontage* Montage); // Function Tiger.TigerRangedWeaponComponent.OnMontageStartedDuringReload // (Final|Native|Protected) // @ game+0x1507b00
	void Multicast_UpdateReloadLoopsLeft(int8_t InReloadLoopsDelta); // Function Tiger.TigerRangedWeaponComponent.Multicast_UpdateReloadLoopsLeft // (Net|Native|Event|NetMulticast|Public) // @ game+0x1507a60
	void Multicast_SetFireAudioState(enum class ETigerFireAudioState InAudioFireState); // Function Tiger.TigerRangedWeaponComponent.Multicast_SetFireAudioState // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x15079e0
	void Multicast_SetClientSideHitDetectionRanged(bool bEnableClientSideHits); // Function Tiger.TigerRangedWeaponComponent.Multicast_SetClientSideHitDetectionRanged // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1507950
	void Multicast_PlayReloadAnimations(int8_t InReloadLoops, float InPlayRate); // Function Tiger.TigerRangedWeaponComponent.Multicast_PlayReloadAnimations // (Net|Native|Event|NetMulticast|Public) // @ game+0x1507880
	void Multicast_PlayPrimingAnimations(); // Function Tiger.TigerRangedWeaponComponent.Multicast_PlayPrimingAnimations // (Net|Native|Event|NetMulticast|Public) // @ game+0x1507860
	void Multicast_OnWeaponFired(struct FVector_NetQuantize100 InSpawnLocation, float InShootDirPitch, float InShootDirYaw, float InFireSpread, struct FTigerRangedRandomState InFireRandomState, bool bInFirstBulletInBurst, int32_t InAmmoInMag); // Function Tiger.TigerRangedWeaponComponent.Multicast_OnWeaponFired // (Net|Native|Event|NetMulticast|Public) // @ game+0x1507640
	void Multicast_OnNpcWeaponFired(struct FVector_NetQuantize100 InSpawnLocation, struct FVector_NetQuantize100 InTargetLocation, float InFireSpread, struct FTigerRangedRandomState InFireRandomState); // Function Tiger.TigerRangedWeaponComponent.Multicast_OnNpcWeaponFired // (Net|Native|Event|NetMulticast|Public) // @ game+0x15074e0
	void Multicast_AbortReloadAnimation(); // Function Tiger.TigerRangedWeaponComponent.Multicast_AbortReloadAnimation // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x149c3a0
	bool IsLowOnLoadedAmmo(); // Function Tiger.TigerRangedWeaponComponent.IsLowOnLoadedAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15074b0
	bool IsInReload(); // Function Tiger.TigerRangedWeaponComponent.IsInReload // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507480
	bool IsInFireMode(enum class ETigerWeaponFireMode FireMode); // Function Tiger.TigerRangedWeaponComponent.IsInFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15073f0
	bool IsFiring(); // Function Tiger.TigerRangedWeaponComponent.IsFiring // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15073d0
	bool IsAiming(); // Function Tiger.TigerRangedWeaponComponent.IsAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507380
	bool HasEquippedOrWantedWeapon(); // Function Tiger.TigerRangedWeaponComponent.HasEquippedOrWantedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507320
	bool HasAmmo(); // Function Tiger.TigerRangedWeaponComponent.HasAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15072f0
	float GetWeaponDamageValue(); // Function Tiger.TigerRangedWeaponComponent.GetWeaponDamageValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15072c0
	float GetReloadDonePercentage(); // Function Tiger.TigerRangedWeaponComponent.GetReloadDonePercentage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1507290
	int32_t GetMaxAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetMaxAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506bc0
	int32_t GetLoadedAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetLoadedAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506b90
	int32_t GetInventoryAmmo(); // Function Tiger.TigerRangedWeaponComponent.GetInventoryAmmo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506b60
	struct UCameraShakeBase* GetHipFireCameraShake(); // Function Tiger.TigerRangedWeaponComponent.GetHipFireCameraShake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506aa0
	struct UForceFeedbackEffect* GetFireForceFeedback(); // Function Tiger.TigerRangedWeaponComponent.GetFireForceFeedback // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506a70
	struct UTigerRangedWeapon* GetEquippedOrWantedWeapon(); // Function Tiger.TigerRangedWeaponComponent.GetEquippedOrWantedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506770
	float GetCurrentSpread(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentSpread // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506740
	float GetCurrentReloadDuration(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentReloadDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506710
	struct ATigerProjectile* GetCurrentProjectileType(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentProjectileType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15066d0
	struct FTigerFireSettings GetCurrentFireSettings(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentFireSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506630
	enum class ETigerWeaponFireMode GetCurrentFireMode(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506600
	float GetCurrentAimedFov(); // Function Tiger.TigerRangedWeaponComponent.GetCurrentAimedFov // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15065d0
	enum class ETigerWeaponAmmoWarning GetAmmoWarning(); // Function Tiger.TigerRangedWeaponComponent.GetAmmoWarning // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506520
	float GetAimSpeedMultiplier(); // Function Tiger.TigerRangedWeaponComponent.GetAimSpeedMultiplier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506260
	struct UCameraShakeBase* GetAimedFireCameraShake(); // Function Tiger.TigerRangedWeaponComponent.GetAimedFireCameraShake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1506290
	void FinishReload(); // Function Tiger.TigerRangedWeaponComponent.FinishReload // (Final|Native|Public) // @ game+0x1506210
	void Client_SwitchFireMode(enum class ETigerWeaponSlot InWeaponSlot, int32_t InNewFireModeIndex); // Function Tiger.TigerRangedWeaponComponent.Client_SwitchFireMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1506140
	void Client_DebugGetClientHit(int32_t InProjectileId); // Function Tiger.TigerRangedWeaponComponent.Client_DebugGetClientHit // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x13ecac0
};

// Class Tiger.TigerRangedWeaponModModifier
// Size: 0x28 (Inherited: 0x28)
struct UTigerRangedWeaponModModifier : UObject {

	void OnModUnequipped(struct UTigerEquippedModModifierValues* Modifiers); // Function Tiger.TigerRangedWeaponModModifier.OnModUnequipped // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnModEquipped(struct UTigerEquippedModModifierValues* Modifiers); // Function Tiger.TigerRangedWeaponModModifier.OnModEquipped // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerRankConfigAsset
// Size: 0x58 (Inherited: 0x30)
struct UTigerRankConfigAsset : UDataAsset {
	struct FTigerRankConfig Config; // 0x30(0x28)

	int32_t GetNextRankId(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetNextRankId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150dc00
	int32_t GetNextRankFloor(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetNextRankFloor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150db60
	int32_t GetCurrentRankId(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetCurrentRankId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d730
	int32_t GetCurrentRankFloor(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetCurrentRankFloor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d690
	int32_t GetCurrentMatchFee(int32_t InCurrentRp); // Function Tiger.TigerRankConfigAsset.GetCurrentMatchFee // (Final|Native|Public|BlueprintCallable) // @ game+0x150d420
	struct TArray<int32_t> GetAllRankThreshholds(); // Function Tiger.TigerRankConfigAsset.GetAllRankThreshholds // (Final|Native|Public|BlueprintCallable) // @ game+0x150d330
};

// Class Tiger.TigerRat
// Size: 0x330 (Inherited: 0x2a0)
struct ATigerRat : ATigerInteractiveObject {
	char pad_2A0[0x8]; // 0x2a0(0x08)
	struct FVector LocalHandOffset; // 0x2a8(0x0c)
	struct FRotator LocalHandRotation; // 0x2b4(0x0c)
	struct UAnimMontage* Montage; // 0x2c0(0x08)
	struct TWeakObjectPtr<struct ATigerPlayerController> CurrentInteractingPlayerController; // 0x2c8(0x08)
	float FeedTickTime; // 0x2d0(0x04)
	float FeedHealthAmount; // 0x2d4(0x04)
	float MoveSpeed; // 0x2d8(0x04)
	float RotationSpeed; // 0x2dc(0x04)
	float MaxWaitTime; // 0x2e0(0x04)
	float MinWaitTime; // 0x2e4(0x04)
	struct USkeletalMeshComponent* RatMesh; // 0x2e8(0x08)
	bool bShouldMove; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)
	struct UAkAudioEvent* PickUpSqueekEvent; // 0x2f8(0x08)
	char pad_300[0x28]; // 0x300(0x28)
	bool bIsEaten; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)

	void OnInteractEnd(); // Function Tiger.TigerRat.OnInteractEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x150e070
	bool IsEaten(); // Function Tiger.TigerRat.IsEaten // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150de40
};

// Class Tiger.TigerRatSpawnpointActorSpawner
// Size: 0x200 (Inherited: 0x200)
struct UTigerRatSpawnpointActorSpawner : USceneComponent {
	struct ATigerRat* ActorToSpawn; // 0x1f8(0x08)
};

// Class Tiger.TigerRatSpawnpoint
// Size: 0x230 (Inherited: 0x228)
struct ATigerRatSpawnpoint : AActor {
	int32_t NumRatsToSpawn; // 0x228(0x04)
	char pad_22C[0x4]; // 0x22c(0x04)
};

// Class Tiger.TigerReactToHeightenedSense
// Size: 0x28 (Inherited: 0x28)
struct UTigerReactToHeightenedSense : UInterface {

	void OnLeaveHeightenedSenseArea(); // Function Tiger.TigerReactToHeightenedSense.OnLeaveHeightenedSenseArea // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnEnterHeightenedSenseAreaInitial(); // Function Tiger.TigerReactToHeightenedSense.OnEnterHeightenedSenseAreaInitial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnEnterHeightenedSenseArea(); // Function Tiger.TigerReactToHeightenedSense.OnEnterHeightenedSenseArea // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerReflectable
// Size: 0x28 (Inherited: 0x28)
struct UTigerReflectable : UInterface {

	struct AActor* CopyAndReflect(struct ATigerCharacter* InNewOwner, struct FVector& InSpawnLocation, struct FRotator& InSpawnRotation); // Function Tiger.TigerReflectable.CopyAndReflect // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x150cee0
	void BlockReflect(struct ATigerCharacter* ReflectOwner); // Function Tiger.TigerReflectable.BlockReflect // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x150cc10
};

// Class Tiger.TigerReflector
// Size: 0x28 (Inherited: 0x28)
struct UTigerReflector : UInterface {
};

// Class Tiger.TigerRejuvenatingVoiceEffectActor
// Size: 0x238 (Inherited: 0x228)
struct ATigerRejuvenatingVoiceEffectActor : AActor {
	struct ATigerPlayer* Player; // 0x228(0x08)
	float HealAmount; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class Tiger.TigerRemoteLocalizationSubSystem
// Size: 0x30 (Inherited: 0x30)
struct UTigerRemoteLocalizationSubSystem : UEngineSubsystem {
};

// Class Tiger.TigerRenderingSettings
// Size: 0x88 (Inherited: 0x38)
struct UTigerRenderingSettings : UDeveloperSettings {
	int32_t MaxSpotLightShadowCasters; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TSoftObjectPtr<UMaterialInterface> LastLodMaterialMaster; // 0x40(0x28)
	struct TArray<struct FName> LastLodExtractionParameters; // 0x68(0x10)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> MaterialsToExclude; // 0x78(0x10)
};

// Class Tiger.TigerReplayCameraManager
// Size: 0x2d20 (Inherited: 0x27c0)
struct ATigerReplayCameraManager : APlayerCameraManager {
	char pad_27C0[0x550]; // 0x27c0(0x550)
	float PPWeight; // 0x2d10(0x04)
	char pad_2D14[0xc]; // 0x2d14(0x0c)
};

// Class Tiger.TigerReplaySpectatorController
// Size: 0xc20 (Inherited: 0x578)
struct ATigerReplaySpectatorController : APlayerController {
	struct UTigerSpringArmComponent* SpringArm; // 0x578(0x08)
	bool bCurrentUsingAbsoluteRotation; // 0x580(0x01)
	char pad_581[0x3]; // 0x581(0x03)
	float CurrentTimeIncrement; // 0x584(0x04)
	struct TArray<float> FStopValidValues; // 0x588(0x10)
	float FOVMinValue; // 0x598(0x04)
	float FOVMaxValue; // 0x59c(0x04)
	float DepthOfFieldFocalDistanceMinValue; // 0x5a0(0x04)
	float DepthOfFieldFocalDistanceMaxValue; // 0x5a4(0x04)
	float DepthOfFieldSensorWidthMinValue; // 0x5a8(0x04)
	float DepthOfFieldSensorWidthMaxValue; // 0x5ac(0x04)
	float MotionBlurMinValue; // 0x5b0(0x04)
	float MotionBlurMaxValue; // 0x5b4(0x04)
	float CameraRollMinValue; // 0x5b8(0x04)
	float CameraRollMaxValue; // 0x5bc(0x04)
	float MinDemoTimeDilation; // 0x5c0(0x04)
	float MaxDemoTimeDilation; // 0x5c4(0x04)
	struct TArray<int32_t> MarkedPlayerIds; // 0x5c8(0x10)
	char pad_5D8[0x8]; // 0x5d8(0x08)
	enum class ETigerReplayCameraMode CurrentCameraMode; // 0x5e0(0x01)
	char pad_5E1[0x7]; // 0x5e1(0x07)
	struct UMatineeCameraShake* CameraShakeBehaviour; // 0x5e8(0x08)
	bool HideDeadPlayers; // 0x5f0(0x01)
	bool FilterMarkedPlayers; // 0x5f1(0x01)
	enum class ETigerReplayCameraMoveType CurrentMoveType; // 0x5f2(0x01)
	enum class ETigerReplayCameraRelativeMoveType CurrentRelativeMoveType; // 0x5f3(0x01)
	enum class ETigerReplayMoveMode CurrentMoveMode; // 0x5f4(0x01)
	enum class ETigerReplayCameraRotateMode CurrentRotateMode; // 0x5f5(0x01)
	char pad_5F6[0x2]; // 0x5f6(0x02)
	struct FString CurrentLookAtBoneName; // 0x5f8(0x10)
	enum class ETigerReplayCameraTransitionType CurrentTransitionType; // 0x608(0x01)
	char pad_609[0x3]; // 0x609(0x03)
	float CurrentMoveTypeParameter; // 0x60c(0x04)
	float BaseRollRate; // 0x610(0x04)
	char pad_614[0x4]; // 0x614(0x04)
	struct FMulticastInlineDelegate ToggleSmoothTransitions; // 0x618(0x10)
	struct FMulticastInlineDelegate ToggleLinearMoves; // 0x628(0x10)
	struct FMulticastInlineDelegate AdvanceFrame; // 0x638(0x10)
	struct FMulticastInlineDelegate DecrementFrame; // 0x648(0x10)
	struct FMulticastInlineDelegate RemoveFrame; // 0x658(0x10)
	struct FMulticastInlineDelegate ReplaceFrame; // 0x668(0x10)
	struct FMulticastInlineDelegate InsertFrame; // 0x678(0x10)
	struct FMulticastInlineDelegate ViewFrame; // 0x688(0x10)
	struct FMulticastInlineDelegate UpdatePlaybackSpeedDisplay; // 0x698(0x10)
	struct FMulticastInlineDelegate UpdateMovementSpeedDisplay; // 0x6a8(0x10)
	struct FMulticastInlineDelegate UpdateLookSpeedDisplay; // 0x6b8(0x10)
	struct FMulticastInlineDelegate UpdateIsPausedDisplay; // 0x6c8(0x10)
	struct FMulticastInlineDelegate ReversePlayers; // 0x6d8(0x10)
	struct FMulticastInlineDelegate TogglePlayers; // 0x6e8(0x10)
	struct FMulticastInlineDelegate ToggleMainUIFocus; // 0x6f8(0x10)
	struct FMulticastInlineDelegate ToggleKeyframingUIFocus; // 0x708(0x10)
	struct FMulticastInlineDelegate UpdateMarked; // 0x718(0x10)
	struct FMulticastInlineDelegate UpdateCameraEffectsSettingsDisplay; // 0x728(0x10)
	struct FMulticastInlineDelegate PlaybackFinished; // 0x738(0x10)
	struct FMulticastInlineDelegate ScrubStarted; // 0x748(0x10)
	struct FMulticastInlineDelegate ScrubCompleted; // 0x758(0x10)
	struct FMulticastInlineDelegate QueuedPauseScrubCompleted; // 0x768(0x10)
	struct FMulticastInlineDelegate CameraAttachmentChanged; // 0x778(0x10)
	struct FMulticastInlineDelegate CellFinishedLoading; // 0x788(0x10)
	struct FMulticastInlineDelegate PlayerSpawned; // 0x798(0x10)
	struct FMulticastInlineDelegate SpectatorUpdated; // 0x7a8(0x10)
	struct FMulticastInlineDelegate CurrentlyPlayingKeyframeUpdated; // 0x7b8(0x10)
	struct FMulticastInlineDelegate UpdateCameraModesSettingsDisplay; // 0x7c8(0x10)
	struct FMulticastInlineDelegate OnKeyFrameRemoved; // 0x7d8(0x10)
	struct FMulticastInlineDelegate OnKeyframingCompleted; // 0x7e8(0x10)
	struct FMulticastInlineDelegate UpdateControlsRefHeldPrerequisiteButtons; // 0x7f8(0x10)
	struct FMulticastInlineDelegate UpdateControlsRefHeldPrerequisiteButtonsParam; // 0x808(0x10)
	bool bPlaybackFinished; // 0x818(0x01)
	char pad_819[0x3]; // 0x819(0x03)
	float KeyFrameOffset; // 0x81c(0x04)
	struct TArray<struct FTigerBookmarkPosition> BookmarkPositions; // 0x820(0x10)
	struct TArray<struct FTigerReplayCameraPosition> CameraPositions; // 0x830(0x10)
	char pad_840[0x1cc]; // 0x840(0x1cc)
	bool bUseQueuedPause; // 0xa0c(0x01)
	bool bQueuePause; // 0xa0d(0x01)
	char pad_A0E[0xe]; // 0xa0e(0x0e)
	float QueuedPauseOffsetSec; // 0xa1c(0x04)
	char pad_A20[0x8]; // 0xa20(0x08)
	float QueuedPausePlayRateLerpExp; // 0xa28(0x04)
	char pad_A2C[0x1f4]; // 0xa2c(0x1f4)

	void UpdateCameraShake(); // Function Tiger.TigerReplaySpectatorController.UpdateCameraShake // (Final|Native|Public|BlueprintCallable) // @ game+0x150f3d0
	void ToggleMarkCurrentlySpectatedPlayer(); // Function Tiger.TigerReplaySpectatorController.ToggleMarkCurrentlySpectatedPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x150f3b0
	void TeleportToCurrentSpectatedPlayer(); // Function Tiger.TigerReplaySpectatorController.TeleportToCurrentSpectatedPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x150f390
	void TeleportToCameraKeyFrame(bool bInToTime, int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.TeleportToCameraKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x150f2c0
	void TeleportToBookmark(int32_t InBookmarkIndex); // Function Tiger.TigerReplaySpectatorController.TeleportToBookmark // (Final|Native|Public|BlueprintCallable) // @ game+0x150f230
	void SetShouldPlaybackSpeedAffectCameraSpeed(bool InEnabled); // Function Tiger.TigerReplaySpectatorController.SetShouldPlaybackSpeedAffectCameraSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x150f1a0
	void SetReplayCameraRotationMode(enum class ETigerReplayCameraRotateMode InRotateMode); // Function Tiger.TigerReplaySpectatorController.SetReplayCameraRotationMode // (Final|Native|Public|BlueprintCallable) // @ game+0x150f120
	void SetReplayCameraMode(enum class ETigerReplayCameraMode InMode); // Function Tiger.TigerReplaySpectatorController.SetReplayCameraMode // (Final|Native|Public|BlueprintCallable) // @ game+0x150f0a0
	void SetPreviousPlayerIndex(int32_t InPlayerIndex); // Function Tiger.TigerReplaySpectatorController.SetPreviousPlayerIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x150f010
	bool SetPausedState(bool bInPauseState); // Function Tiger.TigerReplaySpectatorController.SetPausedState // (Final|Native|Public|BlueprintCallable) // @ game+0x150ef70
	void SetMotionBlurValue(float InValue); // Function Tiger.TigerReplaySpectatorController.SetMotionBlurValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150eef0
	void SetMotionBlurAntiAliasing(bool bInTurnOn); // Function Tiger.TigerReplaySpectatorController.SetMotionBlurAntiAliasing // (Final|Native|Public|BlueprintCallable) // @ game+0x150ee60
	float SetKeyFrameOffset(float InOffset); // Function Tiger.TigerReplaySpectatorController.SetKeyFrameOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x150edc0
	void SetFieldOfViewValue(float InValue); // Function Tiger.TigerReplaySpectatorController.SetFieldOfViewValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150ed40
	void SetDepthOfFieldSensorWidthValue(float InValue); // Function Tiger.TigerReplaySpectatorController.SetDepthOfFieldSensorWidthValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150ecc0
	void SetDepthOfFieldFStopValue(float InValue); // Function Tiger.TigerReplaySpectatorController.SetDepthOfFieldFStopValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150ebc0
	void SetDepthOfFieldFocalDistanceValue(float InValue); // Function Tiger.TigerReplaySpectatorController.SetDepthOfFieldFocalDistanceValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150ec40
	void SetDepthOfFieldEnabled(bool InEnabled); // Function Tiger.TigerReplaySpectatorController.SetDepthOfFieldEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x150eb30
	void SetDepthOfFieldBladeCount(float InValue); // Function Tiger.TigerReplaySpectatorController.SetDepthOfFieldBladeCount // (Final|Native|Public|BlueprintCallable) // @ game+0x150eab0
	void SetCurrentReplayTimeToSeconds(float InSeconds); // Function Tiger.TigerReplaySpectatorController.SetCurrentReplayTimeToSeconds // (Final|Native|Protected|BlueprintCallable) // @ game+0x150e9a0
	void SetCurrentReplayPlayRate(float InPlayRate); // Function Tiger.TigerReplaySpectatorController.SetCurrentReplayPlayRate // (Final|Native|Protected|BlueprintCallable) // @ game+0x150e920
	void SetCurrentPlayerIndex(int32_t InPlayerIndex); // Function Tiger.TigerReplaySpectatorController.SetCurrentPlayerIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x150e890
	void SetCurrentMoveMode(enum class ETigerReplayMoveMode InMoveMode); // Function Tiger.TigerReplaySpectatorController.SetCurrentMoveMode // (Final|Native|Public|BlueprintCallable) // @ game+0x150e810
	void SetCurrentlySpectatedPlayer(struct ATigerPlayer* InPlayer); // Function Tiger.TigerReplaySpectatorController.SetCurrentlySpectatedPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x150ea20
	void SetCameraShakeScale(float InNewValue); // Function Tiger.TigerReplaySpectatorController.SetCameraShakeScale // (Final|Native|Public|BlueprintCallable) // @ game+0x150e790
	void SetCameraShakeEnabled(bool InEnabled); // Function Tiger.TigerReplaySpectatorController.SetCameraShakeEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x150e700
	void SetCameraRollValue(float InValue); // Function Tiger.TigerReplaySpectatorController.SetCameraRollValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150e680
	void SetCameraDefaultMaxSpeed(float InNewValue); // Function Tiger.TigerReplaySpectatorController.SetCameraDefaultMaxSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x150e600
	struct ATigerPlayer* SelectPreviousPlayer(); // Function Tiger.TigerReplaySpectatorController.SelectPreviousPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x150e5d0
	struct ATigerPlayer* SelectPlayerFromList(int32_t InIndexInPlayerList); // Function Tiger.TigerReplaySpectatorController.SelectPlayerFromList // (Final|Native|Public|BlueprintCallable) // @ game+0x150e530
	struct ATigerPlayer* SelectPlayerFromId(int32_t InPlayerId); // Function Tiger.TigerReplaySpectatorController.SelectPlayerFromId // (Final|Native|Public|BlueprintCallable) // @ game+0x150e490
	struct ATigerPlayer* SelectNextPlayer(); // Function Tiger.TigerReplaySpectatorController.SelectNextPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x150e460
	void SaveCameraMove(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.SaveCameraMove // (Final|Native|Public|BlueprintCallable) // @ game+0x150e3c0
	void SaveBookmarkPositions(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.SaveBookmarkPositions // (Final|Native|Public|BlueprintCallable) // @ game+0x150e320
	void ReplaceCameraMoveKeyFrame(int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.ReplaceCameraMoveKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x150e290
	void RemoveCameraMoveKeyFrame(int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.RemoveCameraMoveKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x150e200
	void RemoveBookmark(int32_t InBookmarkIndex); // Function Tiger.TigerReplaySpectatorController.RemoveBookmark // (Final|Native|Public|BlueprintCallable) // @ game+0x150e170
	void RegisterToWorldGrid(); // Function Tiger.TigerReplaySpectatorController.RegisterToWorldGrid // (Final|Native|Public|BlueprintCallable) // @ game+0x150e150
	void PlayReplayFromBP(struct FString InReplayName); // Function Tiger.TigerReplaySpectatorController.PlayReplayFromBP // (Final|Native|Public|BlueprintCallable) // @ game+0x150e0b0
	void PlayCameraMove(); // Function Tiger.TigerReplaySpectatorController.PlayCameraMove // (Final|Native|Public|BlueprintCallable) // @ game+0x150e090
	void LoadCameraMove(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.LoadCameraMove // (Final|Native|Public|BlueprintCallable) // @ game+0x150dfd0
	void LoadBookmarkPositions(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.LoadBookmarkPositions // (Final|Native|Public|BlueprintCallable) // @ game+0x150df30
	bool IsScrubbing(); // Function Tiger.TigerReplaySpectatorController.IsScrubbing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150df10
	bool IsPlayerMarked(struct ATigerPlayer* InPlayer); // Function Tiger.TigerReplaySpectatorController.IsPlayerMarked // (Final|Native|Public|BlueprintCallable) // @ game+0x150de70
	bool IsCurrentlyPlayingKeyframe(); // Function Tiger.TigerReplaySpectatorController.IsCurrentlyPlayingKeyframe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150de20
	bool IsCurrentlyBetweenKeyFrames(); // Function Tiger.TigerReplaySpectatorController.IsCurrentlyBetweenKeyFrames // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150de00
	bool IsCurrentlyAtopKeyFrame(); // Function Tiger.TigerReplaySpectatorController.IsCurrentlyAtopKeyFrame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150dde0
	int32_t InsertCameraMoveKeyFrame(); // Function Tiger.TigerReplaySpectatorController.InsertCameraMoveKeyFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x150ddb0
	int32_t InsertBookmark(); // Function Tiger.TigerReplaySpectatorController.InsertBookmark // (Final|Native|Public|BlueprintCallable) // @ game+0x150dd80
	bool GetShouldPlaybackSpeedAffectCameraSpeed(); // Function Tiger.TigerReplaySpectatorController.GetShouldPlaybackSpeedAffectCameraSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x150dd60
	float GetReplaySpeed(); // Function Tiger.TigerReplaySpectatorController.GetReplaySpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d830
	int32_t GetPreviousPlayerIndex(); // Function Tiger.TigerReplaySpectatorController.GetPreviousPlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150dd40
	struct FString GetPreviousBone(); // Function Tiger.TigerReplaySpectatorController.GetPreviousBone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150dcc0
	bool GetPausedState(); // Function Tiger.TigerReplaySpectatorController.GetPausedState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150dca0
	struct FString GetNextBone(); // Function Tiger.TigerReplaySpectatorController.GetNextBone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150dae0
	float GetMotionBlurValue(); // Function Tiger.TigerReplaySpectatorController.GetMotionBlurValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150dab0
	struct FString GetLastBone(); // Function Tiger.TigerReplaySpectatorController.GetLastBone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150da30
	struct FString GetFirstBone(); // Function Tiger.TigerReplaySpectatorController.GetFirstBone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d9b0
	float GetFieldOfViewValue(); // Function Tiger.TigerReplaySpectatorController.GetFieldOfViewValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d980
	float GetDepthOfFieldSensorWidthValue(); // Function Tiger.TigerReplaySpectatorController.GetDepthOfFieldSensorWidthValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150d950
	float GetDepthOfFieldFStopValue(); // Function Tiger.TigerReplaySpectatorController.GetDepthOfFieldFStopValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150d8f0
	float GetDepthOfFieldFocalDistanceValue(); // Function Tiger.TigerReplaySpectatorController.GetDepthOfFieldFocalDistanceValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150d920
	bool GetDepthOfFieldEnabled(); // Function Tiger.TigerReplaySpectatorController.GetDepthOfFieldEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x150d8d0
	float GetDefaultMaxCameraSpeed(); // Function Tiger.TigerReplaySpectatorController.GetDefaultMaxCameraSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x150d8b0
	float GetCurrentReplayTotalTimeInSeconds(); // Function Tiger.TigerReplaySpectatorController.GetCurrentReplayTotalTimeInSeconds // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d860
	float GetCurrentReplayPlayRate(); // Function Tiger.TigerReplaySpectatorController.GetCurrentReplayPlayRate // (Final|Native|Protected|BlueprintCallable) // @ game+0x150d830
	int32_t GetCurrentReplayCurrentTimeInSeconds(); // Function Tiger.TigerReplaySpectatorController.GetCurrentReplayCurrentTimeInSeconds // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d800
	int32_t GetCurrentReplayCurrentTimeInMilliseconds(); // Function Tiger.TigerReplaySpectatorController.GetCurrentReplayCurrentTimeInMilliseconds // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d7d0
	struct TArray<struct ATigerPlayer*> GetCurrentPlayerListFiltered(); // Function Tiger.TigerReplaySpectatorController.GetCurrentPlayerListFiltered // (Final|Native|Public|BlueprintCallable) // @ game+0x150d610
	struct TArray<struct ATigerPlayer*> GetCurrentPlayerList(bool InFilterOutDeadPlayers, bool InMarkedPlayersOnly); // Function Tiger.TigerReplaySpectatorController.GetCurrentPlayerList // (Final|Native|Public|BlueprintCallable) // @ game+0x150d4e0
	int32_t GetCurrentPlayerIndex(); // Function Tiger.TigerReplaySpectatorController.GetCurrentPlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d4c0
	struct ATigerPlayer* GetCurrentlySpectatedPlayer(); // Function Tiger.TigerReplaySpectatorController.GetCurrentlySpectatedPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x150d890
	int32_t GetCurrentKeyframeIndex(); // Function Tiger.TigerReplaySpectatorController.GetCurrentKeyframeIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d400
	bool GetCameraShakeEnabled(); // Function Tiger.TigerReplaySpectatorController.GetCameraShakeEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x150d3e0
	float GetCameraMaxSpeed(); // Function Tiger.TigerReplaySpectatorController.GetCameraMaxSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d3b0
	enum class ETigerReplaySettingToChangeViaActions GetActivePrerequisiteButtonForValueChange(); // Function Tiger.TigerReplaySpectatorController.GetActivePrerequisiteButtonForValueChange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d2f0
	void FocusOnTarget(); // Function Tiger.TigerReplaySpectatorController.FocusOnTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x150d2d0
	bool DoesCameraMoveKeyFrameExist(int32_t InKeyFrameID); // Function Tiger.TigerReplaySpectatorController.DoesCameraMoveKeyFrameExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d230
	bool DoesCameraFileExist(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.DoesCameraFileExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d180
	bool DoesBookmarkFileExist(struct FString InFilename); // Function Tiger.TigerReplaySpectatorController.DoesBookmarkFileExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d0d0
	bool DoesBookmarkExist(int32_t InBookmarkIndex); // Function Tiger.TigerReplaySpectatorController.DoesBookmarkExist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150d030
	void DetachArm(); // Function Tiger.TigerReplaySpectatorController.DetachArm // (Final|Native|Public|BlueprintCallable) // @ game+0x150d010
	void ClearCurrentlySpectatedPlayer(); // Function Tiger.TigerReplaySpectatorController.ClearCurrentlySpectatedPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x150ce20
	void ChangeCameraRollValue(float InChangeValue); // Function Tiger.TigerReplaySpectatorController.ChangeCameraRollValue // (Final|Native|Public|BlueprintCallable) // @ game+0x150cda0
	bool CameraRotateModeRequiresValidSpectator(enum class ETigerReplayCameraRotateMode InRotateMode); // Function Tiger.TigerReplaySpectatorController.CameraRotateModeRequiresValidSpectator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150cd20
	bool CameraModeRequiresValidSpectator(enum class ETigerReplayCameraMode InMode); // Function Tiger.TigerReplaySpectatorController.CameraModeRequiresValidSpectator // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x150cca0
	void AttachArm(); // Function Tiger.TigerReplaySpectatorController.AttachArm // (Final|Native|Public|BlueprintCallable) // @ game+0x150cbf0
};

// Class Tiger.TigerReplicationGraph
// Size: 0x550 (Inherited: 0x4a0)
struct UTigerReplicationGraph : UReplicationGraph {
	struct UReplicationGraphNode_GridSpatialization2D* GridNode; // 0x498(0x08)
	struct UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned* PlayerSpawnedGridNode; // 0x4a0(0x08)
	struct UReplicationGraphNode_ActorList* AlwaysRelevantNode; // 0x4a8(0x08)
	struct UTigerReplicationGraphNode_OwnerRelevant* OwnerRelevantNode; // 0x4b0(0x08)
	struct UTigerReplicationGraphNode_ExtendedTeamRelevant* ExtendedTeamRelevantNode; // 0x4b8(0x08)
	char pad_4C8[0x88]; // 0x4c8(0x88)
};

// Class Tiger.TigerReplicationGraphNode_AlwaysRelevant_ForConnection
// Size: 0x88 (Inherited: 0x50)
struct UTigerReplicationGraphNode_AlwaysRelevant_ForConnection : UReplicationGraphNode {
	char pad_50[0x18]; // 0x50(0x18)
	struct AActor* LastViewer; // 0x68(0x08)
	struct AActor* LastViewTarget; // 0x70(0x08)
	char pad_78[0x10]; // 0x78(0x10)
};

// Class Tiger.TigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned
// Size: 0x230 (Inherited: 0x230)
struct UTigerReplicationGraphNode_GridSpatialization2D_PlayerSpawned : UReplicationGraphNode_GridSpatialization2D {
};

// Class Tiger.TigerReplicationGraphNode_OwnerRelevant
// Size: 0x80 (Inherited: 0x50)
struct UTigerReplicationGraphNode_OwnerRelevant : UReplicationGraphNode {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Tiger.TigerReplicationGraphNode_ExtendedTeamRelevant
// Size: 0x80 (Inherited: 0x50)
struct UTigerReplicationGraphNode_ExtendedTeamRelevant : UReplicationGraphNode {
	char pad_50[0x30]; // 0x50(0x30)
};

// Class Tiger.TigerReportMenuUI
// Size: 0x318 (Inherited: 0x2c0)
struct UTigerReportMenuUI : UTigerIngameSubmenuWidget {
	char pad_2C0[0x4]; // 0x2c0(0x04)
	int32_t TargetPlayerID; // 0x2c4(0x04)
	char pad_2C8[0x50]; // 0x2c8(0x50)

	void SetReason(enum class ETigerReportReason InReason); // Function Tiger.TigerReportMenuUI.SetReason // (Final|Native|Protected|BlueprintCallable) // @ game+0x1514a80
	bool ReportPlayer(); // Function Tiger.TigerReportMenuUI.ReportPlayer // (Final|Native|Protected|BlueprintCallable) // @ game+0x15146a0
	bool IsPlayerAlreadyReportedForReason(); // Function Tiger.TigerReportMenuUI.IsPlayerAlreadyReportedForReason // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x15144d0
};

// Class Tiger.TigerRequestUtility
// Size: 0x40 (Inherited: 0x28)
struct UTigerRequestUtility : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerResourceBarSegmentUI
// Size: 0x298 (Inherited: 0x280)
struct UTigerResourceBarSegmentUI : UTigerWidget {
	bool NativeTickDisabledInCode; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
	struct UMaterialInstanceDynamic* SegmentMaterial; // 0x288(0x08)
	float MinResource; // 0x290(0x04)
	float MaxResource; // 0x294(0x04)
};

// Class Tiger.TigerRespawnFeatureWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerRespawnFeatureWidget : UTigerWidget {

	void SetLifeTokenCount(int32_t InTokenCount, int32_t InMaxTokens, float InSyncedRespawnTime); // Function Tiger.TigerRespawnFeatureWidget.SetLifeTokenCount // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerRespawnStreamingWidget
// Size: 0x2b8 (Inherited: 0x280)
struct UTigerRespawnStreamingWidget : UTigerWidget {
	float ShowStartTime; // 0x280(0x04)
	float RespawnLoadingTimeLimitInMs; // 0x284(0x04)
	float RespawnStreamingActorsUpdateTimeLimitInMs; // 0x288(0x04)
	char pad_28C[0x14]; // 0x28c(0x14)
	enum class ETigerRespawnStreamingStatus StreamingStatus; // 0x2a0(0x01)
	char pad_2A1[0x17]; // 0x2a1(0x17)

	void Restart(); // Function Tiger.TigerRespawnStreamingWidget.Restart // (Final|Native|Public|BlueprintCallable) // @ game+0x15146f0
	void PrintInfiniteLoadingDebugInfo(); // Function Tiger.TigerRespawnStreamingWidget.PrintInfiniteLoadingDebugInfo // (Final|Native|Protected) // @ game+0x1514680
	void OnStreamingStatusChanged(enum class ETigerRespawnStreamingStatus InStreamingStatus); // Function Tiger.TigerRespawnStreamingWidget.OnStreamingStatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void HandleLifeStatusChanged(enum class ETigerPlayerLifeStatus InNewLifeStatus); // Function Tiger.TigerRespawnStreamingWidget.HandleLifeStatusChanged // (Final|Native|Protected) // @ game+0x1514380
};

// Class Tiger.TigerResurrectAltar
// Size: 0x300 (Inherited: 0x2a0)
struct ATigerResurrectAltar : ATigerInteractiveObject {
	char pad_2A0[0x8]; // 0x2a0(0x08)
	struct ATigerPlayerController* ResurrectingPlayerController; // 0x2a8(0x08)
	float RespawnDelay; // 0x2b0(0x04)
	bool ShouldDisableAfterSingleUse; // 0x2b4(0x01)
	enum class ETigerResurrectHolyIncenseInteractionType HolyIncenseInteractionType; // 0x2b5(0x01)
	char pad_2B6[0x2]; // 0x2b6(0x02)
	float HolyIncensePositionCheckRate; // 0x2b8(0x04)
	float AltarDestroyDelay; // 0x2bc(0x04)
	struct ATigerWorldMarker* WorldMarkerClass; // 0x2c0(0x08)
	struct TArray<struct USceneComponent*> RespawnPoints; // 0x2c8(0x10)
	struct ATigerWorldMarker* WorldMarker; // 0x2d8(0x08)
	char pad_2E0[0x20]; // 0x2e0(0x20)

	void SetupHolyIncenseInteraction(enum class ETigerMatchState InOldState, enum class ETigerMatchState InNewState); // Function Tiger.TigerResurrectAltar.SetupHolyIncenseInteraction // (Final|Native|Protected) // @ game+0x1514ca0
	void OnWaveStoppedMoving(); // Function Tiger.TigerResurrectAltar.OnWaveStoppedMoving // (Final|Native|Protected) // @ game+0x1514660
	void OnWaveStartedMoving(); // Function Tiger.TigerResurrectAltar.OnWaveStartedMoving // (Final|Native|Protected) // @ game+0x1514640
	void OnWaveRevealed(); // Function Tiger.TigerResurrectAltar.OnWaveRevealed // (Final|Native|Protected) // @ game+0x1514620
	void OnResurrectInteractionFinished(); // Function Tiger.TigerResurrectAltar.OnResurrectInteractionFinished // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnResurrect(struct USceneComponent* InUsedSceneComponent, struct FVector InResurrectLocation, struct FRotator InResurrectRotation); // Function Tiger.TigerResurrectAltar.OnResurrect // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void OnAltarDeactivatedAfterUse(); // Function Tiger.TigerResurrectAltar.OnAltarDeactivatedAfterUse // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnAltarDeactivated(); // Function Tiger.TigerResurrectAltar.OnAltarDeactivated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_OnResurrect(int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.Multicast_OnResurrect // (Final|Net|Native|Event|NetMulticast|Private) // @ game+0x1514500
	struct FRotator GetRespawnRotationOffset(struct USceneComponent* InSceneComponent, int32_t InCurrenctResurrectIndex, int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.GetRespawnRotationOffset // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x1514080
	struct FVector GetRespawnLocationOffset(struct USceneComponent* InSceneComponent, int32_t InCurrenctResurrectIndex, int32_t InResurrectCount); // Function Tiger.TigerResurrectAltar.GetRespawnLocationOffset // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x1513f50
	void DestroyAltar(); // Function Tiger.TigerResurrectAltar.DestroyAltar // (Final|Native|Protected) // @ game+0x1513d20
	void CheckWavePosition(); // Function Tiger.TigerResurrectAltar.CheckWavePosition // (Final|Native|Protected) // @ game+0x1513d00
};

// Class Tiger.TigerResurrectComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UTigerResurrectComponent : UActorComponent {
	int32_t TokenCount; // 0xb0(0x04)
	char pad_B4[0x14]; // 0xb4(0x14)
	struct ATigerPlayer* MyPawnToResurrect; // 0xc8(0x08)

	void Server_ResurrectGroupMember(struct FVector InLocation, struct FRotator InRotator); // Function Tiger.TigerResurrectComponent.Server_ResurrectGroupMember // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults) // @ game+0x15147f0
	void ResurrectGroupMember(struct FVector InRespawnLocation, struct FRotator InRespawnRotation); // Function Tiger.TigerResurrectComponent.ResurrectGroupMember // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1514710
	int32_t GetTokenCount(); // Function Tiger.TigerResurrectComponent.GetTokenCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1514340
};

// Class Tiger.TigerRevivingStatusUI
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerRevivingStatusUI : UTigerWidget {
	struct FText RegeneratingStatusText; // 0x280(0x18)
	struct FText DiablerizingStatusText; // 0x298(0x18)
	struct FText BeingRevivedStatusText; // 0x2b0(0x18)
	enum class ETigerPhysicalInteraction PhysicalInteractionStatus; // 0x2c8(0x01)
	bool bShouldUpdateTimer; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	float TimeLeft; // 0x2cc(0x04)
	float PercentageLeft; // 0x2d0(0x04)
	char pad_2D4[0x8]; // 0x2d4(0x08)
	bool ShowPrompt; // 0x2dc(0x01)
	char pad_2DD[0x3]; // 0x2dd(0x03)

	void StatusChanged(); // Function Tiger.TigerRevivingStatusUI.StatusChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerRewardEntry
// Size: 0x38 (Inherited: 0x28)
struct UTigerRewardEntry : UObject {
	int32_t UnlockLevel; // 0x28(0x04)
	enum class ETigerRewardCategory EntryCategory; // 0x2c(0x01)
	char pad_2D[0xb]; // 0x2d(0x0b)

	enum class ETigerRewardEntryType GetEntryType(); // Function Tiger.TigerRewardEntry.GetEntryType // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x149e450
};

// Class Tiger.TigerRewardEntryItem
// Size: 0x38 (Inherited: 0x38)
struct UTigerRewardEntryItem : UTigerRewardEntry {

	struct UTigerInventoryItemBase* GetItem(); // Function Tiger.TigerRewardEntryItem.GetItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1513e30
};

// Class Tiger.TigerRewardEntryPerk
// Size: 0x38 (Inherited: 0x38)
struct UTigerRewardEntryPerk : UTigerRewardEntry {

	struct UTigerPerkItem* GetPerkItem(); // Function Tiger.TigerRewardEntryPerk.GetPerkItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1513ee0
};

// Class Tiger.TigerRewardsPopup
// Size: 0x308 (Inherited: 0x298)
struct UTigerRewardsPopup : UTigerMenuWidget {
	char pad_298[0x10]; // 0x298(0x10)
	int32_t ZValue; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct TMap<enum class ETigerRewardCategory, struct FRewardEntryData> RewardEntriesByCategory; // 0x2b0(0x50)
	char pad_300[0x8]; // 0x300(0x08)

	void SetRewardsSeenInPopup(enum class ETigerRewardCategory InCategory, int32_t InNumRewardsInPopupPage); // Function Tiger.TigerRewardsPopup.SetRewardsSeenInPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x1514b00
	void OnShowRewards(); // Function Tiger.TigerRewardsPopup.OnShowRewards // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void GoToPerksMenu(); // Function Tiger.TigerRewardsPopup.GoToPerksMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1514360
	void GetRewardEntriesForCategory(enum class ETigerRewardCategory InCategory, struct TArray<struct UTigerRewardEntry*>& OutEntries); // Function Tiger.TigerRewardsPopup.GetRewardEntriesForCategory // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x15141b0
};

// Class Tiger.TigerRichTextBlock
// Size: 0x448 (Inherited: 0x128)
struct UTigerRichTextBlock : UTextLayoutWidget {
	struct FText Text; // 0x128(0x18)
	struct FDelegate TextDelegate; // 0x140(0x10)
	struct FSlateFontInfo Font; // 0x150(0x58)
	struct FLinearColor ColorAndOpacity; // 0x1a8(0x10)
	struct TArray<struct UTigerRichTextBlockDecorator*> Decorators; // 0x1b8(0x10)
	char pad_1C8[0x280]; // 0x1c8(0x280)

	void SetText(struct FText& InText); // Function Tiger.TigerRichTextBlock.SetText // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1514bd0
	void SetOpacity(float InOpacity); // Function Tiger.TigerRichTextBlock.SetOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x1514970
	void SetColorAndOpacity(struct FLinearColor& InColorAndOpacity); // Function Tiger.TigerRichTextBlock.SetColorAndOpacity // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15148e0
	struct FText GetText(); // Function Tiger.TigerRichTextBlock.GetText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15142a0
};

// Class Tiger.TigerRichTextBlockIconDecorator
// Size: 0x50 (Inherited: 0x28)
struct UTigerRichTextBlockIconDecorator : URichTextBlockDecorator {
	bool bUsingGamePad; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct ATigerPlayerController* PlayerControllerRef; // 0x30(0x08)
	char pad_38[0x8]; // 0x38(0x08)
	struct UDataTable* IconImages; // 0x40(0x08)
	struct UTigerKeyTextureMapping* KeyTextureMapping; // 0x48(0x08)

	void OnUseGamepadChanged(bool InUsingGamepad); // Function Tiger.TigerRichTextBlockIconDecorator.OnUseGamepadChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x1514590
	void InitializeValues(struct ATigerPlayerController* InTigerController, struct UTigerStyledRichTextBlock* InOwningRichTextBlock); // Function Tiger.TigerRichTextBlockIconDecorator.InitializeValues // (Final|Native|Public|BlueprintCallable) // @ game+0x1514400
	bool GetIsUsingGamePad(); // Function Tiger.TigerRichTextBlockIconDecorator.GetIsUsingGamePad // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1513e00
	struct FSlateBrush GetBrushForKeyInternal(struct FKey InKey); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForKeyInternal // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	struct FSlateBrush GetBrushForAxisInternal(struct FName& InName, float InScale); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForAxisInternal // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	struct FSlateBrush GetBrushForActionInternal(struct FName& InName); // Function Tiger.TigerRichTextBlockIconDecorator.GetBrushForActionInternal // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerRichTextBlockDecorator
// Size: 0x30 (Inherited: 0x28)
struct UTigerRichTextBlockDecorator : UObject {
	bool bReveal; // 0x28(0x01)
	char pad_29[0x3]; // 0x29(0x03)
	int32_t RevealedIndex; // 0x2c(0x04)
};

// Class Tiger.TigerRoofSystem
// Size: 0x238 (Inherited: 0x228)
struct ATigerRoofSystem : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	float Width; // 0x230(0x04)
	float Depth; // 0x234(0x04)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerRoofSystem.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x13f3030
};

// Class Tiger.TigerRoofSystemFreeTransformable
// Size: 0x248 (Inherited: 0x228)
struct ATigerRoofSystemFreeTransformable : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USplineComponent* SplineComponent; // 0x230(0x08)
	struct TArray<struct FTigerRoofSystemFreeTransformableCorner> Corners; // 0x238(0x10)

	void OnUpgrade(int32_t InVersion); // Function Tiger.TigerRoofSystemFreeTransformable.OnUpgrade // (Native|Event|Protected|BlueprintEvent) // @ game+0x13f3030
};

// Class Tiger.TigerSafeHavenVolume
// Size: 0x268 (Inherited: 0x260)
struct ATigerSafeHavenVolume : ATriggerVolume {
	struct ATigerHaven* AssignedHaven; // 0x260(0x08)
};

// Class Tiger.TigerSafeZoneSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerSafeZoneSettings : UDeveloperSettings {
	struct FVector2D SafeZoneRelativeScreenSpaceDimensions; // 0x38(0x08)
	float UIZoneAspectRatio; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class Tiger.TigerSafeZoneWidget
// Size: 0x138 (Inherited: 0x138)
struct UTigerSafeZoneWidget : USafeZone {
};

// Class Tiger.TigerSaveGame
// Size: 0x30 (Inherited: 0x28)
struct UTigerSaveGame : USaveGame {
	struct FTigerPersistentCharacterID LastUsedCharacterId; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
};

// Class Tiger.TigerItemPreviewAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerItemPreviewAsset : UDataAsset {
	struct TArray<struct FTigerItemPreviewData> ItemPreviews; // 0x30(0x10)
};

// Class Tiger.TigerSubLevelList
// Size: 0x40 (Inherited: 0x30)
struct UTigerSubLevelList : UDataAsset {
	struct TArray<struct FTigerSubLevelBackground> SubLevels; // 0x30(0x10)
};

// Class Tiger.TigerScreenshotMapGenerationSettings
// Size: 0x68 (Inherited: 0x38)
struct UTigerScreenshotMapGenerationSettings : UDeveloperSettings {
	float Width; // 0x38(0x04)
	int32_t Resolution; // 0x3c(0x04)
	struct FVector2D Start; // 0x40(0x08)
	struct FVector2D End; // 0x48(0x08)
	float Height; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
	struct FTigerPostProcessSettingsSetup PostProcessSetup; // 0x58(0x10)
};

// Class Tiger.TigerScreenshotMapBuilder
// Size: 0x260 (Inherited: 0x228)
struct ATigerScreenshotMapBuilder : AActor {
	struct ATigerPlayerController* PlayerController; // 0x228(0x08)
	struct UCameraComponent* CameraComponent; // 0x230(0x08)
	char pad_238[0x28]; // 0x238(0x28)

	void TakeScreenshot(); // Function Tiger.TigerScreenshotMapBuilder.TakeScreenshot // (Final|Native|Private) // @ game+0x1517750
	void HandleScreenShotTaken(); // Function Tiger.TigerScreenshotMapBuilder.HandleScreenShotTaken // (Final|Native|Private) // @ game+0x1517390
};

// Class Tiger.TigerScreenTransition
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerScreenTransition : UTigerWidget {
	struct UCurveFloat* ScreenTransitionCurveIn; // 0x280(0x08)
	struct UCurveFloat* ScreenTransitionCurveOut; // 0x288(0x08)
	struct FMulticastInlineDelegate OnTransitionInFinished; // 0x290(0x10)
	struct FMulticastInlineDelegate OnTransitionOutFinished; // 0x2a0(0x10)
	enum class EScreenTransitionState CurrentTransitionState; // 0x2b0(0x01)
	char pad_2B1[0xf]; // 0x2b1(0x0f)

	float GetCurrentTransitionProgress(); // Function Tiger.TigerScreenTransition.GetCurrentTransitionProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151b4d0
	void BeginTransition(); // Function Tiger.TigerScreenTransition.BeginTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x151b2e0
};

// Class Tiger.TigerScriptedTexture
// Size: 0x2f8 (Inherited: 0x280)
struct UTigerScriptedTexture : UTigerWidget {
	struct UTextureRenderTarget2D* ScriptedTexture; // 0x280(0x08)
	char pad_288[0x70]; // 0x288(0x70)
};

// Class Tiger.TigerClientSeasonalRewardTier
// Size: 0x48 (Inherited: 0x28)
struct UTigerClientSeasonalRewardTier : UObject {
	struct TArray<struct FTigerItemId> FreeRewardIds; // 0x28(0x10)
	struct TArray<struct FTigerItemId> PremiumRewardIds; // 0x38(0x10)

	bool IsDoubleUISize(); // Function Tiger.TigerClientSeasonalRewardTier.IsDoubleUISize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x151b6a0
};

// Class Tiger.TigerClientSeasonalRewardCollection
// Size: 0x40 (Inherited: 0x28)
struct UTigerClientSeasonalRewardCollection : UObject {
	struct TArray<struct UTigerClientSeasonalRewardTier*> Tiers; // 0x28(0x10)
	int32_t BattlePassPrice; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class Tiger.TigerSeasonConfigAsset
// Size: 0x398 (Inherited: 0x30)
struct UTigerSeasonConfigAsset : UDataAsset {
	struct FTigerSeasonConfig Config; // 0x30(0x360)
	char pad_390[0x8]; // 0x390(0x08)
};

// Class Tiger.TigerServerPushConnectionManager
// Size: 0xa8 (Inherited: 0xa8)
struct UTigerServerPushConnectionManager : UTigerPushConnectionManager {
};

// Class Tiger.TigerSessionSeeker
// Size: 0x198 (Inherited: 0x28)
struct UTigerSessionSeeker : UObject {
	struct FMulticastInlineDelegate OnSessionFound; // 0x28(0x10)
	struct FMulticastInlineDelegate OnCouldNotFindSession; // 0x38(0x10)
	struct FMulticastInlineDelegate OnJoiningSession; // 0x48(0x10)
	struct FMulticastInlineDelegate OnCouldNotJoinSession; // 0x58(0x10)
	struct UObject* WorldContextObject; // 0x68(0x08)
	struct UTigerGameInstance* GameInstance; // 0x70(0x08)
	struct ATigerPlayerController* PlayerController; // 0x78(0x08)
	struct FTigerBpFindSessionSelectedSession SelectedSession; // 0x80(0x110)
	enum class ETigerSessionSearchStatus Status; // 0x190(0x01)
	char pad_191[0x7]; // 0x191(0x07)

	void SessionFound(struct FTigerBpFindSessionSelectedSession& InSelectedSession); // Function Tiger.TigerSessionSeeker.SessionFound // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x151bb70
	void SeekBPImpl(struct FString InGameModeId, int32_t InGameModeIndex, enum class ESessionType InSessionType); // Function Tiger.TigerSessionSeeker.SeekBPImpl // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Seek(struct FString InGameModeId, int32_t InGameModeIndex, enum class ESessionType InSessionType, bool bInLeaveParty); // Function Tiger.TigerSessionSeeker.Seek // (Final|Native|Public|BlueprintCallable) // @ game+0x151ba00
	void OnSessionFoundDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnSessionFoundDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnPartySessionAvailable(); // Function Tiger.TigerSessionSeeker.OnPartySessionAvailable // (Final|Native|Protected) // @ game+0x151b9e0
	void OnLeftParty(struct FTigerParty& InParty); // Function Tiger.TigerSessionSeeker.OnLeftParty // (Final|Native|Protected|HasOutParms) // @ game+0x151b820
	void OnLeaderChanged(); // Function Tiger.TigerSessionSeeker.OnLeaderChanged // (Final|Native|Protected) // @ game+0x151b800
	void OnJoiningSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnJoiningSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnCreateGameSessionFailed(); // Function Tiger.TigerSessionSeeker.OnCreateGameSessionFailed // (Final|Native|Protected) // @ game+0x151b320
	void OnCouldNotJoinSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnCouldNotJoinSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnCouldNotFindSessionDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerSessionSeeker.OnCouldNotFindSessionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void JoiningSession(); // Function Tiger.TigerSessionSeeker.JoiningSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x151b6f0
	void JoinBPImpl(); // Function Tiger.TigerSessionSeeker.JoinBPImpl // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Join(); // Function Tiger.TigerSessionSeeker.Join // (Final|Native|Public|BlueprintCallable) // @ game+0x151b6d0
	void Init(struct UObject* InWorldContextObject, struct ATigerPlayerController* InPlayerController, bool bInJoinImmediately); // Function Tiger.TigerSessionSeeker.Init // (Final|Native|Protected|BlueprintCallable) // @ game+0x151b590
	enum class ESessionType GetCurrentSessionType(); // Function Tiger.TigerSessionSeeker.GetCurrentSessionType // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x151b4b0
	struct UTigerSessionSeeker* CreateSessionSeeker(struct UObject* InWorldContextObject, struct UTigerSessionSeeker* InSessionSeekerClass, struct ATigerPlayerController* InPlayerController, bool bInJoinImmediately); // Function Tiger.TigerSessionSeeker.CreateSessionSeeker // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x151b360
	void CouldNotJoinSession(); // Function Tiger.TigerSessionSeeker.CouldNotJoinSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x151b340
	void CouldNotFindSession(); // Function Tiger.TigerSessionSeeker.CouldNotFindSession // (Final|Native|Protected|BlueprintCallable) // @ game+0x151b320
	void Cancel(); // Function Tiger.TigerSessionSeeker.Cancel // (Final|Native|Public|BlueprintCallable) // @ game+0x151b300
};

// Class Tiger.TigerSessionService
// Size: 0x40 (Inherited: 0x28)
struct UTigerSessionService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerSessionSettings
// Size: 0x48 (Inherited: 0x38)
struct UTigerSessionSettings : UDeveloperSettings {
	bool bFindOnlyLocalSessions; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	int32_t GroupSize; // 0x3c(0x04)
	bool bEnableFakeMatchmakingDelayInElysium; // 0x40(0x01)
	bool bEnableCloudSessions; // 0x41(0x01)
	char pad_42[0x6]; // 0x42(0x06)
};

// Class Tiger.TigerShacklesMine
// Size: 0x260 (Inherited: 0x228)
struct ATigerShacklesMine : AActor {
	struct UTigerBuff* ThornsBuff; // 0x228(0x08)
	struct UTigerBuff* ShacklesBuff; // 0x230(0x08)
	struct USceneComponent* Root; // 0x238(0x08)
	struct USceneComponent* IndicatorAnchor; // 0x240(0x08)
	char pad_248[0x18]; // 0x248(0x18)

	void OnShackleMineTriggered(); // Function Tiger.TigerShacklesMine.OnShackleMineTriggered // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnOverlapBegin(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function Tiger.TigerShacklesMine.OnOverlapBegin // (Final|Native|Private) // @ game+0x151b910
};

// Class Tiger.TigerSharedMouseCursor
// Size: 0x38 (Inherited: 0x28)
struct UTigerSharedMouseCursor : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class Tiger.TigerSharedVendorUI
// Size: 0x2e8 (Inherited: 0x280)
struct UTigerSharedVendorUI : UTigerWidget {
	struct FMulticastInlineDelegate OnShortcutHeaderClicked; // 0x280(0x10)
	struct FMulticastInlineDelegate OnMainHeaderClicked; // 0x290(0x10)
	struct TWeakObjectPtr<struct ATigerPaperDoll> VendorPaperDoll; // 0x2a0(0x08)
	struct ATigerPaperDoll* PaperDollClass; // 0x2a8(0x08)
	char pad_2B0[0x8]; // 0x2b0(0x08)
	struct FText VendorName; // 0x2b8(0x18)
	struct FText VendorPurpose; // 0x2d0(0x18)

	void TabMenuRightGamepad(); // Function Tiger.TigerSharedVendorUI.TabMenuRightGamepad // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void TabMenuLeftGamepad(); // Function Tiger.TigerSharedVendorUI.TabMenuLeftGamepad // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SwitchToDialogueWindow(); // Function Tiger.TigerSharedVendorUI.SwitchToDialogueWindow // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SwitchToBlockingDialogueWindow(); // Function Tiger.TigerSharedVendorUI.SwitchToBlockingDialogueWindow // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SpawnPaperDoll(); // Function Tiger.TigerSharedVendorUI.SpawnPaperDoll // (Final|Native|Public|BlueprintCallable) // @ game+0x151bdb0
	void OnHeaderTabClicked__DelegateSignature(); // DelegateFunction Tiger.TigerSharedVendorUI.OnHeaderTabClicked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
};

// Class Tiger.TigerSharkDeathTriggerVolume
// Size: 0x298 (Inherited: 0x260)
struct ATigerSharkDeathTriggerVolume : ATriggerVolume {
	struct AActor* Shark; // 0x260(0x08)
	struct FRotator SharkRotation; // 0x268(0x0c)
	struct FVector SharkSpawnLocationOffset; // 0x274(0x0c)
	float KillDelay; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct TArray<struct ATigerCharacter*> SavedVictims; // 0x288(0x10)

	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerSharkDeathTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x151b730
	void KillVictim(); // Function Tiger.TigerSharkDeathTriggerVolume.KillVictim // (Final|Native|Private) // @ game+0x151b710
	void HandleSharkVictim(struct ATigerCharacter* InVictim); // Function Tiger.TigerSharkDeathTriggerVolume.HandleSharkVictim // (Final|Native|Private) // @ game+0x151b500
};

// Class Tiger.TigerSharknetAgent
// Size: 0x140 (Inherited: 0x50)
struct UTigerSharknetAgent : UTigerDsBackendAgent {
	struct FString DsVersion; // 0x50(0x10)
	char pad_60[0xc0]; // 0x60(0xc0)
	float MaxRegisterRetryDelaySeconds; // 0x120(0x04)
	char pad_124[0x1c]; // 0x124(0x1c)
};

// Class Tiger.TigerShockwaveWall
// Size: 0x2c0 (Inherited: 0x228)
struct ATigerShockwaveWall : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct UBoxComponent* EffectBoxComponent; // 0x230(0x08)
	struct FTigerShockwaveWallData ShockwaveData; // 0x238(0x60)
	struct FVector TargetLocation; // 0x298(0x0c)
	struct TWeakObjectPtr<struct ATigerPlayer> TigerInstigator; // 0x2a4(0x08)
	float CurrentLifetime; // 0x2ac(0x04)
	int32_t PowerLevel; // 0x2b0(0x04)
	char pad_2B4[0xc]; // 0x2b4(0x0c)

	struct FVector UpdateEffectCollisionBoxExtents(); // Function Tiger.TigerShockwaveWall.UpdateEffectCollisionBoxExtents // (Native|Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1520930
	void OnShockwaveWallDestroyed(enum class EShockwaveWallDestroyReason InDestroyReason); // Function Tiger.TigerShockwaveWall.OnShockwaveWallDestroyed // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnOverlapBeginEffect(struct UPrimitiveComponent* InOverlappedComp, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerShockwaveWall.OnOverlapBeginEffect // (Final|Native|Protected|HasOutParms) // @ game+0x15203b0
	void OnCharacterHit(struct ATigerCharacter* InCharacterHit); // Function Tiger.TigerShockwaveWall.OnCharacterHit // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_OnCharacterHit(struct ATigerCharacter* InCharacterHit); // Function Tiger.TigerShockwaveWall.Multicast_OnCharacterHit // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x146a260
	void InitShockwaveData(struct FTigerShockwaveWallData& OutShockwaveData); // Function Tiger.TigerShockwaveWall.InitShockwaveData // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1520190
	float DetermineDamageOnEnemy(struct ATigerCharacter* InEnemyCharacter); // Function Tiger.TigerShockwaveWall.DetermineDamageOnEnemy // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x151ffb0
	float CalculateSpeed(); // Function Tiger.TigerShockwaveWall.CalculateSpeed // (Native|Event|Protected|BlueprintEvent) // @ game+0x151ff00
	struct FVector CalculateKnockbackVector(struct ATigerCharacter* InHitEnemyCharacter); // Function Tiger.TigerShockwaveWall.CalculateKnockbackVector // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerSHPBCoordinator
// Size: 0x120 (Inherited: 0xb0)
struct UTigerSHPBCoordinator : UActorComponent {
	struct UTigerNPCAsset* SHPBNPCAsset; // 0xb0(0x08)
	struct ATigerSHPBMarker* SHPBWorldMarker; // 0xb8(0x08)
	struct FName WaypointKeyName; // 0xc0(0x08)
	struct FName WaypointIndexKeyName; // 0xc8(0x08)
	bool bIsEnabled; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct TArray<struct ATigerNPC*> ActiveSHPB; // 0xd8(0x10)
	struct FTigerSHPBSettings Settings; // 0xe8(0x1c)
	char pad_104[0x4]; // 0x104(0x04)
	struct ATigerNPCInstantSpawner* SHPBSpawner; // 0x108(0x08)
	struct ATigerMatchGameMode* MatchGameMode; // 0x110(0x08)
	struct ATigerMatchGameState* MatchGameState; // 0x118(0x08)

	void MatchStateChanged(enum class ETigerMatchState OldMatchState, enum class ETigerMatchState NewMatchState); // Function Tiger.TigerSHPBCoordinator.MatchStateChanged // (Final|Native|Private) // @ game+0x15202c0
};

// Class Tiger.TigerWorldMarker
// Size: 0x248 (Inherited: 0x228)
struct ATigerWorldMarker : AActor {
	struct UUserWidget* MarkerClass; // 0x228(0x08)
	bool bAutoCreateMapMarker; // 0x230(0x01)
	bool bWaitForMapData; // 0x231(0x01)
	char pad_232[0x6]; // 0x232(0x06)
	struct UTigerMapMarkerProxy* MapMarkerProxy; // 0x238(0x08)
	struct USceneComponent* MarkerRoot; // 0x240(0x08)

	bool TryToScheduleCreation(); // Function Tiger.TigerWorldMarker.TryToScheduleCreation // (Native|Event|Protected|BlueprintEvent) // @ game+0x1567c00
	void OnPlayerControllerBeginPlay(); // Function Tiger.TigerWorldMarker.OnPlayerControllerBeginPlay // (Final|Native|Protected) // @ game+0x1567be0
	bool HasMapMarker(); // Function Tiger.TigerWorldMarker.HasMapMarker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15676d0
	void CreateMapMarker(); // Function Tiger.TigerWorldMarker.CreateMapMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x15676b0
	bool CanBeCreated(); // Function Tiger.TigerWorldMarker.CanBeCreated // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1567680
};

// Class Tiger.TigerSHPBMarker
// Size: 0x2b0 (Inherited: 0x248)
struct ATigerSHPBMarker : ATigerWorldMarker {
	struct ATigerNPC* FollowingNPC; // 0x248(0x08)
	struct FVector NPCLocation; // 0x250(0x0c)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TSet<struct TWeakObjectPtr<struct AActor>> PerceivedBy; // 0x260(0x50)

	void OnRep_NPCLocation(); // Function Tiger.TigerSHPBMarker.OnRep_NPCLocation // (Final|Native|Private) // @ game+0x1520670
};

// Class Tiger.TigerGeneratedStaticMeshActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerGeneratedStaticMeshActor : AActor {
	struct UStaticMeshComponent* MeshComponent; // 0x228(0x08)
};

// Class Tiger.TigerSidewalkSpline
// Size: 0x250 (Inherited: 0x240)
struct ATigerSidewalkSpline : ATigerRebuildableActor {
	struct TArray<struct UPrimitiveComponent*> OrderedComponentsToMerge; // 0x240(0x10)
};

// Class Tiger.TigerSignificanceManager
// Size: 0x140 (Inherited: 0x120)
struct UTigerSignificanceManager : USignificanceManager {
	char pad_120[0x20]; // 0x120(0x20)
};

// Class Tiger.TigerSignificanceSettings
// Size: 0xf8 (Inherited: 0x38)
struct UTigerSignificanceSettings : UDeveloperSettings {
	struct FTigerSignificanceBudget Budgets[0x3]; // 0x38(0xc0)
};

// Class Tiger.TigerSingleChildActor
// Size: 0x230 (Inherited: 0x228)
struct ATigerSingleChildActor : AActor {
	struct AActor* ChildActor; // 0x228(0x08)

	void SetChildActorClass(struct AActor* ChildActorClass); // Function Tiger.TigerSingleChildActor.SetChildActorClass // (Final|Native|Public|BlueprintCallable) // @ game+0x1520740
};

// Class Tiger.TigerSingleItemSpawner
// Size: 0x280 (Inherited: 0x278)
struct ATigerSingleItemSpawner : ATigerLootSpawner {
	enum class ETigerTelemetryItemSourceID TelemetryIDSource; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)

	struct FTransform GetSecondaryItemTransform(); // Function Tiger.TigerSingleItemSpawner.GetSecondaryItemTransform // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x1520070
	struct FTransform GetPrimaryItemTransform(); // Function Tiger.TigerSingleItemSpawner.GetPrimaryItemTransform // (Native|Event|Protected|HasDefaults|BlueprintEvent|Const) // @ game+0x1520070
};

// Class Tiger.TigerSocialSubscreenUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialSubscreenUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void Open(); // Function Tiger.TigerSocialSubscreenUI.Open // (Native|Public|BlueprintCallable) // @ game+0x14a37b0
	void OnOpen(); // Function Tiger.TigerSocialSubscreenUI.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnClose(); // Function Tiger.TigerSocialSubscreenUI.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsOpen(); // Function Tiger.TigerSocialSubscreenUI.IsOpen // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14a3600
	void Close(); // Function Tiger.TigerSocialSubscreenUI.Close // (Native|Public|BlueprintCallable) // @ game+0x1435fb0
};

// Class Tiger.TigerSocialElysiumUI
// Size: 0x288 (Inherited: 0x288)
struct UTigerSocialElysiumUI : UTigerSocialSubscreenUI {

	struct TArray<struct FTigerPlayerStateFriendPair> GetSortedPlayerList(); // Function Tiger.TigerSocialElysiumUI.GetSortedPlayerList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15200d0
};

// Class Tiger.TigerSocialFriendInviteListUI
// Size: 0x2a8 (Inherited: 0x280)
struct UTigerSocialFriendInviteListUI : UTigerWidget {
	char pad_280[0x28]; // 0x280(0x28)

	void StopMonitoring(); // Function Tiger.TigerSocialFriendInviteListUI.StopMonitoring // (Final|Native|Public|BlueprintCallable) // @ game+0x15208f0
	void PopulateListAndMonitorChanges(); // Function Tiger.TigerSocialFriendInviteListUI.PopulateListAndMonitorChanges // (Final|Native|Public|BlueprintCallable) // @ game+0x1520720
	void OnPopulateInvites(struct TArray<struct UTigerFriendInvite*>& InFriendInvites); // Function Tiger.TigerSocialFriendInviteListUI.OnPopulateInvites // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnInviteRemoved(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerSocialFriendInviteListUI.OnInviteRemoved // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnInviteReceived(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerSocialFriendInviteListUI.OnInviteReceived // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerSocialFriendInviteListUI.OnFriendAdded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerSocialFriendsUI
// Size: 0x2a8 (Inherited: 0x288)
struct UTigerSocialFriendsUI : UTigerSocialSubscreenUI {
	char pad_288[0x20]; // 0x288(0x20)

	void OnFriendsLoaded(); // Function Tiger.TigerSocialFriendsUI.OnFriendsLoaded // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendServiceStatusChanged(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerSocialFriendsUI.OnFriendServiceStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendRemoved(struct UTigerFriend* InLostFriend); // Function Tiger.TigerSocialFriendsUI.OnFriendRemoved // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnFriendAdded(struct UTigerFriend* InNewFriend); // Function Tiger.TigerSocialFriendsUI.OnFriendAdded // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerSocialInboxUI
// Size: 0x290 (Inherited: 0x288)
struct UTigerSocialInboxUI : UTigerSocialSubscreenUI {
	char pad_288[0x8]; // 0x288(0x08)

	void OnFriendServiceStatusChanged(enum class ETigerOnlineServiceStatus InServiceStatus); // Function Tiger.TigerSocialInboxUI.OnFriendServiceStatusChanged // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerSocialPartyInviteListUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialPartyInviteListUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void StopMonitoring(); // Function Tiger.TigerSocialPartyInviteListUI.StopMonitoring // (Final|Native|Public|BlueprintCallable) // @ game+0x1520910
	void OnInviteRemoved(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerSocialPartyInviteListUI.OnInviteRemoved // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnInviteReceived(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerSocialPartyInviteListUI.OnInviteReceived // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void MonitorInvites(); // Function Tiger.TigerSocialPartyInviteListUI.MonitorInvites // (Final|Native|Public|BlueprintCallable) // @ game+0x1520390
};

// Class Tiger.TigerSocialSearchPlayerUI
// Size: 0x288 (Inherited: 0x280)
struct UTigerSocialSearchPlayerUI : UTigerWidget {
	char pad_280[0x8]; // 0x280(0x08)

	void OnSearchPlayerResponse(struct UTigerFriend* InPlayer); // Function Tiger.TigerSocialSearchPlayerUI.OnSearchPlayerResponse // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Init(); // Function Tiger.TigerSocialSearchPlayerUI.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x1520170
	void Close(); // Function Tiger.TigerSocialSearchPlayerUI.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x151ff70
};

// Class Tiger.TigerSocialUI
// Size: 0x3c8 (Inherited: 0x3c0)
struct UTigerSocialUI : UTigerSceneBackgroundUI {
	struct UTigerSocialSubscreenUI* CurrentSubscreen; // 0x3c0(0x08)

	void OpenSubscreen(struct UTigerSocialSubscreenUI* InSubscreen); // Function Tiger.TigerSocialUI.OpenSubscreen // (Final|Native|Public|BlueprintCallable) // @ game+0x1520690
	void OnSubscreenOpen(struct UTigerSocialSubscreenUI* InSubscreen); // Function Tiger.TigerSocialUI.OnSubscreenOpen // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void CloseCurrentSubscreen(); // Function Tiger.TigerSocialUI.CloseCurrentSubscreen // (Final|Native|Public|BlueprintCallable) // @ game+0x151ff90
};

// Class Tiger.TigerSoloCoordinator
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerSoloCoordinator : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
};

// Class Tiger.TigerSpawnMechanic
// Size: 0x28 (Inherited: 0x28)
struct UTigerSpawnMechanic : UObject {

	bool HasSpawnSelectionMode(); // Function Tiger.TigerSpawnMechanic.HasSpawnSelectionMode // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13f8400
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleBase
// Size: 0x50 (Inherited: 0x28)
struct UTigerSpawnMechanicBattleRoyaleBase : UTigerSpawnMechanic {
	struct ATigerMatchGameMode* GameMode; // 0x28(0x08)
	struct TArray<struct AActor*> AllPlayerStarts; // 0x30(0x10)
	struct TArray<struct AActor*> UnusedPlayerStarts; // 0x40(0x10)
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleMapSelection
// Size: 0x80 (Inherited: 0x50)
struct UTigerSpawnMechanicBattleRoyaleMapSelection : UTigerSpawnMechanicBattleRoyaleBase {
	struct TArray<struct FTigerDesiredSpawnLocation> DesiredSpawnLocations; // 0x50(0x10)
	char pad_60[0x20]; // 0x60(0x20)

	void OnPreMatchStateChanged(struct FTigerPreMatchStateInfo InNewInfo); // Function Tiger.TigerSpawnMechanicBattleRoyaleMapSelection.OnPreMatchStateChanged // (Final|Native|Public) // @ game+0x15205e0
};

// Class Tiger.TigerSpawnMechanicBattleRoyaleRandomStart
// Size: 0x118 (Inherited: 0x50)
struct UTigerSpawnMechanicBattleRoyaleRandomStart : UTigerSpawnMechanicBattleRoyaleBase {
	struct UTigerGroupCoordinator* GroupCoordinator; // 0x50(0x08)
	struct ATigerWorldMarker* TestSpawnPointsMapMarkerClass; // 0x58(0x08)
	struct TArray<struct FVector2D> GroupSpawnLocations; // 0x60(0x10)
	char pad_70[0x50]; // 0x70(0x50)
	struct TMap<struct ATigerPlayerState*, struct FTigerGroupId> FakeGroupIds; // 0xc0(0x50)
	float MinimumDistanceBetweenGroups; // 0x110(0x04)
	float DistanceBetweenGroupsFalloffLength; // 0x114(0x04)
};

// Class Tiger.TigerSpawnMechanicExtendedGroupRandom
// Size: 0x178 (Inherited: 0x118)
struct UTigerSpawnMechanicExtendedGroupRandom : UTigerSpawnMechanicBattleRoyaleRandomStart {
	char pad_118[0x60]; // 0x118(0x60)
};

// Class Tiger.TigerSpawnMechanicPlayInEditor
// Size: 0x30 (Inherited: 0x28)
struct UTigerSpawnMechanicPlayInEditor : UTigerSpawnMechanic {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class Tiger.TigerSpawnMechanicRandomPlayerStart
// Size: 0x50 (Inherited: 0x28)
struct UTigerSpawnMechanicRandomPlayerStart : UTigerSpawnMechanic {
	struct ATigerGameMode* GameMode; // 0x28(0x08)
	struct TArray<struct AActor*> AllPlayerStarts; // 0x30(0x10)
	struct TArray<struct AActor*> UnusedPlayerStarts; // 0x40(0x10)
};

// Class Tiger.TigerSpawnMechanicTutorial
// Size: 0x60 (Inherited: 0x50)
struct UTigerSpawnMechanicTutorial : UTigerSpawnMechanicRandomPlayerStart {
	struct TArray<struct AActor*> AllBotStarts; // 0x50(0x10)
};

// Class Tiger.TigerSpawnPointSelectionUi
// Size: 0x338 (Inherited: 0x298)
struct UTigerSpawnPointSelectionUi : UTigerMenuWidget {
	struct FVector2D CurrentCanvasSize; // 0x298(0x08)
	int32_t PreGameStateEndTime; // 0x2a0(0x04)
	enum class ETigerPreMatchState CurrentPreMatchState; // 0x2a4(0x01)
	char pad_2A5[0x3]; // 0x2a5(0x03)
	struct TArray<struct FTigerClientSpawnLocationInfo> CurrentSpawnSelectionInfo; // 0x2a8(0x10)
	struct TMap<int32_t, struct UTigerWidget*> GroupSpawnLocationWidgets; // 0x2b8(0x50)
	struct UWidget* CanvasSizeWidget; // 0x308(0x08)
	char pad_310[0x14]; // 0x310(0x14)
	bool bAllowOutOfBoundsSelection; // 0x324(0x01)
	char pad_325[0x3]; // 0x325(0x03)
	struct TArray<struct UTigerWidget*> EnemySpawnLocationWidgets; // 0x328(0x10)

	void UpdateWidgetRotation(struct UTigerWidget* InWidget, float InRotation); // Function Tiger.TigerSpawnPointSelectionUi.UpdateWidgetRotation // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void UpdateWidgetLocation(struct UTigerWidget* InWidget, struct FVector& InLocation); // Function Tiger.TigerSpawnPointSelectionUi.UpdateWidgetLocation // (Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void SetPreMatchState(struct FTigerPreMatchStateInfo& InPreMatchState); // Function Tiger.TigerSpawnPointSelectionUi.SetPreMatchState // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	bool RequestNewSpawnLocation(struct FVector& InDesiredSpawnLocation); // Function Tiger.TigerSpawnPointSelectionUi.RequestNewSpawnLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1523690
	void OnNewSpawnAssignedFromServerToLocalPlayer(struct FVector2D InNewLocation, float InOrientation); // Function Tiger.TigerSpawnPointSelectionUi.OnNewSpawnAssignedFromServerToLocalPlayer // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	bool IsLocationOutOfBounds(struct FVector& InLocation); // Function Tiger.TigerSpawnPointSelectionUi.IsLocationOutOfBounds // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15234d0
	int32_t GetRemainingStateTime(); // Function Tiger.TigerSpawnPointSelectionUi.GetRemainingStateTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15234a0
	struct UTigerWidget* CreateGroupMarkerWidget(struct FTigerClientSpawnLocationInfo& InSpawnLocationInfo); // Function Tiger.TigerSpawnPointSelectionUi.CreateGroupMarkerWidget // (Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	struct UTigerWidget* CreateEnemyMarkerWidget(); // Function Tiger.TigerSpawnPointSelectionUi.CreateEnemyMarkerWidget // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerSpectateCameraBehavior
// Size: 0x178 (Inherited: 0x128)
struct UTigerSpectateCameraBehavior : UTigerActiveCameraBehavior {
	float FollowCameraDelay; // 0x128(0x04)
	float CameraFollowSpeedMultiplier; // 0x12c(0x04)
	float ConstantAddedCameraFollowSpeed; // 0x130(0x04)
	float NewFollowPointOffsetMultiplier; // 0x134(0x04)
	struct ATigerSpectatorPawn* SpectatorPawn; // 0x138(0x08)
	char pad_140[0x38]; // 0x140(0x38)
};

// Class Tiger.TigerSpectatorPawn
// Size: 0x308 (Inherited: 0x2b0)
struct ATigerSpectatorPawn : ASpectatorPawn {
	struct UTigerSpringArmComponent* SpringArm; // 0x2b0(0x08)
	struct FMulticastInlineDelegate OnSpectateeChanged; // 0x2b8(0x10)
	struct FMulticastInlineDelegate OnEnoughStreamingDoneToSpectate; // 0x2c8(0x10)
	struct ATigerPlayerState* CurrentSpectatee; // 0x2d8(0x08)
	struct TWeakObjectPtr<struct ATigerPlayer> CurrentSpectateePlayer; // 0x2e0(0x08)
	bool bIsWaitingForStreaming; // 0x2e8(0x01)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	float LastSpectateeSwitchTime; // 0x2ec(0x04)
	float MaxLoadingScreenTime; // 0x2f0(0x04)
	char pad_2F4[0x14]; // 0x2f4(0x14)

	void Server_SpectateAdjacentGroupMember(enum class ETigerSelectNewSpectatorDirection InDirection); // Function Tiger.TigerSpectatorPawn.Server_SpectateAdjacentGroupMember // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1523780
	void Server_EndSpectate(); // Function Tiger.TigerSpectatorPawn.Server_EndSpectate // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1523730
	void OnStreamingCellLoaded(struct UTigerWorldCompositionCellComponent* InCell); // Function Tiger.TigerSpectatorPawn.OnStreamingCellLoaded // (Final|Native|Protected) // @ game+0x1523600
	void OnSpectateeChanged__DelegateSignature(struct ATigerPlayerState* InSpectatee, struct ATigerPlayerState* InPreviousSpectatee); // DelegateFunction Tiger.TigerSpectatorPawn.OnSpectateeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnRep_CurrentSpectatee(struct ATigerPlayerState* InOldSpectatee); // Function Tiger.TigerSpectatorPawn.OnRep_CurrentSpectatee // (Final|Native|Public) // @ game+0x1523570
	void OnEnoughStreamingDoneToSpectate__DelegateSignature(); // DelegateFunction Tiger.TigerSpectatorPawn.OnEnoughStreamingDoneToSpectate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	struct ATigerPlayer* GetCurrentSpectatedPlayer(); // Function Tiger.TigerSpectatorPawn.GetCurrentSpectatedPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1523470
};

// Class Tiger.TigerSplatmapSettings
// Size: 0xa0 (Inherited: 0x38)
struct UTigerSplatmapSettings : USharkLocalDeveloperSettings {
	bool bRenderSplatmap; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct TSoftObjectPtr<UTexture2D> DefaultStamp; // 0x40(0x28)
	float TimeBetweenAutoExportInSeconds; // 0x68(0x04)
	bool bUseCtrlToDraw; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
	struct TSoftObjectPtr<UMaterialInterface> DrawMaterialMaster; // 0x70(0x28)
	struct FName DrawMaterialTextureParamName; // 0x98(0x08)
};

// Class Tiger.TigerSplatmapPaintingSettings
// Size: 0x48 (Inherited: 0x28)
struct UTigerSplatmapPaintingSettings : UObject {
	struct TWeakObjectPtr<struct UTexture2D> Stamp; // 0x28(0x08)
	struct TArray<bool> Channels; // 0x30(0x10)
	float Opacity; // 0x40(0x04)
	float StampWorldSize; // 0x44(0x04)
};

// Class Tiger.TigerSplatmapGenerationSettings
// Size: 0x48 (Inherited: 0x28)
struct UTigerSplatmapGenerationSettings : UObject {
	float CellBounds; // 0x28(0x04)
	struct FIntPoint CellCount; // 0x2c(0x08)
	struct FIntPoint CellTextureDimensions; // 0x34(0x08)
	struct FVector CenterLocation; // 0x3c(0x0c)
};

// Class Tiger.TigerSplatmap
// Size: 0x348 (Inherited: 0x228)
struct ATigerSplatmap : AActor {
	struct UMaterialParameterCollection* SplatmapParameterCollection; // 0x228(0x08)
	struct UTextureRenderTarget2D* SplatTextureRenderTarget; // 0x230(0x08)
	struct UTextureRenderTarget2D* SplatTextureHeightRenderTarget; // 0x238(0x08)
	struct UMaterial* SplatmapCellReadMaterial; // 0x240(0x08)
	struct UMaterialInstanceDynamic* SplatmapCellReadMaterialInstance; // 0x248(0x08)
	float BoundsSize; // 0x250(0x04)
	float HeightmapBoundsSize; // 0x254(0x04)
	struct UTigerSplatmapGenerationSettings* CurrentGenerationSettings; // 0x258(0x08)
	struct TArray<struct TWeakObjectPtr<struct ATigerSplatmapCell>> SplatmapCells; // 0x260(0x10)
	struct USceneComponent* Root; // 0x270(0x08)
	struct AActor* CellOwner; // 0x278(0x08)
	struct TSet<struct ATigerSplatmapCell*> CellsInRangeLastFrame; // 0x280(0x50)
	struct TSet<struct ATigerSplatmapCell*> CellsInRangeThisFrame; // 0x2d0(0x50)
	float TickInterval; // 0x320(0x04)
	float MinRerenderDistance; // 0x324(0x04)
	struct UCanvas* SplatCanvas; // 0x328(0x08)
	struct UCanvas* HeightCanvas; // 0x330(0x08)
	char pad_338[0x10]; // 0x338(0x10)
};

// Class Tiger.TigerSplatmapCell
// Size: 0x300 (Inherited: 0x228)
struct ATigerSplatmapCell : AActor {
	struct TSoftObjectPtr<UTexture2D> TextureResource; // 0x228(0x28)
	struct TSoftObjectPtr<UMaterialInterface> DrawMaterial; // 0x250(0x28)
	struct TSoftObjectPtr<UTexture2D> HeightTextureResource; // 0x278(0x28)
	struct TSoftObjectPtr<UMaterialInterface> HeightDrawMaterial; // 0x2a0(0x28)
	char pad_2C8[0x30]; // 0x2c8(0x30)
	float BoundsSize; // 0x2f8(0x04)
	char pad_2FC[0x4]; // 0x2fc(0x04)
};

// Class Tiger.TigerSpotLight
// Size: 0x240 (Inherited: 0x238)
struct ATigerSpotLight : ALight {
	struct UTigerSpotLightComponent* SpotLightComponent; // 0x238(0x08)
};

// Class Tiger.TigerSpotLightComponent
// Size: 0x370 (Inherited: 0x370)
struct UTigerSpotLightComponent : USpotLightComponent {
};

// Class Tiger.TigerSpringArmComponent
// Size: 0x2e0 (Inherited: 0x200)
struct UTigerSpringArmComponent : USceneComponent {
	struct FVector Offset; // 0x1f8(0x0c)
	struct FVector TargetOffset; // 0x204(0x0c)
	float Length; // 0x210(0x04)
	float LengthIncreaseSmoothing; // 0x214(0x04)
	float LengthDecreaseSmoothing; // 0x218(0x04)
	float ProbeSize; // 0x21c(0x04)
	float CollisionPadding; // 0x220(0x04)
	float HideCharacterBelowLength; // 0x224(0x04)
	float RotationSmoothing; // 0x228(0x04)
	struct FVector AxisLagMaxDistance; // 0x22c(0x0c)
	struct FVector AxisLagSpeed; // 0x238(0x0c)
	float StepUpOffsetLerpSpeed; // 0x244(0x04)
	float MaxStepUpOffset; // 0x248(0x04)
	struct FVector BoxBounds; // 0x24c(0x0c)
	float SidewaysLerpSpeed; // 0x258(0x04)
	float SidewaysCurveExpPow; // 0x25c(0x04)
	float ComplexSweepPart; // 0x260(0x04)
	char pad_26C[0x2c]; // 0x26c(0x2c)
	struct TArray<struct TWeakObjectPtr<struct UStaticMeshComponent>> CurrentNearObjectFadeToggledObjects; // 0x298(0x10)
	char pad_2A8[0x38]; // 0x2a8(0x38)
};

// Class Tiger.TigerSprintConfig
// Size: 0x128 (Inherited: 0x28)
struct UTigerSprintConfig : UObject {
	float MinimumForwardInput; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	float SprintDelay; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
	struct UTigerCharacterMovementComponent* MoveComp; // 0x38(0x08)
	char pad_40[0xc]; // 0x40(0x0c)
	float LedgeGrabReductionMultiplier; // 0x4c(0x04)
	float MeleeAttackReductionMultiplier[0x8]; // 0x50(0x20)
	float DisciplineUseReductionMultiplier[0x23]; // 0x70(0x8c)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct TArray<float> DodgeReductionMultiplier; // 0x100(0x10)
	float JumpReductionMultiplier; // 0x110(0x04)
	float DoubleJumpReductionMultiplier; // 0x114(0x04)
	float SprintBuildUpDecayDuration; // 0x118(0x04)
	float SprintBuildUpDecayDelay; // 0x11c(0x04)
	struct UCurveFloat* SprintBuildUpCurve; // 0x120(0x08)

	void OnSprintDelayCompleted(struct ATigerPlayer* InPlayer); // Function Tiger.TigerSprintConfig.OnSprintDelayCompleted // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerStaggerComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UTigerStaggerComponent : UActorComponent {
	struct UAnimMontage* CurrentStaggerAnimation; // 0xb0(0x08)
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerStaticMeshUserData
// Size: 0x30 (Inherited: 0x28)
struct UTigerStaticMeshUserData : UAssetUserData {
	enum class ETigerStaticMeshType StaticMeshType; // 0x28(0x01)
	bool bIsClimbable; // 0x29(0x01)
	bool bIsWallJumpable; // 0x2a(0x01)
	bool bFadeWhenNearToCamera; // 0x2b(0x01)
	bool bIsLowVaultable; // 0x2c(0x01)
	bool bIsLedgeGrabbable; // 0x2d(0x01)
	bool bForceHorizontalVelocityOnFallingImpact; // 0x2e(0x01)
	char pad_2F[0x1]; // 0x2f(0x01)
};

// Class Tiger.TigerPiercingPhysicsAssetUserData
// Size: 0x38 (Inherited: 0x28)
struct UTigerPiercingPhysicsAssetUserData : UAssetUserData {
	float Mass; // 0x28(0x04)
	float ForceAmount; // 0x2c(0x04)
	float AnglePitchLimit; // 0x30(0x04)
	float AngleRollLimit; // 0x34(0x04)
};

// Class Tiger.StaticPiercingPhysics
// Size: 0x38 (Inherited: 0x28)
struct UStaticPiercingPhysics : UObject {
	struct TArray<struct FStaticPhysicsPiercingData> SimulatedPhysicsStaticPiercings; // 0x28(0x10)
};

// Class Tiger.TigerStatisticsGatherer
// Size: 0x288 (Inherited: 0x228)
struct ATigerStatisticsGatherer : AActor {
	struct TMap<struct FString, float> AnimationSequences; // 0x228(0x50)
	float ProcessingCullDistance; // 0x278(0x04)
	int32_t MaxComponentProcessingCountPerFrame; // 0x27c(0x04)
	bool bVisualizeProcessedComponents; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
};

// Class Tiger.TigerStatsSubsystem
// Size: 0x128 (Inherited: 0x30)
struct UTigerStatsSubsystem : UGameInstanceSubsystem {
	char pad_30[0xf8]; // 0x30(0xf8)
};

// Class Tiger.TigerStore
// Size: 0x248 (Inherited: 0x228)
struct ATigerStore : AActor {
	struct UTigerBlueprintLootLocationComponent* LootConfiguration; // 0x228(0x08)
	bool bHasAlarmedTriggered; // 0x230(0x01)
	enum class ETigerInWorldStore StoreTypeIdentifier; // 0x231(0x01)
	char pad_232[0x2]; // 0x232(0x02)
	int32_t StoreId; // 0x234(0x04)
	char pad_238[0x10]; // 0x238(0x10)

	bool IsEveryDoorOpen(); // Function Tiger.TigerStore.IsEveryDoorOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1527eb0
};

// Class Tiger.TigerStoreEntryWidget
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerStoreEntryWidget : UTigerWidget {
	struct FTigerMetaStoreEntry RepresentedStoreEntry; // 0x280(0x50)

	bool HasValidStoreEntry(); // Function Tiger.TigerStoreEntryWidget.HasValidStoreEntry // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1527e80
	void BuyStoreEntry(struct FDelegate& InOnBuyResponse, int32_t InQuantity); // Function Tiger.TigerStoreEntryWidget.BuyStoreEntry // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1527bf0
};

// Class Tiger.TigerStoreService
// Size: 0x40 (Inherited: 0x28)
struct UTigerStoreService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerStreamingBenchmarkTraversalStrategy
// Size: 0x78 (Inherited: 0x28)
struct UTigerStreamingBenchmarkTraversalStrategy : UObject {
	char pad_28[0x50]; // 0x28(0x50)
};

// Class Tiger.TigerStreamingBenchmarkTeleportStrategy
// Size: 0x78 (Inherited: 0x78)
struct UTigerStreamingBenchmarkTeleportStrategy : UTigerStreamingBenchmarkTraversalStrategy {
};

// Class Tiger.TigerStreamingBenchmarkFlyingStrategy
// Size: 0x98 (Inherited: 0x78)
struct UTigerStreamingBenchmarkFlyingStrategy : UTigerStreamingBenchmarkTraversalStrategy {
	char pad_78[0x20]; // 0x78(0x20)
};

// Class Tiger.TigerStyledRichTextBlock
// Size: 0x930 (Inherited: 0x678)
struct UTigerStyledRichTextBlock : URichTextBlock {
	struct FDataTableRowHandle TextStyleRow; // 0x678(0x10)
	bool bAutoSizeText; // 0x688(0x01)
	char pad_689[0x7]; // 0x689(0x07)
	struct FDataTableRowHandle TextSizeRow; // 0x690(0x10)
	int32_t NumAllowedDownsizeRows; // 0x6a0(0x04)
	bool bTextScrolling; // 0x6a4(0x01)
	char pad_6A5[0x3]; // 0x6a5(0x03)
	struct UScrollBox* ScrollBoxClass; // 0x6a8(0x08)
	struct TWeakObjectPtr<struct UScrollBox> ScrollBox; // 0x6b0(0x08)
	struct FTextBlockStyle ResizedTextStyle; // 0x6b8(0x270)
	char pad_928[0x8]; // 0x928(0x08)

	void SetWrapTextAt(float InWrapTextAt); // Function Tiger.TigerStyledRichTextBlock.SetWrapTextAt // (Final|Native|Public|BlueprintCallable) // @ game+0x15284e0
	void SetTextStyleSetButKeepTextStyle(struct UDataTable* InNewTextStyleSet); // Function Tiger.TigerStyledRichTextBlock.SetTextStyleSetButKeepTextStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x1528450
	void SetTextStyle(struct FDataTableRowHandle InTextStyle); // Function Tiger.TigerStyledRichTextBlock.SetTextStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x15283b0
	void SetDefaultUIColor(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace); // Function Tiger.TigerStyledRichTextBlock.SetDefaultUIColor // (Final|Native|Public|BlueprintCallable) // @ game+0x15282e0
	void SetDefaultShadowUIColorAndOpacity(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace, float InOpacity); // Function Tiger.TigerStyledRichTextBlock.SetDefaultShadowUIColorAndOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x15281d0
	void SetDefaultShadowUIColor(enum class ETigerUIColor InTigerUIColor, enum class ETigerColourSpace InTigerColourSpace); // Function Tiger.TigerStyledRichTextBlock.SetDefaultShadowUIColor // (Final|Native|Public|BlueprintCallable) // @ game+0x1528100
	void SetDefaultOutline(struct FFontOutlineSettings InOutlineSettings); // Function Tiger.TigerStyledRichTextBlock.SetDefaultOutline // (Final|Native|Public|BlueprintCallable) // @ game+0x1528050
	void RefreshSlateTextBlock(); // Function Tiger.TigerStyledRichTextBlock.RefreshSlateTextBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x1528030
	void ClearDefaultStyleOverrides(); // Function Tiger.TigerStyledRichTextBlock.ClearDefaultStyleOverrides // (Final|Native|Public|BlueprintCallable) // @ game+0x1527cf0
};

// Class Tiger.TigerStyledRichTextBlockDecorator
// Size: 0x28 (Inherited: 0x28)
struct UTigerStyledRichTextBlockDecorator : URichTextBlockDecorator {
};

// Class Tiger.TigerSupplyDrop
// Size: 0x370 (Inherited: 0x310)
struct ATigerSupplyDrop : ATigerLootBox {
	struct UBoxComponent* BoxRoot; // 0x310(0x08)
	char pad_318[0x8]; // 0x318(0x08)
	struct FTransform FinalTransform; // 0x320(0x30)
	struct UTigerItemLootTable* LootTable; // 0x350(0x08)
	int32_t MinNumItems; // 0x358(0x04)
	int32_t MaxNumItems; // 0x35c(0x04)
	float MaxFallSpeed; // 0x360(0x04)
	char pad_364[0xc]; // 0x364(0x0c)

	void OnRep_FinalTransform(); // Function Tiger.TigerSupplyDrop.OnRep_FinalTransform // (Final|Native|Private) // @ game+0x1528010
	void HideParachute(); // Function Tiger.TigerSupplyDrop.HideParachute // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerSupplyDropHelicopter
// Size: 0x228 (Inherited: 0x228)
struct ATigerSupplyDropHelicopter : AActor {
};

// Class Tiger.TigerSyncPartyCrossplaySettingsAysnc
// Size: 0x50 (Inherited: 0x30)
struct UTigerSyncPartyCrossplaySettingsAysnc : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate SettingSynced; // 0x30(0x10)
	char pad_40[0x10]; // 0x40(0x10)

	struct UTigerSyncPartyCrossplaySettingsAysnc* SyncPartyCrossplaySettings(struct UObject* InWorldContextObject, struct APlayerController* InPlayerController); // Function Tiger.TigerSyncPartyCrossplaySettingsAysnc.SyncPartyCrossplaySettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1528560
	void CrossplaySettingSynced(enum class ETigerMatchmakingPlatform InSyncedPlatform); // Function Tiger.TigerSyncPartyCrossplaySettingsAysnc.CrossplaySettingSynced // (Final|Native|Public) // @ game+0x1527d10
};

// Class Tiger.TigerTeamMenuUI
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerTeamMenuUI : UTigerIngameSubmenuWidget {

	void MutePlayer(int32_t InPlayerId); // Function Tiger.TigerTeamMenuUI.MutePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1527f80
	bool IsPlayerMuted(int32_t InPlayerId); // Function Tiger.TigerTeamMenuUI.IsPlayerMuted // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1527ee0
};

// Class Tiger.TigerTeamViewUI
// Size: 0x2c0 (Inherited: 0x280)
struct UTigerTeamViewUI : UTigerWidget {
	struct TArray<struct ATigerPlayerState*> OtherGroupMembers; // 0x280(0x10)
	struct UTigerPreMatchPaperDollComponent* PreMatchPaperDollComp; // 0x290(0x08)
	struct FString PreHighlightTag; // 0x298(0x10)
	struct TArray<struct FName> GroupMemberPaperDollTags; // 0x2a8(0x10)
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void OnGroupMemberAdded(char InMemberId, struct ATigerPlayerState* InPlayerState, bool bInIsLeftSide, struct ATigerPaperDoll* InPaperDoll); // Function Tiger.TigerTeamViewUI.OnGroupMemberAdded // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void HandleGroupMembersChanged(struct UTigerGroupStateComponent* InGroupStateComponent, struct TArray<struct ATigerPlayerState*>& InPreviousMembers); // Function Tiger.TigerTeamViewUI.HandleGroupMembersChanged // (Final|Native|Protected|HasOutParms) // @ game+0x1527d90
};

// Class Tiger.TigerTelemetryDataDefinitions
// Size: 0x48 (Inherited: 0x28)
struct UTigerTelemetryDataDefinitions : UObject {
	enum class ETigerPowerKitType ArchetypeDefinitions; // 0x28(0x01)
	enum class ETigerClan ClanDefinitions; // 0x29(0x01)
	enum class ETigerTelemetryDamageCauser DamageSourceIdentifiers; // 0x2a(0x01)
	enum class ETigerTelemetryExpSource ExperienceSources; // 0x2b(0x01)
	enum class ETigerTelemetryDamageType DamageTypes; // 0x2c(0x01)
	enum class ETigerDisciplinesEnum Disciplines; // 0x2d(0x01)
	enum class ETigerTelemetryMatchmackingCancelReason MatchmakingCancelReasons; // 0x2e(0x01)
	enum class ETigerTelemetryCauseOfPingRemoval CauseOfPingRemoval; // 0x2f(0x01)
	enum class ETigerTelemetryDeviceType DeviceTypes; // 0x30(0x01)
	enum class ETigerTelemetryPlatformType PlatformTypes; // 0x31(0x01)
	enum class ETigerTelemetryMapIds MapIds; // 0x32(0x01)
	enum class ETigerTelemetryRankedMode RankedModes; // 0x33(0x01)
	enum class ETigerTelemetryGameplayMode GameplayModes; // 0x34(0x01)
	enum class ETigerTelemetryChallengeType ChallengeTypes; // 0x35(0x01)
	enum class ETigerTelemetryItemSourceID TelemetrySourceID; // 0x36(0x01)
	enum class ETigerTelemetryBattlepassType BattlepassTypes; // 0x37(0x01)
	enum class ETigerTelemetryHardCurrencyRecieveMethod HardCurrencyReceiveMethod; // 0x38(0x01)
	enum class ETigerTelemetryNetworkType NetworkTypes; // 0x39(0x01)
	enum class ETigerTelemetryNetworkIpType NetworkIPType; // 0x3a(0x01)
	enum class ETigerTelemetryAceRebirthType RebirthType; // 0x3b(0x01)
	enum class ETigerTelemetryMetaItemSourceType MetaItemSourceType; // 0x3c(0x04)
	enum class ETigerTelemetryAceDeathType DeathType; // 0x40(0x01)
	char pad_41[0x7]; // 0x41(0x07)
};

// Class Tiger.TigerTelemetryEventHandler
// Size: 0x848 (Inherited: 0x28)
struct UTigerTelemetryEventHandler : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct USharkTelemetry* SharkTelemetry; // 0x30(0x08)
	struct UTigerTelemetryService* TelemetryService; // 0x38(0x08)
	struct UTigerGameInstance* GameInstance; // 0x40(0x08)
	char pad_48[0x800]; // 0x48(0x800)

	void SettingsChanged(); // Function Tiger.TigerTelemetryEventHandler.SettingsChanged // (Final|Native|Private) // @ game+0x1531440
	void HandleJsonTelemetry(struct FString InJsonTelemetry); // Function Tiger.TigerTelemetryEventHandler.HandleJsonTelemetry // (Final|Native|Public) // @ game+0x15313a0
	void GraphicsSettingsChanged(struct FTigerGraphicsSettings& InGraphicsSettings, struct FTigerGraphicsSettingsPS5& InGraphicsSettingsPS5); // Function Tiger.TigerTelemetryEventHandler.GraphicsSettingsChanged // (Final|Native|Private|HasOutParms) // @ game+0x1531250
	void CacheTransactionalData(struct FTigerPersistentPlayerTransactionalData& InTransactionalData); // Function Tiger.TigerTelemetryEventHandler.CacheTransactionalData // (Final|Native|Public|HasOutParms) // @ game+0x15310e0
};

// Class Tiger.TigerTelemetryIDInterface
// Size: 0x28 (Inherited: 0x28)
struct UTigerTelemetryIDInterface : UInterface {
};

// Class Tiger.TigerTelemetryService
// Size: 0x40 (Inherited: 0x28)
struct UTigerTelemetryService : UObject {
	char pad_28[0x18]; // 0x28(0x18)
};

// Class Tiger.TigerTelemetryUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerTelemetryUtilityBFL : UBlueprintFunctionLibrary {

	void UpdateTelemetryIDBundle(struct FTigerTelemetryIDBundle& InBundle); // Function Tiger.TigerTelemetryUtilityBFL.UpdateTelemetryIDBundle // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1538a80
	void OnTelemetryIDObjectsLoaded__DelegateSignature(struct TArray<struct FTigerTelemetryIDBundle>& InLoadedBundle); // DelegateFunction Tiger.TigerTelemetryUtilityBFL.OnTelemetryIDObjectsLoaded__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void MoveTelemetryIDFromCombinedItemsToNewItem(struct TArray<struct TSoftClassPtr<UObject>> InCombinedItemObjectPaths, struct TArray<struct TSoftClassPtr<UObject>> InNewItemObjectPaths, struct TArray<struct FString>& OutLogs, struct TArray<struct FString>& OutErrorStrings); // Function Tiger.TigerTelemetryUtilityBFL.MoveTelemetryIDFromCombinedItemsToNewItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15384e0
	struct TArray<struct TSoftClassPtr<UObject>> GetBlueprintsUsingTelemetryID(struct TArray<struct FName>& InClassExclusionList); // Function Tiger.TigerTelemetryUtilityBFL.GetBlueprintsUsingTelemetryID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1537eb0
	void GetAllUObjectsImplementingTelemetryIDInterfaceAsync(struct FDelegate& InOnLoadedDelegate); // Function Tiger.TigerTelemetryUtilityBFL.GetAllUObjectsImplementingTelemetryIDInterfaceAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1537de0
	struct TArray<struct FTigerTelemetryIDCollisionBundle> FindTelemetryIDCollisions(struct TArray<struct FTigerTelemetryIDBundle> InIDBundles, bool& bOutHadInvalidIDs, bool& bOutValidIDsExisted); // Function Tiger.TigerTelemetryUtilityBFL.FindTelemetryIDCollisions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1537b10
	bool ExportTelemetryIdsToJson(struct TArray<struct FTigerTelemetryIDBundle>& InIDBundles, struct FTigerTelemetryIDExportFilter InFilter); // Function Tiger.TigerTelemetryUtilityBFL.ExportTelemetryIdsToJson // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1537a10
	void ExportTelemetryDefinitionsToJson(struct FString InPingDefinitionName, struct FTigerTelemetryDefinition& InPingDefinition); // Function Tiger.TigerTelemetryUtilityBFL.ExportTelemetryDefinitionsToJson // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15378a0
	bool CheckTelemetryIDIsCollisionFree(struct TArray<struct FTigerTelemetryIDBundle>& InIDBundles, struct FTigerTelemetryIDBundle& InBundleToValidate, int32_t InOuterIndex, int32_t& OutInnerCollisionIndex); // Function Tiger.TigerTelemetryUtilityBFL.CheckTelemetryIDIsCollisionFree // (Final|Native|Static|Public|HasOutParms) // @ game+0x15376f0
	struct TArray<struct FTigerTelemetryIDBundle> CheckAndGenerateUniqueTelemetryIds(struct TArray<struct FTigerTelemetryIDBundle>& InIDBundles); // Function Tiger.TigerTelemetryUtilityBFL.CheckAndGenerateUniqueTelemetryIds // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1537600
};

// Class Tiger.TigerTestChallengesConfigAsset
// Size: 0x58 (Inherited: 0x30)
struct UTigerTestChallengesConfigAsset : UDataAsset {
	struct FTigerTestChallengesConfig Config; // 0x30(0x28)
};

// Class Tiger.TigerTextWidget
// Size: 0x280 (Inherited: 0x280)
struct UTigerTextWidget : UTigerWidget {

	struct UTextBlock* GetText(); // Function Tiger.TigerTextWidget.GetText // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
};

// Class Tiger.TigerThrallMapData
// Size: 0x38 (Inherited: 0x30)
struct UTigerThrallMapData : UDataAsset {
	struct UTexture2D* Map; // 0x30(0x08)
};

// Class Tiger.TigerThrallMapUI
// Size: 0x3d0 (Inherited: 0x3c0)
struct UTigerThrallMapUI : UTigerSceneBackgroundUI {
	struct FName SubLevelName; // 0x3c0(0x08)
	struct FName SubLevelCamName; // 0x3c8(0x08)
};

// Class Tiger.TigerThrallMenu
// Size: 0x3e0 (Inherited: 0x3c0)
struct UTigerThrallMenu : UTigerSceneBackgroundUI {
	struct TArray<struct UTigerLocalThrallData*> ThrallSlots; // 0x3c0(0x10)
	struct UTigerLocalThrallData* CurrentThrall; // 0x3d0(0x08)
	enum class ETigerThrallMenu ThrallMenuIndex; // 0x3d8(0x01)
	char pad_3D9[0x7]; // 0x3d9(0x07)

	bool IsCurrentSlotEmpty(); // Function Tiger.TigerThrallMenu.IsCurrentSlotEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15384b0
	void InitialiseOnOpen(struct ATigerPlayerController* InController); // Function Tiger.TigerThrallMenu.InitialiseOnOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x1538420
	void IncrementIndex(); // Function Tiger.TigerThrallMenu.IncrementIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1538400
	int32_t GetSlotIndex(); // Function Tiger.TigerThrallMenu.GetSlotIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1538220
	void DecrementIndex(); // Function Tiger.TigerThrallMenu.DecrementIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1537880
};

// Class Tiger.TigerThrallMissionDetailsUi
// Size: 0x2d0 (Inherited: 0x260)
struct UTigerThrallMissionDetailsUi : UUserWidget {
	struct FText MissionName; // 0x260(0x18)
	struct FText MissionObjective; // 0x278(0x18)
	struct FText MissionStatRequirements; // 0x290(0x18)
	int32_t MissionRewardXp; // 0x2a8(0x04)
	char pad_2AC[0x4]; // 0x2ac(0x04)
	struct FText MissionRewardItems; // 0x2b0(0x18)
	int32_t MissionTurnsLeft; // 0x2c8(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)

	void LoadMissionDetails(int32_t InMissionUId); // Function Tiger.TigerThrallMissionDetailsUi.LoadMissionDetails // (Final|Native|Public|BlueprintCallable) // @ game+0x1413700
};

// Class Tiger.TigerThrallMissionMapMarkerData
// Size: 0x48 (Inherited: 0x30)
struct UTigerThrallMissionMapMarkerData : UDataAsset {
	struct FTigerThrallMissionMapMarker MissionMarker; // 0x30(0x18)
};

// Class Tiger.TigerThrallMission
// Size: 0xb8 (Inherited: 0x30)
struct UTigerThrallMission : UDataAsset {
	int32_t MissionId; // 0x30(0x04)
	struct FName MissionName; // 0x34(0x08)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct FTigerThrallMissionObjective MissionObjective; // 0x40(0x38)
	struct UTigerThrallMissionMapMarkerData* MissionMarkers; // 0x78(0x08)
	struct FThrallMissionRequirements MissionStatRequirements; // 0x80(0x18)
	struct FTigerThrallMissionReward MissionRewards; // 0x98(0x18)
	int32_t MissionLength; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class Tiger.TigerThrallSystem
// Size: 0x130 (Inherited: 0xb0)
struct UTigerThrallSystem : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	struct TArray<struct UTigerLocalThrallData*> PlayerThralls; // 0xc8(0x10)
	char pad_D8[0x8]; // 0xd8(0x08)
	struct TMap<int32_t, struct UTigerLocalThrallMissionData*> LocalActiveMissions; // 0xe0(0x50)

	void UpdateMissionTurns(int32_t InMissionId, int32_t InIncreaseTurns); // Function Tiger.TigerThrallSystem.UpdateMissionTurns // (Final|Native|Public|BlueprintCallable) // @ game+0x15389b0
	void SetMissionStatus(int32_t InMissionId, bool bActive); // Function Tiger.TigerThrallSystem.SetMissionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x15388e0
	bool RemoveThrallFromMission(int32_t InMissionId, enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.RemoveThrallFromMission // (Final|Native|Public|BlueprintCallable) // @ game+0x1538810
	bool RemoveThrallBySlot(char InSlotIndex); // Function Tiger.TigerThrallSystem.RemoveThrallBySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1538780
	void OnMissionComplete__DelegateSignature(struct UTigerLocalThrallMissionData* LocalMissionData); // DelegateFunction Tiger.TigerThrallSystem.OnMissionComplete__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	bool HasThrall(enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.HasThrall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1538370
	bool HasMissionId(int32_t InMissionId); // Function Tiger.TigerThrallSystem.HasMissionId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x15382d0
	int32_t GetSharedXP(); // Function Tiger.TigerThrallSystem.GetSharedXP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1538200
	struct UTigerThrallMission* GetRandomMission(); // Function Tiger.TigerThrallSystem.GetRandomMission // (Final|Native|Public|BlueprintCallable) // @ game+0x15381d0
	struct UTigerLocalThrallData* GetMutableThrallBySlot(int32_t InSlotIndex); // Function Tiger.TigerThrallSystem.GetMutableThrallBySlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1538130
	struct UTigerLocalThrallData* GetMutableThrallById(enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.GetMutableThrallById // (Final|Native|Public|BlueprintCallable) // @ game+0x15380a0
	struct UTigerThrallMission* GetMissionForId(int32_t InID); // Function Tiger.TigerThrallSystem.GetMissionForId // (Final|Native|Public|BlueprintCallable) // @ game+0x1538000
	struct TArray<struct UTigerLocalThrallData*> GetAllThralls(); // Function Tiger.TigerThrallSystem.GetAllThralls // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1537d50
	struct TArray<struct UTigerThrallMission*> GetAllMissions(); // Function Tiger.TigerThrallSystem.GetAllMissions // (Final|Native|Public|BlueprintCallable) // @ game+0x1537cd0
	bool AssignThrallToMission(int32_t InMissionId, enum class ETigerThrallId InThrallId); // Function Tiger.TigerThrallSystem.AssignThrallToMission // (Final|Native|Public|BlueprintCallable) // @ game+0x1537530
};

// Class Tiger.TigerThrallSystemSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerThrallSystemSettings : UDeveloperSettings {
	struct TSoftObjectPtr<UDataTable> AbilitiesTable; // 0x38(0x28)
	struct TSoftObjectPtr<UDataTable> BaseThrallsTable; // 0x60(0x28)
	struct TSoftObjectPtr<UDataTable> StatModifiersTable; // 0x88(0x28)
	struct TSoftObjectPtr<UDataTable> ThrallMissionsTable; // 0xb0(0x28)

	struct UDataTable* GetThrallMissionsTable(); // Function Tiger.TigerThrallSystemSettings.GetThrallMissionsTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15382a0
	struct UDataTable* GetThrallAbilitiesTable(); // Function Tiger.TigerThrallSystemSettings.GetThrallAbilitiesTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1538270
	struct UDataTable* GetStatModifiersTable(); // Function Tiger.TigerThrallSystemSettings.GetStatModifiersTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1538240
	struct UDataTable* GetBaseThrallsTable(); // Function Tiger.TigerThrallSystemSettings.GetBaseThrallsTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1537e80
};

// Class Tiger.TigerThrallTable
// Size: 0x2d8 (Inherited: 0x2a0)
struct ATigerThrallTable : ATigerInteractiveObject {
	struct UTigerThrallMapUI* TigerThrallMapUI; // 0x2a0(0x08)
	bool bIsThrallMapUIOpened; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct UCameraComponent* Camera; // 0x2b0(0x08)
	float TimeToTransition; // 0x2b8(0x04)
	float CameraExponent; // 0x2bc(0x04)
	struct UStaticMeshComponent* TableMesh; // 0x2c0(0x08)
	struct ATigerPlayer* InteractingPlayer; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)

	void SwitchToTableCamera(bool bIsInstant, struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.SwitchToTableCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x15401b0
	void SwitchToPlayerCamera(bool bIsInstant, struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.SwitchToPlayerCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x15400e0
	void StopInteracting(struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.StopInteracting // (Final|Native|Public|BlueprintCallable) // @ game+0x1540050
	void StartCameraTransition(); // Function Tiger.TigerThrallTable.StartCameraTransition // (Final|Native|Public|BlueprintCallable) // @ game+0x1540030
	void OpenUI(struct ATigerPlayerController* InTigerController); // Function Tiger.TigerThrallTable.OpenUI // (Final|Native|Public|BlueprintCallable) // @ game+0x153fc70
	bool IsThrallMapOpen(); // Function Tiger.TigerThrallTable.IsThrallMapOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x153fa30
	struct ATigerPlayerController* GetTigerController(); // Function Tiger.TigerThrallTable.GetTigerController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x153f920
};

// Class Tiger.TigerThrowingAxe
// Size: 0x248 (Inherited: 0x228)
struct ATigerThrowingAxe : AActor {
	char pad_228[0x1c]; // 0x228(0x1c)
	bool bHasBeenReflected; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)

	float GetDamageMultiplier(); // Function Tiger.TigerThrowingAxe.GetDamageMultiplier // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x153f8f0
	struct AActor* CopyAndReflect(struct ATigerCharacter* InNewOwner, struct FVector& InSpawnLocation, struct FRotator& InSpawnRotation); // Function Tiger.TigerThrowingAxe.CopyAndReflect // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x153f500
};

// Class Tiger.TigerThumbnailCameraComponent
// Size: 0x210 (Inherited: 0x200)
struct UTigerThumbnailCameraComponent : USceneComponent {
	struct FString CameraTag; // 0x1f8(0x10)
};

// Class Tiger.TigerThumbnailActor
// Size: 0x288 (Inherited: 0x228)
struct ATigerThumbnailActor : AActor {
	struct USceneComponent* Root; // 0x228(0x08)
	struct USceneComponent* ViewOrientation; // 0x230(0x08)
	int32_t IconWidth; // 0x238(0x04)
	int32_t IconHeight; // 0x23c(0x04)
	bool bIsRealtime; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	float FOV; // 0x244(0x04)
	struct TSoftObjectPtr<UTextureCube> Cubemap; // 0x248(0x28)
	float CubemapIntensity; // 0x270(0x04)
	bool bShouldGenerateImage; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	struct TArray<struct FSoftClassPath> ItemPaths; // 0x278(0x10)

	void Generate(struct UTigerInventoryItemBase* InItem); // Function Tiger.TigerThumbnailActor.Generate // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerTitleErrorUI
// Size: 0x290 (Inherited: 0x280)
struct UTigerTitleErrorUI : UTigerWidget {
	struct UTigerOnlineError* OnlineError; // 0x280(0x08)
	bool bIsOpen; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)

	void Open(); // Function Tiger.TigerTitleErrorUI.Open // (Final|Native|Public|BlueprintCallable) // @ game+0x153fc50
	void OnOpen(); // Function Tiger.TigerTitleErrorUI.OnOpen // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnClose(); // Function Tiger.TigerTitleErrorUI.OnClose // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Close(); // Function Tiger.TigerTitleErrorUI.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x153f4e0
};

// Class Tiger.TigerTitleListAsset
// Size: 0x40 (Inherited: 0x30)
struct UTigerTitleListAsset : UDataAsset {
	struct TArray<struct FText> TitlesByLevel; // 0x30(0x10)

	struct FText GetTitleFromPlayer(struct ATigerPlayerState* Player); // Function Tiger.TigerTitleListAsset.GetTitleFromPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x153f950
};

// Class Tiger.TigerTooltipKeyPromptWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerTooltipKeyPromptWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnPromptPressed; // 0x280(0x10)
	struct FMulticastInlineDelegate OnPromptHeld; // 0x290(0x10)
	char pad_2A0[0x20]; // 0x2a0(0x20)
	bool bHasHoldAction; // 0x2c0(0x01)
	char pad_2C1[0x1f]; // 0x2c1(0x1f)

	void SetPromptText(struct FText& PromptText); // Function Tiger.TigerTooltipKeyPromptWidget.SetPromptText // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void SetHoldProgress(float HoldProgress); // Function Tiger.TigerTooltipKeyPromptWidget.SetHoldProgress // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void PromptPressed(); // Function Tiger.TigerTooltipKeyPromptWidget.PromptPressed // (Final|Native|Private) // @ game+0x153fd20
	void PromptHeld(); // Function Tiger.TigerTooltipKeyPromptWidget.PromptHeld // (Final|Native|Private) // @ game+0x153fd00
};

// Class Tiger.TigerTooltipUI
// Size: 0x280 (Inherited: 0x280)
struct UTigerTooltipUI : UTigerWidget {

	struct UTigerTooltipKeyPromptWidget* AddKeyPrompt(struct FText& PromptText, bool bHasHoldAction); // Function Tiger.TigerTooltipUI.AddKeyPrompt // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void AddDropItemPrompt(struct UTigerItemAsset* ItemToDrop); // Function Tiger.TigerTooltipUI.AddDropItemPrompt // (Final|Native|Public|BlueprintCallable) // @ game+0x153edc0
};

// Class Tiger.TigerTransferFromMatchGameMode
// Size: 0x2f0 (Inherited: 0x2c8)
struct ATigerTransferFromMatchGameMode : AGameModeBase {
	char pad_2C8[0x28]; // 0x2c8(0x28)

	void HideMouseCursor(); // Function Tiger.TigerTransferFromMatchGameMode.HideMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0xb64580
};

// Class Tiger.TigerTransferFromMatchGameState
// Size: 0x390 (Inherited: 0x390)
struct ATigerTransferFromMatchGameState : ATigerGameState {
};

// Class Tiger.TigerTransitionWidget
// Size: 0x298 (Inherited: 0x260)
struct UTigerTransitionWidget : UUserWidget {
	float AnimationDelay; // 0x260(0x04)
	float AnimationSpeed; // 0x264(0x04)
	struct FMulticastInlineDelegate OnTransitionStarted; // 0x268(0x10)
	struct FMulticastInlineDelegate OnTransitionFinished; // 0x278(0x10)
	float Progress; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct UMaterialInstanceDynamic* EffectMaterialInstance; // 0x290(0x08)

	void UpdateProgress(float InProgress); // Function Tiger.TigerTransitionWidget.UpdateProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x1540280
	void SetEffectMaterialInstance(struct UMaterialInstanceDynamic* InMaterialInstance); // Function Tiger.TigerTransitionWidget.SetEffectMaterialInstance // (Final|Native|Protected|BlueprintCallable) // @ game+0x153fe60
	void SetAnimationSpeed(float InAnimationSpeed); // Function Tiger.TigerTransitionWidget.SetAnimationSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x153fde0
	void SetAnimationDelay(float InAnimationDelay); // Function Tiger.TigerTransitionWidget.SetAnimationDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x153fd60
	void RestartAnimation(); // Function Tiger.TigerTransitionWidget.RestartAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x153fd40
	void EnableRendering(); // Function Tiger.TigerTransitionWidget.EnableRendering // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void DisableRendering(); // Function Tiger.TigerTransitionWidget.DisableRendering // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerTrap
// Size: 0x330 (Inherited: 0x228)
struct ATigerTrap : AActor {
	char pad_228[0x8]; // 0x228(0x08)
	struct FMulticastInlineDelegate OnTriggered; // 0x230(0x10)
	struct USceneComponent* Root; // 0x240(0x08)
	struct UStaticMeshComponent* TrapMesh; // 0x248(0x08)
	struct UBoxComponent* ShootingVolume; // 0x250(0x08)
	struct USphereComponent* TriggerVolume; // 0x258(0x08)
	struct USphereComponent* ExplosionVolume; // 0x260(0x08)
	struct USphereComponent* GasVolume; // 0x268(0x08)
	struct UParticleSystemComponent* ArmedParticle; // 0x270(0x08)
	struct UParticleSystemComponent* AreaParticle; // 0x278(0x08)
	struct UParticleSystemComponent* ExplosionParticle; // 0x280(0x08)
	struct UParticleSystemComponent* GasParticle; // 0x288(0x08)
	struct UTigerTrapsConfig* Config; // 0x290(0x08)
	struct UTigerTrapsConfig* RawConfig; // 0x298(0x08)
	struct UTigerBuff* GasBuff; // 0x2a0(0x08)
	struct UDecalComponent* Decal; // 0x2a8(0x08)
	struct FTigerPersistentPlayerID OwnerPersistentId; // 0x2b0(0x10)
	char pad_2C0[0xc]; // 0x2c0(0x0c)
	float ExplosionDamageMultiplier; // 0x2cc(0x04)
	int32_t PowerLevel; // 0x2d0(0x04)
	bool bIsPlaced; // 0x2d4(0x01)
	bool bIsArmed; // 0x2d5(0x01)
	bool bUseAreaTrigger; // 0x2d6(0x01)
	char pad_2D7[0x1]; // 0x2d7(0x01)
	bool bTriggered; // 0x2d8(0x01)
	char pad_2D9[0x17]; // 0x2d9(0x17)
	struct FVector ForwardDirection; // 0x2f0(0x0c)
	struct FVector Velocity; // 0x2fc(0x0c)
	char pad_308[0x18]; // 0x308(0x18)
	struct UMaterialInstanceDynamic* TrapMaterialInstance; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)

	bool ShouldTrapSeeCharacterAsFriendly(struct ATigerCharacter* InCharacter); // Function Tiger.TigerTrap.ShouldTrapSeeCharacterAsFriendly // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x153ff90
	bool ShouldPlayerSeeTrapAsFriendly(struct ATigerPlayer* InPlayer); // Function Tiger.TigerTrap.ShouldPlayerSeeTrapAsFriendly // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x153fef0
	void OnTriggeredTrap(); // Function Tiger.TigerTrap.OnTriggeredTrap // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnPlacedTrap(); // Function Tiger.TigerTrap.OnPlacedTrap // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnGasBuffTick(struct UTigerBuffDOTInstance* InGasBuffInstance); // Function Tiger.TigerTrap.OnGasBuffTick // (Final|Native|Protected) // @ game+0x153fbc0
	void OnActivatedTrap(); // Function Tiger.TigerTrap.OnActivatedTrap // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void Multicast_TriggerTrap(); // Function Tiger.TigerTrap.Multicast_TriggerTrap // (Net|NetReliableNative|Event|NetMulticast|Protected|NetValidate) // @ game+0x153fb70
	void Multicast_Stick(struct FVector InLocation, struct FRotator InRotation); // Function Tiger.TigerTrap.Multicast_Stick // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x153fab0
	void Multicast_ActivateTrap(); // Function Tiger.TigerTrap.Multicast_ActivateTrap // (Net|NetReliableNative|Event|NetMulticast|Protected|NetValidate) // @ game+0x153fa60
	bool IsTriggered(); // Function Tiger.TigerTrap.IsTriggered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x14fb7d0
	bool IsPlaced(); // Function Tiger.TigerTrap.IsPlaced // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x153fa10
	bool IsArmed(); // Function Tiger.TigerTrap.IsArmed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x153f9f0
	void EndOverlappedTrigger(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerTrap.EndOverlappedTrigger // (Final|Native|Private) // @ game+0x153f790
	void EndOverlappedGas(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function Tiger.TigerTrap.EndOverlappedGas // (Final|Native|Private) // @ game+0x153f630
	void BeginOverlappedTrigger(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerTrap.BeginOverlappedTrigger // (Final|Native|Private|HasOutParms) // @ game+0x153f2b0
	void BeginOverlappedProjectile(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function Tiger.TigerTrap.BeginOverlappedProjectile // (Final|Native|Private|HasOutParms) // @ game+0x153f080
	void BeginOverlappedGas(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerTrap.BeginOverlappedGas // (Final|Native|Private|HasOutParms) // @ game+0x153ee50
};

// Class Tiger.TigerTraversalBaseFiniteState
// Size: 0x40 (Inherited: 0x28)
struct UTigerTraversalBaseFiniteState : UObject {
	struct UTigerCharacterMovementComponent* TigerCharacterMovementComponent; // 0x28(0x08)
	struct UTigerTraversalStateConfigBase* BaseConfig; // 0x30(0x08)
	struct UTigerTraversalFiniteStateMachine* OwningStateMachine; // 0x38(0x08)
};

// Class Tiger.TigerTraversalAirDashState
// Size: 0x58 (Inherited: 0x40)
struct UTigerTraversalAirDashState : UTigerTraversalBaseFiniteState {
	char pad_40[0x18]; // 0x40(0x18)
};

// Class Tiger.TigerTraversalClimbState
// Size: 0x150 (Inherited: 0x40)
struct UTigerTraversalClimbState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateClimbingConfig* ClimbingConfig; // 0x40(0x08)
	char pad_48[0x108]; // 0x48(0x108)
};

// Class Tiger.TigerTraversalCrouchState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalCrouchState : UTigerTraversalBaseFiniteState {
	char pad_40[0x10]; // 0x40(0x10)
};

// Class Tiger.TigerTraversalDownedState
// Size: 0x40 (Inherited: 0x40)
struct UTigerTraversalDownedState : UTigerTraversalBaseFiniteState {
};

// Class Tiger.TigerTraversalFallState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalFallState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
	struct UTigerTraversalStateFallConfig* FallConfig; // 0x48(0x08)
};

// Class Tiger.TigerTraversalFiniteStateMachine
// Size: 0x1d8 (Inherited: 0xb0)
struct UTigerTraversalFiniteStateMachine : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)
	struct UTigerCharacterMovementComponent* TigerCharacterMovement; // 0xb8(0x08)
	struct UTigerTraversalBaseFiniteState* ActiveState; // 0xc0(0x08)
	struct UTigerTraversalBaseFiniteState* TraversalList[0xf]; // 0xc8(0x78)
	struct UTigerTraversalStateConfigBase* Configs[0xf]; // 0x140(0x78)
	struct FMulticastInlineDelegate OnTraversalStateChanged; // 0x1b8(0x10)
	char pad_1C8[0x10]; // 0x1c8(0x10)
};

// Class Tiger.TigerTraversalForcedMoveState
// Size: 0x40 (Inherited: 0x40)
struct UTigerTraversalForcedMoveState : UTigerTraversalBaseFiniteState {
};

// Class Tiger.TigerTraversalJumpState
// Size: 0x60 (Inherited: 0x40)
struct UTigerTraversalJumpState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateJumpConfig* JumpConfig; // 0x40(0x08)
	char pad_48[0x18]; // 0x48(0x18)
};

// Class Tiger.TigerTraversalLedgeGrabState
// Size: 0x80 (Inherited: 0x40)
struct UTigerTraversalLedgeGrabState : UTigerTraversalBaseFiniteState {
	struct UTigerTraversalStateLedgeGrabConfig* LedgeGrabConfig; // 0x40(0x08)
	char pad_48[0x38]; // 0x48(0x38)
};

// Class Tiger.TigerTraversalLowVaultState
// Size: 0x70 (Inherited: 0x40)
struct UTigerTraversalLowVaultState : UTigerTraversalBaseFiniteState {
	char pad_40[0x8]; // 0x40(0x08)
	struct UAnimMontage* ActiveLowVaultMontage; // 0x48(0x08)
	char pad_50[0x20]; // 0x50(0x20)
};

// Class Tiger.TigerTraversalSlideJumpState
// Size: 0x58 (Inherited: 0x40)
struct UTigerTraversalSlideJumpState : UTigerTraversalBaseFiniteState {
	char pad_40[0x18]; // 0x40(0x18)
};

// Class Tiger.TigerTraversalSlideState
// Size: 0x80 (Inherited: 0x40)
struct UTigerTraversalSlideState : UTigerTraversalBaseFiniteState {
	char pad_40[0x38]; // 0x40(0x38)
	struct UTigerTraversalStateSlidingConfig* Slidingconfig; // 0x78(0x08)
};

// Class Tiger.TigerTraversalStateConfigBase
// Size: 0x50 (Inherited: 0x28)
struct UTigerTraversalStateConfigBase : UObject {
	bool bStateIsDisabled; // 0x28(0x01)
	char pad_29[0x7]; // 0x29(0x07)
	struct TArray<enum class ETigerTraversalState> PossibleOutTransitions; // 0x30(0x10)
	struct UTigerTraversalBaseFiniteState* TraversalState; // 0x40(0x08)
	float TimeOutSeconds; // 0x48(0x04)
	enum class ETigerTraversalState TimeOutInto; // 0x4c(0x01)
	bool bJumpCooldownAllowedToTick; // 0x4d(0x01)
	bool bJumpDiminishingReturnsCountdownCanTick; // 0x4e(0x01)
	char pad_4F[0x1]; // 0x4f(0x01)
};

// Class Tiger.TigerTraversaleStateForcedMoveConfig
// Size: 0x50 (Inherited: 0x50)
struct UTigerTraversaleStateForcedMoveConfig : UTigerTraversalStateConfigBase {
};

// Class Tiger.TigerTraversalStateClimbingConfig
// Size: 0x100 (Inherited: 0x50)
struct UTigerTraversalStateClimbingConfig : UTigerTraversalStateConfigBase {
	struct FName CameraClimbingSocketName; // 0x50(0x08)
	struct FName ClimbingSpeedAnimationCurveName; // 0x58(0x08)
	struct FName ClimbingBlendSpaceName; // 0x60(0x08)
	struct FName ClimbStartBlendSpaceName; // 0x68(0x08)
	float ClimbingCameraInterpSpeed; // 0x70(0x04)
	float ClimbingCameraInterpDelay; // 0x74(0x04)
	float ClimbablePrimaryAngleCheckOffset; // 0x78(0x04)
	float ClimbableFeetCheckOffset; // 0x7c(0x04)
	float ClimbableOffset; // 0x80(0x04)
	float ClimbableExtraSearchDepth; // 0x84(0x04)
	float StartingClimbDepth; // 0x88(0x04)
	float ClimbHorizontalAdjustmentSpeed; // 0x8c(0x04)
	float ClimbLowHorizontalAdjustmentSpeed; // 0x90(0x04)
	float IndoorClimbRadiusScale; // 0x94(0x04)
	float IndoorClimbVerticalOffset; // 0x98(0x04)
	float IndoorClimbBackwardOffset; // 0x9c(0x04)
	float IndoorClimbIndoorUpsideDownDeadzoneHalfAngle; // 0xa0(0x04)
	float CornerTraceLength; // 0xa4(0x04)
	float ClimbableCornerAngleTreshold; // 0xa8(0x04)
	float CornerCheckAngle; // 0xac(0x04)
	float DistanceToCheckForClimbingOverhangs; // 0xb0(0x04)
	float MaximumOverhangAdjustmentLength; // 0xb4(0x04)
	float ClimbingOverHangCheckSweepRadius; // 0xb8(0x04)
	float MinimumOverHangLeadUpBufferPercentage; // 0xbc(0x04)
	float ClimbingInputZCutOff; // 0xc0(0x04)
	float MinimumUpwardClimbAngle; // 0xc4(0x04)
	float MaximumSidewaysClimbDeviation; // 0xc8(0x04)
	float ClimbingOverHangZCutOff; // 0xcc(0x04)
	float StartClimbInAirAllowedAngleDifference; // 0xd0(0x04)
	float StartClimbOnGroundAllowedAngleDifference; // 0xd4(0x04)
	float StartClimbInAirAllowedAngleDifferenceGamepad; // 0xd8(0x04)
	float StartClimbOnGroundAllowedAngleDifferenceGamepad; // 0xdc(0x04)
	float ClimbCooldown; // 0xe0(0x04)
	float IndoorClimbingCooldown; // 0xe4(0x04)
	float VerticalClimbSpeed; // 0xe8(0x04)
	float HorizontalClimbSpeed; // 0xec(0x04)
	float MaximumAllowedAngleDifferenceBetweenClimbTargets; // 0xf0(0x04)
	bool bShouldReadClimbSpeedFromAnimationCurve; // 0xf4(0x01)
	bool bResetIndoorClimbCooldownWhenOutside; // 0xf5(0x01)
	bool bResetIndoorClimbCooldownOnLanding; // 0xf6(0x01)
	bool bShouldAvoidOverhangsDuringClimb; // 0xf7(0x01)
	bool bOnlyStartClimbIfLookingAtWall; // 0xf8(0x01)
	bool bUseSocketForNonLinearCameraWhenClimbing; // 0xf9(0x01)
	bool bShouldInterpClimbingCamera; // 0xfa(0x01)
	char pad_FB[0x5]; // 0xfb(0x05)
};

// Class Tiger.TigerTraversalStateJumpConfig
// Size: 0x78 (Inherited: 0x50)
struct UTigerTraversalStateJumpConfig : UTigerTraversalStateConfigBase {
	int32_t MaxJumpIndexForDiminishingReturnsCurve; // 0x50(0x04)
	float TimeToReduceDiminishingReturnsCount; // 0x54(0x04)
	float JumpForgivenessDistance; // 0x58(0x04)
	float InitialJumpZVelocity; // 0x5c(0x04)
	float PostJumpClimbInteractionDelay; // 0x60(0x04)
	float JumpCoolDownTime; // 0x64(0x04)
	bool bCancelJumpOnHeadImpact; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UCurveFloat* DiminishingReturnsCurve; // 0x70(0x08)
};

// Class Tiger.TigerTraversalStateAirDashConfig
// Size: 0x68 (Inherited: 0x50)
struct UTigerTraversalStateAirDashConfig : UTigerTraversalStateConfigBase {
	bool bResetOnWallJump; // 0x50(0x01)
	char pad_51[0x3]; // 0x51(0x03)
	float JumpVerticalVelocity; // 0x54(0x04)
	float PostJumpClimbInteractionDelay; // 0x58(0x04)
	float JumpCoolDownTime; // 0x5c(0x04)
	bool bPreventFallingSlide; // 0x60(0x01)
	bool bResetAimGlideOnDoubleJump; // 0x61(0x01)
	char pad_62[0x6]; // 0x62(0x06)
};

// Class Tiger.TigerTraversalStateLedgeGrabConfig
// Size: 0xc0 (Inherited: 0x50)
struct UTigerTraversalStateLedgeGrabConfig : UTigerTraversalStateConfigBase {
	struct FName LedgeGrabAnimationName; // 0x50(0x08)
	struct FName FallbackLedgeGrabAnimationName; // 0x58(0x08)
	struct FVector LedgeGrabUpperBodyVolumeExtent; // 0x60(0x0c)
	struct FVector LedgeGrabClearanceCheckExtent; // 0x6c(0x0c)
	struct FVector LedgeGrabUpperBodyVolumeCheckPosition; // 0x78(0x0c)
	float AnimationBlendoutStartDelay; // 0x84(0x04)
	float LedgeGrabAnimationTriggerMaxDistance; // 0x88(0x04)
	float MaximumLedgeWallHeight; // 0x8c(0x04)
	float MaximumLedgeOverHangDepth; // 0x90(0x04)
	float LedgeGrabUpperBodyVolumeForwardOffset; // 0x94(0x04)
	float LedgeGrabMaximumCameraAngleDifference; // 0x98(0x04)
	float LedgeGrabForwardSearchDepth; // 0x9c(0x04)
	float LedgeGrabBackwardSearchDepth; // 0xa0(0x04)
	float LedgeGrabPositionSweepRadius; // 0xa4(0x04)
	float LedgeGrabPositionHorizontalEdgeOffset; // 0xa8(0x04)
	float LedgeGrabPositionVerticalOffset; // 0xac(0x04)
	float StartingRotationSpeedForBringingCharacterBackToCameraFacing; // 0xb0(0x04)
	float RotationSpeedGainPerSecond; // 0xb4(0x04)
	float MaxTimeToFixCharacterRotation; // 0xb8(0x04)
	bool bShouldAdjustLedgeGrabAnimationPlayRate; // 0xbc(0x01)
	bool bShouldUseExitLedgeGrabRotationInterpolation; // 0xbd(0x01)
	char pad_BE[0x2]; // 0xbe(0x02)
};

// Class Tiger.TigerTraversalStateFallConfig
// Size: 0x58 (Inherited: 0x50)
struct UTigerTraversalStateFallConfig : UTigerTraversalStateConfigBase {
	float DecelerationFactorFallingUpwardsFromSliding; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Tiger.TigerTraversalStateSlidingConfig
// Size: 0xd0 (Inherited: 0x50)
struct UTigerTraversalStateSlidingConfig : UTigerTraversalStateConfigBase {
	float SlideGravityMultiplier; // 0x50(0x04)
	float SlideTerminalSpeed; // 0x54(0x04)
	float BrakingDecelerationSliding; // 0x58(0x04)
	float BrakingDecelerationSlidingStop; // 0x5c(0x04)
	float RequiredVelocityForSlideStart; // 0x60(0x04)
	float RequiredFallingVelocityForSlideStart; // 0x64(0x04)
	float HorizontalSpeedForFallingSlide; // 0x68(0x04)
	float ThresholdVelocityForSlideStop; // 0x6c(0x04)
	float SlideVelocityBoostMultiplier; // 0x70(0x04)
	float SlideFallingHorizontalBoostMultiplier; // 0x74(0x04)
	float SlideFallingVerticalBoostMultiplier; // 0x78(0x04)
	float SlideAirGraceTime; // 0x7c(0x04)
	float SlideBoostDecayRecoverySpeed; // 0x80(0x04)
	float SlideControllerRotationTime; // 0x84(0x04)
	float SlidingWallCollisionCutOffHalfAngle; // 0x88(0x04)
	float SlidingWallCollisionSweepRadius; // 0x8c(0x04)
	float SlidingWallCollisionZecondaryCheckZOffset; // 0x90(0x04)
	float SlideTimeBeforeJumpIsAllowed; // 0x94(0x04)
	float TimeOfForcedSliding; // 0x98(0x04)
	char pad_9C[0x4]; // 0x9c(0x04)
	struct UCurveFloat* SlideBoostDecayCurve; // 0xa0(0x08)
	struct UCurveFloat* SlideGravityCurve; // 0xa8(0x08)
	struct UCurveFloat* HorizontalSpeedForFallingSlideCurve; // 0xb0(0x08)
	struct UCurveFloat* DownwardsAngleDifferenceMultiplierCurve; // 0xb8(0x08)
	struct UCurveFloat* DecelerationCurve; // 0xc0(0x08)
	bool bUseSlideAlongSurfaceLogic; // 0xc8(0x01)
	bool bPrintVariablesOnFallSlide; // 0xc9(0x01)
	char pad_CA[0x6]; // 0xca(0x06)
};

// Class Tiger.TigerTraversalStateSlideJumpConfig
// Size: 0x88 (Inherited: 0x50)
struct UTigerTraversalStateSlideJumpConfig : UTigerTraversalStateConfigBase {
	float JumpCoolDownTime; // 0x50(0x04)
	float PostJumpClimbInteractionDelay; // 0x54(0x04)
	float SlideHorizontalDirectionInfluenceThreshold; // 0x58(0x04)
	float SlideJumpDecayRecoverySpeed; // 0x5c(0x04)
	struct UCurveFloat* JumpZVelocityOverSlideSpeed; // 0x60(0x08)
	struct UCurveFloat* SlideJumpHorizontalMultiplierOverVelocity; // 0x68(0x08)
	struct UCurveFloat* SlideJumpDecayCurve; // 0x70(0x08)
	struct UCurveFloat* SlideJumpAngledJumpCurve; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)
};

// Class Tiger.TigerTraversalStateWallJumpConfig
// Size: 0xe0 (Inherited: 0x50)
struct UTigerTraversalStateWallJumpConfig : UTigerTraversalStateConfigBase {
	struct FTigerWallJumpBlendBundle DefaultWallJumpBlendBundle; // 0x50(0x10)
	struct FTigerWallJumpBlendBundle WallJumpBlendBundleFromClimb; // 0x60(0x10)
	struct FVector WallJumpColliderOffset; // 0x70(0x0c)
	float PostJumpClimbInteractionDelay; // 0x7c(0x04)
	float JumpCoolDownTime; // 0x80(0x04)
	float WallJumpSphereColliderRadius; // 0x84(0x04)
	float SecondaryWallSweepRadius; // 0x88(0x04)
	float MaximumHorizontalJumpVelocity; // 0x8c(0x04)
	float MinimumHorizontalJumpVelocity; // 0x90(0x04)
	float WallJumpZVelocity; // 0x94(0x04)
	float WallJumpInputDirectionCutOffAngle; // 0x98(0x04)
	float MaxWallJumpStateDuration; // 0x9c(0x04)
	float WallJumpDownwardWallNormalCutOffAngle; // 0xa0(0x04)
	float WallJumpRequiredHalfAngleFromWallWhenHoldingForward; // 0xa4(0x04)
	float WallJumpDeadzoneHalfAngle; // 0xa8(0x04)
	float WallJumpMaxAllowedHalfAngleBeforeClamping; // 0xac(0x04)
	bool bShouldCapNumberOfWallJumpsFromSimilarWalls; // 0xb0(0x01)
	char pad_B1[0x3]; // 0xb1(0x03)
	float ConsecutiveWallJumpNormalLikenessThreshold; // 0xb4(0x04)
	float WallJumpDelayTime; // 0xb8(0x04)
	float WallJumpDownwardSpeedGainInSeconds; // 0xbc(0x04)
	float WallJumpSlideSpeedScale; // 0xc0(0x04)
	float WallJumpMinimumWallSlideSpeed; // 0xc4(0x04)
	float WallJumpMaximumWallSlideSpeed; // 0xc8(0x04)
	float WallJumpForwardHalfAngleAnimationCutOff; // 0xcc(0x04)
	enum class ETigerWallJumpInputOption WallJumpInputOption; // 0xd0(0x01)
	char MaximumNumberOfWallJumpsFromSimilarWall; // 0xd1(0x01)
	char NumberOfWallJumpsToRestoreOnDoubleJump; // 0xd2(0x01)
	bool bShouldApplyDownwardForceDuringWallJumpDelay; // 0xd3(0x01)
	bool AdjustWallJumpSlideSpeedOnInputAngle; // 0xd4(0x01)
	bool bShouldValidateDownwardAngleOfHitResult; // 0xd5(0x01)
	char pad_D6[0x2]; // 0xd6(0x02)
	struct UCurveFloat* WallJumpDelaySpeedCurve; // 0xd8(0x08)
};

// Class Tiger.TigerTraversalStateWallGrindConfig
// Size: 0xb0 (Inherited: 0x50)
struct UTigerTraversalStateWallGrindConfig : UTigerTraversalStateConfigBase {
	struct FVector ColliderOffset; // 0x50(0x0c)
	float SphereColliderRadius; // 0x5c(0x04)
	float WallGrindCancelInputHalfAngle; // 0x60(0x04)
	float WallGrindCancelInputDelayTime; // 0x64(0x04)
	float WallGrindVelocityRemapDeadZone; // 0x68(0x04)
	float WallGrindMaxHorizontalSpeed; // 0x6c(0x04)
	float WallGrindBufferDistance; // 0x70(0x04)
	float WallGrindBufferAdjustmentSpeed; // 0x74(0x04)
	float RequiredSuccessfulSimulationTime; // 0x78(0x04)
	float MinRequiredAngleBetweenStartingNormalAndPathDir; // 0x7c(0x04)
	float WallGrindPossibleStartAngleThreshold; // 0x80(0x04)
	float WallGrindSimulationSharpAngleThreshold; // 0x84(0x04)
	int8_t NumberofSimulationChecksPerSecond; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float WallGrindNormalLerpSpeed; // 0x8c(0x04)
	struct UCurveFloat* WallGrindFallVelocitySpeedUp; // 0x90(0x08)
	struct UCurveFloat* WallGrindFallVelocitySlowDown; // 0x98(0x08)
	struct UCurveFloat* WallGrindStartingHorizontalSpeedMultipler; // 0xa0(0x08)
	bool bOnlyAdjustFallSpeedWhenFallingTooFast; // 0xa8(0x01)
	bool bShouldBlockWallGrindingWhenHoldingCancelInput; // 0xa9(0x01)
	bool bShouldClampHorizontalSpeed; // 0xaa(0x01)
	bool bWallGrindShouldBufferDistanceToWall; // 0xab(0x01)
	bool bValidateWallgrindByCheckingPathAverageToWall; // 0xac(0x01)
	bool bDrawOutWallNormalsUsedInAWallGrind; // 0xad(0x01)
	char pad_AE[0x2]; // 0xae(0x02)
};

// Class Tiger.TigerTraversalStateDownedConfig
// Size: 0x58 (Inherited: 0x50)
struct UTigerTraversalStateDownedConfig : UTigerTraversalStateConfigBase {
	float DownedMaxSpeed; // 0x50(0x04)
	char pad_54[0x4]; // 0x54(0x04)
};

// Class Tiger.TigerTraversalStateLowVaultConfig
// Size: 0x88 (Inherited: 0x50)
struct UTigerTraversalStateLowVaultConfig : UTigerTraversalStateConfigBase {
	struct FName LowVaultAnimationName; // 0x50(0x08)
	struct FVector LowVaultLowerBodyVolumeExtent; // 0x58(0x0c)
	struct FVector LowVaultCheckOffset; // 0x64(0x0c)
	float LowVaultMaximumCameraAngleDifference; // 0x70(0x04)
	float AnimationBlendoutStartDelay; // 0x74(0x04)
	float LowVaultPositionVerticalOffset; // 0x78(0x04)
	float HorizontalEndPositionOffset; // 0x7c(0x04)
	bool bShouldAdjustLowVaultAnimationPlayRate; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
};

// Class Tiger.TigerTraversalStateWallHangConfig
// Size: 0x68 (Inherited: 0x50)
struct UTigerTraversalStateWallHangConfig : UTigerTraversalStateConfigBase {
	float OffsetDistanceForFutureWallHangPosition; // 0x50(0x04)
	bool bShouldBlockWallHangIfLikelyToSlideOff; // 0x54(0x01)
	bool bShouldAllowPlayerToSlideoffHorizontallyDuringDeceleration; // 0x55(0x01)
	char pad_56[0x2]; // 0x56(0x02)
	struct UCurveFloat* VerticalVelocitySlowDownRate; // 0x58(0x08)
	struct UCurveFloat* HorizontalVelocitySlowDownRate; // 0x60(0x08)
};

// Class Tiger.TigerTraversalWalkState
// Size: 0x50 (Inherited: 0x40)
struct UTigerTraversalWalkState : UTigerTraversalBaseFiniteState {
	char pad_40[0x10]; // 0x40(0x10)
};

// Class Tiger.TigerTraversalWallGrindState
// Size: 0x158 (Inherited: 0x40)
struct UTigerTraversalWallGrindState : UTigerTraversalBaseFiniteState {
	char pad_40[0x108]; // 0x40(0x108)
	struct UTigerTraversalStateWallGrindConfig* WallGrindConfig; // 0x148(0x08)
	char pad_150[0x8]; // 0x150(0x08)

	void UpdateEffect(struct FName& InAssociatedBoneName, struct FHitResult& InHitResult, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.UpdateEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void StopEffect(struct FName& InAssociatedBoneName, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.StopEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void StartEffect(struct FName& InAssociatedBoneName, struct FHitResult& InHitResult, struct ATigerCharacter* InTigerCharacter); // Function Tiger.TigerTraversalWallGrindState.StartEffect // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerTraversalWallHangState
// Size: 0x60 (Inherited: 0x40)
struct UTigerTraversalWallHangState : UTigerTraversalBaseFiniteState {
	char pad_40[0x20]; // 0x40(0x20)
};

// Class Tiger.TigerTraversalWallJumpState
// Size: 0x138 (Inherited: 0x40)
struct UTigerTraversalWallJumpState : UTigerTraversalBaseFiniteState {
	char pad_40[0xf8]; // 0x40(0xf8)
};

// Class Tiger.TigerTRNSubsystem
// Size: 0xe8 (Inherited: 0x30)
struct UTigerTRNSubsystem : UGameInstanceSubsystem {
	char pad_30[0x78]; // 0x30(0x78)
	int32_t NumRetries; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
	struct FString BaseUrl; // 0xb0(0x10)
	struct FString EndpointDev; // 0xc0(0x10)
	struct FString EndpointRelease; // 0xd0(0x10)
	bool bShouldForceUpload; // 0xe0(0x01)
	bool bUseStagingTrackerLink; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)

	struct FString GetTrackerLink(struct FTigerPersistentPlayerID InID); // Function Tiger.TigerTRNSubsystem.GetTrackerLink // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1544fa0
};

// Class Tiger.TigerMetadataDataTableHelper
// Size: 0x28 (Inherited: 0x28)
struct UTigerMetadataDataTableHelper : UObject {

	struct UTexture2D* GetRankIconByIndex(int32_t& InIndex); // Function Tiger.TigerMetadataDataTableHelper.GetRankIconByIndex // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerMetadataExportSettings
// Size: 0x60 (Inherited: 0x38)
struct UTigerMetadataExportSettings : UDeveloperSettings {
	struct TSoftClassPtr<UObject> DataTableHelper; // 0x38(0x28)
};

// Class Tiger.TigerTutorialGameMode
// Size: 0x1038 (Inherited: 0x9f8)
struct ATigerTutorialGameMode : ATigerGameMode {
	struct FMulticastInlineDelegate OnTutorialStart; // 0x9f8(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat01Complete; // 0xa08(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat02Complete; // 0xa18(0x10)
	struct FMulticastInlineDelegate OnTutorialBeat03Complete; // 0xa28(0x10)
	bool bHasTutorialStarted; // 0xa38(0x01)
	bool bHasTutorialCompleted; // 0xa39(0x01)
	char pad_A3A[0x6]; // 0xa3a(0x06)
	struct FTigerPreviewerData PlayerAppearance; // 0xa40(0x2d8)
	struct FTigerPreviewerData BotAppearance; // 0xd18(0x2d8)
	struct FString BotName; // 0xff0(0x10)
	struct UTigerItemAsset* StartingRangedItemAsset; // 0x1000(0x08)
	uint32_t StartingRangedAmmo; // 0x1008(0x04)
	float BotDifficulty; // 0x100c(0x04)
	struct UTigerPowerKit* TutorialPlayerArchetype; // 0x1010(0x08)
	struct UTigerPowerKit* TutorialBotArchetype; // 0x1018(0x08)
	struct UAkAudioEvent* CurrentDialogueEvent; // 0x1020(0x08)
	struct ATigerItemWorldRepresentation* Beat03Consumable; // 0x1028(0x08)
	struct UTigerConsequenceBroadcastCoordinator* ConsequenceBroadcastCoordinator; // 0x1030(0x08)

	void UnlockPlayer(); // Function Tiger.TigerTutorialGameMode.UnlockPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void StartMatch(); // Function Tiger.TigerTutorialGameMode.StartMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x1545af0
	void SpawnTutorialBot(); // Function Tiger.TigerTutorialGameMode.SpawnTutorialBot // (Final|Native|Public|BlueprintCallable) // @ game+0x15459a0
	void ShowContextualHelp_BlueprintImplementation(struct TSoftClassPtr<UObject>& InContextualHelp); // Function Tiger.TigerTutorialGameMode.ShowContextualHelp_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void ShowContextualHelp(struct TSoftClassPtr<UObject> InContextualHelp); // Function Tiger.TigerTutorialGameMode.ShowContextualHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x1545780
	void SetTutorialHasStarted(bool bInTutorialHasStarted); // Function Tiger.TigerTutorialGameMode.SetTutorialHasStarted // (Final|Native|Public|BlueprintCallable) // @ game+0x1545660
	void SetTutorialHasCompleted(); // Function Tiger.TigerTutorialGameMode.SetTutorialHasCompleted // (Final|Native|Public|BlueprintCallable) // @ game+0x1545640
	void RemoveSubtitles(struct UAkAudioEvent* InDialogueEvent); // Function Tiger.TigerTutorialGameMode.RemoveSubtitles // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void RemovePing(); // Function Tiger.TigerTutorialGameMode.RemovePing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	struct UAkAudioEvent* PlayVoiceOver_BlueprintImplementation(struct TSoftObjectPtr<UAkAudioEvent>& InDialogueEvent, struct FText& InSubtitles, struct FDelegate& InPostEventCallback); // Function Tiger.TigerTutorialGameMode.PlayVoiceOver_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	struct UAkAudioEvent* PlayVoiceOver(struct TSoftObjectPtr<UAkAudioEvent> InDialogueEvent, struct FText& InSubtitles, struct FDelegate& InPostEventCallback); // Function Tiger.TigerTutorialGameMode.PlayVoiceOver // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1545420
	void Ping_BlueprintImplementation(struct FVector& InWorldLocation, struct TSoftClassPtr<UObject>& InPingClass, struct AActor* InContextualActor, struct FVector& InLocalOffset); // Function Tiger.TigerTutorialGameMode.Ping_BlueprintImplementation // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x18b4070
	void Ping(struct FVector InWorldLocation, struct TSoftClassPtr<UObject> InPingClass, struct AActor* InContextualActor, struct FVector InLocalOffset); // Function Tiger.TigerTutorialGameMode.Ping // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1545240
	void MakeTutorialBotBloodHunted(); // Function Tiger.TigerTutorialGameMode.MakeTutorialBotBloodHunted // (Final|Native|Public|BlueprintCallable) // @ game+0x1545220
	void LockPlayer(); // Function Tiger.TigerTutorialGameMode.LockPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	bool IsObjectiveActive(struct FName InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.IsObjectiveActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void HideUI(); // Function Tiger.TigerTutorialGameMode.HideUI // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void HideContextualHelp_BlueprintImplementation(struct TSoftClassPtr<UObject>& InContextualHelp); // Function Tiger.TigerTutorialGameMode.HideContextualHelp_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void HideContextualHelp(struct TSoftClassPtr<UObject> InContextualHelp); // Function Tiger.TigerTutorialGameMode.HideContextualHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x15450e0
	struct UAkAudioEvent* GetCurrentDialogueEvent(); // Function Tiger.TigerTutorialGameMode.GetCurrentDialogueEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1544f20
	void CompleteObjective_BlueprintImplementation(struct FName& InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.CompleteObjective_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void CompleteObjective(struct FName InObjectiveIdentifier); // Function Tiger.TigerTutorialGameMode.CompleteObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x1544e90
	void AddNewObjective_BlueprintImplementation(struct FName& InObjectiveIdentifier, struct FText& InObjectiveText, struct FName& InActionToEmbed, struct FName& InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, struct FKey& InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, struct FKey& InAdditionalGamepadInput, bool InOverrideImage, struct FName& InImageToOverride, bool InPersistantObjective, struct FName& InGamepadImageToOverride); // Function Tiger.TigerTutorialGameMode.AddNewObjective_BlueprintImplementation // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void AddNewObjective(struct FName InObjectiveIdentifier, struct FText InObjectiveText, struct FName InActionToEmbed, struct FName InGamepadOverrideActionToEmbed, bool InHasAdditionalKeyboardInput, struct FKey InAdditionalKeyboardInput, bool InHasAdditionalGamepadInput, struct FKey InAdditionalGamepadInput, bool InOverrideImage, struct FName InImageToOverride, bool InPersistantObjective, struct FName InGamepadImageToOverride); // Function Tiger.TigerTutorialGameMode.AddNewObjective // (Final|Native|Public|BlueprintCallable) // @ game+0x15449e0
};

// Class Tiger.TigerTutorialGameState
// Size: 0x398 (Inherited: 0x390)
struct ATigerTutorialGameState : ATigerGameState {
	bool bHasRequestedLeaveSession; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
};

// Class Tiger.TigerTutorialTrainerAsset
// Size: 0x60 (Inherited: 0x30)
struct UTigerTutorialTrainerAsset : UDataAsset {
	struct AAIController* Controller; // 0x30(0x08)
	struct ATigerTutorialTrainer* NPC; // 0x38(0x08)
	struct TArray<struct FTigerPreviewerData> VisualData; // 0x40(0x10)
	struct UTigerWeapon* WeaponClass; // 0x50(0x08)
	bool bShouldBeFriendlyWithPlayer; // 0x58(0x01)
	bool bShouldReviveInsteadOfDiablerize; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
};

// Class Tiger.TigerTutorialNpcSpawner
// Size: 0x230 (Inherited: 0x228)
struct ATigerTutorialNpcSpawner : AActor {
	struct UTigerTutorialTrainerAsset* DataAsset; // 0x228(0x08)

	struct ATigerTutorialTrainer* SpawnNpc(); // Function Tiger.TigerTutorialNpcSpawner.SpawnNpc // (Final|Native|Public|BlueprintCallable) // @ game+0x1545970
	struct TArray<struct ATigerTutorialTrainer*> SpawnGroupOfNpcs(int32_t NumberToSpawn); // Function Tiger.TigerTutorialNpcSpawner.SpawnGroupOfNpcs // (Final|Native|Public|BlueprintCallable) // @ game+0x1545890
};

// Class Tiger.TigerTutorialTrainer
// Size: 0x9c0 (Inherited: 0x860)
struct ATigerTutorialTrainer : ATigerCharacter {
	char pad_860[0x28]; // 0x860(0x28)
	struct FMulticastInlineDelegate OnReviveEnded; // 0x888(0x10)
	struct FMulticastInlineDelegate OnTutorialTrainerDowned; // 0x898(0x10)
	struct FMulticastInlineDelegate OnTutorialTrainerDiablerized; // 0x8a8(0x10)
	struct FTutorialTrainerDiablerizeData DiablerizeData; // 0x8b8(0x20)
	struct FTutorialTrainerReviveData ReviveData; // 0x8d8(0x18)
	float HealthOnEnteringDownedState; // 0x8f0(0x04)
	float DiablerizeOffsetDistance; // 0x8f4(0x04)
	float MaxDownedTime; // 0x8f8(0x04)
	float RemainingDownedTime; // 0x8fc(0x04)
	bool bShouldBeFriendlyWithPlayer; // 0x900(0x01)
	bool bCanBeDiablerized; // 0x901(0x01)
	bool bWantsToShoot; // 0x902(0x01)
	bool bIsDowned; // 0x903(0x01)
	bool bIsInvulnerableWhenDowned; // 0x904(0x01)
	char pad_905[0x3]; // 0x905(0x03)
	struct ATigerCharacter* CurrentlyAimedAtCharacter; // 0x908(0x08)
	struct UTigerNPCVisualAsset* VisualAsset; // 0x910(0x08)
	struct UTigerNPCFacePoseMap* HeadMeshsPoseAssetsClass; // 0x918(0x08)
	struct UTigerPhysicalInteractionAnimationAsset* DiablerizeAnimationSetAsset; // 0x920(0x08)
	float TimeInEnterState; // 0x928(0x04)
	float TimeInDrainState; // 0x92c(0x04)
	float TimeInLeaveState; // 0x930(0x04)
	struct FName DownedMontageNames[0x4]; // 0x934(0x20)
	struct FName StaticEntryToDownedMontageName; // 0x954(0x08)
	struct FName InterruptSectionName; // 0x95c(0x08)
	struct FName EndSectionName; // 0x964(0x08)
	struct FName DodgeOnGroundBlendSpaceName; // 0x96c(0x08)
	struct FName DodgeInAirBlendSpaceName; // 0x974(0x08)
	struct FName DiablerizeAnimationName; // 0x97c(0x08)
	struct FName GetDiablerizedAnimationName; // 0x984(0x08)
	struct FName ExitDownedStateAnimationName; // 0x98c(0x08)
	char pad_994[0xc]; // 0x994(0x0c)
	struct UAnimMontage* CurrentTrainerDiablerizeMontage; // 0x9a0(0x08)
	struct UAnimMontage* CurrentPlayerDiablerizeMontage; // 0x9a8(0x08)
	char pad_9B0[0x10]; // 0x9b0(0x10)

	void TutorialTrainerReviveFinished__DelegateSignature(bool bDidCompleteRevive, bool bWasInterruptedByPlayer); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerReviveFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TutorialTrainerDowned__DelegateSignature(); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerDowned__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TutorialTrainerDiablerized__DelegateSignature(); // DelegateFunction Tiger.TigerTutorialTrainer.TutorialTrainerDiablerized__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void StopShooting(bool bShouldStopAiming); // Function Tiger.TigerTutorialTrainer.StopShooting // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545c00
	void StopBlocking(); // Function Tiger.TigerTutorialTrainer.StopBlocking // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545be0
	void StopAiming(); // Function Tiger.TigerTutorialTrainer.StopAiming // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545bc0
	void StartShooting(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.StartShooting // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545b30
	void StartMeleeAttack(); // Function Tiger.TigerTutorialTrainer.StartMeleeAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545b10
	void StartHeavyMeleeAttack(float ChargeUpTime); // Function Tiger.TigerTutorialTrainer.StartHeavyMeleeAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545a70
	void StartBlocking(); // Function Tiger.TigerTutorialTrainer.StartBlocking // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545a50
	void StartAimingAt(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.StartAimingAt // (Final|Native|Protected|BlueprintCallable) // @ game+0x15459c0
	void ShootOnce(struct ATigerCharacter* ShootingTargetActor); // Function Tiger.TigerTutorialTrainer.ShootOnce // (Final|Native|Protected|BlueprintCallable) // @ game+0x15456f0
	void ReloadWeapon(); // Function Tiger.TigerTutorialTrainer.ReloadWeapon // (Final|Native|Protected|BlueprintCallable) // @ game+0x1545620
	void OnExitDownedState(); // Function Tiger.TigerTutorialTrainer.OnExitDownedState // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDowned(); // Function Tiger.TigerTutorialTrainer.OnDowned // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDiablerizeStopped(); // Function Tiger.TigerTutorialTrainer.OnDiablerizeStopped // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDiablerizeStarted(); // Function Tiger.TigerTutorialTrainer.OnDiablerizeStarted // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void OnDiablerizedSuccessfullyFinished(); // Function Tiger.TigerTutorialTrainer.OnDiablerizedSuccessfullyFinished // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsAiming(); // Function Tiger.TigerTutorialTrainer.IsAiming // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x15451f0
	float GetReviveOrDiablerizeProgress(); // Function Tiger.TigerTutorialTrainer.GetReviveOrDiablerizeProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1544f70
	float GetDiablerizeTimeInSeconds(); // Function Tiger.TigerTutorialTrainer.GetDiablerizeTimeInSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1544f40
};

// Class Tiger.TigerTypeAndRarityData
// Size: 0x260 (Inherited: 0x30)
struct UTigerTypeAndRarityData : UDataAsset {
	struct TMap<enum class ETigerInventoryItemType, struct FText> ItemTypeNames; // 0x30(0x50)
	struct TMap<enum class ETigerInventoryItemType, struct FText> ShortItemTypeNames; // 0x80(0x50)
	struct TMap<enum class ETigerWeaponAmmoType, struct FText> AmmoTypeNames; // 0xd0(0x50)
	struct TMap<enum class ETigerWeaponType, struct FText> ShortWeaponTypeNames; // 0x120(0x50)
	struct TMap<enum class ETigerLootCategory, struct FText> LootCategoryNames; // 0x170(0x50)
	struct TMap<enum class ETigerItemRarity, struct FText> ItemRarityNames; // 0x1c0(0x50)
	struct TMap<enum class ETigerItemRarity, enum class ETigerUIColor> ItemRarityColors; // 0x210(0x50)
};

// Class Tiger.TigerUIBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UTigerUIBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	void Update3dWidgetTransform(struct AActor* Character, struct USceneComponent* Widget, struct FVector& SocketLocation, struct FVector Offset); // Function Tiger.TigerUIBlueprintFunctionLibrary.Update3dWidgetTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x154a810
	struct TArray<struct FTigerProgressedChallengeWrapper> SortProgressedChallenges(struct TArray<struct FTigerProgressedChallengeWrapper> InProgressedChallengesArray); // Function Tiger.TigerUIBlueprintFunctionLibrary.SortProgressedChallenges // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154a630
	void ShowGameModeNotification(struct ATigerPlayerController* Player, struct FText Message); // Function Tiger.TigerUIBlueprintFunctionLibrary.ShowGameModeNotification // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154a510
	void RegisterMatchSettingsSetListener(struct FDelegate InMatchSettingsSetDelegate); // Function Tiger.TigerUIBlueprintFunctionLibrary.RegisterMatchSettingsSetListener // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154a480
	void RegisterExtendedGroupScoreListener(struct FDelegate InScoreDelegate); // Function Tiger.TigerUIBlueprintFunctionLibrary.RegisterExtendedGroupScoreListener // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154a3f0
	bool ProjectWorldToScreenBidirectional(struct APlayerController* InPlayerController, struct FVector InWorldLocation, struct FVector2D& OutScreenPosition); // Function Tiger.TigerUIBlueprintFunctionLibrary.ProjectWorldToScreenBidirectional // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x154a2d0
	void PlayOrReverseAnimation(struct UUserWidget* Widget, struct UWidgetAnimation* WidgetAnimation, enum class EUMGSequencePlayMode PlayMode, float PlayBackSpeed); // Function Tiger.TigerUIBlueprintFunctionLibrary.PlayOrReverseAnimation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154a180
	void OnMatchSettingsSetDelegate__DelegateSignature(); // DelegateFunction Tiger.TigerUIBlueprintFunctionLibrary.OnMatchSettingsSetDelegate__DelegateSignature // (Public|Delegate) // @ game+0x18b4070
	void MapWorldLocationToUIRectangle(struct ATigerPlayerController* InPlayerController, struct FVector& InLocation, struct FBox2D& InMargins, struct FVector2D& OutScreenPosition, float& OutRotationAngleDegrees, bool& bIsOnScreen); // Function Tiger.TigerUIBlueprintFunctionLibrary.MapWorldLocationToUIRectangle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1549b20
	void MapWorldLocationToUICircle(struct ATigerPlayer* Player, struct FVector& InLocation, float EdgePercent, float CircleRadius, struct FVector2D& OutScreenPosition, float& OutRotationAngleDegrees, bool& bIsOnScreen); // Function Tiger.TigerUIBlueprintFunctionLibrary.MapWorldLocationToUICircle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15498e0
	bool IsItemPartOfPlayerCard(struct FTigerPersistentPlayerCardData& InCard, struct TSoftClassPtr<UObject>& InItemPath); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsItemPartOfPlayerCard // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1549610
	bool IsItemPartOfAppearance(struct FTigerCharacterAppearance& InAppearance, struct TSoftClassPtr<UObject>& InItemPath); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsItemPartOfAppearance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15494c0
	bool IsDisciplineClanAbility(struct ATigerPlayer* Player, enum class ETigerDisciplinesEnum Type); // Function Tiger.TigerUIBlueprintFunctionLibrary.IsDisciplineClanAbility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15493f0
	float GetUIAngle(struct ATigerPlayer* Player, struct FVector& LocationToGetAngleFrom); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetUIAngle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1549320
	struct TArray<struct FStatChangeDescription> GetStatChanges(struct FTigerCharacterStatModification& StatModification); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetStatChanges // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1549130
	struct FRotator GetRelativeCameraDirectionToActorRotation(struct AActor* Actor); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetRelativeCameraDirectionToActorRotation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1549090
	void GetLineLineIntersectionPoint(struct FVector& LineAStart, struct FVector& LineAEnd, struct FVector& LineBStart, struct FVector& LineBEnd, bool& bDoesIntersect, struct FVector& IntersectionPoint); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetLineLineIntersectionPoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1548e60
	struct TArray<struct FInputAxisKeyMapping> GetKeysForAxis(struct APlayerController* Controller, struct FName& Axis); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetKeysForAxis // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1548c90
	struct TArray<struct FInputActionKeyMapping> GetKeysForAction(struct APlayerController* Controller, struct FName& Action); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetKeysForAction // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1548ac0
	enum class ETigerInventoryItemType GetInventoryItemTypeFromWeaponType(enum class ETigerEquippedWeaponType WeaponType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetInventoryItemTypeFromWeaponType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548a40
	struct FName GetFNameFromKey(struct FKey& Key); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetFNameFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1548970
	float GetExpandableAreaRolloutAnimationSeconds(struct UExpandableArea* InExpandableArea); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetExpandableAreaRolloutAnimationSeconds // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15488e0
	struct FText GetDisplayTextFromKey(struct FKey& Key); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisplayTextFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x15487c0
	struct UMediaSource* GetDisciplinePreviewMediaSource(struct UTigerDisciplineConfigs* InConfigsClass, enum class ETigerDisciplinesEnum InDisciplineType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplinePreviewMediaSource // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15486f0
	struct UTexture2D* GetDisciplineIcon(struct UTigerDisciplineConfigs* ConfigsClass, enum class ETigerDisciplinesEnum DisciplineType); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplineIcon // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1548620
	struct UTigerDisciplineConfigBase* GetDisciplineConfigFromType(struct ATigerPlayer* Player, enum class ETigerDisciplinesEnum Type); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetDisciplineConfigFromType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1548550
	struct FVector2D GetBorderLocationFromAngle(float Angle, float DistanceFromBorder); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetBorderLocationFromAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1548440
	void GetBorderLocationAndAngleFromWorld(struct ATigerPlayerController* InPlayerController, struct FVector InWorldLocation, float InBorderDistance, struct FVector2D& OutScreenPosition, float& OutAngle); // Function Tiger.TigerUIBlueprintFunctionLibrary.GetBorderLocationAndAngleFromWorld // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1548270
	void GamepadUpdateScrollbox(struct ATigerPlayerController* InPlayerController, struct UScrollBox* InScrollbox, float& ScrollTime, float InDeltaTime, float InMinScrollSpeed, float InMaxScrollSpeed, float InMaxScrollTime); // Function Tiger.TigerUIBlueprintFunctionLibrary.GamepadUpdateScrollbox // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1548050
	void GamepadMoveMouseToWidget(struct ATigerPlayerController* InPlayerController, struct TArray<struct UWidget*>& InWidgetList, int32_t InHoverIndex, int32_t InDirection, struct UScrollBox* InScrollbox, bool& OutMouseMoved); // Function Tiger.TigerUIBlueprintFunctionLibrary.GamepadMoveMouseToWidget // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1547e60
	float CalculateTopdownAngleBetweenPlayerAndTarget(struct ATigerPlayer* InPlayer, struct FVector& InLocationToGetAngleFrom); // Function Tiger.TigerUIBlueprintFunctionLibrary.CalculateTopdownAngleBetweenPlayerAndTarget // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1547d90
};

// Class Tiger.TigerUIEnemyHealthBar
// Size: 0x280 (Inherited: 0x280)
struct UTigerUIEnemyHealthBar : UTigerWidget {

	enum class ETigerDamageNumberAmount GetDamageNumberAmountSetting(); // Function Tiger.TigerUIEnemyHealthBar.GetDamageNumberAmountSetting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1548520
	void AddHealAmount(int32_t InHealAmount); // Function Tiger.TigerUIEnemyHealthBar.AddHealAmount // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerUiNewNotificationNode
// Size: 0x78 (Inherited: 0x28)
struct UTigerUiNewNotificationNode : UObject {
	struct TArray<uint64_t> NewIds; // 0x28(0x10)
	struct UTigerUiNewNotificationNode* ParentNode; // 0x38(0x08)
	struct TArray<struct UTigerUiNewNotificationNode*> ChildNodes; // 0x40(0x10)
	struct UTigerUiNewNotificationHandler* NewNotificationHandler; // 0x50(0x08)
	bool bHasNewEntry; // 0x58(0x01)
	bool bIsDirty; // 0x59(0x01)
	char pad_5A[0x6]; // 0x5a(0x06)
	struct TArray<uint64_t> HiddenIds; // 0x60(0x10)
	bool bShouldPersistBetweenSessions; // 0x70(0x01)
	char pad_71[0x7]; // 0x71(0x07)
};

// Class Tiger.TigerUiNewNotificationHandler
// Size: 0xd0 (Inherited: 0x30)
struct UTigerUiNewNotificationHandler : UGameInstanceSubsystem {
	struct FMulticastInlineDelegate OnNewItemStatus; // 0x30(0x10)
	struct TMap<enum class ETigerNewNotificationMenuOptions, struct UTigerUiNewNotificationNode*> NodeMap; // 0x40(0x50)
	char pad_90[0x40]; // 0x90(0x40)

	void UpdateInboxViewedState(bool InViewedState); // Function Tiger.TigerUiNewNotificationHandler.UpdateInboxViewedState // (Final|Native|Public) // @ game+0x154a980
	void OnNewItemStatus__DelegateSignature(); // DelegateFunction Tiger.TigerUiNewNotificationHandler.OnNewItemStatus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnGroupInvite(struct UTigerPartyInvite* InInvite); // Function Tiger.TigerUiNewNotificationHandler.OnGroupInvite // (Final|Native|Public) // @ game+0x154a0f0
	void OnFriendInvite(struct UTigerFriendInvite* InInvite); // Function Tiger.TigerUiNewNotificationHandler.OnFriendInvite // (Final|Native|Public) // @ game+0x154a060
	void MarkWeeklyChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkWeeklyChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x154a040
	void MarkQuestAsViewed(struct FString InQuestlineId); // Function Tiger.TigerUiNewNotificationHandler.MarkQuestAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549fa0
	void MarkMasteryChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkMasteryChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549f80
	void MarkItemAsViewed(struct FTigerItemId& InTigerItemId, enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerUiNewNotificationHandler.MarkItemAsViewed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1549ea0
	void MarkGrimoireEntryAsViewed(uint32_t InID); // Function Tiger.TigerUiNewNotificationHandler.MarkGrimoireEntryAsViewed // (Final|Native|Public) // @ game+0x1549e10
	void MarkFriendInviteEntryViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkFriendInviteEntryViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549df0
	void MarkEverythingAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkEverythingAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549dd0
	void MarkDailyChallengeAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkDailyChallengeAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549db0
	void MarkBattlepassAsViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkBattlepassAsViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549d90
	void MarkArchetypeViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkArchetypeViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549d70
	void MarkAllGroupInviteEntriesViewed(); // Function Tiger.TigerUiNewNotificationHandler.MarkAllGroupInviteEntriesViewed // (Final|Native|Public|BlueprintCallable) // @ game+0x1549d50
	bool IsQuestlineNew(struct FString InQuestlineId); // Function Tiger.TigerUiNewNotificationHandler.IsQuestlineNew // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1549830
	bool IsItemUnviewed(struct FTigerItemId& InTigerItemId, enum class ETigerPowerKitType InArchetypeType); // Function Tiger.TigerUiNewNotificationHandler.IsItemUnviewed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1549740
	bool CalculateNewNotificationActive(enum class ETigerNewNotificationMenuOptions InType, enum class ETigerPowerKitType InArchetypeType, bool bForceCalculate); // Function Tiger.TigerUiNewNotificationHandler.CalculateNewNotificationActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1547c70
	void AddNewWeeklyChallenges(); // Function Tiger.TigerUiNewNotificationHandler.AddNewWeeklyChallenges // (Final|Native|Private) // @ game+0x1547c50
	void AddNewQuest(struct FString InQuestlineId); // Function Tiger.TigerUiNewNotificationHandler.AddNewQuest // (Final|Native|Public) // @ game+0x1547bb0
	void AddNewMasteryChallenge(); // Function Tiger.TigerUiNewNotificationHandler.AddNewMasteryChallenge // (Final|Native|Public) // @ game+0x1547b90
	void AddNewGroupInviteEntry(); // Function Tiger.TigerUiNewNotificationHandler.AddNewGroupInviteEntry // (Final|Native|Public) // @ game+0x1547b70
	void AddNewGrimoireEntry(uint32_t InID); // Function Tiger.TigerUiNewNotificationHandler.AddNewGrimoireEntry // (Final|Native|Public) // @ game+0x1547ae0
	void AddNewFriendInviteEntry(); // Function Tiger.TigerUiNewNotificationHandler.AddNewFriendInviteEntry // (Final|Native|Public) // @ game+0x1547ac0
	void AddNewDailyChallenges(); // Function Tiger.TigerUiNewNotificationHandler.AddNewDailyChallenges // (Final|Native|Private) // @ game+0x1547aa0
	void AddNewBattlepassOrBattlepassLevel(); // Function Tiger.TigerUiNewNotificationHandler.AddNewBattlepassOrBattlepassLevel // (Final|Native|Public) // @ game+0x1547a80
	void AddNewArchetype(); // Function Tiger.TigerUiNewNotificationHandler.AddNewArchetype // (Final|Native|Public) // @ game+0x1547a60
};

// Class Tiger.TigerUISettings
// Size: 0x70 (Inherited: 0x38)
struct UTigerUISettings : USharkLocalDeveloperSettings {
	struct FDataTableRowHandle DefaultTextStyle; // 0x38(0x10)
	struct TSoftObjectPtr<UDataTable> DefaultTextStyleSet; // 0x48(0x28)
};

// Class Tiger.TigerUser
// Size: 0x60 (Inherited: 0x28)
struct UTigerUser : UObject {
	struct FMulticastInlineDelegate OnDisplayNameChanged; // 0x28(0x10)
	struct FString DISPLAYNAME; // 0x38(0x10)
	struct FTigerPersistentPlayerID ID; // 0x48(0x10)
	char pad_58[0x8]; // 0x58(0x08)

	void SetDisplayName(struct FString InName); // Function Tiger.TigerUser.SetDisplayName // (Final|Native|Public|BlueprintCallable) // @ game+0x154f460
	void OnDisplayNameChangedDelegate__DelegateSignature(struct FString InName); // DelegateFunction Tiger.TigerUser.OnDisplayNameChangedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	struct UTigerUser* MakeUserFromLocalPlayer(struct UObject* InWorldContextObject); // Function Tiger.TigerUser.MakeUserFromLocalPlayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x154e870
	enum class EShAccountChannel GetPlayerChannel(); // Function Tiger.TigerUser.GetPlayerChannel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x154e200
	struct FTigerPersistentPlayerID GetPersistentPlayerID(); // Function Tiger.TigerUser.GetPersistentPlayerID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x154e1c0
	struct FString GetDisplayName(); // Function Tiger.TigerUser.GetDisplayName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x154e0f0
};

// Class Tiger.TigerUserInputBinding
// Size: 0x3d8 (Inherited: 0x28)
struct UTigerUserInputBinding : UObject {
	struct FMulticastInlineDelegate OnPresetChanged; // 0x28(0x10)
	struct FMulticastInlineDelegate OnSettingChangedFromPreset; // 0x38(0x10)
	struct FMulticastInlineDelegate OnInputBindingsReset; // 0x48(0x10)
	struct FMulticastInlineDelegate OnInputBindingChanged; // 0x58(0x10)
	struct FMulticastInlineDelegate OnAxisInputBindingChanged; // 0x68(0x10)
	char pad_78[0x90]; // 0x78(0x90)
	struct FTigerInputBindings UserInputs; // 0x108(0x48)
	struct FTigerInputBindings DefaultInputs; // 0x150(0x48)
	struct TArray<struct FInputActionKeyMapping> DebugMappings; // 0x198(0x10)
	struct TArray<struct FInputAxisKeyMapping> DebugAxisMappings; // 0x1a8(0x10)
	struct TArray<struct FInputActionKeyMapping> ConsoleShippingDebugMappings; // 0x1b8(0x10)
	struct TArray<struct FInputAxisKeyMapping> ConsoleShippingDebugAxisMappings; // 0x1c8(0x10)
	struct TArray<struct UTigerWeaponCycleStyle*> WeaponCycleStyles; // 0x1d8(0x10)
	struct TArray<struct UTigerWeaponCycleStyle*> WeaponCycleStylesGamepad; // 0x1e8(0x10)
	struct FString BoundConsoleCommand; // 0x1f8(0x10)
	struct UCurveFloat* SensitivityCurve; // 0x208(0x08)
	struct UCurveFloat* SensitivityCurveGamepad; // 0x210(0x08)
	struct FTigerInputSettings InputSettings; // 0x218(0xc8)
	struct FTigerInputSettings DefaultInputSettings; // 0x2e0(0xc8)
	struct UTigerCustomizableKeybindsDataAsset* CustomizableKeybindsDataAsset; // 0x3a8(0x08)
	struct UTigerInputPresetDataAsset* InputPresetData; // 0x3b0(0x08)
	struct FName UsedInputPreset; // 0x3b8(0x08)
	struct FName NameOfCustomPreset; // 0x3c0(0x08)
	struct UTigerWeaponCycleStyle* DefaultWeaponCycleStyle; // 0x3c8(0x08)
	bool bIsSwitchingPreset; // 0x3d0(0x01)
	char pad_3D1[0x7]; // 0x3d1(0x07)

	void SwitchWeaponCycleStyle(struct FText InWeaponCycleStyle, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.SwitchWeaponCycleStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x154f970
	void SwitchInputPreset(struct FName InInputPresetToUse); // Function Tiger.TigerUserInputBinding.SwitchInputPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x154f8e0
	void SetShowAdvancedOptions(bool bInShouldShowAdvancedOptions); // Function Tiger.TigerUserInputBinding.SetShowAdvancedOptions // (Final|Native|Public|BlueprintCallable) // @ game+0x154f850
	void SetRumbleIntensity(float InIntensity); // Function Tiger.TigerUserInputBinding.SetRumbleIntensity // (Final|Native|Public|BlueprintCallable) // @ game+0x154f7d0
	void SetInputCurve(int32_t InCurveOption); // Function Tiger.TigerUserInputBinding.SetInputCurve // (Final|Native|Public|BlueprintCallable) // @ game+0x154f740
	void SetEnableAimAssistSlowDown(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAimAssistSlowDown // (Final|Native|Public|BlueprintCallable) // @ game+0x154f6b0
	void SetEnableAimAssistRotation(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAimAssistRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x154f620
	void SetEnableAdaptiveTriggerVibration(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAdaptiveTriggerVibration // (Final|Native|Public|BlueprintCallable) // @ game+0x154f500
	void SetEnableAdaptiveTriggers(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetEnableAdaptiveTriggers // (Final|Native|Public|BlueprintCallable) // @ game+0x154f590
	void SetDeadZone(float InDeadZone); // Function Tiger.TigerUserInputBinding.SetDeadZone // (Final|Native|Public|BlueprintCallable) // @ game+0x154f3e0
	void SetDampenZone(float InZoneMin); // Function Tiger.TigerUserInputBinding.SetDampenZone // (Final|Native|Public|BlueprintCallable) // @ game+0x154f360
	void SetDampenTime(float InTime); // Function Tiger.TigerUserInputBinding.SetDampenTime // (Final|Native|Public|BlueprintCallable) // @ game+0x154f2e0
	void SetDampenEnabled(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetDampenEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x154f250
	void SetBoostZone(float InZoneMin); // Function Tiger.TigerUserInputBinding.SetBoostZone // (Final|Native|Public|BlueprintCallable) // @ game+0x154f1d0
	void SetBoostTime(float InTime); // Function Tiger.TigerUserInputBinding.SetBoostTime // (Final|Native|Public|BlueprintCallable) // @ game+0x154f150
	void SetBoostEnabled(bool InEnabled); // Function Tiger.TigerUserInputBinding.SetBoostEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x154f0c0
	void SetBoostDelayTime(float InTime); // Function Tiger.TigerUserInputBinding.SetBoostDelayTime // (Final|Native|Public|BlueprintCallable) // @ game+0x154f040
	void ScopedSensitivityChangedY(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.ScopedSensitivityChangedY // (Final|Native|Public|BlueprintCallable) // @ game+0x154ef60
	void ScopedSensitivityChangedX(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.ScopedSensitivityChangedX // (Final|Native|Public|BlueprintCallable) // @ game+0x154ee80
	void ResetSettings(); // Function Tiger.TigerUserInputBinding.ResetSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x154ee60
	void ResetKeybinds(); // Function Tiger.TigerUserInputBinding.ResetKeybinds // (Final|Native|Public|BlueprintCallable) // @ game+0x154ee40
	void RebindKey(int32_t ActionMappingIndex, struct FInputActionKeyMapping& NewBinding, bool bInSwapKeysOnConflict); // Function Tiger.TigerUserInputBinding.RebindKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x154ec80
	void RebindAxisKey(int32_t ActionMappingIndex, struct FInputAxisKeyMapping& InNewBinding, bool bInSwapKeysOnConflict); // Function Tiger.TigerUserInputBinding.RebindAxisKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x154eac0
	void MasterSensitivityChangedY(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.MasterSensitivityChangedY // (Final|Native|Public|BlueprintCallable) // @ game+0x154e9e0
	void MasterSensitivityChangedX(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.MasterSensitivityChangedX // (Final|Native|Public|BlueprintCallable) // @ game+0x154e900
	void LoadInputDefaults(); // Function Tiger.TigerUserInputBinding.LoadInputDefaults // (Final|Native|Public|BlueprintCallable) // @ game+0x154e850
	void InvertYAxisChanged(bool bInInverted, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.InvertYAxisChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154e6f0
	void InvertXAxisChanged(bool bInInverted, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.InvertXAxisChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154e620
	void HoldJumpToClimbChanged(bool bInHoldJumpToClimb, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.HoldJumpToClimbChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154e4b0
	void HoldForInventoryChanged(bool bInShouldHold, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.HoldForInventoryChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154e3e0
	void HoldForHeightenedSensesChanged(bool bInShouldHold); // Function Tiger.TigerUserInputBinding.HoldForHeightenedSensesChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154e350
	void HoldForAimDownSightsChanged(bool bInShouldHold); // Function Tiger.TigerUserInputBinding.HoldForAimDownSightsChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154e2c0
	struct UTigerWeaponCycleStyle* GetUsedWeaponCycleStyle(bool bInForGamepad); // Function Tiger.TigerUserInputBinding.GetUsedWeaponCycleStyle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x154e230
	void GetConflictingActionDisplayNames(struct FKey& InNewKey, struct FName& InInputName, struct TArray<struct FText>& OutActions, float InAxisScale, bool bInIsAxis); // Function Tiger.TigerUserInputBinding.GetConflictingActionDisplayNames // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x154de80
	struct FText GetBindableActionName(struct FName& InName, bool& bOutNameFound, float InAxisScale, bool bInIsAxis); // Function Tiger.TigerUserInputBinding.GetBindableActionName // (Final|Native|Public|HasOutParms|BlueprintCallable|Const) // @ game+0x154dc70
	bool DoesKeyConflict(struct FKey& InNewKey, struct FName& InInputName, float InAxisScale, bool bInIsAxis); // Function Tiger.TigerUserInputBinding.DoesKeyConflict // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x154da90
	void DampenVerticalStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.DampenVerticalStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154da10
	void DampenVerticalScopedStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.DampenVerticalScopedStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d990
	void DampenVerticalADSStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.DampenVerticalADSStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d910
	void DampenHorizontalStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.DampenHorizontalStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d890
	void DampenHorizontalScopedStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.DampenHorizontalScopedStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d810
	void DampenHorizontalADSStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.DampenHorizontalADSStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d790
	void BoostVerticalStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.BoostVerticalStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d710
	void BoostVerticalScopedStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.BoostVerticalScopedStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d690
	void BoostVerticalADSStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.BoostVerticalADSStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d610
	void BoostHorizontalStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.BoostHorizontalStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d590
	void BoostHorizontalScopedStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.BoostHorizontalScopedStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d510
	void BoostHorizontalADSStrengthChanged(float InStrength); // Function Tiger.TigerUserInputBinding.BoostHorizontalADSStrengthChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d490
	void AutoSprintChanged(bool bInAutoSprint); // Function Tiger.TigerUserInputBinding.AutoSprintChanged // (Final|Native|Public|BlueprintCallable) // @ game+0x154d400
	void AimingSensitivityChangedY(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.AimingSensitivityChangedY // (Final|Native|Public|BlueprintCallable) // @ game+0x154d320
	void AimingSensitivityChangedX(float InSensitivity, bool bInForGamepad); // Function Tiger.TigerUserInputBinding.AimingSensitivityChangedX // (Final|Native|Public|BlueprintCallable) // @ game+0x154d240
};

// Class Tiger.TigerInputPresetDataAsset
// Size: 0x80 (Inherited: 0x30)
struct UTigerInputPresetDataAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerInputPresetData> InputPresets; // 0x30(0x50)

	struct TArray<struct FName> GetInputPresetsArray(); // Function Tiger.TigerInputPresetDataAsset.GetInputPresetsArray // (Final|Native|Public|BlueprintCallable) // @ game+0x154e140
};

// Class Tiger.TigerCustomizableKeybindsDataAsset
// Size: 0xd0 (Inherited: 0x30)
struct UTigerCustomizableKeybindsDataAsset : UDataAsset {
	struct TMap<struct FName, struct FTigerCustomizableKeybindData> KeybindData; // 0x30(0x50)
	struct TMap<struct FName, struct FTigerCustomizableAxisKeybindData> AxisKeybindData; // 0x80(0x50)
};

// Class Tiger.TigerWeaponCycleStyle
// Size: 0x48 (Inherited: 0x28)
struct UTigerWeaponCycleStyle : UObject {
	int32_t WeaponSlotsToCycle; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FText UiName; // 0x30(0x18)

	int32_t WrapSlotValue(int32_t InSlotAsInt); // Function Tiger.TigerWeaponCycleStyle.WrapSlotValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x154faa0
	bool IsValidWeaponSlotToCycle(enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerWeaponCycleStyle.IsValidWeaponSlotToCycle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x154e7c0
	enum class ETigerWeaponSlot IntToSlot(int32_t InSlotAsInt); // Function Tiger.TigerWeaponCycleStyle.IntToSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x154e580
	enum class ETigerWeaponSlot DetermineNextWeaponSlot(struct ATigerPlayerController* InPlayerController, enum class ETigerWeaponCycleDirection InDirection); // Function Tiger.TigerWeaponCycleStyle.DetermineNextWeaponSlot // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerUtilityBFL
// Size: 0x28 (Inherited: 0x28)
struct UTigerUtilityBFL : UBlueprintFunctionLibrary {

	struct FVector VRandCone(struct FVector InDir, float InConeHalfAngleRad, struct FTigerRangedRandomState& InOutRandomState); // Function Tiger.TigerUtilityBFL.VRandCone // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1559000
	struct FLinearColor UnpackLinearColorFromFloat(float InPackedColor); // Function Tiger.TigerUtilityBFL.UnpackLinearColorFromFloat // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1558f70
	struct FTigerPreviewerData ToPreviewerData(struct FTigerCharacterAppearance& InAppearance); // Function Tiger.TigerUtilityBFL.ToPreviewerData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1558e90
	float TimeSince(float Time, struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.TimeSince // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1558dc0
	void TigerDebugDrawSphere(struct UObject* InWorldContextObject, struct FVector& InCenter, float InRadius, int32_t InSegments, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawSphere // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1558b00
	void TigerDebugDrawRotation(struct UObject* InWorldContextObject, struct FRotator& InRotation, struct FVector& InPosition, float InLength, float InLifeTime); // Function Tiger.TigerUtilityBFL.TigerDebugDrawRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1558940
	void TigerDebugDrawLine(struct UObject* InWorldContextObject, struct FVector& InLineStart, struct FVector& InLineEnd, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15586c0
	void TigerDebugDrawCapsule(struct UObject* InWorldContextObject, struct FVector& InCenter, float InRadius, float InHalfHeight, struct FRotator& InRotation, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawCapsule // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15583c0
	void TigerDebugDrawBox(struct UObject* WorldContextObject, struct FVector& InCenter, struct FVector& InExtent, struct FRotator& InRotation, struct FLinearColor InColor, bool bInPersistentLines, float InLifeTime, char InDepthPriority, float InThickness); // Function Tiger.TigerUtilityBFL.TigerDebugDrawBox // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15580e0
	float TigerApplyPointDamage(struct ATigerCharacter* InDamagedActor, float InBaseDamage, struct FVector& InHitFromDirection, struct FHitResult& InHitInfo, struct AController* InEventInstigator, struct AActor* InDamageCauser, struct UDamageType* InDamageTypeClass, enum class ETigerDamageCauser InDamageCauserType, struct FString InDamageReason, struct FTigerDamageContext& InDamageContext); // Function Tiger.TigerUtilityBFL.TigerApplyPointDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1557cf0
	float TigerApplyDamage(struct ATigerCharacter* InDamagedActor, float InBaseDamage, struct AController* InEventInstigator, struct AActor* InDamageCauser, struct UDamageType* InDamageTypeClass, enum class ETigerDamageCauser InDamageCauserType, struct FString InDamageReason, struct FTigerDamageContext& InDamageContext); // Function Tiger.TigerUtilityBFL.TigerApplyDamage // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1557a10
	struct UProceduralMeshComponent* TigerAddProceduralMeshComponent(struct AActor* Actor, struct FCollisionResponseContainer& CollisionResponses, enum class ECollisionChannel CollisionObjectType, struct FName ComponentName); // Function Tiger.TigerUtilityBFL.TigerAddProceduralMeshComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15578b0
	void StoreOpened(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerUtilityBFL.StoreOpened // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1557830
	void StoreItemPreviewOpened(struct ATigerPlayerController* InPlayerController, struct FTigerMetaStoreEntry& InEntry); // Function Tiger.TigerUtilityBFL.StoreItemPreviewOpened // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1557730
	void StoreItemPreviewExited(struct ATigerPlayerController* InPlayerController, struct FTigerMetaStoreEntry& InEntry); // Function Tiger.TigerUtilityBFL.StoreItemPreviewExited // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1557630
	void StoreExited(struct ATigerPlayerController* InPlayerController); // Function Tiger.TigerUtilityBFL.StoreExited // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15575b0
	void StopAkPlayingId(int32_t AkPlayingId, float FadeOutDuration); // Function Tiger.TigerUtilityBFL.StopAkPlayingId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15574f0
	struct FPerfTimerHandle StartPerfTimer(); // Function Tiger.TigerUtilityBFL.StartPerfTimer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15574c0
	void SpawnItemFromTable(struct UObject* InWorldContextObject, struct UTigerItemLootTable* InLootTable, struct FTransform& InFirstTransform, struct FTransform& InSecondTransform, enum class ETigerTelemetryItemSourceID InItemSource, struct ATigerItemWorldRepresentation*& OutFirstSpawnedItem, struct ATigerItemWorldRepresentation*& OutSecondSpawnedItem, bool bInSpawnSecondItem, bool bInSimulatePhysics, float InBlockInteractionDuration); // Function Tiger.TigerUtilityBFL.SpawnItemFromTable // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15570f0
	struct ATigerItemWorldRepresentation* SpawnItem(struct UObject* InWorldContextObject, struct FTransform& InTransform, struct UTigerItemAsset* InItem, enum class ETigerTelemetryItemSourceID InItemSource, int32_t InItemCount, bool bInSimulatePhysics, float InBlockInteractionDuration); // Function Tiger.TigerUtilityBFL.SpawnItem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1556e70
	struct UParticleSystemComponent* SpawnEmitterStrategized(struct UParticleSystem* InSystemToSpawn, struct ATigerCharacter* InInstigatingCharacter, struct FTransform& InRelativeTransform, struct FName InAttachPointName, struct USceneComponent* InComponentToAttachTo, struct UTigerParticleStrategyPostSpawn* InPostSpawnStrategy); // Function Tiger.TigerUtilityBFL.SpawnEmitterStrategized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1556c40
	struct UParticleSystemComponent* SpawnEmitterDefaultStrategized(struct UParticleSystem* InSystemToSpawn, struct ATigerCharacter* InInstigatingCharacter, struct FTransform& InRelativeTransform, struct FName InAttachPointName, struct USceneComponent* InComponentToAttachTo, struct UTigerParticleStrategyPostSpawn* InPostSpawnStrategy); // Function Tiger.TigerUtilityBFL.SpawnEmitterDefaultStrategized // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1556a10
	bool ShouldAutoSpectateOnDeath(); // Function Tiger.TigerUtilityBFL.ShouldAutoSpectateOnDeath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15569e0
	void SetTemporalAASamples(int32_t InSamples); // Function Tiger.TigerUtilityBFL.SetTemporalAASamples // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1556960
	void SetStaticMeshMobility(struct UStaticMeshComponent* MeshComponent, enum class EComponentMobility NewMobility); // Function Tiger.TigerUtilityBFL.SetStaticMeshMobility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15568a0
	void SetSignificanceManagerBudgetType(struct UObject* InWorldContextObject, enum class ETigerSignificanceBudgetType InBudgetType); // Function Tiger.TigerUtilityBFL.SetSignificanceManagerBudgetType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15567e0
	void SetCurrentAudioCultureForced(struct FString InNewAudioCulture); // Function Tiger.TigerUtilityBFL.SetCurrentAudioCultureForced // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1556750
	void RunAllFunctionalTestsOnMap(); // Function Tiger.TigerUtilityBFL.RunAllFunctionalTestsOnMap // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xbfc390
	void ResetMaterialsToMeshDefault(struct UPrimitiveComponent* Component); // Function Tiger.TigerUtilityBFL.ResetMaterialsToMeshDefault // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15566d0
	void RenameActorInstance(struct AActor* InActor, struct FString InName); // Function Tiger.TigerUtilityBFL.RenameActorInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1556600
	void RecordStartOfTutorialObjective(struct UObject* InWorldContextObject, struct FString InTimeStampId, struct FVector& InLocation); // Function Tiger.TigerUtilityBFL.RecordStartOfTutorialObjective // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15564e0
	void RecordStartOfTutorial(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.RecordStartOfTutorial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1556460
	void RecordEndOfTutorialObjective(struct UObject* InWorldContextObject, struct FString InTimeStampId); // Function Tiger.TigerUtilityBFL.RecordEndOfTutorialObjective // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1556390
	void RecordEndOfTutorial(struct UObject* InWorldContextObject, bool InTutorialFinished); // Function Tiger.TigerUtilityBFL.RecordEndOfTutorial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15562d0
	void PrintPerfTimer(struct FPerfTimerHandle& Handle, bool bPrintToLog, struct FLinearColor TextColor); // Function Tiger.TigerUtilityBFL.PrintPerfTimer // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x15561a0
	int32_t PostAudioVisualizedAkEventOnComponent(struct UAkAudioEvent* InEvent, struct AActor* InActor, struct UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, struct FName InAttachPointName, bool bInStopWhenAttachedToDestroyed, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEventOnComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1555f70
	int32_t PostAudioVisualizedAkEventAtLocation(struct UAkAudioEvent* InEvent, struct FVector InLocation, struct FRotator InOrientation, struct UTigerAudioVisualizationSpawnerComponent* InVisualizationComponent, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEventAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1555d70
	int32_t PostAudioVisualizedAkEvent(struct UAkAudioEvent* InEvent, struct ATigerPlayer* InPlayer, struct FName InAttachPointName, bool bInStopWhenAttachedToDestroyed, struct FString InEventName); // Function Tiger.TigerUtilityBFL.PostAudioVisualizedAkEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1555b80
	void PostAkEventRaw(int32_t& InAkPlayingId, struct UAkAudioEvent* InAkAudioEvent, struct AActor* InOwner, bool bInStopWhenOwnerIsDestroyed); // Function Tiger.TigerUtilityBFL.PostAkEventRaw // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1555a20
	int32_t PostAkEventIfLocallyControlled(struct AActor* InActor, struct UAkAudioEvent* InEvent); // Function Tiger.TigerUtilityBFL.PostAkEventIfLocallyControlled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1555950
	struct FTigerPersistentVoipID PersistentPlayerIdToPersistentVoipID(struct FTigerPersistentPlayerID& InPersistentPlayerId); // Function Tiger.TigerUtilityBFL.PersistentPlayerIdToPersistentVoipID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1555860
	bool PartialMatch(struct FString InRegexPattern, struct FString InInput); // Function Tiger.TigerUtilityBFL.PartialMatch // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15556f0
	float PackLinearColorToFloat(struct FLinearColor& InColor); // Function Tiger.TigerUtilityBFL.PackLinearColorToFloat // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1555660
	void OnItemAppliedToCard__DelegateSignature(struct FTigerPersistentPlayerCardData& InCard); // DelegateFunction Tiger.TigerUtilityBFL.OnItemAppliedToCard__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void OnItemAppliedToApperanceFromPreview__DelegateSignature(struct FTigerPreviewerData& InPreviewerAppearance); // DelegateFunction Tiger.TigerUtilityBFL.OnItemAppliedToApperanceFromPreview__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	bool MeshContainsCollisionData(struct UStaticMeshComponent* InMeshComp); // Function Tiger.TigerUtilityBFL.MeshContainsCollisionData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15555d0
	struct FTigerDamageContext MakeTigerDamageContext(struct UObject* InUObject); // Function Tiger.TigerUtilityBFL.MakeTigerDamageContext // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1555530
	void LogToScreenPopUp(struct UWorld* InWorld, struct FString InScreenMessage); // Function Tiger.TigerUtilityBFL.LogToScreenPopUp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1555460
	struct UObject* LoadObjectOfType(struct TSoftObjectPtr<UObject>& ObjectPath, struct UObject* Type); // Function Tiger.TigerUtilityBFL.LoadObjectOfType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1555350
	struct UObject* LoadDefaultObjectFromSoftClass(struct TSoftClassPtr<UObject> InSoftClass, struct UObject* InOutputType); // Function Tiger.TigerUtilityBFL.LoadDefaultObjectFromSoftClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1555200
	void LoadClan(struct TSoftObjectPtr<UTigerPlayerClanData>& ClanPath, struct UTigerPlayerClanData*& ClanData); // Function Tiger.TigerUtilityBFL.LoadClan // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15550f0
	struct FText ListChanges(struct TArray<float>& Changes, struct FText Prefix, struct FText Suffix, struct FText Seperator); // Function Tiger.TigerUtilityBFL.ListChanges // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1554e00
	bool IsValidCharacterId(struct FTigerPersistentCharacterID& CharacterId); // Function Tiger.TigerUtilityBFL.IsValidCharacterId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1554d70
	bool IsSameCharacterId(struct FTigerPersistentCharacterID& CharacterA, struct FTigerPersistentCharacterID& CharacterB); // Function Tiger.TigerUtilityBFL.IsSameCharacterId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1554c90
	bool IsOnlineSubsystemEnabled(struct FName InSubsystemName); // Function Tiger.TigerUtilityBFL.IsOnlineSubsystemEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1554c00
	bool IsInTutorial(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInTutorial // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554b70
	bool IsInTransferFromMatch(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInTransferFromMatch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554ae0
	bool IsInMatch(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInMatch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554a50
	bool IsInElysium(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.IsInElysium // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15549c0
	bool IsInEditor(); // Function Tiger.TigerUtilityBFL.IsInEditor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554990
	bool IsInBenchmark(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.IsInBenchmark // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554900
	bool IsEditorBuild(); // Function Tiger.TigerUtilityBFL.IsEditorBuild // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x947b30
	bool IsDirectlyHovered(struct UWidget* Widget); // Function Tiger.TigerUtilityBFL.IsDirectlyHovered // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554870
	void InitializeCharacterAlignmentAk(struct AActor* Actor); // Function Tiger.TigerUtilityBFL.InitializeCharacterAlignmentAk // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15547f0
	bool HasMatchEnded(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.HasMatchEnded // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554760
	struct FTigerPersistentPlayerTransactionalData GetTransactionalPlayerData(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetTransactionalPlayerData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15546d0
	void GetTimeLeftForStoreEntry(struct UObject* InWorldContextObject, struct FTigerMetaStoreEntry& InStoreEntry, bool& bOutHasExpired, struct FTimespan& OutTimeLeft); // Function Tiger.TigerUtilityBFL.GetTimeLeftForStoreEntry // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1554510
	struct UTigerGameInstance* GetTigerGameInstance(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetTigerGameInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554480
	int32_t GetTemporalAASamples(); // Function Tiger.TigerUtilityBFL.GetTemporalAASamples // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1554450
	struct FTigerGameModeDescriptor GetSuitableGameModeDescriptor(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSuitableGameModeDescriptor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554260
	struct FTigerPersistentPlayerCharacterData GetSelectedCharacterData(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSelectedCharacterData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15541b0
	struct FTigerCharacterAppearance GetSelectedCharacterAppearance(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetSelectedCharacterAppearance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554120
	float GetScrollBoxContentSpace(struct UScrollBox* ScrollBox); // Function Tiger.TigerUtilityBFL.GetScrollBoxContentSpace // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1554090
	struct FString GetRomanNumeral(int32_t InNumber); // Function Tiger.TigerUtilityBFL.GetRomanNumeral // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553fc0
	struct UNiagaraSystem* GetPreloadedNiagaraSystem(struct UObject* WorldContextObject, struct FSoftObjectPath& SoftObjectPath); // Function Tiger.TigerUtilityBFL.GetPreloadedNiagaraSystem // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1553ed0
	struct FTigerPersistentPlayerCardData GetPlayerCardData(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetPlayerCardData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553e30
	float GetPerfTimerElapsedTime(struct FPerfTimerHandle& Handle); // Function Tiger.TigerUtilityBFL.GetPerfTimerElapsedTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1553d90
	struct UTigerPartyManager* GetPartyManager(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetPartyManager // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553d00
	struct TSoftClassPtr<UObject> GetOutfitSoftClass(struct FTigerCharacterCustomizationOutfitData& InOutfitData); // Function Tiger.TigerUtilityBFL.GetOutfitSoftClass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1553c00
	int32_t GetNearestScrollBoxToPoint(struct TArray<struct UScrollBox*>& Boxes, struct FVector2D& Point); // Function Tiger.TigerUtilityBFL.GetNearestScrollBoxToPoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1553b00
	struct ATigerPlayerState* GetLocalPlayerState(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetLocalPlayerState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553a70
	struct ATigerPlayerController* GetLocalPlayerController(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetLocalPlayerController // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15539e0
	struct ATigerPlayer* GetLocalPlayer(struct UObject* WorldContextObject); // Function Tiger.TigerUtilityBFL.GetLocalPlayer // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553950
	struct UTigerLegalDocuments* GetLegalDocuments(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetLegalDocuments // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15538c0
	float GetLastRenderTime(struct UPrimitiveComponent* Primitive); // Function Tiger.TigerUtilityBFL.GetLastRenderTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553830
	struct UTigerItemDatabase* GetItemsDatabase(); // Function Tiger.TigerUtilityBFL.GetItemsDatabase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553800
	struct FTigerItemId GetItemIdForItem(struct TSoftClassPtr<UObject> InItemPathFrom); // Function Tiger.TigerUtilityBFL.GetItemIdForItem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15536f0
	struct UTigerInventoryItemBase* GetItemFromItemId(struct FTigerItemId InItemId); // Function Tiger.TigerUtilityBFL.GetItemFromItemId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553660
	int32_t GetHardCurrency(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetHardCurrency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15535d0
	struct UTigerGrimoireTree* GetGrimoireTree(); // Function Tiger.TigerUtilityBFL.GetGrimoireTree // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x15535a0
	float GetGameTimeSecondsByContext(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameTimeSecondsByContext // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553510
	float GetGameTimeSeconds(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameTimeSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553480
	struct TArray<struct FTigerGameModeDescriptor> GetGameModeDescriptors(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetGameModeDescriptors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553300
	enum class ETigerDamageCauser GetDamageCauserFromCharacter(struct ATigerCharacter* InCharacter); // Function Tiger.TigerUtilityBFL.GetDamageCauserFromCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553270
	struct UTigerClanCustomizationOptions* GetCustomizationDatabase(); // Function Tiger.TigerUtilityBFL.GetCustomizationDatabase // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553240
	struct FString GetComputerIdentifier(struct UObject* InWorldContextObject); // Function Tiger.TigerUtilityBFL.GetComputerIdentifier // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1553170
	void GetCommandLineInteger(struct FString ParameterName, bool& ParameterExists, int32_t& Integer); // Function Tiger.TigerUtilityBFL.GetCommandLineInteger // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1553030
	struct AActor* GetClosestActorToLocation(struct AActor* ActorClass, struct TArray<struct AActor*>& ActorArray, struct FVector& Location); // Function Tiger.TigerUtilityBFL.GetClosestActorToLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1552de0
	struct UObject* GetClassDefaultObject(struct UObject* Class); // Function Tiger.TigerUtilityBFL.GetClassDefaultObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1552d50
	int32_t GetBuildVersion(); // Function Tiger.TigerUtilityBFL.GetBuildVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1552d20
	struct FTigerPropAttachmentInfo GetAttachmentInfoFromIdentifierAndClass(struct ATigerPropDummy* Subclass, struct FName Identifier); // Function Tiger.TigerUtilityBFL.GetAttachmentInfoFromIdentifierAndClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1552c20
	float GetAngleDeltaDegrees(float Angle1, float Angle2); // Function Tiger.TigerUtilityBFL.GetAngleDeltaDegrees // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1552b50
	struct FString FormatDate(struct FDateTime& DateTime, struct FText Format); // Function Tiger.TigerUtilityBFL.FormatDate // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x15529d0
	bool EqualTigerPersistentPlayerId(struct FTigerPersistentPlayerID InLHS, struct FTigerPersistentPlayerID InRHS); // Function Tiger.TigerUtilityBFL.EqualTigerPersistentPlayerId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1552860
	bool EqualTigerItemIDs(struct FTigerItemId InLHS, struct FTigerItemId InRHS); // Function Tiger.TigerUtilityBFL.EqualTigerItemIDs // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1552790
	void DisableReplicationInElysium(struct UActorComponent* InActorComponent); // Function Tiger.TigerUtilityBFL.DisableReplicationInElysium // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1552710
	bool DestroyActorIfNotEditorBuild(struct AActor* InActor); // Function Tiger.TigerUtilityBFL.DestroyActorIfNotEditorBuild // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1552680
	void DedicatedServerBranch(struct UObject* WorldContextObject, enum class ETigerIsDedicatedServer& NetMode); // Function Tiger.TigerUtilityBFL.DedicatedServerBranch // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15525b0
	struct FTigerChatMessage CreateGameChatMessage(struct FText InMessage, bool bInIsChatBanMessage); // Function Tiger.TigerUtilityBFL.CreateGameChatMessage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1552300
	int32_t ConvertInt64ToInt(int64_t Int64Value, bool& bSuccess); // Function Tiger.TigerUtilityBFL.ConvertInt64ToInt // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1552220
	enum class ESharkPlatformType Conv_AccountChannelToPlatformType(enum class EShAccountChannel InAccountChannel); // Function Tiger.TigerUtilityBFL.Conv_AccountChannelToPlatformType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x15521a0
	void CenterMouseLocation(struct ATigerPlayerController* PlayerController); // Function Tiger.TigerUtilityBFL.CenterMouseLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1552120
	bool ArePlayerStateArraysEqual(struct TArray<struct APlayerState*>& InLeft, struct TArray<struct APlayerState*>& InRight); // Function Tiger.TigerUtilityBFL.ArePlayerStateArraysEqual // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1552000
	bool AreOutfitPhysicalMeshesValid(struct FTigerPersistentOutfitSetup& InOutfitSetup); // Function Tiger.TigerUtilityBFL.AreOutfitPhysicalMeshesValid // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1551f30
	void ApplyItemToCardAsync(struct TSoftClassPtr<UObject>& InItemPath, struct FTigerPersistentPlayerCardData& InCardData, struct FDelegate& InDelegate); // Function Tiger.TigerUtilityBFL.ApplyItemToCardAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1551db0
	void ApplyItemToAppearanceFromPreview(struct TSoftClassPtr<UObject>& InItemPath, int32_t InSlot, struct FTigerPreviewerData& InPreviewAppearance, enum class ETigerPowerKitType InUsedPowerKit, enum class ETigerClan InClan, struct FDelegate& InDelegate); // Function Tiger.TigerUtilityBFL.ApplyItemToAppearanceFromPreview // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1551b30
	void ApplyCustomizationParametersToMeshComponentFiltered(struct FTigerCharacterCustomizationParameters& InParams, struct USkeletalMeshComponent* InMeshComponent, enum class ETigerCharacterMeshPart InPart); // Function Tiger.TigerUtilityBFL.ApplyCustomizationParametersToMeshComponentFiltered // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15519e0
	void ApplyCustomizationParametersToMeshComponent(struct FTigerCharacterCustomizationParameters& Params, struct USkeletalMeshComponent* MeshComponent); // Function Tiger.TigerUtilityBFL.ApplyCustomizationParametersToMeshComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15518c0
	struct UProceduralMeshComponent* AddProceduralMeshWithSection(struct AActor* Actor, struct TArray<struct FVector>& Vertices, struct TArray<int32_t> Triangles, struct TArray<struct FVector>& Normals, struct TArray<struct FVector2D>& UV0, struct TArray<struct FLinearColor>& VertexColors, struct TArray<struct FProcMeshTangent>& Tangents, bool bCreateCollision, struct FCollisionResponseContainer& CollisionResponses, enum class ECollisionChannel CollisionObjectType); // Function Tiger.TigerUtilityBFL.AddProceduralMeshWithSection // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x15514c0
};

// Class Tiger.TigerUtilityPowerBaseComponent
// Size: 0xe8 (Inherited: 0xb0)
struct UTigerUtilityPowerBaseComponent : UActorComponent {
	struct FText UtilityName; // 0xb0(0x18)
	struct FText UtilityDescription; // 0xc8(0x18)
	bool bUseClientBackgroundUpdate; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
};

// Class Tiger.TigerUtilityPowerHSenseComponent
// Size: 0x148 (Inherited: 0xb0)
struct UTigerUtilityPowerHSenseComponent : UActorComponent {
	struct FMulticastInlineDelegate OnHeightenedSensesUsed; // 0xb0(0x10)
	struct TArray<struct FTigerNPCMasqueradeStateMessage> NPCMasqueradeStates; // 0xc0(0x10)
	struct TArray<struct AActor*> ActiveHeightenedSenseObjects; // 0xd0(0x10)
	float HeightenedSensesDirectLosExtent; // 0xe0(0x04)
	float HeightenedSensesIndirectLosExtent; // 0xe4(0x04)
	float MaxFadeInTimer; // 0xe8(0x04)
	float MaxFadeOutTimer; // 0xec(0x04)
	float PulseDuration; // 0xf0(0x04)
	float CooldownTimeAfterActivation; // 0xf4(0x04)
	float MovementMultiplierWhenActive; // 0xf8(0x04)
	float CurrentFadeInTimer; // 0xfc(0x04)
	float CurrentFadeOutTimer; // 0x100(0x04)
	float CooldownEndTime; // 0x104(0x04)
	float PulseTimeLeft; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct UAkAudioEvent* FailedUseAudioEvent; // 0x110(0x08)
	int32_t CancellingActions; // 0x118(0x04)
	bool ActivateHeightenedSensesStartupFinished; // 0x11c(0x01)
	bool DeactivateHeightenedSensesStartupFinished; // 0x11d(0x01)
	bool bShouldStopSprintingWhenActive; // 0x11e(0x01)
	bool bShouldPulse; // 0x11f(0x01)
	bool bIsHeightenedSensesActive; // 0x120(0x01)
	char pad_121[0x7]; // 0x121(0x07)
	struct TArray<struct FTigerDisableHSenseTarget> DisabledHeightenedSensesActors; // 0x128(0x10)
	char pad_138[0x10]; // 0x138(0x10)

	void UpdateHeightenedSensesEffects(); // Function Tiger.TigerUtilityPowerHSenseComponent.UpdateHeightenedSensesEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x155df00
	void UpdateBloodResonanceBlendAudio(); // Function Tiger.TigerUtilityPowerHSenseComponent.UpdateBloodResonanceBlendAudio // (Final|Native|Public|BlueprintCallable) // @ game+0x155dee0
	void TriggerHeightenedSensesEffects(); // Function Tiger.TigerUtilityPowerHSenseComponent.TriggerHeightenedSensesEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x155ddd0
	void ToggledHeightenedSenses__DelegateSignature(bool bIsNowActive); // DelegateFunction Tiger.TigerUtilityPowerHSenseComponent.ToggledHeightenedSenses__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void Server_UnsubscribeToHeightenedSenseData(); // Function Tiger.TigerUtilityPowerHSenseComponent.Server_UnsubscribeToHeightenedSenseData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x155dba0
	void Server_OnActivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.Server_OnActivateHeightenedSenses // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x155da40
	void OnDeactivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.OnDeactivateHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnActivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.OnActivateHeightenedSenses // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	bool IsWithinHeightenedSensesRanges(struct AActor* InCharacter); // Function Tiger.TigerUtilityPowerHSenseComponent.IsWithinHeightenedSensesRanges // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x155d510
	bool IsHeightenedSensesActive(); // Function Tiger.TigerUtilityPowerHSenseComponent.IsHeightenedSensesActive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x155d4e0
	float GetHeightenedSensesViewLength(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetHeightenedSensesViewLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x155d080
	float GetCurrentHeightenedSensesViewLength(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetCurrentHeightenedSensesViewLength // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x18b4070
	float GetCooldownTimeLeft(); // Function Tiger.TigerUtilityPowerHSenseComponent.GetCooldownTimeLeft // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x155d050
	void DeactivateHeightenedSenseObjects(); // Function Tiger.TigerUtilityPowerHSenseComponent.DeactivateHeightenedSenseObjects // (Final|Native|Public|BlueprintCallable) // @ game+0x155cf00
	void Client_DeactivateHeightenedSenses(); // Function Tiger.TigerUtilityPowerHSenseComponent.Client_DeactivateHeightenedSenses // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1413d80
};

// Class Tiger.TigerUtilityPowerLureComponent
// Size: 0x120 (Inherited: 0xe8)
struct UTigerUtilityPowerLureComponent : UTigerUtilityPowerBaseComponent {
	float TimeToLure; // 0xe8(0x04)
	char pad_EC[0x4]; // 0xec(0x04)
	struct UAnimMontage* LureAnimation; // 0xf0(0x08)
	struct USoundBase* LureWhistleSound; // 0xf8(0x08)
	float ClientFeedbackUpdateTickInterval; // 0x100(0x04)
	char pad_104[0x1c]; // 0x104(0x1c)

	void Server_StopLureAttempt(); // Function Tiger.TigerUtilityPowerLureComponent.Server_StopLureAttempt // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x155db50
	void Server_StartLureAttempt(struct ATigerNPC* TargetNpc); // Function Tiger.TigerUtilityPowerLureComponent.Server_StartLureAttempt // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x155da90
	void OnSuccesfulLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnSuccesfulLure // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStoppedChannelingLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnStoppedChannelingLure // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnStartedChannelingLure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnStartedChannelingLure // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnLureEffectEnded(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.OnLureEffectEnded // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Multicast_StoppedLureAttempt(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_StoppedLureAttempt // (Net|Native|Event|NetMulticast|Public) // @ game+0x155d5d0
	void Multicast_StartedLureAttempt(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_StartedLureAttempt // (Net|Native|Event|NetMulticast|Public) // @ game+0x140d510
	void Multicast_Lure(struct ATigerNPC* TigerNPC); // Function Tiger.TigerUtilityPowerLureComponent.Multicast_Lure // (Net|Native|Event|NetMulticast|Public) // @ game+0x140e720
	void Client_SyncSuccessfulLureTarget(struct ATigerNPC* TargetNpc); // Function Tiger.TigerUtilityPowerLureComponent.Client_SyncSuccessfulLureTarget // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x155ce70
	void Client_StopLureAttempt(); // Function Tiger.TigerUtilityPowerLureComponent.Client_StopLureAttempt // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x155ce50
};

// Class Tiger.TigerUtilityPowerRoar
// Size: 0x138 (Inherited: 0xe8)
struct UTigerUtilityPowerRoar : UTigerUtilityPowerBaseComponent {
	float DurationAIAreAffected; // 0xe8(0x04)
	float ConeEffectLength; // 0xec(0x04)
	float SphereEffectRadius; // 0xf0(0x04)
	float ConeWidthAngle; // 0xf4(0x04)
	float Cooldown; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UAnimMontage* RoarStaggerAnimation; // 0x100(0x08)
	struct UAnimMontage* RoarAnimation; // 0x108(0x08)
	struct UAkAudioEvent* RoarSoundEvent; // 0x110(0x08)
	char pad_118[0x20]; // 0x118(0x20)

	void Server_AttemptRoar(); // Function Tiger.TigerUtilityPowerRoar.Server_AttemptRoar // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x155d9f0
	void Multicast_Roar(); // Function Tiger.TigerUtilityPowerRoar.Multicast_Roar // (Net|Native|Event|NetMulticast|Protected) // @ game+0x155d5b0
	void Client_ConfirmRoarUsage(); // Function Tiger.TigerUtilityPowerRoar.Client_ConfirmRoarUsage // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x155ce30
};

// Class Tiger.TigerVehicle
// Size: 0x290 (Inherited: 0x280)
struct ATigerVehicle : ATigerActivatedObject {
	struct ATigerLootableVehicleDoorSpawner* LootableDoorSpawner; // 0x280(0x08)
	struct ATigerLootContainer* LootContainer; // 0x288(0x08)

	void ChangeLootableDoorActorClass(struct ATigerLootableVehicleDoorSpawner* InClass); // Function Tiger.TigerVehicle.ChangeLootableDoorActorClass // (Final|Native|Protected|BlueprintCallable) // @ game+0x155cda0
};

// Class Tiger.TigerVendorStoreCategory
// Size: 0x50 (Inherited: 0x28)
struct UTigerVendorStoreCategory : UObject {
	struct TArray<struct FTigerVendorStoreCategoryItem> CachedItems; // 0x28(0x10)
	struct TArray<struct FTigerPersistentItemDefinition> ItemDefinitions; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)

	struct TArray<struct FTigerVendorStoreCategoryItem> GetItemsWithClass(struct UTigerInventoryItemBase* Class); // Function Tiger.TigerVendorStoreCategory.GetItemsWithClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x155d0f0
	struct TArray<struct FTigerVendorStoreCategoryItem> GetItems(); // Function Tiger.TigerVendorStoreCategory.GetItems // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x155d0b0
	enum class ETigerPersistentStoreCategory GetCategoryType(); // Function Tiger.TigerVendorStoreCategory.GetCategoryType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x155d030
};

// Class Tiger.TigerVendorComponent
// Size: 0x130 (Inherited: 0xb0)
struct UTigerVendorComponent : UActorComponent {
	struct TArray<struct UTigerVendorStoreCategory*> DynamicCategories; // 0xb0(0x10)
	char pad_C0[0x70]; // 0xc0(0x70)

	void UnsubscribeToStoreEntryConfigEvents(enum class ETigerMetaStoreCategoryType InStoreEntryCategory, struct FDelegate& InEventDelegate); // Function Tiger.TigerVendorComponent.UnsubscribeToStoreEntryConfigEvents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x155ddf0
	void TigerPurchaseItemDelegate__DelegateSignature(bool bInSuccess, struct FString InErrorString, struct FTigerItemId& InItemId); // DelegateFunction Tiger.TigerVendorComponent.TigerPurchaseItemDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x18b4070
	void SubscribeToStoreEntryConfigEvents(enum class ETigerMetaStoreCategoryType InStoreEntryCategory, struct FDelegate& InEventDelegate); // Function Tiger.TigerVendorComponent.SubscribeToStoreEntryConfigEvents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x155dce0
	void SaveOutfitSetup(struct FTigerPersistentOutfitSetup& OutfitSetup); // Function Tiger.TigerVendorComponent.SaveOutfitSetup // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x155d920
	struct FTigerItemPrice GetSpecialItemCost(struct FTigerItemId& InItemId); // Function Tiger.TigerVendorComponent.GetSpecialItemCost // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x155d260
	struct UTigerVendorStoreCategory* GetCategory(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerVendorComponent.GetCategory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x155cfa0
};

// Class Tiger.TigerVendorUI
// Size: 0x2b8 (Inherited: 0x298)
struct UTigerVendorUI : UTigerMenuWidget {
	struct TWeakObjectPtr<struct ATigerNPC> VendorNPC; // 0x298(0x08)
	struct TWeakObjectPtr<struct UTigerInteractiveNpcComponent> InteractiveNpcComponent; // 0x2a0(0x08)
	struct UTigerSharedVendorUI* SharedVendorUI; // 0x2a8(0x08)
	bool bHideMouseCusorAtDescruction; // 0x2b0(0x01)
	char pad_2B1[0x1]; // 0x2b1(0x01)
	bool bUseTransitions; // 0x2b2(0x01)
	char pad_2B3[0x5]; // 0x2b3(0x05)

	bool ShouldUseTransitions(); // Function Tiger.TigerVendorUI.ShouldUseTransitions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x155dcc0
	void OnMenuBuy(); // Function Tiger.TigerVendorUI.OnMenuBuy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x18b4070
	void OnCloseVendorWidget(bool& bShouldRemoveWidget); // Function Tiger.TigerVendorUI.OnCloseVendorWidget // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnAddToScreen(); // Function Tiger.TigerVendorUI.OnAddToScreen // (Event|Public|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerVideoCameraActorOffset
// Size: 0x810 (Inherited: 0x7b0)
struct ATigerVideoCameraActorOffset : ACameraActor {
	char pad_7B0[0x50]; // 0x7b0(0x50)
	struct ATigerPlayer* PlayerActor; // 0x800(0x08)
	char pad_808[0x8]; // 0x808(0x08)
};

// Class Tiger.TigerVideoCameraController
// Size: 0x680 (Inherited: 0x680)
struct ATigerVideoCameraController : ADebugCameraController {
};

// Class Tiger.TigerVisitLocationTriggerVolume
// Size: 0x290 (Inherited: 0x260)
struct ATigerVisitLocationTriggerVolume : ATriggerVolume {
	char pad_260[0x30]; // 0x260(0x30)

	void OnEndOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerVisitLocationTriggerVolume.OnEndOverlap // (Final|Native|Private) // @ game+0x155d730
	void OnBeginOverlap(struct AActor* InOverlappedActor, struct AActor* InOtherActor); // Function Tiger.TigerVisitLocationTriggerVolume.OnBeginOverlap // (Final|Native|Private) // @ game+0x155d660
	void OnAreaLeft__DelegateSignature(); // DelegateFunction Tiger.TigerVisitLocationTriggerVolume.OnAreaLeft__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void OnAreaEntered__DelegateSignature(struct ATigerPlayerController* InPlayerController); // DelegateFunction Tiger.TigerVisitLocationTriggerVolume.OnAreaEntered__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void HandleOnRestartPlayer(struct AController* InNewPlayer); // Function Tiger.TigerVisitLocationTriggerVolume.HandleOnRestartPlayer // (Final|Native|Private) // @ game+0x155d310
};

// Class Tiger.TigerVisualLoggerDummyFilter
// Size: 0x28 (Inherited: 0x28)
struct UTigerVisualLoggerDummyFilter : UObject {
};

// Class Tiger.TigerVoipChatIndicatorWidget
// Size: 0x290 (Inherited: 0x260)
struct UTigerVoipChatIndicatorWidget : UUserWidget {
	char pad_260[0x30]; // 0x260(0x30)

	enum class ETalkingVisiblityState UpdateVoiceChatState2(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerVoipChatIndicatorWidget.UpdateVoiceChatState2 // (Final|Native|Public|BlueprintCallable) // @ game+0x155df20
	void TalkingVisibilityStateChanged(enum class ETalkingVisiblityState InTalkingVisibilityState); // Function Tiger.TigerVoipChatIndicatorWidget.TalkingVisibilityStateChanged // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
	void InitializeChatStateWithVoipID(struct FTigerPersistentVoipID& InPersistentVoipId); // Function Tiger.TigerVoipChatIndicatorWidget.InitializeChatStateWithVoipID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x155d430
	void InitializeChatStateWithTigerPlayerState(struct ATigerPlayerState* inTigerPlayerState); // Function Tiger.TigerVoipChatIndicatorWidget.InitializeChatStateWithTigerPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x155d3a0
};

// Class Tiger.TigerVoSettings
// Size: 0xb0 (Inherited: 0x38)
struct UTigerVoSettings : USharkLocalDeveloperSettings {
	struct TSoftObjectPtr<UAkAudioEvent> AudioEvent; // 0x38(0x28)
	struct TMap<struct FName, struct FTigerVoCategoryData> CategoryData; // 0x60(0x50)
};

// Class Tiger.TigerVoSubsystem
// Size: 0xe8 (Inherited: 0x30)
struct UTigerVoSubsystem : UGameInstanceSubsystem {
	struct UAkAudioEvent* AudioEvent; // 0x30(0x08)
	char pad_38[0xa0]; // 0x38(0xa0)
	struct TArray<struct FTigerVoEvent> VoEvents; // 0xd8(0x10)

	float AddVoEvent(struct FTigerVoEvent& InVoEvent); // Function Tiger.TigerVoSubsystem.AddVoEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x155ccf0
};

// Class Tiger.TigerWardrobeUI
// Size: 0x4e8 (Inherited: 0x3c0)
struct UTigerWardrobeUI : UTigerSceneBackgroundUI {
	struct UTigerVendorComponent* VendorComponent; // 0x3c0(0x08)
	struct TArray<struct UTigerVendorStoreCategory*> InventoryCategories; // 0x3c8(0x10)
	struct UTigerVendorStoreCategory* CurrentCategory; // 0x3d8(0x08)
	char pad_3E0[0x108]; // 0x3e0(0x108)

	void SetZoomStatus(struct ATigerBattlepassRewardPreview* InPreviewItem, bool bIsHeadItem); // Function Tiger.TigerWardrobeUI.SetZoomStatus // (Final|Native|Protected|BlueprintCallable) // @ game+0x155dbf0
	void OnSelectedCharacterChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerWardrobeUI.OnSelectedCharacterChanged // (Final|Native|Protected) // @ game+0x155d890
	void OnPlayerInventoryUpdated(); // Function Tiger.TigerWardrobeUI.OnPlayerInventoryUpdated // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnPlayerInventoryChanged(struct UTigerPersistentPlayerState* InPersistentPlayerState); // Function Tiger.TigerWardrobeUI.OnPlayerInventoryChanged // (Final|Native|Protected) // @ game+0x155d800
	void OnCategoryItemsReceived(enum class ETigerPersistentStoreCategory CategoryType, struct TArray<struct FTigerVendorStoreCategoryItem>& CategoryItems); // Function Tiger.TigerWardrobeUI.OnCategoryItemsReceived // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnBodyTypeChanged(enum class ETigerGender InBodyType); // Function Tiger.TigerWardrobeUI.OnBodyTypeChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void FetchCategoryItems(enum class ETigerPersistentStoreCategory CategoryType); // Function Tiger.TigerWardrobeUI.FetchCategoryItems // (Final|Native|Public|BlueprintCallable) // @ game+0x155cf20
};

// Class Tiger.TigerThrowingAxeConfig
// Size: 0x1f8 (Inherited: 0x188)
struct UTigerThrowingAxeConfig : UTigerDisciplineAnimTriggeredConfig {
	struct UAnimMontage* StartAimingPoseMontage; // 0x188(0x08)
	struct UAnimMontage* ReadyAxeMontage; // 0x190(0x08)
	bool bDebugInfiniteAxes; // 0x198(0x01)
	bool bDebugDrawPredictedProjectilePath; // 0x199(0x01)
	char pad_19A[0x2]; // 0x19a(0x02)
	struct FName CastAnimationName; // 0x19c(0x08)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct AActor* ThrowingAxeProjectile; // 0x1a8(0x08)
	struct UTigerItemAsset* AxeItem; // 0x1b0(0x08)
	struct FName AxeSpawnSocket; // 0x1b8(0x08)
	float ForwardOffset; // 0x1c0(0x04)
	struct FRotator AxeSpawnRotationOffset; // 0x1c4(0x0c)
	float ProjectileDamage; // 0x1d0(0x04)
	float ProjectileStartSpeed; // 0x1d4(0x04)
	float ProjectileMaxSpeed; // 0x1d8(0x04)
	float ProjectileMassInKg; // 0x1dc(0x04)
	struct FRotator ProjectileRotationPerSecond; // 0x1e0(0x0c)
	float ProjectileGravityScale; // 0x1ec(0x04)
	float MovementMultiplierAimState; // 0x1f0(0x04)
	char pad_1F4[0x4]; // 0x1f4(0x04)
};

// Class Tiger.TigerWeaponAbilityAxeThrow
// Size: 0x108 (Inherited: 0xf0)
struct UTigerWeaponAbilityAxeThrow : UTigerDisciplineAnimTriggered {
	struct UTigerThrowingAxeConfig* Config; // 0xf0(0x08)
	struct ATigerPlayer* Player; // 0xf8(0x08)
	char pad_100[0x8]; // 0x100(0x08)

	void ThrowMontageEnded(struct UAnimMontage* Montage, bool bWasInterrupted); // Function Tiger.TigerWeaponAbilityAxeThrow.ThrowMontageEnded // (Final|Native|Private) // @ game+0x1562420
	void Multicast_RevertWeaponVisibilityOnSimulatedProxy(); // Function Tiger.TigerWeaponAbilityAxeThrow.Multicast_RevertWeaponVisibilityOnSimulatedProxy // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1561c50
};

// Class Tiger.TigerDashConfig
// Size: 0x1e8 (Inherited: 0x188)
struct UTigerDashConfig : UTigerDisciplineAnimTriggeredConfig {
	struct FVector HitBoxExtents; // 0x188(0x0c)
	struct FVector HitBoxOffset; // 0x194(0x0c)
	float DashDistance; // 0x1a0(0x04)
	float DashDuration; // 0x1a4(0x04)
	float Damage; // 0x1a8(0x04)
	float DashExitVelocity; // 0x1ac(0x04)
	float SurfaceStopThreshold; // 0x1b0(0x04)
	char pad_1B4[0x4]; // 0x1b4(0x04)
	struct UAnimMontage* RecoveryMontage; // 0x1b8(0x08)
	struct UAnimMontage* RecoveryMontageInAir; // 0x1c0(0x08)
	float RecoveryCancelledBlendOut; // 0x1c8(0x04)
	float RecoveryCancelledBlendOutInAir; // 0x1cc(0x04)
	struct UParticleSystem* DashPSTemplate; // 0x1d0(0x08)
	struct UAnimMontage* AirDashMontage; // 0x1d8(0x08)
	float PlayAirAnimAngleToSurfaceThreshold; // 0x1e0(0x04)
	char pad_1E4[0x4]; // 0x1e4(0x04)
};

// Class Tiger.TigerWeaponAbilityDash
// Size: 0xc8 (Inherited: 0x78)
struct UTigerWeaponAbilityDash : UTigerDisciplineBase {
	struct UTigerDashConfig* AbilityConfig; // 0x78(0x08)
	struct FVector CastDirection; // 0x80(0x0c)
	struct FVector CastLocation; // 0x8c(0x0c)
	char pad_98[0x30]; // 0x98(0x30)

	void OnTerrainInterrupt(struct AActor* TerrainActor, struct UPrimitiveComponent* HitComponent, struct FHitResult& HitResult); // Function Tiger.TigerWeaponAbilityDash.OnTerrainInterrupt // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnTerrainHitResult(struct AActor* InTerrainActor, struct UPrimitiveComponent* InHitComponent, struct FHitResult& InHitResult); // Function Tiger.TigerWeaponAbilityDash.OnTerrainHitResult // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void OnTerrainHit(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function Tiger.TigerWeaponAbilityDash.OnTerrainHit // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x1561fc0
	void OnRecoveryMontageBlendingOutStarted(struct UAnimMontage* InMontage, bool bInWasInterrupted); // Function Tiger.TigerWeaponAbilityDash.OnRecoveryMontageBlendingOutStarted // (Final|Native|Private) // @ game+0x1561ef0
	void OnOwnerMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function Tiger.TigerWeaponAbilityDash.OnOwnerMovementUpdated // (Final|Native|Private|HasDefaults) // @ game+0x1561dc0
	void OnForcedMoveResult(enum class ETigerForcedMoveResult ForcedMoveResult); // Function Tiger.TigerWeaponAbilityDash.OnForcedMoveResult // (Final|Native|Private) // @ game+0x1561d40
	void OnCharacterHit(struct ATigerCharacter* AHitTigerCharacter); // Function Tiger.TigerWeaponAbilityDash.OnCharacterHit // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void Multicast_SpawnOnHitParticle(struct ATigerCharacter* TigerCharacterHit); // Function Tiger.TigerWeaponAbilityDash.Multicast_SpawnOnHitParticle // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1561c70
	void Multicast_PlayRecovery(); // Function Tiger.TigerWeaponAbilityDash.Multicast_PlayRecovery // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1561a30
	void Client_RecoveryMontageEnded(); // Function Tiger.TigerWeaponAbilityDash.Client_RecoveryMontageEnded // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1561970
};

// Class Tiger.TigerHookConfig
// Size: 0x200 (Inherited: 0x178)
struct UTigerHookConfig : UTigerActiveDisciplineConfig {
	float MaxThrowDistance; // 0x178(0x04)
	float StopPullDistance; // 0x17c(0x04)
	float TimeUntilReachMaxThrowDistance; // 0x180(0x04)
	float TimeUntilReturn; // 0x184(0x04)
	float FastReelTime; // 0x188(0x04)
	float RotateTime; // 0x18c(0x04)
	float TimeBeforeReel; // 0x190(0x04)
	float TimeUntilCutoffVelocity; // 0x194(0x04)
	float TimeLeftWhenToAllowHookingPlayerActions; // 0x198(0x04)
	float HookDamage; // 0x19c(0x04)
	float StunDurationPostHook; // 0x1a0(0x04)
	char pad_1A4[0x4]; // 0x1a4(0x04)
	struct ATigerHook* HookType; // 0x1a8(0x08)
	struct UTigerHookedBuff* HookedBuffType; // 0x1b0(0x08)
	struct UTigerHookingBuff* HookingBuffType; // 0x1b8(0x08)
	struct UAnimMontage* ThrowAnimation; // 0x1c0(0x08)
	struct UAnimMontage* ReelAnimation; // 0x1c8(0x08)
	struct UAnimMontage* AirThrowAnimation; // 0x1d0(0x08)
	struct UAnimMontage* AirReelAnimation; // 0x1d8(0x08)
	struct UAnimMontage* HookedReactionAnimation; // 0x1e0(0x08)
	struct UAnimMontage* HookedReelAnimation; // 0x1e8(0x08)
	struct UAnimMontage* HookedPostReelAnimation; // 0x1f0(0x08)
	bool bUseForcedMove; // 0x1f8(0x01)
	char pad_1F9[0x7]; // 0x1f9(0x07)
};

// Class Tiger.TigerWeaponAbilityHook
// Size: 0x88 (Inherited: 0x78)
struct UTigerWeaponAbilityHook : UTigerDisciplineBase {
	struct UTigerHookConfig* Config; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)

	void Server_ThrowHook(struct FVector SpawnLoc, struct FVector TargetLoc); // Function Tiger.TigerWeaponAbilityHook.Server_ThrowHook // (Final|Net|NetReliableNative|Event|Private|NetServer|HasDefaults|NetValidate) // @ game+0x1562330
};

// Class Tiger.TigerReflectConfig
// Size: 0x1c8 (Inherited: 0x178)
struct UTigerReflectConfig : UTigerActiveDisciplineConfig {
	enum class ETigerReflectBehaviour ReflectBehaviors[0x5]; // 0x178(0x05)
	char pad_17D[0x3]; // 0x17d(0x03)
	float DamageLetThroughModifier; // 0x180(0x04)
	float ReflectSpread; // 0x184(0x04)
	float MaxDuration; // 0x188(0x04)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct AActor* BulletReflector; // 0x190(0x08)
	float ReflectorRadius; // 0x198(0x04)
	float ReflectorHalfHeight; // 0x19c(0x04)
	float ReflectorCoverageRange; // 0x1a0(0x04)
	float PoseSwapDelay; // 0x1a4(0x04)
	struct TArray<struct FName> ReflectMontageNames; // 0x1a8(0x10)
	struct FName ReflectEndMontageName; // 0x1b8(0x08)
	bool bDrawReflectedBulletLines; // 0x1c0(0x01)
	char pad_1C1[0x7]; // 0x1c1(0x07)
};

// Class Tiger.TigerWeaponAbilityReflect
// Size: 0xd8 (Inherited: 0x78)
struct UTigerWeaponAbilityReflect : UTigerDisciplineBase {
	char pad_78[0x10]; // 0x78(0x10)
	struct UTigerReflectConfig* Config; // 0x88(0x08)
	struct ATigerPlayer* Player; // 0x90(0x08)
	struct AActor* ReflectorActor; // 0x98(0x08)
	char pad_A0[0x38]; // 0xa0(0x38)

	void ReflectProjectile(struct AActor* InReflector, struct AActor* InOverlappedActor, struct FHitResult& InHit); // Function Tiger.TigerWeaponAbilityReflect.ReflectProjectile // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x15621a0
	void Multicast_StopReflecting(); // Function Tiger.TigerWeaponAbilityReflect.Multicast_StopReflecting // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1561d20
	void Multicast_StopDiscipline(); // Function Tiger.TigerWeaponAbilityReflect.Multicast_StopDiscipline // (Final|Net|NetReliableNative|Event|NetMulticast|Private) // @ game+0x1561d00
	void Multicast_ReflectProjectile(struct UTigerRangedWeapon* InRangedWeapon, struct AActor* InOverlappedActor, enum class ETigerReflectBehaviour InBehaviour, struct FVector InProjectileSpawnLocation, struct FRotator InProjectileSpawnDirection, int32_t aFireSettingsIndex); // Function Tiger.TigerWeaponAbilityReflect.Multicast_ReflectProjectile // (Final|Net|NetReliableNative|Event|NetMulticast|Private|HasDefaults) // @ game+0x1561a50
};

// Class Tiger.TigerWeaponAbilityReflectActor
// Size: 0x228 (Inherited: 0x228)
struct ATigerWeaponAbilityReflectActor : AActor {

	bool CanBeReflected(struct UPrimitiveComponent* InOverlappedComponent, struct AActor* InOtherActor, struct UPrimitiveComponent* InOtherComp, int32_t InOtherBodyIndex, bool bInFromSweep, struct FHitResult& InSweepResult); // Function Tiger.TigerWeaponAbilityReflectActor.CanBeReflected // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1561740
};

// Class Tiger.TigerWeaponAmmoWidget
// Size: 0x2e0 (Inherited: 0x280)
struct UTigerWeaponAmmoWidget : UTigerWidget {
	char pad_280[0x60]; // 0x280(0x60)

	void WeaponEquipped(struct UTigerItemAsset* InWeaponAsset, int32_t InItemCount, struct ATigerLootBox* InLootbox, enum class ETigerWeaponSlot InWeaponSlot); // Function Tiger.TigerWeaponAmmoWidget.WeaponEquipped // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void SelectedSlotUpdated(struct UTigerRangedWeaponComponent* RangedWeaponComponent, struct UTigerInventoryComponent* Inventory, enum class ETigerWeaponSlot NewSlot); // Function Tiger.TigerWeaponAmmoWidget.SelectedSlotUpdated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void ArtifactUpdated(struct UTigerItemAsset* InArtifactAsset); // Function Tiger.TigerWeaponAmmoWidget.ArtifactUpdated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void AmmoUpdated(int32_t AmmoInMagazine, int32_t AmmoInInventory); // Function Tiger.TigerWeaponAmmoWidget.AmmoUpdated // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
};

// Class Tiger.TigerWeaponAnimInstance
// Size: 0x2c0 (Inherited: 0x2c0)
struct UTigerWeaponAnimInstance : UAnimInstance {
	bool bShowWeaponTrails; // 0x2b8(0x01)
};

// Class Tiger.TigerRangedWeapon
// Size: 0x200 (Inherited: 0xb0)
struct UTigerRangedWeapon : UTigerWeapon {
	struct FName WeaponName; // 0xb0(0x08)
	enum class ETigerWeaponType WeaponType; // 0xb8(0x01)
	char pad_B9[0x3]; // 0xb9(0x03)
	struct FName CharacterReloadAnimationName; // 0xbc(0x08)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct TArray<struct FName> FireAnimations; // 0xc8(0x10)
	float TimeAfterFireBeforePrimingIsAllowed; // 0xd8(0x04)
	struct FName CharacterPrimingAnimation; // 0xdc(0x08)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct UAnimMontage* WeaponPrimingAnimation; // 0xe8(0x08)
	struct FName RecoilNoiseBlendspace; // 0xf0(0x08)
	struct UAnimMontage* GunReload; // 0xf8(0x08)
	struct UAnimMontage* GunFireAnimation; // 0x100(0x08)
	struct UCurveFloat* VerticalRecoilCurve; // 0x108(0x08)
	struct UCurveFloat* HorizontalRecoilCurve; // 0x110(0x08)
	struct UCurveFloat* VerticalRecoilMultiplierCurveOverRecoil; // 0x118(0x08)
	struct UCurveFloat* HorizontalRecoilMultiplierCurveOverRecoil; // 0x120(0x08)
	struct ATigerProjectile* ProjectileClass; // 0x128(0x08)
	struct UAkAudioEvent* StartAimingSound; // 0x130(0x08)
	struct UAkAudioEvent* StopAimingSound; // 0x138(0x08)
	struct UAkAudioEvent* HitWallSound; // 0x140(0x08)
	struct UAkAudioEvent* FireSound; // 0x148(0x08)
	struct UAkAudioEvent* BurstFireSound; // 0x150(0x08)
	float LoopFireAfterFireRateMultiplier; // 0x158(0x04)
	bool bShouldPostLoop; // 0x15c(0x01)
	bool bIsMinigun; // 0x15d(0x01)
	char pad_15E[0x2]; // 0x15e(0x02)
	struct UAkAudioEvent* LowAmmoSound; // 0x160(0x08)
	struct UAkAudioEvent* LastShotSound; // 0x168(0x08)
	struct UAkAudioEvent* OutOfAmmoSound; // 0x170(0x08)
	struct UAkAudioEvent* CoolDownAudioEvent; // 0x178(0x08)
	int32_t AmountOfProjectilesFiredBeforeCooldown; // 0x180(0x04)
	float LowAmmoThresholdPercent; // 0x184(0x04)
	struct UMatineeCameraShake* CameraShake; // 0x188(0x08)
	struct UMatineeCameraShake* CameraShakeAimed; // 0x190(0x08)
	struct UForceFeedbackEffect* FireForceFeedback; // 0x198(0x08)
	int32_t ShotsPerTrail; // 0x1a0(0x04)
	int32_t AimedFov; // 0x1a4(0x04)
	bool bShotsArePiercing; // 0x1a8(0x01)
	enum class ETigerWeaponAmmoType AmmoType; // 0x1a9(0x01)
	char pad_1AA[0x6]; // 0x1aa(0x06)
	struct UCurveFloat* DamageDropOffCurve; // 0x1b0(0x08)
	struct UTigerCameraPreset* CameraPreset; // 0x1b8(0x08)
	struct UTigerWeaponCrosshairWidget* CrosshairsByFireMode[0x3]; // 0x1c0(0x18)
	struct UTigerWeaponCrosshairWidget* AimingCrossHair; // 0x1d8(0x08)
	struct TArray<struct FName> SecondaryFireAnimations; // 0x1e0(0x10)
	struct FName MuzzleSocket; // 0x1f0(0x08)
	struct AActor* TracerActor; // 0x1f8(0x08)

	void PlayLoopingAkEvents(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.PlayLoopingAkEvents // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnHitAuthority(struct ATigerCharacter* Instigator, struct ATigerCharacter* Target); // Function Tiger.TigerRangedWeapon.OnHitAuthority // (Event|Public|BlueprintEvent|Const) // @ game+0x18b4070
	void OnEndFireAudio(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.OnEndFireAudio // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void OnBeginFireAudio(struct ATigerCharacter* InInstigator); // Function Tiger.TigerRangedWeapon.OnBeginFireAudio // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	struct FVector CalculateBulletDirection(struct FVector InAimDirection, struct FTigerRangedRandomState& InOutRandomState, int32_t InBulletIndex, struct UTigerRangedWeaponComponent* InRangedWeaponComponent); // Function Tiger.TigerRangedWeapon.CalculateBulletDirection // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1561590
};

// Class Tiger.TigerWeatherController
// Size: 0x278 (Inherited: 0x228)
struct ATigerWeatherController : AActor {
	struct TMap<struct FName, struct FSkyOverrides> WorldSpecificOverrides; // 0x228(0x50)

	struct FSkyTextures GetWorldSkyTextureOverride(struct FName InWeatherScenarioName); // Function Tiger.TigerWeatherController.GetWorldSkyTextureOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x1565ec0
	struct FPostProcessOverrides GetPostProcessOverride(struct FName InWeatherScenarioName); // Function Tiger.TigerWeatherController.GetPostProcessOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x1565b70
	enum class EFogVariations GetFogVariationOverride(struct FName InWeatherScenarioName); // Function Tiger.TigerWeatherController.GetFogVariationOverride // (Final|Native|Public|BlueprintCallable) // @ game+0x1565aa0
};

// Class Tiger.TigerWeatherScenarioData
// Size: 0x40 (Inherited: 0x30)
struct UTigerWeatherScenarioData : UDataAsset {
	struct FName DebugName; // 0x30(0x08)
	bool bOverrideServerReplicationCullDistance; // 0x38(0x01)
	char pad_39[0x3]; // 0x39(0x03)
	float CullDistance; // 0x3c(0x04)
};

// Class Tiger.TigerWeatherSettings
// Size: 0xd8 (Inherited: 0x38)
struct UTigerWeatherSettings : USharkLocalDeveloperSettings {
	struct TMap<struct FName, struct UTigerWeatherScenarioData*> WeatherScenarioAliases; // 0x38(0x50)
	struct TMap<struct UTigerWeatherScenarioData*, float> WeatherScenarioProbabilityRatios; // 0x88(0x50)
};

// Class Tiger.TigerWheelInterfaceWidget
// Size: 0x2d0 (Inherited: 0x280)
struct UTigerWheelInterfaceWidget : UTigerWidget {
	struct FMulticastInlineDelegate OnAlternateActionTriggered; // 0x280(0x10)
	struct FMulticastInlineDelegate OnPrimaryActionTriggered; // 0x290(0x10)
	bool bCursorCanBeOutside; // 0x2a0(0x01)
	char pad_2A1[0x3]; // 0x2a1(0x03)
	int32_t NumItems; // 0x2a4(0x04)
	int32_t MinimumSupportedItems; // 0x2a8(0x04)
	int32_t MaximumSupportedItems; // 0x2ac(0x04)
	float MiddleRadius; // 0x2b0(0x04)
	float OutsideRadius; // 0x2b4(0x04)
	float GamepadDeadZone; // 0x2b8(0x04)
	float DeselectionGraceTime; // 0x2bc(0x04)
	char pad_2C0[0x4]; // 0x2c0(0x04)
	int32_t HoveredIndex; // 0x2c4(0x04)
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void UpdateHoverEffect(int32_t Index); // Function Tiger.TigerWheelInterfaceWidget.UpdateHoverEffect // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void TigerOnWheelPrimaryAction__DelegateSignature(int32_t Index); // DelegateFunction Tiger.TigerWheelInterfaceWidget.TigerOnWheelPrimaryAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void TigerOnWheelAlternateAction__DelegateSignature(int32_t Index); // DelegateFunction Tiger.TigerWheelInterfaceWidget.TigerOnWheelAlternateAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void SetWheelUsable(bool bNewUsable); // Function Tiger.TigerWheelInterfaceWidget.SetWheelUsable // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void SetItem(int32_t Index, struct UTexture2D* Icon, struct FText& Label, int32_t Count); // Function Tiger.TigerWheelInterfaceWidget.SetItem // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x18b4070
	void SetIsItemSelected(int32_t Index, bool bIsSelected); // Function Tiger.TigerWheelInterfaceWidget.SetIsItemSelected // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	void ResetItems(); // Function Tiger.TigerWheelInterfaceWidget.ResetItems // (Event|Public|BlueprintEvent) // @ game+0x18b4070
	void PlayOpenAnimation(); // Function Tiger.TigerWheelInterfaceWidget.PlayOpenAnimation // (Native|Event|Public|BlueprintEvent) // @ game+0x1435fb0
	void PlayCloseAnimation(); // Function Tiger.TigerWheelInterfaceWidget.PlayCloseAnimation // (Native|Event|Public|BlueprintEvent) // @ game+0x14a37b0
	void OnNumberOfItemsChanged(int32_t InNewNumberOfItems); // Function Tiger.TigerWheelInterfaceWidget.OnNumberOfItemsChanged // (Event|Protected|BlueprintEvent) // @ game+0x18b4070
	bool IsWheelOpen(); // Function Tiger.TigerWheelInterfaceWidget.IsWheelOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1566290
};

// Class Tiger.TigerTooltipWidget
// Size: 0x288 (Inherited: 0x280)
struct UTigerTooltipWidget : UTigerWidget {
	struct UTigerWidget* OwningWidget; // 0x280(0x08)
};

// Class Tiger.TigerWorldCompositionCellComponent
// Size: 0x230 (Inherited: 0x200)
struct UTigerWorldCompositionCellComponent : USceneComponent {
	struct UShapeComponent* ShapeComponent; // 0x1f8(0x08)
	struct TArray<struct UTigerWorldCompositionCellComponent*> SubCellComponents; // 0x200(0x10)
	struct ATigerWorldCompositionGrid* WorldGrid; // 0x210(0x08)
	struct FName StreamLevelPath; // 0x218(0x08)
	char pad_228[0x8]; // 0x228(0x08)

	void HandleOnLevelUnloaded(); // Function Tiger.TigerWorldCompositionCellComponent.HandleOnLevelUnloaded // (Final|Native|Private) // @ game+0x1566220
	void HandleOnLevelLoaded(); // Function Tiger.TigerWorldCompositionCellComponent.HandleOnLevelLoaded // (Final|Native|Private) // @ game+0x1566200
};

// Class Tiger.TigerWorldCompositionGridCellComponent
// Size: 0x230 (Inherited: 0x230)
struct UTigerWorldCompositionGridCellComponent : UTigerWorldCompositionCellComponent {
};

// Class Tiger.TigerWorldCompositionHexGridCellComponent
// Size: 0x240 (Inherited: 0x230)
struct UTigerWorldCompositionHexGridCellComponent : UTigerWorldCompositionCellComponent {
	float HexCellRadius; // 0x230(0x04)
	char pad_234[0xc]; // 0x234(0x0c)
};

// Class Tiger.TigerWorldCompositionGrid
// Size: 0x320 (Inherited: 0x228)
struct ATigerWorldCompositionGrid : AActor {
	struct FMulticastInlineDelegate OnCellStartedLoadingEvent; // 0x228(0x10)
	struct FMulticastInlineDelegate OnCellFinishedLoadingEvent; // 0x238(0x10)
	struct FMulticastInlineDelegate OnCellStartedUnloadingEvent; // 0x248(0x10)
	struct FMulticastInlineDelegate OnCellFinishedUnloadingEvent; // 0x258(0x10)
	enum class ETigerWorldCompositionGridLayout Layout; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	struct FVector GridExtent; // 0x26c(0x0c)
	int32_t LevelDepth; // 0x278(0x04)
	float CellTriggerSizeBias; // 0x27c(0x04)
	struct TArray<struct TSoftObjectPtr<UWorld>> BlackListedLevels; // 0x280(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> AdditionalLevels; // 0x290(0x10)
	struct TArray<struct TSoftObjectPtr<UWorld>> AlwaysLoadedLevels; // 0x2a0(0x10)
	struct UTigerWorldCompositionCellComponent* RootCellComponent; // 0x2b0(0x08)
	struct TArray<struct UTigerWorldCompositionCellComponent*> LoadingCells; // 0x2b8(0x10)
	struct TArray<struct UTigerWorldCompositionCellComponent*> LoadedCells; // 0x2c8(0x10)
	struct TArray<struct UTigerWorldCompositionCellComponent*> UnloadingCells; // 0x2d8(0x10)
	struct TArray<struct FTigerRecentlyStreamedCellEntries> RecentlyLoadedCells; // 0x2e8(0x10)
	struct TArray<struct FTigerRecentlyStreamedCellEntries> RecentlyUnloadedCells; // 0x2f8(0x10)
	struct TArray<struct FTigerStreamingPlayer> StreamingPlayers; // 0x308(0x10)
	char pad_318[0x8]; // 0x318(0x08)

	void PrespawnStreamingFinished__DelegateSignature(); // DelegateFunction Tiger.TigerWorldCompositionGrid.PrespawnStreamingFinished__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void HandleOnCellStartedUnloadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellStartedUnloadingEvent // (Final|Native|Private) // @ game+0x1566170
	void HandleOnCellStartedLoadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellStartedLoadingEvent // (Final|Native|Private) // @ game+0x15660e0
	void HandleOnCellFinishedUnloadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellFinishedUnloadingEvent // (Final|Native|Private) // @ game+0x1566050
	void HandleOnCellFinishedLoadingEvent(struct UTigerWorldCompositionCellComponent* Cell); // Function Tiger.TigerWorldCompositionGrid.HandleOnCellFinishedLoadingEvent // (Final|Native|Private) // @ game+0x1565fc0
	void CellStartedUnloading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellStartedUnloading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void CellStartedLoading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellStartedLoading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void CellFinishedUnloading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellFinishedUnloading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
	void CellFinishedLoading__DelegateSignature(struct UTigerWorldCompositionCellComponent* Cell); // DelegateFunction Tiger.TigerWorldCompositionGrid.CellFinishedLoading__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x18b4070
};

// Class Tiger.TigerWorldCompositionSettings
// Size: 0x258 (Inherited: 0x38)
struct UTigerWorldCompositionSettings : UDeveloperSettings {
	struct FDirectoryPath StreamedLevelDirectory; // 0x38(0x10)
	enum class ETigerWorldCompositionProxyMode ProxyGenerationMode; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	int32_t ActorSortingCellSizeIncrementCount; // 0x4c(0x04)
	float ActorSortingCellSizeIncrementAmount; // 0x50(0x04)
	struct FMeshMergingSettings ProxyMeshMergeSettings; // 0x54(0xa0)
	bool bDoSecondProxyGenStage; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	struct FMeshProxySettings ProxySettings; // 0xf8(0xa8)
	struct FMeshBuildSettings LodBuildSettings; // 0x1a0(0x30)
	struct TArray<struct FPerPlatformFloat> LodScreenSizes; // 0x1d0(0x10)
	bool bEnableLodDitheringOnProxyMeshes; // 0x1e0(0x01)
	char pad_1E1[0x3]; // 0x1e1(0x03)
	float ProxySizeRequirement; // 0x1e4(0x04)
	bool bForceLoadAllCellLevels; // 0x1e8(0x01)
	bool bBlockOnLoad; // 0x1e9(0x01)
	bool bEnablePreSpawnLoading; // 0x1ea(0x01)
	bool bTriggerGarbageCollectionOnUnload; // 0x1eb(0x01)
	char pad_1EC[0x4]; // 0x1ec(0x04)
	struct TArray<struct TSoftClassPtr<UObject>> ProxyTypeBlacklistSoft; // 0x1f0(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> StreamingTypeBlacklistSoft; // 0x200(0x10)
	struct TArray<struct TSoftClassPtr<UObject>> LevelClusterBlacklistSoft; // 0x210(0x10)
	struct TArray<struct TSoftObjectPtr<UStaticMesh>> StaticMeshesToMoveToFoliageSystem; // 0x220(0x10)
	struct TSoftObjectPtr<UMaterialInterface> DebugVisualizationMaterialNotInFilter; // 0x230(0x28)
};

// Class Tiger.TigerConsiderForProxyUserData
// Size: 0x28 (Inherited: 0x28)
struct UTigerConsiderForProxyUserData : UAssetUserData {
};

// Class Tiger.TigerNeverConsiderForProxyUserData
// Size: 0x28 (Inherited: 0x28)
struct UTigerNeverConsiderForProxyUserData : UAssetUserData {
};

// Class Tiger.TigerWorldCompositionLevel
// Size: 0x150 (Inherited: 0x150)
struct UTigerWorldCompositionLevel : ULevelStreaming {
	char bInitiallyLoaded : 1; // 0x148(0x01)
	char bInitiallyVisible : 1; // 0x148(0x01)

	struct UTigerWorldCompositionLevel* LoadLevelInstanceBySoftObjectPtr(struct UObject* WorldContextObject, struct TSoftObjectPtr<UWorld> Level, struct FVector Location, struct FRotator Rotation, bool& bOutSuccess); // Function Tiger.TigerWorldCompositionLevel.LoadLevelInstanceBySoftObjectPtr // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1567910
	struct UTigerWorldCompositionLevel* LoadLevelInstance(struct UObject* WorldContextObject, struct FString LevelName, struct FVector Location, struct FRotator Rotation, bool& bOutSuccess); // Function Tiger.TigerWorldCompositionLevel.LoadLevelInstance // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1567700
};

// Class Tiger.TigerWorldMarkerComponent
// Size: 0xc0 (Inherited: 0xb0)
struct UTigerWorldMarkerComponent : UActorComponent {
	struct ATigerWorldMarker* WorldMarkerActorType; // 0xb0(0x08)
	struct ATigerWorldMarker* WorldMarkerChild; // 0xb8(0x08)
};

// Class Tiger.TigerWorldSettings
// Size: 0x3c0 (Inherited: 0x3a8)
struct ATigerWorldSettings : AWorldSettings {
	bool bOverrideServerReplicationCullDistance; // 0x3a8(0x01)
	char pad_3A9[0x3]; // 0x3a9(0x03)
	float CullDistance; // 0x3ac(0x04)
	struct UTigerProjectilePoolManager* ProjectilePoolManager; // 0x3b0(0x08)
	struct UProjectilePoolReserveCountSettings* ProjectilePoolReserveCountSettings; // 0x3b8(0x08)
};

// Class Tiger.TigerWorldStatsGenerator
// Size: 0xb8 (Inherited: 0x28)
struct UTigerWorldStatsGenerator : UObject {
	char pad_28[0x90]; // 0x28(0x90)
};

// Class Tiger.TigerWorldStatsComponentCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsComponentCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsActorCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsActorCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsObjectCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsObjectCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsBlueprintCountGenerator
// Size: 0xb8 (Inherited: 0xb8)
struct UTigerWorldStatsBlueprintCountGenerator : UTigerWorldStatsGenerator {
};

// Class Tiger.TigerWorldStatsCommandGenerator
// Size: 0xc8 (Inherited: 0xb8)
struct UTigerWorldStatsCommandGenerator : UTigerWorldStatsGenerator {
	char pad_B8[0x10]; // 0xb8(0x10)
};

// Class Tiger.TigerWorldStatsSubSystem
// Size: 0xe0 (Inherited: 0x30)
struct UTigerWorldStatsSubSystem : UGameInstanceSubsystem {
	char pad_30[0xb0]; // 0x30(0xb0)

	void OnCellStartedLoading(struct UTigerWorldCompositionCellComponent* InCellComponent); // Function Tiger.TigerWorldStatsSubSystem.OnCellStartedLoading // (Final|Native|Private) // @ game+0x1567b50
	void OnCellFinishedLoading(); // Function Tiger.TigerWorldStatsSubSystem.OnCellFinishedLoading // (Final|Native|Private) // @ game+0x1567b30
};

